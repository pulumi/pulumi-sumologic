// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provider to manage [Sumologic Data Forwarding Rule](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sumologic.NewDataForwardingRule(ctx, "example_data_forwarding_rule", &sumologic.DataForwardingRuleArgs{
//				IndexId:       pulumi.String("00000000024C6155"),
//				DestinationId: pulumi.String("00000000000732AA"),
//				Enabled:       pulumi.Bool(true),
//				FileFormat:    pulumi.String("test/{index}/{day}/{hour}/{minute}"),
//				PayloadSchema: pulumi.String("builtInFields"),
//				Format:        pulumi.String("json"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DataForwardingRule struct {
	pulumi.CustomResourceState

	// The data forwarding destination id.
	DestinationId pulumi.StringOutput `pulumi:"destinationId"`
	// True when the data forwarding rule is enabled.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Specify the path prefix to a directory in the S3 bucket and how to format the file name.
	FileFormat pulumi.StringPtrOutput `pulumi:"fileFormat"`
	// Format of the payload. Default format will be _csv_.
	// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// The _id_ of the Partition or Scheduled View the rule applies to.
	IndexId pulumi.StringOutput `pulumi:"indexId"`
	// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
	// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
	PayloadSchema pulumi.StringPtrOutput `pulumi:"payloadSchema"`
}

// NewDataForwardingRule registers a new resource with the given unique name, arguments, and options.
func NewDataForwardingRule(ctx *pulumi.Context,
	name string, args *DataForwardingRuleArgs, opts ...pulumi.ResourceOption) (*DataForwardingRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationId == nil {
		return nil, errors.New("invalid value for required argument 'DestinationId'")
	}
	if args.IndexId == nil {
		return nil, errors.New("invalid value for required argument 'IndexId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataForwardingRule
	err := ctx.RegisterResource("sumologic:index/dataForwardingRule:DataForwardingRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataForwardingRule gets an existing DataForwardingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataForwardingRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataForwardingRuleState, opts ...pulumi.ResourceOption) (*DataForwardingRule, error) {
	var resource DataForwardingRule
	err := ctx.ReadResource("sumologic:index/dataForwardingRule:DataForwardingRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataForwardingRule resources.
type dataForwardingRuleState struct {
	// The data forwarding destination id.
	DestinationId *string `pulumi:"destinationId"`
	// True when the data forwarding rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Specify the path prefix to a directory in the S3 bucket and how to format the file name.
	FileFormat *string `pulumi:"fileFormat"`
	// Format of the payload. Default format will be _csv_.
	// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
	Format *string `pulumi:"format"`
	// The _id_ of the Partition or Scheduled View the rule applies to.
	IndexId *string `pulumi:"indexId"`
	// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
	// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
	PayloadSchema *string `pulumi:"payloadSchema"`
}

type DataForwardingRuleState struct {
	// The data forwarding destination id.
	DestinationId pulumi.StringPtrInput
	// True when the data forwarding rule is enabled.
	Enabled pulumi.BoolPtrInput
	// Specify the path prefix to a directory in the S3 bucket and how to format the file name.
	FileFormat pulumi.StringPtrInput
	// Format of the payload. Default format will be _csv_.
	// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
	Format pulumi.StringPtrInput
	// The _id_ of the Partition or Scheduled View the rule applies to.
	IndexId pulumi.StringPtrInput
	// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
	// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
	PayloadSchema pulumi.StringPtrInput
}

func (DataForwardingRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataForwardingRuleState)(nil)).Elem()
}

type dataForwardingRuleArgs struct {
	// The data forwarding destination id.
	DestinationId string `pulumi:"destinationId"`
	// True when the data forwarding rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Specify the path prefix to a directory in the S3 bucket and how to format the file name.
	FileFormat *string `pulumi:"fileFormat"`
	// Format of the payload. Default format will be _csv_.
	// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
	Format *string `pulumi:"format"`
	// The _id_ of the Partition or Scheduled View the rule applies to.
	IndexId string `pulumi:"indexId"`
	// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
	// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
	PayloadSchema *string `pulumi:"payloadSchema"`
}

// The set of arguments for constructing a DataForwardingRule resource.
type DataForwardingRuleArgs struct {
	// The data forwarding destination id.
	DestinationId pulumi.StringInput
	// True when the data forwarding rule is enabled.
	Enabled pulumi.BoolPtrInput
	// Specify the path prefix to a directory in the S3 bucket and how to format the file name.
	FileFormat pulumi.StringPtrInput
	// Format of the payload. Default format will be _csv_.
	// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
	Format pulumi.StringPtrInput
	// The _id_ of the Partition or Scheduled View the rule applies to.
	IndexId pulumi.StringInput
	// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
	// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
	PayloadSchema pulumi.StringPtrInput
}

func (DataForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataForwardingRuleArgs)(nil)).Elem()
}

type DataForwardingRuleInput interface {
	pulumi.Input

	ToDataForwardingRuleOutput() DataForwardingRuleOutput
	ToDataForwardingRuleOutputWithContext(ctx context.Context) DataForwardingRuleOutput
}

func (*DataForwardingRule) ElementType() reflect.Type {
	return reflect.TypeOf((**DataForwardingRule)(nil)).Elem()
}

func (i *DataForwardingRule) ToDataForwardingRuleOutput() DataForwardingRuleOutput {
	return i.ToDataForwardingRuleOutputWithContext(context.Background())
}

func (i *DataForwardingRule) ToDataForwardingRuleOutputWithContext(ctx context.Context) DataForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataForwardingRuleOutput)
}

// DataForwardingRuleArrayInput is an input type that accepts DataForwardingRuleArray and DataForwardingRuleArrayOutput values.
// You can construct a concrete instance of `DataForwardingRuleArrayInput` via:
//
//	DataForwardingRuleArray{ DataForwardingRuleArgs{...} }
type DataForwardingRuleArrayInput interface {
	pulumi.Input

	ToDataForwardingRuleArrayOutput() DataForwardingRuleArrayOutput
	ToDataForwardingRuleArrayOutputWithContext(context.Context) DataForwardingRuleArrayOutput
}

type DataForwardingRuleArray []DataForwardingRuleInput

func (DataForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataForwardingRule)(nil)).Elem()
}

func (i DataForwardingRuleArray) ToDataForwardingRuleArrayOutput() DataForwardingRuleArrayOutput {
	return i.ToDataForwardingRuleArrayOutputWithContext(context.Background())
}

func (i DataForwardingRuleArray) ToDataForwardingRuleArrayOutputWithContext(ctx context.Context) DataForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataForwardingRuleArrayOutput)
}

// DataForwardingRuleMapInput is an input type that accepts DataForwardingRuleMap and DataForwardingRuleMapOutput values.
// You can construct a concrete instance of `DataForwardingRuleMapInput` via:
//
//	DataForwardingRuleMap{ "key": DataForwardingRuleArgs{...} }
type DataForwardingRuleMapInput interface {
	pulumi.Input

	ToDataForwardingRuleMapOutput() DataForwardingRuleMapOutput
	ToDataForwardingRuleMapOutputWithContext(context.Context) DataForwardingRuleMapOutput
}

type DataForwardingRuleMap map[string]DataForwardingRuleInput

func (DataForwardingRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataForwardingRule)(nil)).Elem()
}

func (i DataForwardingRuleMap) ToDataForwardingRuleMapOutput() DataForwardingRuleMapOutput {
	return i.ToDataForwardingRuleMapOutputWithContext(context.Background())
}

func (i DataForwardingRuleMap) ToDataForwardingRuleMapOutputWithContext(ctx context.Context) DataForwardingRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataForwardingRuleMapOutput)
}

type DataForwardingRuleOutput struct{ *pulumi.OutputState }

func (DataForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataForwardingRule)(nil)).Elem()
}

func (o DataForwardingRuleOutput) ToDataForwardingRuleOutput() DataForwardingRuleOutput {
	return o
}

func (o DataForwardingRuleOutput) ToDataForwardingRuleOutputWithContext(ctx context.Context) DataForwardingRuleOutput {
	return o
}

// The data forwarding destination id.
func (o DataForwardingRuleOutput) DestinationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataForwardingRule) pulumi.StringOutput { return v.DestinationId }).(pulumi.StringOutput)
}

// True when the data forwarding rule is enabled.
func (o DataForwardingRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataForwardingRule) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the path prefix to a directory in the S3 bucket and how to format the file name.
func (o DataForwardingRuleOutput) FileFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataForwardingRule) pulumi.StringPtrOutput { return v.FileFormat }).(pulumi.StringPtrOutput)
}

// Format of the payload. Default format will be _csv_.
// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
func (o DataForwardingRuleOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataForwardingRule) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

// The _id_ of the Partition or Scheduled View the rule applies to.
func (o DataForwardingRuleOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataForwardingRule) pulumi.StringOutput { return v.IndexId }).(pulumi.StringOutput)
}

// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
func (o DataForwardingRuleOutput) PayloadSchema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataForwardingRule) pulumi.StringPtrOutput { return v.PayloadSchema }).(pulumi.StringPtrOutput)
}

type DataForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (DataForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataForwardingRule)(nil)).Elem()
}

func (o DataForwardingRuleArrayOutput) ToDataForwardingRuleArrayOutput() DataForwardingRuleArrayOutput {
	return o
}

func (o DataForwardingRuleArrayOutput) ToDataForwardingRuleArrayOutputWithContext(ctx context.Context) DataForwardingRuleArrayOutput {
	return o
}

func (o DataForwardingRuleArrayOutput) Index(i pulumi.IntInput) DataForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataForwardingRule {
		return vs[0].([]*DataForwardingRule)[vs[1].(int)]
	}).(DataForwardingRuleOutput)
}

type DataForwardingRuleMapOutput struct{ *pulumi.OutputState }

func (DataForwardingRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataForwardingRule)(nil)).Elem()
}

func (o DataForwardingRuleMapOutput) ToDataForwardingRuleMapOutput() DataForwardingRuleMapOutput {
	return o
}

func (o DataForwardingRuleMapOutput) ToDataForwardingRuleMapOutputWithContext(ctx context.Context) DataForwardingRuleMapOutput {
	return o
}

func (o DataForwardingRuleMapOutput) MapIndex(k pulumi.StringInput) DataForwardingRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataForwardingRule {
		return vs[0].(map[string]*DataForwardingRule)[vs[1].(string)]
	}).(DataForwardingRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataForwardingRuleInput)(nil)).Elem(), &DataForwardingRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataForwardingRuleArrayInput)(nil)).Elem(), DataForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataForwardingRuleMapInput)(nil)).Elem(), DataForwardingRuleMap{})
	pulumi.RegisterOutputType(DataForwardingRuleOutput{})
	pulumi.RegisterOutputType(DataForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(DataForwardingRuleMapOutput{})
}
