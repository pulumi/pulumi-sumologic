// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Sumologic CSE Custom Match List Column.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sumologic.NewCseCustomMatchListColumn(ctx, "customMatchListColumn", &sumologic.CseCustomMatchListColumnArgs{
//				Fields: pulumi.StringArray{
//					pulumi.String("srcDevice_ip"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Custom Match List Column can be imported using the field id, e.g.hcl
//
// ```sh
//
//	$ pulumi import sumologic:index/cseCustomMatchListColumn:CseCustomMatchListColumn custom_match_list_column id
//
// ```
type CseCustomMatchListColumn struct {
	pulumi.CustomResourceState

	// Custom Match List Column fields.
	Fields pulumi.StringArrayOutput `pulumi:"fields"`
	// Custom Match List Column name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewCseCustomMatchListColumn registers a new resource with the given unique name, arguments, and options.
func NewCseCustomMatchListColumn(ctx *pulumi.Context,
	name string, args *CseCustomMatchListColumnArgs, opts ...pulumi.ResourceOption) (*CseCustomMatchListColumn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	var resource CseCustomMatchListColumn
	err := ctx.RegisterResource("sumologic:index/cseCustomMatchListColumn:CseCustomMatchListColumn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCseCustomMatchListColumn gets an existing CseCustomMatchListColumn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCseCustomMatchListColumn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CseCustomMatchListColumnState, opts ...pulumi.ResourceOption) (*CseCustomMatchListColumn, error) {
	var resource CseCustomMatchListColumn
	err := ctx.ReadResource("sumologic:index/cseCustomMatchListColumn:CseCustomMatchListColumn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CseCustomMatchListColumn resources.
type cseCustomMatchListColumnState struct {
	// Custom Match List Column fields.
	Fields []string `pulumi:"fields"`
	// Custom Match List Column name.
	Name *string `pulumi:"name"`
}

type CseCustomMatchListColumnState struct {
	// Custom Match List Column fields.
	Fields pulumi.StringArrayInput
	// Custom Match List Column name.
	Name pulumi.StringPtrInput
}

func (CseCustomMatchListColumnState) ElementType() reflect.Type {
	return reflect.TypeOf((*cseCustomMatchListColumnState)(nil)).Elem()
}

type cseCustomMatchListColumnArgs struct {
	// Custom Match List Column fields.
	Fields []string `pulumi:"fields"`
	// Custom Match List Column name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CseCustomMatchListColumn resource.
type CseCustomMatchListColumnArgs struct {
	// Custom Match List Column fields.
	Fields pulumi.StringArrayInput
	// Custom Match List Column name.
	Name pulumi.StringPtrInput
}

func (CseCustomMatchListColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cseCustomMatchListColumnArgs)(nil)).Elem()
}

type CseCustomMatchListColumnInput interface {
	pulumi.Input

	ToCseCustomMatchListColumnOutput() CseCustomMatchListColumnOutput
	ToCseCustomMatchListColumnOutputWithContext(ctx context.Context) CseCustomMatchListColumnOutput
}

func (*CseCustomMatchListColumn) ElementType() reflect.Type {
	return reflect.TypeOf((**CseCustomMatchListColumn)(nil)).Elem()
}

func (i *CseCustomMatchListColumn) ToCseCustomMatchListColumnOutput() CseCustomMatchListColumnOutput {
	return i.ToCseCustomMatchListColumnOutputWithContext(context.Background())
}

func (i *CseCustomMatchListColumn) ToCseCustomMatchListColumnOutputWithContext(ctx context.Context) CseCustomMatchListColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseCustomMatchListColumnOutput)
}

// CseCustomMatchListColumnArrayInput is an input type that accepts CseCustomMatchListColumnArray and CseCustomMatchListColumnArrayOutput values.
// You can construct a concrete instance of `CseCustomMatchListColumnArrayInput` via:
//
//	CseCustomMatchListColumnArray{ CseCustomMatchListColumnArgs{...} }
type CseCustomMatchListColumnArrayInput interface {
	pulumi.Input

	ToCseCustomMatchListColumnArrayOutput() CseCustomMatchListColumnArrayOutput
	ToCseCustomMatchListColumnArrayOutputWithContext(context.Context) CseCustomMatchListColumnArrayOutput
}

type CseCustomMatchListColumnArray []CseCustomMatchListColumnInput

func (CseCustomMatchListColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseCustomMatchListColumn)(nil)).Elem()
}

func (i CseCustomMatchListColumnArray) ToCseCustomMatchListColumnArrayOutput() CseCustomMatchListColumnArrayOutput {
	return i.ToCseCustomMatchListColumnArrayOutputWithContext(context.Background())
}

func (i CseCustomMatchListColumnArray) ToCseCustomMatchListColumnArrayOutputWithContext(ctx context.Context) CseCustomMatchListColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseCustomMatchListColumnArrayOutput)
}

// CseCustomMatchListColumnMapInput is an input type that accepts CseCustomMatchListColumnMap and CseCustomMatchListColumnMapOutput values.
// You can construct a concrete instance of `CseCustomMatchListColumnMapInput` via:
//
//	CseCustomMatchListColumnMap{ "key": CseCustomMatchListColumnArgs{...} }
type CseCustomMatchListColumnMapInput interface {
	pulumi.Input

	ToCseCustomMatchListColumnMapOutput() CseCustomMatchListColumnMapOutput
	ToCseCustomMatchListColumnMapOutputWithContext(context.Context) CseCustomMatchListColumnMapOutput
}

type CseCustomMatchListColumnMap map[string]CseCustomMatchListColumnInput

func (CseCustomMatchListColumnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseCustomMatchListColumn)(nil)).Elem()
}

func (i CseCustomMatchListColumnMap) ToCseCustomMatchListColumnMapOutput() CseCustomMatchListColumnMapOutput {
	return i.ToCseCustomMatchListColumnMapOutputWithContext(context.Background())
}

func (i CseCustomMatchListColumnMap) ToCseCustomMatchListColumnMapOutputWithContext(ctx context.Context) CseCustomMatchListColumnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseCustomMatchListColumnMapOutput)
}

type CseCustomMatchListColumnOutput struct{ *pulumi.OutputState }

func (CseCustomMatchListColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseCustomMatchListColumn)(nil)).Elem()
}

func (o CseCustomMatchListColumnOutput) ToCseCustomMatchListColumnOutput() CseCustomMatchListColumnOutput {
	return o
}

func (o CseCustomMatchListColumnOutput) ToCseCustomMatchListColumnOutputWithContext(ctx context.Context) CseCustomMatchListColumnOutput {
	return o
}

// Custom Match List Column fields.
func (o CseCustomMatchListColumnOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CseCustomMatchListColumn) pulumi.StringArrayOutput { return v.Fields }).(pulumi.StringArrayOutput)
}

// Custom Match List Column name.
func (o CseCustomMatchListColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CseCustomMatchListColumn) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type CseCustomMatchListColumnArrayOutput struct{ *pulumi.OutputState }

func (CseCustomMatchListColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseCustomMatchListColumn)(nil)).Elem()
}

func (o CseCustomMatchListColumnArrayOutput) ToCseCustomMatchListColumnArrayOutput() CseCustomMatchListColumnArrayOutput {
	return o
}

func (o CseCustomMatchListColumnArrayOutput) ToCseCustomMatchListColumnArrayOutputWithContext(ctx context.Context) CseCustomMatchListColumnArrayOutput {
	return o
}

func (o CseCustomMatchListColumnArrayOutput) Index(i pulumi.IntInput) CseCustomMatchListColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CseCustomMatchListColumn {
		return vs[0].([]*CseCustomMatchListColumn)[vs[1].(int)]
	}).(CseCustomMatchListColumnOutput)
}

type CseCustomMatchListColumnMapOutput struct{ *pulumi.OutputState }

func (CseCustomMatchListColumnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseCustomMatchListColumn)(nil)).Elem()
}

func (o CseCustomMatchListColumnMapOutput) ToCseCustomMatchListColumnMapOutput() CseCustomMatchListColumnMapOutput {
	return o
}

func (o CseCustomMatchListColumnMapOutput) ToCseCustomMatchListColumnMapOutputWithContext(ctx context.Context) CseCustomMatchListColumnMapOutput {
	return o
}

func (o CseCustomMatchListColumnMapOutput) MapIndex(k pulumi.StringInput) CseCustomMatchListColumnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CseCustomMatchListColumn {
		return vs[0].(map[string]*CseCustomMatchListColumn)[vs[1].(string)]
	}).(CseCustomMatchListColumnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CseCustomMatchListColumnInput)(nil)).Elem(), &CseCustomMatchListColumn{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseCustomMatchListColumnArrayInput)(nil)).Elem(), CseCustomMatchListColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseCustomMatchListColumnMapInput)(nil)).Elem(), CseCustomMatchListColumnMap{})
	pulumi.RegisterOutputType(CseCustomMatchListColumnOutput{})
	pulumi.RegisterOutputType(CseCustomMatchListColumnArrayOutput{})
	pulumi.RegisterOutputType(CseCustomMatchListColumnMapOutput{})
}
