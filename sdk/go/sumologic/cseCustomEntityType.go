// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Sumologic CSE Custom Entity Type.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sumologic.NewCseCustomEntityType(ctx, "customEntityType", &sumologic.CseCustomEntityTypeArgs{
//				Fields: pulumi.StringArray{
//					pulumi.String("file_hash_md5"),
//					pulumi.String("file_hash_sha1"),
//				},
//				Identifier: pulumi.String("identifier"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Custom entity type can be imported using the field id, e.g.hcl
//
// ```sh
//
//	$ pulumi import sumologic:index/cseCustomEntityType:CseCustomEntityType custom_entity_type id
//
// ```
type CseCustomEntityType struct {
	pulumi.CustomResourceState

	// Record schema fields. Examples: "fileHashMd5", "fileHashSha1".".
	Fields pulumi.StringArrayOutput `pulumi:"fields"`
	// Machine friendly and unique identifier. Example: "filehash".
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Human friend and unique name. Example: "File Hash".
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewCseCustomEntityType registers a new resource with the given unique name, arguments, and options.
func NewCseCustomEntityType(ctx *pulumi.Context,
	name string, args *CseCustomEntityTypeArgs, opts ...pulumi.ResourceOption) (*CseCustomEntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	var resource CseCustomEntityType
	err := ctx.RegisterResource("sumologic:index/cseCustomEntityType:CseCustomEntityType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCseCustomEntityType gets an existing CseCustomEntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCseCustomEntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CseCustomEntityTypeState, opts ...pulumi.ResourceOption) (*CseCustomEntityType, error) {
	var resource CseCustomEntityType
	err := ctx.ReadResource("sumologic:index/cseCustomEntityType:CseCustomEntityType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CseCustomEntityType resources.
type cseCustomEntityTypeState struct {
	// Record schema fields. Examples: "fileHashMd5", "fileHashSha1".".
	Fields []string `pulumi:"fields"`
	// Machine friendly and unique identifier. Example: "filehash".
	Identifier *string `pulumi:"identifier"`
	// Human friend and unique name. Example: "File Hash".
	Name *string `pulumi:"name"`
}

type CseCustomEntityTypeState struct {
	// Record schema fields. Examples: "fileHashMd5", "fileHashSha1".".
	Fields pulumi.StringArrayInput
	// Machine friendly and unique identifier. Example: "filehash".
	Identifier pulumi.StringPtrInput
	// Human friend and unique name. Example: "File Hash".
	Name pulumi.StringPtrInput
}

func (CseCustomEntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*cseCustomEntityTypeState)(nil)).Elem()
}

type cseCustomEntityTypeArgs struct {
	// Record schema fields. Examples: "fileHashMd5", "fileHashSha1".".
	Fields []string `pulumi:"fields"`
	// Machine friendly and unique identifier. Example: "filehash".
	Identifier string `pulumi:"identifier"`
	// Human friend and unique name. Example: "File Hash".
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CseCustomEntityType resource.
type CseCustomEntityTypeArgs struct {
	// Record schema fields. Examples: "fileHashMd5", "fileHashSha1".".
	Fields pulumi.StringArrayInput
	// Machine friendly and unique identifier. Example: "filehash".
	Identifier pulumi.StringInput
	// Human friend and unique name. Example: "File Hash".
	Name pulumi.StringPtrInput
}

func (CseCustomEntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cseCustomEntityTypeArgs)(nil)).Elem()
}

type CseCustomEntityTypeInput interface {
	pulumi.Input

	ToCseCustomEntityTypeOutput() CseCustomEntityTypeOutput
	ToCseCustomEntityTypeOutputWithContext(ctx context.Context) CseCustomEntityTypeOutput
}

func (*CseCustomEntityType) ElementType() reflect.Type {
	return reflect.TypeOf((**CseCustomEntityType)(nil)).Elem()
}

func (i *CseCustomEntityType) ToCseCustomEntityTypeOutput() CseCustomEntityTypeOutput {
	return i.ToCseCustomEntityTypeOutputWithContext(context.Background())
}

func (i *CseCustomEntityType) ToCseCustomEntityTypeOutputWithContext(ctx context.Context) CseCustomEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseCustomEntityTypeOutput)
}

// CseCustomEntityTypeArrayInput is an input type that accepts CseCustomEntityTypeArray and CseCustomEntityTypeArrayOutput values.
// You can construct a concrete instance of `CseCustomEntityTypeArrayInput` via:
//
//	CseCustomEntityTypeArray{ CseCustomEntityTypeArgs{...} }
type CseCustomEntityTypeArrayInput interface {
	pulumi.Input

	ToCseCustomEntityTypeArrayOutput() CseCustomEntityTypeArrayOutput
	ToCseCustomEntityTypeArrayOutputWithContext(context.Context) CseCustomEntityTypeArrayOutput
}

type CseCustomEntityTypeArray []CseCustomEntityTypeInput

func (CseCustomEntityTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseCustomEntityType)(nil)).Elem()
}

func (i CseCustomEntityTypeArray) ToCseCustomEntityTypeArrayOutput() CseCustomEntityTypeArrayOutput {
	return i.ToCseCustomEntityTypeArrayOutputWithContext(context.Background())
}

func (i CseCustomEntityTypeArray) ToCseCustomEntityTypeArrayOutputWithContext(ctx context.Context) CseCustomEntityTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseCustomEntityTypeArrayOutput)
}

// CseCustomEntityTypeMapInput is an input type that accepts CseCustomEntityTypeMap and CseCustomEntityTypeMapOutput values.
// You can construct a concrete instance of `CseCustomEntityTypeMapInput` via:
//
//	CseCustomEntityTypeMap{ "key": CseCustomEntityTypeArgs{...} }
type CseCustomEntityTypeMapInput interface {
	pulumi.Input

	ToCseCustomEntityTypeMapOutput() CseCustomEntityTypeMapOutput
	ToCseCustomEntityTypeMapOutputWithContext(context.Context) CseCustomEntityTypeMapOutput
}

type CseCustomEntityTypeMap map[string]CseCustomEntityTypeInput

func (CseCustomEntityTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseCustomEntityType)(nil)).Elem()
}

func (i CseCustomEntityTypeMap) ToCseCustomEntityTypeMapOutput() CseCustomEntityTypeMapOutput {
	return i.ToCseCustomEntityTypeMapOutputWithContext(context.Background())
}

func (i CseCustomEntityTypeMap) ToCseCustomEntityTypeMapOutputWithContext(ctx context.Context) CseCustomEntityTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseCustomEntityTypeMapOutput)
}

type CseCustomEntityTypeOutput struct{ *pulumi.OutputState }

func (CseCustomEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseCustomEntityType)(nil)).Elem()
}

func (o CseCustomEntityTypeOutput) ToCseCustomEntityTypeOutput() CseCustomEntityTypeOutput {
	return o
}

func (o CseCustomEntityTypeOutput) ToCseCustomEntityTypeOutputWithContext(ctx context.Context) CseCustomEntityTypeOutput {
	return o
}

// Record schema fields. Examples: "fileHashMd5", "fileHashSha1".".
func (o CseCustomEntityTypeOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CseCustomEntityType) pulumi.StringArrayOutput { return v.Fields }).(pulumi.StringArrayOutput)
}

// Machine friendly and unique identifier. Example: "filehash".
func (o CseCustomEntityTypeOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *CseCustomEntityType) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Human friend and unique name. Example: "File Hash".
func (o CseCustomEntityTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CseCustomEntityType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type CseCustomEntityTypeArrayOutput struct{ *pulumi.OutputState }

func (CseCustomEntityTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseCustomEntityType)(nil)).Elem()
}

func (o CseCustomEntityTypeArrayOutput) ToCseCustomEntityTypeArrayOutput() CseCustomEntityTypeArrayOutput {
	return o
}

func (o CseCustomEntityTypeArrayOutput) ToCseCustomEntityTypeArrayOutputWithContext(ctx context.Context) CseCustomEntityTypeArrayOutput {
	return o
}

func (o CseCustomEntityTypeArrayOutput) Index(i pulumi.IntInput) CseCustomEntityTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CseCustomEntityType {
		return vs[0].([]*CseCustomEntityType)[vs[1].(int)]
	}).(CseCustomEntityTypeOutput)
}

type CseCustomEntityTypeMapOutput struct{ *pulumi.OutputState }

func (CseCustomEntityTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseCustomEntityType)(nil)).Elem()
}

func (o CseCustomEntityTypeMapOutput) ToCseCustomEntityTypeMapOutput() CseCustomEntityTypeMapOutput {
	return o
}

func (o CseCustomEntityTypeMapOutput) ToCseCustomEntityTypeMapOutputWithContext(ctx context.Context) CseCustomEntityTypeMapOutput {
	return o
}

func (o CseCustomEntityTypeMapOutput) MapIndex(k pulumi.StringInput) CseCustomEntityTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CseCustomEntityType {
		return vs[0].(map[string]*CseCustomEntityType)[vs[1].(string)]
	}).(CseCustomEntityTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CseCustomEntityTypeInput)(nil)).Elem(), &CseCustomEntityType{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseCustomEntityTypeArrayInput)(nil)).Elem(), CseCustomEntityTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseCustomEntityTypeMapInput)(nil)).Elem(), CseCustomEntityTypeMap{})
	pulumi.RegisterOutputType(CseCustomEntityTypeOutput{})
	pulumi.RegisterOutputType(CseCustomEntityTypeArrayOutput{})
	pulumi.RegisterOutputType(CseCustomEntityTypeMapOutput{})
}
