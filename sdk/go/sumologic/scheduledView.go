// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a [Sumologic Scheduled View](https://help.sumologic.com/Manage/Scheduled-Views).
//
// ## Import
//
// Scheduled Views can can be imported using the id. The list of scheduled views and their ids can be obtained using the Sumologic [scheduled views api][2]. hcl
//
// ```sh
//  $ pulumi import sumologic:index/scheduledView:ScheduledView failed_connections 1234567890
// ```
//
//  [1]https://help.sumologic.com/Manage/Scheduled-Views [2]https://api.sumologic.com/docs/#operation/listScheduledViews
type ScheduledView struct {
	pulumi.CustomResourceState

	// An optional ID of a data forwarding configuration to be used by the scheduled view.
	DataForwardingId pulumi.StringPtrOutput `pulumi:"dataForwardingId"`
	// Name of the index (scheduled view).
	IndexName pulumi.StringOutput `pulumi:"indexName"`
	// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
	ParsingMode pulumi.StringPtrOutput `pulumi:"parsingMode"`
	// Log query defining the scheduled view.
	Query pulumi.StringOutput `pulumi:"query"`
	// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
	ReduceRetentionPeriodImmediately pulumi.BoolPtrOutput `pulumi:"reduceRetentionPeriodImmediately"`
	// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
	RetentionPeriod pulumi.IntPtrOutput `pulumi:"retentionPeriod"`
	// Start timestamp in UTC in RFC3339 format.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
}

// NewScheduledView registers a new resource with the given unique name, arguments, and options.
func NewScheduledView(ctx *pulumi.Context,
	name string, args *ScheduledViewArgs, opts ...pulumi.ResourceOption) (*ScheduledView, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IndexName == nil {
		return nil, errors.New("invalid value for required argument 'IndexName'")
	}
	if args.Query == nil {
		return nil, errors.New("invalid value for required argument 'Query'")
	}
	if args.StartTime == nil {
		return nil, errors.New("invalid value for required argument 'StartTime'")
	}
	var resource ScheduledView
	err := ctx.RegisterResource("sumologic:index/scheduledView:ScheduledView", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledView gets an existing ScheduledView resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledView(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledViewState, opts ...pulumi.ResourceOption) (*ScheduledView, error) {
	var resource ScheduledView
	err := ctx.ReadResource("sumologic:index/scheduledView:ScheduledView", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledView resources.
type scheduledViewState struct {
	// An optional ID of a data forwarding configuration to be used by the scheduled view.
	DataForwardingId *string `pulumi:"dataForwardingId"`
	// Name of the index (scheduled view).
	IndexName *string `pulumi:"indexName"`
	// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
	ParsingMode *string `pulumi:"parsingMode"`
	// Log query defining the scheduled view.
	Query *string `pulumi:"query"`
	// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
	ReduceRetentionPeriodImmediately *bool `pulumi:"reduceRetentionPeriodImmediately"`
	// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
	RetentionPeriod *int `pulumi:"retentionPeriod"`
	// Start timestamp in UTC in RFC3339 format.
	StartTime *string `pulumi:"startTime"`
}

type ScheduledViewState struct {
	// An optional ID of a data forwarding configuration to be used by the scheduled view.
	DataForwardingId pulumi.StringPtrInput
	// Name of the index (scheduled view).
	IndexName pulumi.StringPtrInput
	// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
	ParsingMode pulumi.StringPtrInput
	// Log query defining the scheduled view.
	Query pulumi.StringPtrInput
	// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
	ReduceRetentionPeriodImmediately pulumi.BoolPtrInput
	// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
	RetentionPeriod pulumi.IntPtrInput
	// Start timestamp in UTC in RFC3339 format.
	StartTime pulumi.StringPtrInput
}

func (ScheduledViewState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledViewState)(nil)).Elem()
}

type scheduledViewArgs struct {
	// An optional ID of a data forwarding configuration to be used by the scheduled view.
	DataForwardingId *string `pulumi:"dataForwardingId"`
	// Name of the index (scheduled view).
	IndexName string `pulumi:"indexName"`
	// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
	ParsingMode *string `pulumi:"parsingMode"`
	// Log query defining the scheduled view.
	Query string `pulumi:"query"`
	// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
	ReduceRetentionPeriodImmediately *bool `pulumi:"reduceRetentionPeriodImmediately"`
	// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
	RetentionPeriod *int `pulumi:"retentionPeriod"`
	// Start timestamp in UTC in RFC3339 format.
	StartTime string `pulumi:"startTime"`
}

// The set of arguments for constructing a ScheduledView resource.
type ScheduledViewArgs struct {
	// An optional ID of a data forwarding configuration to be used by the scheduled view.
	DataForwardingId pulumi.StringPtrInput
	// Name of the index (scheduled view).
	IndexName pulumi.StringInput
	// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
	ParsingMode pulumi.StringPtrInput
	// Log query defining the scheduled view.
	Query pulumi.StringInput
	// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
	ReduceRetentionPeriodImmediately pulumi.BoolPtrInput
	// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
	RetentionPeriod pulumi.IntPtrInput
	// Start timestamp in UTC in RFC3339 format.
	StartTime pulumi.StringInput
}

func (ScheduledViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledViewArgs)(nil)).Elem()
}

type ScheduledViewInput interface {
	pulumi.Input

	ToScheduledViewOutput() ScheduledViewOutput
	ToScheduledViewOutputWithContext(ctx context.Context) ScheduledViewOutput
}

func (*ScheduledView) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledView)(nil)).Elem()
}

func (i *ScheduledView) ToScheduledViewOutput() ScheduledViewOutput {
	return i.ToScheduledViewOutputWithContext(context.Background())
}

func (i *ScheduledView) ToScheduledViewOutputWithContext(ctx context.Context) ScheduledViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledViewOutput)
}

// ScheduledViewArrayInput is an input type that accepts ScheduledViewArray and ScheduledViewArrayOutput values.
// You can construct a concrete instance of `ScheduledViewArrayInput` via:
//
//          ScheduledViewArray{ ScheduledViewArgs{...} }
type ScheduledViewArrayInput interface {
	pulumi.Input

	ToScheduledViewArrayOutput() ScheduledViewArrayOutput
	ToScheduledViewArrayOutputWithContext(context.Context) ScheduledViewArrayOutput
}

type ScheduledViewArray []ScheduledViewInput

func (ScheduledViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledView)(nil)).Elem()
}

func (i ScheduledViewArray) ToScheduledViewArrayOutput() ScheduledViewArrayOutput {
	return i.ToScheduledViewArrayOutputWithContext(context.Background())
}

func (i ScheduledViewArray) ToScheduledViewArrayOutputWithContext(ctx context.Context) ScheduledViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledViewArrayOutput)
}

// ScheduledViewMapInput is an input type that accepts ScheduledViewMap and ScheduledViewMapOutput values.
// You can construct a concrete instance of `ScheduledViewMapInput` via:
//
//          ScheduledViewMap{ "key": ScheduledViewArgs{...} }
type ScheduledViewMapInput interface {
	pulumi.Input

	ToScheduledViewMapOutput() ScheduledViewMapOutput
	ToScheduledViewMapOutputWithContext(context.Context) ScheduledViewMapOutput
}

type ScheduledViewMap map[string]ScheduledViewInput

func (ScheduledViewMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledView)(nil)).Elem()
}

func (i ScheduledViewMap) ToScheduledViewMapOutput() ScheduledViewMapOutput {
	return i.ToScheduledViewMapOutputWithContext(context.Background())
}

func (i ScheduledViewMap) ToScheduledViewMapOutputWithContext(ctx context.Context) ScheduledViewMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledViewMapOutput)
}

type ScheduledViewOutput struct{ *pulumi.OutputState }

func (ScheduledViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledView)(nil)).Elem()
}

func (o ScheduledViewOutput) ToScheduledViewOutput() ScheduledViewOutput {
	return o
}

func (o ScheduledViewOutput) ToScheduledViewOutputWithContext(ctx context.Context) ScheduledViewOutput {
	return o
}

// An optional ID of a data forwarding configuration to be used by the scheduled view.
func (o ScheduledViewOutput) DataForwardingId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.StringPtrOutput { return v.DataForwardingId }).(pulumi.StringPtrOutput)
}

// Name of the index (scheduled view).
func (o ScheduledViewOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.StringOutput { return v.IndexName }).(pulumi.StringOutput)
}

// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
func (o ScheduledViewOutput) ParsingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.StringPtrOutput { return v.ParsingMode }).(pulumi.StringPtrOutput)
}

// Log query defining the scheduled view.
func (o ScheduledViewOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.StringOutput { return v.Query }).(pulumi.StringOutput)
}

// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
func (o ScheduledViewOutput) ReduceRetentionPeriodImmediately() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.BoolPtrOutput { return v.ReduceRetentionPeriodImmediately }).(pulumi.BoolPtrOutput)
}

// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
func (o ScheduledViewOutput) RetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.IntPtrOutput { return v.RetentionPeriod }).(pulumi.IntPtrOutput)
}

// Start timestamp in UTC in RFC3339 format.
func (o ScheduledViewOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ScheduledView) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

type ScheduledViewArrayOutput struct{ *pulumi.OutputState }

func (ScheduledViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScheduledView)(nil)).Elem()
}

func (o ScheduledViewArrayOutput) ToScheduledViewArrayOutput() ScheduledViewArrayOutput {
	return o
}

func (o ScheduledViewArrayOutput) ToScheduledViewArrayOutputWithContext(ctx context.Context) ScheduledViewArrayOutput {
	return o
}

func (o ScheduledViewArrayOutput) Index(i pulumi.IntInput) ScheduledViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScheduledView {
		return vs[0].([]*ScheduledView)[vs[1].(int)]
	}).(ScheduledViewOutput)
}

type ScheduledViewMapOutput struct{ *pulumi.OutputState }

func (ScheduledViewMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScheduledView)(nil)).Elem()
}

func (o ScheduledViewMapOutput) ToScheduledViewMapOutput() ScheduledViewMapOutput {
	return o
}

func (o ScheduledViewMapOutput) ToScheduledViewMapOutputWithContext(ctx context.Context) ScheduledViewMapOutput {
	return o
}

func (o ScheduledViewMapOutput) MapIndex(k pulumi.StringInput) ScheduledViewOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScheduledView {
		return vs[0].(map[string]*ScheduledView)[vs[1].(string)]
	}).(ScheduledViewOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledViewInput)(nil)).Elem(), &ScheduledView{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledViewArrayInput)(nil)).Elem(), ScheduledViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledViewMapInput)(nil)).Elem(), ScheduledViewMap{})
	pulumi.RegisterOutputType(ScheduledViewOutput{})
	pulumi.RegisterOutputType(ScheduledViewArrayOutput{})
	pulumi.RegisterOutputType(ScheduledViewMapOutput{})
}
