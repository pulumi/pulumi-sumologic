// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//	        HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//	or:
//
//	        nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string `pulumi:"condition"`
	// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
	Level HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput `pulumi:"condition"`
	// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
	Level HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string `pulumi:"condition"`
	// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
	Level HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput `pulumi:"condition"`
	// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
	Level HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	//
	// The following attributes are exported:
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	//
	// The following attributes are exported:
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
//
// The following attributes are exported:
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//	        HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//	or:
//
//	        nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string `pulumi:"condition"`
	// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
	Level HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput `pulumi:"condition"`
	// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
	Level HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

// A hierarchy of entities. The order is up-down, left to right levels with condition, then level without condition. Maximum supported total depth is 6.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//	HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HttpSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// HttpSourceDefaultDateFormatInput is an input type that accepts HttpSourceDefaultDateFormatArgs and HttpSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `HttpSourceDefaultDateFormatInput` via:
//
//	HttpSourceDefaultDateFormatArgs{...}
type HttpSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput
	ToHttpSourceDefaultDateFormatOutputWithContext(context.Context) HttpSourceDefaultDateFormatOutput
}

type HttpSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (HttpSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (i HttpSourceDefaultDateFormatArgs) ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput {
	return i.ToHttpSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i HttpSourceDefaultDateFormatArgs) ToHttpSourceDefaultDateFormatOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceDefaultDateFormatOutput)
}

// HttpSourceDefaultDateFormatArrayInput is an input type that accepts HttpSourceDefaultDateFormatArray and HttpSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `HttpSourceDefaultDateFormatArrayInput` via:
//
//	HttpSourceDefaultDateFormatArray{ HttpSourceDefaultDateFormatArgs{...} }
type HttpSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput
	ToHttpSourceDefaultDateFormatArrayOutputWithContext(context.Context) HttpSourceDefaultDateFormatArrayOutput
}

type HttpSourceDefaultDateFormatArray []HttpSourceDefaultDateFormatInput

func (HttpSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (i HttpSourceDefaultDateFormatArray) ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput {
	return i.ToHttpSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i HttpSourceDefaultDateFormatArray) ToHttpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceDefaultDateFormatArrayOutput)
}

type HttpSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (HttpSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (o HttpSourceDefaultDateFormatOutput) ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput {
	return o
}

func (o HttpSourceDefaultDateFormatOutput) ToHttpSourceDefaultDateFormatOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatOutput {
	return o
}

func (o HttpSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o HttpSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type HttpSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (HttpSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (o HttpSourceDefaultDateFormatArrayOutput) ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o HttpSourceDefaultDateFormatArrayOutput) ToHttpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o HttpSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) HttpSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpSourceDefaultDateFormat {
		return vs[0].([]HttpSourceDefaultDateFormat)[vs[1].(int)]
	}).(HttpSourceDefaultDateFormatOutput)
}

type HttpSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// HttpSourceFilterInput is an input type that accepts HttpSourceFilterArgs and HttpSourceFilterOutput values.
// You can construct a concrete instance of `HttpSourceFilterInput` via:
//
//	HttpSourceFilterArgs{...}
type HttpSourceFilterInput interface {
	pulumi.Input

	ToHttpSourceFilterOutput() HttpSourceFilterOutput
	ToHttpSourceFilterOutputWithContext(context.Context) HttpSourceFilterOutput
}

type HttpSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (HttpSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceFilter)(nil)).Elem()
}

func (i HttpSourceFilterArgs) ToHttpSourceFilterOutput() HttpSourceFilterOutput {
	return i.ToHttpSourceFilterOutputWithContext(context.Background())
}

func (i HttpSourceFilterArgs) ToHttpSourceFilterOutputWithContext(ctx context.Context) HttpSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceFilterOutput)
}

// HttpSourceFilterArrayInput is an input type that accepts HttpSourceFilterArray and HttpSourceFilterArrayOutput values.
// You can construct a concrete instance of `HttpSourceFilterArrayInput` via:
//
//	HttpSourceFilterArray{ HttpSourceFilterArgs{...} }
type HttpSourceFilterArrayInput interface {
	pulumi.Input

	ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput
	ToHttpSourceFilterArrayOutputWithContext(context.Context) HttpSourceFilterArrayOutput
}

type HttpSourceFilterArray []HttpSourceFilterInput

func (HttpSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceFilter)(nil)).Elem()
}

func (i HttpSourceFilterArray) ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput {
	return i.ToHttpSourceFilterArrayOutputWithContext(context.Background())
}

func (i HttpSourceFilterArray) ToHttpSourceFilterArrayOutputWithContext(ctx context.Context) HttpSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceFilterArrayOutput)
}

type HttpSourceFilterOutput struct{ *pulumi.OutputState }

func (HttpSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceFilter)(nil)).Elem()
}

func (o HttpSourceFilterOutput) ToHttpSourceFilterOutput() HttpSourceFilterOutput {
	return o
}

func (o HttpSourceFilterOutput) ToHttpSourceFilterOutputWithContext(ctx context.Context) HttpSourceFilterOutput {
	return o
}

func (o HttpSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o HttpSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o HttpSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o HttpSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type HttpSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (HttpSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceFilter)(nil)).Elem()
}

func (o HttpSourceFilterArrayOutput) ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput {
	return o
}

func (o HttpSourceFilterArrayOutput) ToHttpSourceFilterArrayOutputWithContext(ctx context.Context) HttpSourceFilterArrayOutput {
	return o
}

func (o HttpSourceFilterArrayOutput) Index(i pulumi.IntInput) HttpSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpSourceFilter {
		return vs[0].([]HttpSourceFilter)[vs[1].(int)]
	}).(HttpSourceFilterOutput)
}

type KineisLogSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication` or `NoAuthentication`
	Type *string `pulumi:"type"`
}

// KineisLogSourceAuthenticationInput is an input type that accepts KineisLogSourceAuthenticationArgs and KineisLogSourceAuthenticationOutput values.
// You can construct a concrete instance of `KineisLogSourceAuthenticationInput` via:
//
//	KineisLogSourceAuthenticationArgs{...}
type KineisLogSourceAuthenticationInput interface {
	pulumi.Input

	ToKineisLogSourceAuthenticationOutput() KineisLogSourceAuthenticationOutput
	ToKineisLogSourceAuthenticationOutputWithContext(context.Context) KineisLogSourceAuthenticationOutput
}

type KineisLogSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication` or `NoAuthentication`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KineisLogSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceAuthentication)(nil)).Elem()
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationOutput() KineisLogSourceAuthenticationOutput {
	return i.ToKineisLogSourceAuthenticationOutputWithContext(context.Background())
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceAuthenticationOutput)
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return i.ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceAuthenticationOutput).ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx)
}

// KineisLogSourceAuthenticationPtrInput is an input type that accepts KineisLogSourceAuthenticationArgs, KineisLogSourceAuthenticationPtr and KineisLogSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `KineisLogSourceAuthenticationPtrInput` via:
//
//	        KineisLogSourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type KineisLogSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput
	ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Context) KineisLogSourceAuthenticationPtrOutput
}

type kineisLogSourceAuthenticationPtrType KineisLogSourceAuthenticationArgs

func KineisLogSourceAuthenticationPtr(v *KineisLogSourceAuthenticationArgs) KineisLogSourceAuthenticationPtrInput {
	return (*kineisLogSourceAuthenticationPtrType)(v)
}

func (*kineisLogSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourceAuthentication)(nil)).Elem()
}

func (i *kineisLogSourceAuthenticationPtrType) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return i.ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kineisLogSourceAuthenticationPtrType) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceAuthenticationPtrOutput)
}

type KineisLogSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (KineisLogSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceAuthentication)(nil)).Elem()
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationOutput() KineisLogSourceAuthenticationOutput {
	return o
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationOutput {
	return o
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return o.ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KineisLogSourceAuthentication) *KineisLogSourceAuthentication {
		return &v
	}).(KineisLogSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KineisLogSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication` or `NoAuthentication`
func (o KineisLogSourceAuthenticationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KineisLogSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KineisLogSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourceAuthentication)(nil)).Elem()
}

func (o KineisLogSourceAuthenticationPtrOutput) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return o
}

func (o KineisLogSourceAuthenticationPtrOutput) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return o
}

func (o KineisLogSourceAuthenticationPtrOutput) Elem() KineisLogSourceAuthenticationOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) KineisLogSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret KineisLogSourceAuthentication
		return ret
	}).(KineisLogSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication` or `NoAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KineisLogSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// KineisLogSourceDefaultDateFormatInput is an input type that accepts KineisLogSourceDefaultDateFormatArgs and KineisLogSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `KineisLogSourceDefaultDateFormatInput` via:
//
//	KineisLogSourceDefaultDateFormatArgs{...}
type KineisLogSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToKineisLogSourceDefaultDateFormatOutput() KineisLogSourceDefaultDateFormatOutput
	ToKineisLogSourceDefaultDateFormatOutputWithContext(context.Context) KineisLogSourceDefaultDateFormatOutput
}

type KineisLogSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (KineisLogSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (i KineisLogSourceDefaultDateFormatArgs) ToKineisLogSourceDefaultDateFormatOutput() KineisLogSourceDefaultDateFormatOutput {
	return i.ToKineisLogSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i KineisLogSourceDefaultDateFormatArgs) ToKineisLogSourceDefaultDateFormatOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceDefaultDateFormatOutput)
}

// KineisLogSourceDefaultDateFormatArrayInput is an input type that accepts KineisLogSourceDefaultDateFormatArray and KineisLogSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `KineisLogSourceDefaultDateFormatArrayInput` via:
//
//	KineisLogSourceDefaultDateFormatArray{ KineisLogSourceDefaultDateFormatArgs{...} }
type KineisLogSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToKineisLogSourceDefaultDateFormatArrayOutput() KineisLogSourceDefaultDateFormatArrayOutput
	ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(context.Context) KineisLogSourceDefaultDateFormatArrayOutput
}

type KineisLogSourceDefaultDateFormatArray []KineisLogSourceDefaultDateFormatInput

func (KineisLogSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (i KineisLogSourceDefaultDateFormatArray) ToKineisLogSourceDefaultDateFormatArrayOutput() KineisLogSourceDefaultDateFormatArrayOutput {
	return i.ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i KineisLogSourceDefaultDateFormatArray) ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceDefaultDateFormatArrayOutput)
}

type KineisLogSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (KineisLogSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (o KineisLogSourceDefaultDateFormatOutput) ToKineisLogSourceDefaultDateFormatOutput() KineisLogSourceDefaultDateFormatOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatOutput) ToKineisLogSourceDefaultDateFormatOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o KineisLogSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type KineisLogSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (KineisLogSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (o KineisLogSourceDefaultDateFormatArrayOutput) ToKineisLogSourceDefaultDateFormatArrayOutput() KineisLogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatArrayOutput) ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) KineisLogSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KineisLogSourceDefaultDateFormat {
		return vs[0].([]KineisLogSourceDefaultDateFormat)[vs[1].(int)]
	}).(KineisLogSourceDefaultDateFormatOutput)
}

type KineisLogSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// KineisLogSourceFilterInput is an input type that accepts KineisLogSourceFilterArgs and KineisLogSourceFilterOutput values.
// You can construct a concrete instance of `KineisLogSourceFilterInput` via:
//
//	KineisLogSourceFilterArgs{...}
type KineisLogSourceFilterInput interface {
	pulumi.Input

	ToKineisLogSourceFilterOutput() KineisLogSourceFilterOutput
	ToKineisLogSourceFilterOutputWithContext(context.Context) KineisLogSourceFilterOutput
}

type KineisLogSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (KineisLogSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceFilter)(nil)).Elem()
}

func (i KineisLogSourceFilterArgs) ToKineisLogSourceFilterOutput() KineisLogSourceFilterOutput {
	return i.ToKineisLogSourceFilterOutputWithContext(context.Background())
}

func (i KineisLogSourceFilterArgs) ToKineisLogSourceFilterOutputWithContext(ctx context.Context) KineisLogSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceFilterOutput)
}

// KineisLogSourceFilterArrayInput is an input type that accepts KineisLogSourceFilterArray and KineisLogSourceFilterArrayOutput values.
// You can construct a concrete instance of `KineisLogSourceFilterArrayInput` via:
//
//	KineisLogSourceFilterArray{ KineisLogSourceFilterArgs{...} }
type KineisLogSourceFilterArrayInput interface {
	pulumi.Input

	ToKineisLogSourceFilterArrayOutput() KineisLogSourceFilterArrayOutput
	ToKineisLogSourceFilterArrayOutputWithContext(context.Context) KineisLogSourceFilterArrayOutput
}

type KineisLogSourceFilterArray []KineisLogSourceFilterInput

func (KineisLogSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceFilter)(nil)).Elem()
}

func (i KineisLogSourceFilterArray) ToKineisLogSourceFilterArrayOutput() KineisLogSourceFilterArrayOutput {
	return i.ToKineisLogSourceFilterArrayOutputWithContext(context.Background())
}

func (i KineisLogSourceFilterArray) ToKineisLogSourceFilterArrayOutputWithContext(ctx context.Context) KineisLogSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceFilterArrayOutput)
}

type KineisLogSourceFilterOutput struct{ *pulumi.OutputState }

func (KineisLogSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceFilter)(nil)).Elem()
}

func (o KineisLogSourceFilterOutput) ToKineisLogSourceFilterOutput() KineisLogSourceFilterOutput {
	return o
}

func (o KineisLogSourceFilterOutput) ToKineisLogSourceFilterOutputWithContext(ctx context.Context) KineisLogSourceFilterOutput {
	return o
}

func (o KineisLogSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o KineisLogSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o KineisLogSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o KineisLogSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type KineisLogSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (KineisLogSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceFilter)(nil)).Elem()
}

func (o KineisLogSourceFilterArrayOutput) ToKineisLogSourceFilterArrayOutput() KineisLogSourceFilterArrayOutput {
	return o
}

func (o KineisLogSourceFilterArrayOutput) ToKineisLogSourceFilterArrayOutputWithContext(ctx context.Context) KineisLogSourceFilterArrayOutput {
	return o
}

func (o KineisLogSourceFilterArrayOutput) Index(i pulumi.IntInput) KineisLogSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KineisLogSourceFilter {
		return vs[0].([]KineisLogSourceFilter)[vs[1].(int)]
	}).(KineisLogSourceFilterOutput)
}

type KineisLogSourcePath struct {
	// The name of the bucket. This is needed if using type `KinesisLogPath`.
	BucketName *string `pulumi:"bucketName"`
	// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must include `http-endpoint-failed/`.
	PathExpression *string `pulumi:"pathExpression"`
	// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
	ScanInterval *int `pulumi:"scanInterval"`
	// Must be either `KinesisLogPath` or `NoPathExpression`
	Type *string `pulumi:"type"`
}

// KineisLogSourcePathInput is an input type that accepts KineisLogSourcePathArgs and KineisLogSourcePathOutput values.
// You can construct a concrete instance of `KineisLogSourcePathInput` via:
//
//	KineisLogSourcePathArgs{...}
type KineisLogSourcePathInput interface {
	pulumi.Input

	ToKineisLogSourcePathOutput() KineisLogSourcePathOutput
	ToKineisLogSourcePathOutputWithContext(context.Context) KineisLogSourcePathOutput
}

type KineisLogSourcePathArgs struct {
	// The name of the bucket. This is needed if using type `KinesisLogPath`.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must include `http-endpoint-failed/`.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
	ScanInterval pulumi.IntPtrInput `pulumi:"scanInterval"`
	// Must be either `KinesisLogPath` or `NoPathExpression`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KineisLogSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourcePath)(nil)).Elem()
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathOutput() KineisLogSourcePathOutput {
	return i.ToKineisLogSourcePathOutputWithContext(context.Background())
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathOutputWithContext(ctx context.Context) KineisLogSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourcePathOutput)
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return i.ToKineisLogSourcePathPtrOutputWithContext(context.Background())
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourcePathOutput).ToKineisLogSourcePathPtrOutputWithContext(ctx)
}

// KineisLogSourcePathPtrInput is an input type that accepts KineisLogSourcePathArgs, KineisLogSourcePathPtr and KineisLogSourcePathPtrOutput values.
// You can construct a concrete instance of `KineisLogSourcePathPtrInput` via:
//
//	        KineisLogSourcePathArgs{...}
//
//	or:
//
//	        nil
type KineisLogSourcePathPtrInput interface {
	pulumi.Input

	ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput
	ToKineisLogSourcePathPtrOutputWithContext(context.Context) KineisLogSourcePathPtrOutput
}

type kineisLogSourcePathPtrType KineisLogSourcePathArgs

func KineisLogSourcePathPtr(v *KineisLogSourcePathArgs) KineisLogSourcePathPtrInput {
	return (*kineisLogSourcePathPtrType)(v)
}

func (*kineisLogSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourcePath)(nil)).Elem()
}

func (i *kineisLogSourcePathPtrType) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return i.ToKineisLogSourcePathPtrOutputWithContext(context.Background())
}

func (i *kineisLogSourcePathPtrType) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourcePathPtrOutput)
}

type KineisLogSourcePathOutput struct{ *pulumi.OutputState }

func (KineisLogSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourcePath)(nil)).Elem()
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathOutput() KineisLogSourcePathOutput {
	return o
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathOutputWithContext(ctx context.Context) KineisLogSourcePathOutput {
	return o
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return o.ToKineisLogSourcePathPtrOutputWithContext(context.Background())
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KineisLogSourcePath) *KineisLogSourcePath {
		return &v
	}).(KineisLogSourcePathPtrOutput)
}

// The name of the bucket. This is needed if using type `KinesisLogPath`.
func (o KineisLogSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must include `http-endpoint-failed/`.
func (o KineisLogSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
func (o KineisLogSourcePathOutput) ScanInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *int { return v.ScanInterval }).(pulumi.IntPtrOutput)
}

// Must be either `KinesisLogPath` or `NoPathExpression`
func (o KineisLogSourcePathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KineisLogSourcePathPtrOutput struct{ *pulumi.OutputState }

func (KineisLogSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourcePath)(nil)).Elem()
}

func (o KineisLogSourcePathPtrOutput) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return o
}

func (o KineisLogSourcePathPtrOutput) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return o
}

func (o KineisLogSourcePathPtrOutput) Elem() KineisLogSourcePathOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) KineisLogSourcePath {
		if v != nil {
			return *v
		}
		var ret KineisLogSourcePath
		return ret
	}).(KineisLogSourcePathOutput)
}

// The name of the bucket. This is needed if using type `KinesisLogPath`.
func (o KineisLogSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must include `http-endpoint-failed/`.
func (o KineisLogSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
func (o KineisLogSourcePathPtrOutput) ScanInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *int {
		if v == nil {
			return nil
		}
		return v.ScanInterval
	}).(pulumi.IntPtrOutput)
}

// Must be either `KinesisLogPath` or `NoPathExpression`
func (o KineisLogSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type string `pulumi:"type"`
}

// KinesisMetricsSourceAuthenticationInput is an input type that accepts KinesisMetricsSourceAuthenticationArgs and KinesisMetricsSourceAuthenticationOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceAuthenticationInput` via:
//
//	KinesisMetricsSourceAuthenticationArgs{...}
type KinesisMetricsSourceAuthenticationInput interface {
	pulumi.Input

	ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput
	ToKinesisMetricsSourceAuthenticationOutputWithContext(context.Context) KinesisMetricsSourceAuthenticationOutput
}

type KinesisMetricsSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type pulumi.StringInput `pulumi:"type"`
}

func (KinesisMetricsSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput {
	return i.ToKinesisMetricsSourceAuthenticationOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationOutput)
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return i.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationOutput).ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx)
}

// KinesisMetricsSourceAuthenticationPtrInput is an input type that accepts KinesisMetricsSourceAuthenticationArgs, KinesisMetricsSourceAuthenticationPtr and KinesisMetricsSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceAuthenticationPtrInput` via:
//
//	        KinesisMetricsSourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type KinesisMetricsSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput
	ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Context) KinesisMetricsSourceAuthenticationPtrOutput
}

type kinesisMetricsSourceAuthenticationPtrType KinesisMetricsSourceAuthenticationArgs

func KinesisMetricsSourceAuthenticationPtr(v *KinesisMetricsSourceAuthenticationArgs) KinesisMetricsSourceAuthenticationPtrInput {
	return (*kinesisMetricsSourceAuthenticationPtrType)(v)
}

func (*kinesisMetricsSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (i *kinesisMetricsSourceAuthenticationPtrType) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return i.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kinesisMetricsSourceAuthenticationPtrType) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationPtrOutput)
}

type KinesisMetricsSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return o.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KinesisMetricsSourceAuthentication) *KinesisMetricsSourceAuthentication {
		return &v
	}).(KinesisMetricsSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type KinesisMetricsSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) Elem() KinesisMetricsSourceAuthenticationOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) KinesisMetricsSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret KinesisMetricsSourceAuthentication
		return ret
	}).(KinesisMetricsSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// KinesisMetricsSourceDefaultDateFormatInput is an input type that accepts KinesisMetricsSourceDefaultDateFormatArgs and KinesisMetricsSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceDefaultDateFormatInput` via:
//
//	KinesisMetricsSourceDefaultDateFormatArgs{...}
type KinesisMetricsSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput
	ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(context.Context) KinesisMetricsSourceDefaultDateFormatOutput
}

type KinesisMetricsSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (KinesisMetricsSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i KinesisMetricsSourceDefaultDateFormatArgs) ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput {
	return i.ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceDefaultDateFormatArgs) ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceDefaultDateFormatOutput)
}

// KinesisMetricsSourceDefaultDateFormatArrayInput is an input type that accepts KinesisMetricsSourceDefaultDateFormatArray and KinesisMetricsSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceDefaultDateFormatArrayInput` via:
//
//	KinesisMetricsSourceDefaultDateFormatArray{ KinesisMetricsSourceDefaultDateFormatArgs{...} }
type KinesisMetricsSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput
	ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput
}

type KinesisMetricsSourceDefaultDateFormatArray []KinesisMetricsSourceDefaultDateFormatInput

func (KinesisMetricsSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i KinesisMetricsSourceDefaultDateFormatArray) ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return i.ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceDefaultDateFormatArray) ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceDefaultDateFormatArrayOutput)
}

type KinesisMetricsSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourceDefaultDateFormat {
		return vs[0].([]KinesisMetricsSourceDefaultDateFormat)[vs[1].(int)]
	}).(KinesisMetricsSourceDefaultDateFormatOutput)
}

type KinesisMetricsSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// KinesisMetricsSourceFilterInput is an input type that accepts KinesisMetricsSourceFilterArgs and KinesisMetricsSourceFilterOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceFilterInput` via:
//
//	KinesisMetricsSourceFilterArgs{...}
type KinesisMetricsSourceFilterInput interface {
	pulumi.Input

	ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput
	ToKinesisMetricsSourceFilterOutputWithContext(context.Context) KinesisMetricsSourceFilterOutput
}

type KinesisMetricsSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (KinesisMetricsSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceFilter)(nil)).Elem()
}

func (i KinesisMetricsSourceFilterArgs) ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput {
	return i.ToKinesisMetricsSourceFilterOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceFilterArgs) ToKinesisMetricsSourceFilterOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceFilterOutput)
}

// KinesisMetricsSourceFilterArrayInput is an input type that accepts KinesisMetricsSourceFilterArray and KinesisMetricsSourceFilterArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceFilterArrayInput` via:
//
//	KinesisMetricsSourceFilterArray{ KinesisMetricsSourceFilterArgs{...} }
type KinesisMetricsSourceFilterArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput
	ToKinesisMetricsSourceFilterArrayOutputWithContext(context.Context) KinesisMetricsSourceFilterArrayOutput
}

type KinesisMetricsSourceFilterArray []KinesisMetricsSourceFilterInput

func (KinesisMetricsSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceFilter)(nil)).Elem()
}

func (i KinesisMetricsSourceFilterArray) ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput {
	return i.ToKinesisMetricsSourceFilterArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceFilterArray) ToKinesisMetricsSourceFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceFilterArrayOutput)
}

type KinesisMetricsSourceFilterOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceFilter)(nil)).Elem()
}

func (o KinesisMetricsSourceFilterOutput) ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput {
	return o
}

func (o KinesisMetricsSourceFilterOutput) ToKinesisMetricsSourceFilterOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterOutput {
	return o
}

func (o KinesisMetricsSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type KinesisMetricsSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceFilter)(nil)).Elem()
}

func (o KinesisMetricsSourceFilterArrayOutput) ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourceFilterArrayOutput) ToKinesisMetricsSourceFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourceFilterArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourceFilter {
		return vs[0].([]KinesisMetricsSourceFilter)[vs[1].(int)]
	}).(KinesisMetricsSourceFilterOutput)
}

type KinesisMetricsSourcePath struct {
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters []KinesisMetricsSourcePathTagFilter `pulumi:"tagFilters"`
	// Must be `KinesisMetricPath`
	Type string `pulumi:"type"`
}

// KinesisMetricsSourcePathInput is an input type that accepts KinesisMetricsSourcePathArgs and KinesisMetricsSourcePathOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathInput` via:
//
//	KinesisMetricsSourcePathArgs{...}
type KinesisMetricsSourcePathInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput
	ToKinesisMetricsSourcePathOutputWithContext(context.Context) KinesisMetricsSourcePathOutput
}

type KinesisMetricsSourcePathArgs struct {
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters KinesisMetricsSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	// Must be `KinesisMetricPath`
	Type pulumi.StringInput `pulumi:"type"`
}

func (KinesisMetricsSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePath)(nil)).Elem()
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput {
	return i.ToKinesisMetricsSourcePathOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathOutputWithContext(ctx context.Context) KinesisMetricsSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathOutput)
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return i.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathOutput).ToKinesisMetricsSourcePathPtrOutputWithContext(ctx)
}

// KinesisMetricsSourcePathPtrInput is an input type that accepts KinesisMetricsSourcePathArgs, KinesisMetricsSourcePathPtr and KinesisMetricsSourcePathPtrOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathPtrInput` via:
//
//	        KinesisMetricsSourcePathArgs{...}
//
//	or:
//
//	        nil
type KinesisMetricsSourcePathPtrInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput
	ToKinesisMetricsSourcePathPtrOutputWithContext(context.Context) KinesisMetricsSourcePathPtrOutput
}

type kinesisMetricsSourcePathPtrType KinesisMetricsSourcePathArgs

func KinesisMetricsSourcePathPtr(v *KinesisMetricsSourcePathArgs) KinesisMetricsSourcePathPtrInput {
	return (*kinesisMetricsSourcePathPtrType)(v)
}

func (*kinesisMetricsSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourcePath)(nil)).Elem()
}

func (i *kinesisMetricsSourcePathPtrType) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return i.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i *kinesisMetricsSourcePathPtrType) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathPtrOutput)
}

type KinesisMetricsSourcePathOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePath)(nil)).Elem()
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput {
	return o
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathOutputWithContext(ctx context.Context) KinesisMetricsSourcePathOutput {
	return o
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return o.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KinesisMetricsSourcePath) *KinesisMetricsSourcePath {
		return &v
	}).(KinesisMetricsSourcePathPtrOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o KinesisMetricsSourcePathOutput) TagFilters() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) []KinesisMetricsSourcePathTagFilter { return v.TagFilters }).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

// Must be `KinesisMetricPath`
func (o KinesisMetricsSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type KinesisMetricsSourcePathPtrOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourcePath)(nil)).Elem()
}

func (o KinesisMetricsSourcePathPtrOutput) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return o
}

func (o KinesisMetricsSourcePathPtrOutput) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return o
}

func (o KinesisMetricsSourcePathPtrOutput) Elem() KinesisMetricsSourcePathOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) KinesisMetricsSourcePath {
		if v != nil {
			return *v
		}
		var ret KinesisMetricsSourcePath
		return ret
	}).(KinesisMetricsSourcePathOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o KinesisMetricsSourcePathPtrOutput) TagFilters() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) []KinesisMetricsSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

// Must be `KinesisMetricPath`
func (o KinesisMetricsSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourcePathTagFilter struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace *string `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags []string `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type *string `pulumi:"type"`
}

// KinesisMetricsSourcePathTagFilterInput is an input type that accepts KinesisMetricsSourcePathTagFilterArgs and KinesisMetricsSourcePathTagFilterOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathTagFilterInput` via:
//
//	KinesisMetricsSourcePathTagFilterArgs{...}
type KinesisMetricsSourcePathTagFilterInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput
	ToKinesisMetricsSourcePathTagFilterOutputWithContext(context.Context) KinesisMetricsSourcePathTagFilterOutput
}

type KinesisMetricsSourcePathTagFilterArgs struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KinesisMetricsSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i KinesisMetricsSourcePathTagFilterArgs) ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput {
	return i.ToKinesisMetricsSourcePathTagFilterOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathTagFilterArgs) ToKinesisMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathTagFilterOutput)
}

// KinesisMetricsSourcePathTagFilterArrayInput is an input type that accepts KinesisMetricsSourcePathTagFilterArray and KinesisMetricsSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathTagFilterArrayInput` via:
//
//	KinesisMetricsSourcePathTagFilterArray{ KinesisMetricsSourcePathTagFilterArgs{...} }
type KinesisMetricsSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput
	ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(context.Context) KinesisMetricsSourcePathTagFilterArrayOutput
}

type KinesisMetricsSourcePathTagFilterArray []KinesisMetricsSourcePathTagFilterInput

func (KinesisMetricsSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i KinesisMetricsSourcePathTagFilterArray) ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput {
	return i.ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathTagFilterArray) ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

type KinesisMetricsSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o KinesisMetricsSourcePathTagFilterOutput) ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterOutput) ToKinesisMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterOutput {
	return o
}

// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
func (o KinesisMetricsSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
func (o KinesisMetricsSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourcePathTagFilter {
		return vs[0].([]KinesisMetricsSourcePathTagFilter)[vs[1].(int)]
	}).(KinesisMetricsSourcePathTagFilterOutput)
}

type LocalFileSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// LocalFileSourceDefaultDateFormatInput is an input type that accepts LocalFileSourceDefaultDateFormatArgs and LocalFileSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `LocalFileSourceDefaultDateFormatInput` via:
//
//	LocalFileSourceDefaultDateFormatArgs{...}
type LocalFileSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToLocalFileSourceDefaultDateFormatOutput() LocalFileSourceDefaultDateFormatOutput
	ToLocalFileSourceDefaultDateFormatOutputWithContext(context.Context) LocalFileSourceDefaultDateFormatOutput
}

type LocalFileSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (LocalFileSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalFileSourceDefaultDateFormat)(nil)).Elem()
}

func (i LocalFileSourceDefaultDateFormatArgs) ToLocalFileSourceDefaultDateFormatOutput() LocalFileSourceDefaultDateFormatOutput {
	return i.ToLocalFileSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i LocalFileSourceDefaultDateFormatArgs) ToLocalFileSourceDefaultDateFormatOutputWithContext(ctx context.Context) LocalFileSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalFileSourceDefaultDateFormatOutput)
}

// LocalFileSourceDefaultDateFormatArrayInput is an input type that accepts LocalFileSourceDefaultDateFormatArray and LocalFileSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `LocalFileSourceDefaultDateFormatArrayInput` via:
//
//	LocalFileSourceDefaultDateFormatArray{ LocalFileSourceDefaultDateFormatArgs{...} }
type LocalFileSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToLocalFileSourceDefaultDateFormatArrayOutput() LocalFileSourceDefaultDateFormatArrayOutput
	ToLocalFileSourceDefaultDateFormatArrayOutputWithContext(context.Context) LocalFileSourceDefaultDateFormatArrayOutput
}

type LocalFileSourceDefaultDateFormatArray []LocalFileSourceDefaultDateFormatInput

func (LocalFileSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalFileSourceDefaultDateFormat)(nil)).Elem()
}

func (i LocalFileSourceDefaultDateFormatArray) ToLocalFileSourceDefaultDateFormatArrayOutput() LocalFileSourceDefaultDateFormatArrayOutput {
	return i.ToLocalFileSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i LocalFileSourceDefaultDateFormatArray) ToLocalFileSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) LocalFileSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalFileSourceDefaultDateFormatArrayOutput)
}

type LocalFileSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (LocalFileSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalFileSourceDefaultDateFormat)(nil)).Elem()
}

func (o LocalFileSourceDefaultDateFormatOutput) ToLocalFileSourceDefaultDateFormatOutput() LocalFileSourceDefaultDateFormatOutput {
	return o
}

func (o LocalFileSourceDefaultDateFormatOutput) ToLocalFileSourceDefaultDateFormatOutputWithContext(ctx context.Context) LocalFileSourceDefaultDateFormatOutput {
	return o
}

func (o LocalFileSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v LocalFileSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o LocalFileSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalFileSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type LocalFileSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (LocalFileSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalFileSourceDefaultDateFormat)(nil)).Elem()
}

func (o LocalFileSourceDefaultDateFormatArrayOutput) ToLocalFileSourceDefaultDateFormatArrayOutput() LocalFileSourceDefaultDateFormatArrayOutput {
	return o
}

func (o LocalFileSourceDefaultDateFormatArrayOutput) ToLocalFileSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) LocalFileSourceDefaultDateFormatArrayOutput {
	return o
}

func (o LocalFileSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) LocalFileSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalFileSourceDefaultDateFormat {
		return vs[0].([]LocalFileSourceDefaultDateFormat)[vs[1].(int)]
	}).(LocalFileSourceDefaultDateFormatOutput)
}

type LocalFileSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	// The name of the local file source. This is required, and has to be unique. Changing this will force recreation the source.
	Name   string `pulumi:"name"`
	Regexp string `pulumi:"regexp"`
}

// LocalFileSourceFilterInput is an input type that accepts LocalFileSourceFilterArgs and LocalFileSourceFilterOutput values.
// You can construct a concrete instance of `LocalFileSourceFilterInput` via:
//
//	LocalFileSourceFilterArgs{...}
type LocalFileSourceFilterInput interface {
	pulumi.Input

	ToLocalFileSourceFilterOutput() LocalFileSourceFilterOutput
	ToLocalFileSourceFilterOutputWithContext(context.Context) LocalFileSourceFilterOutput
}

type LocalFileSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	// The name of the local file source. This is required, and has to be unique. Changing this will force recreation the source.
	Name   pulumi.StringInput `pulumi:"name"`
	Regexp pulumi.StringInput `pulumi:"regexp"`
}

func (LocalFileSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalFileSourceFilter)(nil)).Elem()
}

func (i LocalFileSourceFilterArgs) ToLocalFileSourceFilterOutput() LocalFileSourceFilterOutput {
	return i.ToLocalFileSourceFilterOutputWithContext(context.Background())
}

func (i LocalFileSourceFilterArgs) ToLocalFileSourceFilterOutputWithContext(ctx context.Context) LocalFileSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalFileSourceFilterOutput)
}

// LocalFileSourceFilterArrayInput is an input type that accepts LocalFileSourceFilterArray and LocalFileSourceFilterArrayOutput values.
// You can construct a concrete instance of `LocalFileSourceFilterArrayInput` via:
//
//	LocalFileSourceFilterArray{ LocalFileSourceFilterArgs{...} }
type LocalFileSourceFilterArrayInput interface {
	pulumi.Input

	ToLocalFileSourceFilterArrayOutput() LocalFileSourceFilterArrayOutput
	ToLocalFileSourceFilterArrayOutputWithContext(context.Context) LocalFileSourceFilterArrayOutput
}

type LocalFileSourceFilterArray []LocalFileSourceFilterInput

func (LocalFileSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalFileSourceFilter)(nil)).Elem()
}

func (i LocalFileSourceFilterArray) ToLocalFileSourceFilterArrayOutput() LocalFileSourceFilterArrayOutput {
	return i.ToLocalFileSourceFilterArrayOutputWithContext(context.Background())
}

func (i LocalFileSourceFilterArray) ToLocalFileSourceFilterArrayOutputWithContext(ctx context.Context) LocalFileSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalFileSourceFilterArrayOutput)
}

type LocalFileSourceFilterOutput struct{ *pulumi.OutputState }

func (LocalFileSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalFileSourceFilter)(nil)).Elem()
}

func (o LocalFileSourceFilterOutput) ToLocalFileSourceFilterOutput() LocalFileSourceFilterOutput {
	return o
}

func (o LocalFileSourceFilterOutput) ToLocalFileSourceFilterOutputWithContext(ctx context.Context) LocalFileSourceFilterOutput {
	return o
}

func (o LocalFileSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v LocalFileSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o LocalFileSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalFileSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

// The name of the local file source. This is required, and has to be unique. Changing this will force recreation the source.
func (o LocalFileSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalFileSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o LocalFileSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v LocalFileSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type LocalFileSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (LocalFileSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalFileSourceFilter)(nil)).Elem()
}

func (o LocalFileSourceFilterArrayOutput) ToLocalFileSourceFilterArrayOutput() LocalFileSourceFilterArrayOutput {
	return o
}

func (o LocalFileSourceFilterArrayOutput) ToLocalFileSourceFilterArrayOutputWithContext(ctx context.Context) LocalFileSourceFilterArrayOutput {
	return o
}

func (o LocalFileSourceFilterArrayOutput) Index(i pulumi.IntInput) LocalFileSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalFileSourceFilter {
		return vs[0].([]LocalFileSourceFilter)[vs[1].(int)]
	}).(LocalFileSourceFilterOutput)
}

type LogSearchQueryParameter struct {
	// The data type of the parameter. Supported values are:
	DataType string `pulumi:"dataType"`
	// Description of the search.
	Description *string `pulumi:"description"`
	// Name of the search.
	Name string `pulumi:"name"`
	// The default value for the parameter. It should be compatible with the type set in the `dataType` field.
	Value string `pulumi:"value"`
}

// LogSearchQueryParameterInput is an input type that accepts LogSearchQueryParameterArgs and LogSearchQueryParameterOutput values.
// You can construct a concrete instance of `LogSearchQueryParameterInput` via:
//
//	LogSearchQueryParameterArgs{...}
type LogSearchQueryParameterInput interface {
	pulumi.Input

	ToLogSearchQueryParameterOutput() LogSearchQueryParameterOutput
	ToLogSearchQueryParameterOutputWithContext(context.Context) LogSearchQueryParameterOutput
}

type LogSearchQueryParameterArgs struct {
	// The data type of the parameter. Supported values are:
	DataType pulumi.StringInput `pulumi:"dataType"`
	// Description of the search.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of the search.
	Name pulumi.StringInput `pulumi:"name"`
	// The default value for the parameter. It should be compatible with the type set in the `dataType` field.
	Value pulumi.StringInput `pulumi:"value"`
}

func (LogSearchQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchQueryParameter)(nil)).Elem()
}

func (i LogSearchQueryParameterArgs) ToLogSearchQueryParameterOutput() LogSearchQueryParameterOutput {
	return i.ToLogSearchQueryParameterOutputWithContext(context.Background())
}

func (i LogSearchQueryParameterArgs) ToLogSearchQueryParameterOutputWithContext(ctx context.Context) LogSearchQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchQueryParameterOutput)
}

// LogSearchQueryParameterArrayInput is an input type that accepts LogSearchQueryParameterArray and LogSearchQueryParameterArrayOutput values.
// You can construct a concrete instance of `LogSearchQueryParameterArrayInput` via:
//
//	LogSearchQueryParameterArray{ LogSearchQueryParameterArgs{...} }
type LogSearchQueryParameterArrayInput interface {
	pulumi.Input

	ToLogSearchQueryParameterArrayOutput() LogSearchQueryParameterArrayOutput
	ToLogSearchQueryParameterArrayOutputWithContext(context.Context) LogSearchQueryParameterArrayOutput
}

type LogSearchQueryParameterArray []LogSearchQueryParameterInput

func (LogSearchQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSearchQueryParameter)(nil)).Elem()
}

func (i LogSearchQueryParameterArray) ToLogSearchQueryParameterArrayOutput() LogSearchQueryParameterArrayOutput {
	return i.ToLogSearchQueryParameterArrayOutputWithContext(context.Background())
}

func (i LogSearchQueryParameterArray) ToLogSearchQueryParameterArrayOutputWithContext(ctx context.Context) LogSearchQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchQueryParameterArrayOutput)
}

type LogSearchQueryParameterOutput struct{ *pulumi.OutputState }

func (LogSearchQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchQueryParameter)(nil)).Elem()
}

func (o LogSearchQueryParameterOutput) ToLogSearchQueryParameterOutput() LogSearchQueryParameterOutput {
	return o
}

func (o LogSearchQueryParameterOutput) ToLogSearchQueryParameterOutputWithContext(ctx context.Context) LogSearchQueryParameterOutput {
	return o
}

// The data type of the parameter. Supported values are:
func (o LogSearchQueryParameterOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchQueryParameter) string { return v.DataType }).(pulumi.StringOutput)
}

// Description of the search.
func (o LogSearchQueryParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchQueryParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the search.
func (o LogSearchQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The default value for the parameter. It should be compatible with the type set in the `dataType` field.
func (o LogSearchQueryParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchQueryParameter) string { return v.Value }).(pulumi.StringOutput)
}

type LogSearchQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (LogSearchQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSearchQueryParameter)(nil)).Elem()
}

func (o LogSearchQueryParameterArrayOutput) ToLogSearchQueryParameterArrayOutput() LogSearchQueryParameterArrayOutput {
	return o
}

func (o LogSearchQueryParameterArrayOutput) ToLogSearchQueryParameterArrayOutputWithContext(ctx context.Context) LogSearchQueryParameterArrayOutput {
	return o
}

func (o LogSearchQueryParameterArrayOutput) Index(i pulumi.IntInput) LogSearchQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSearchQueryParameter {
		return vs[0].([]LogSearchQueryParameter)[vs[1].(int)]
	}).(LogSearchQueryParameterOutput)
}

type LogSearchSchedule struct {
	// Cron-like expression specifying the search's schedule. `scheduleType` must be set
	// to "Custom", otherwise, `scheduleType` takes precedence over `cronExpression`.
	CronExpression *string `pulumi:"cronExpression"`
	// If enabled, emails are not sent out in case of errors with the search.
	MuteErrorEmails *bool `pulumi:"muteErrorEmails"`
	// (Block List, Max: 1, Required) Notification of the log search. See
	// notification schema
	Notification LogSearchScheduleNotification `pulumi:"notification"`
	Parameters   []LogSearchScheduleParameter  `pulumi:"parameters"`
	// (Block List, Max: 1, Required) Time range of the scheduled log search. See
	// time range schema
	ParseableTimeRange LogSearchScheduleParseableTimeRange `pulumi:"parseableTimeRange"`
	// Run schedule of the scheduled search. Set to "Custom" to specify the schedule with
	// a CRON expression. Possible schedule types are: `RealTime`, `15Minutes`, `1Hour`, `2Hours`, `4Hours`, `6Hours`,
	// `8Hours`, `12Hours`, `1Day`, `1Week`, `Custom`.
	//
	// > With `Custom`, `1Day` and `1Week` schedule types you need to provide the corresponding cron expression
	// to determine when to actually run the search. E.g. valid cron for `1Day` is `0 0 16 ? * 2-6 *`.
	ScheduleType string `pulumi:"scheduleType"`
	// (Block List, Max: 1, Optional) Threshold for when to send notification. See
	// threshold schema
	Threshold *LogSearchScheduleThreshold `pulumi:"threshold"`
	// Time zone for the scheduled log search. Either an abbreviation such as "PST",
	// a full name such as "America/Los_Angeles", or a custom ID such as "GMT-8:00". Note that the support of
	// abbreviations is for JDK 1.1.x compatibility only and full names should be used.
	TimeZone string `pulumi:"timeZone"`
}

// LogSearchScheduleInput is an input type that accepts LogSearchScheduleArgs and LogSearchScheduleOutput values.
// You can construct a concrete instance of `LogSearchScheduleInput` via:
//
//	LogSearchScheduleArgs{...}
type LogSearchScheduleInput interface {
	pulumi.Input

	ToLogSearchScheduleOutput() LogSearchScheduleOutput
	ToLogSearchScheduleOutputWithContext(context.Context) LogSearchScheduleOutput
}

type LogSearchScheduleArgs struct {
	// Cron-like expression specifying the search's schedule. `scheduleType` must be set
	// to "Custom", otherwise, `scheduleType` takes precedence over `cronExpression`.
	CronExpression pulumi.StringPtrInput `pulumi:"cronExpression"`
	// If enabled, emails are not sent out in case of errors with the search.
	MuteErrorEmails pulumi.BoolPtrInput `pulumi:"muteErrorEmails"`
	// (Block List, Max: 1, Required) Notification of the log search. See
	// notification schema
	Notification LogSearchScheduleNotificationInput   `pulumi:"notification"`
	Parameters   LogSearchScheduleParameterArrayInput `pulumi:"parameters"`
	// (Block List, Max: 1, Required) Time range of the scheduled log search. See
	// time range schema
	ParseableTimeRange LogSearchScheduleParseableTimeRangeInput `pulumi:"parseableTimeRange"`
	// Run schedule of the scheduled search. Set to "Custom" to specify the schedule with
	// a CRON expression. Possible schedule types are: `RealTime`, `15Minutes`, `1Hour`, `2Hours`, `4Hours`, `6Hours`,
	// `8Hours`, `12Hours`, `1Day`, `1Week`, `Custom`.
	//
	// > With `Custom`, `1Day` and `1Week` schedule types you need to provide the corresponding cron expression
	// to determine when to actually run the search. E.g. valid cron for `1Day` is `0 0 16 ? * 2-6 *`.
	ScheduleType pulumi.StringInput `pulumi:"scheduleType"`
	// (Block List, Max: 1, Optional) Threshold for when to send notification. See
	// threshold schema
	Threshold LogSearchScheduleThresholdPtrInput `pulumi:"threshold"`
	// Time zone for the scheduled log search. Either an abbreviation such as "PST",
	// a full name such as "America/Los_Angeles", or a custom ID such as "GMT-8:00". Note that the support of
	// abbreviations is for JDK 1.1.x compatibility only and full names should be used.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (LogSearchScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchSchedule)(nil)).Elem()
}

func (i LogSearchScheduleArgs) ToLogSearchScheduleOutput() LogSearchScheduleOutput {
	return i.ToLogSearchScheduleOutputWithContext(context.Background())
}

func (i LogSearchScheduleArgs) ToLogSearchScheduleOutputWithContext(ctx context.Context) LogSearchScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleOutput)
}

func (i LogSearchScheduleArgs) ToLogSearchSchedulePtrOutput() LogSearchSchedulePtrOutput {
	return i.ToLogSearchSchedulePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleArgs) ToLogSearchSchedulePtrOutputWithContext(ctx context.Context) LogSearchSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleOutput).ToLogSearchSchedulePtrOutputWithContext(ctx)
}

// LogSearchSchedulePtrInput is an input type that accepts LogSearchScheduleArgs, LogSearchSchedulePtr and LogSearchSchedulePtrOutput values.
// You can construct a concrete instance of `LogSearchSchedulePtrInput` via:
//
//	        LogSearchScheduleArgs{...}
//
//	or:
//
//	        nil
type LogSearchSchedulePtrInput interface {
	pulumi.Input

	ToLogSearchSchedulePtrOutput() LogSearchSchedulePtrOutput
	ToLogSearchSchedulePtrOutputWithContext(context.Context) LogSearchSchedulePtrOutput
}

type logSearchSchedulePtrType LogSearchScheduleArgs

func LogSearchSchedulePtr(v *LogSearchScheduleArgs) LogSearchSchedulePtrInput {
	return (*logSearchSchedulePtrType)(v)
}

func (*logSearchSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchSchedule)(nil)).Elem()
}

func (i *logSearchSchedulePtrType) ToLogSearchSchedulePtrOutput() LogSearchSchedulePtrOutput {
	return i.ToLogSearchSchedulePtrOutputWithContext(context.Background())
}

func (i *logSearchSchedulePtrType) ToLogSearchSchedulePtrOutputWithContext(ctx context.Context) LogSearchSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchSchedulePtrOutput)
}

type LogSearchScheduleOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchSchedule)(nil)).Elem()
}

func (o LogSearchScheduleOutput) ToLogSearchScheduleOutput() LogSearchScheduleOutput {
	return o
}

func (o LogSearchScheduleOutput) ToLogSearchScheduleOutputWithContext(ctx context.Context) LogSearchScheduleOutput {
	return o
}

func (o LogSearchScheduleOutput) ToLogSearchSchedulePtrOutput() LogSearchSchedulePtrOutput {
	return o.ToLogSearchSchedulePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleOutput) ToLogSearchSchedulePtrOutputWithContext(ctx context.Context) LogSearchSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchSchedule) *LogSearchSchedule {
		return &v
	}).(LogSearchSchedulePtrOutput)
}

// Cron-like expression specifying the search's schedule. `scheduleType` must be set
// to "Custom", otherwise, `scheduleType` takes precedence over `cronExpression`.
func (o LogSearchScheduleOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchSchedule) *string { return v.CronExpression }).(pulumi.StringPtrOutput)
}

// If enabled, emails are not sent out in case of errors with the search.
func (o LogSearchScheduleOutput) MuteErrorEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogSearchSchedule) *bool { return v.MuteErrorEmails }).(pulumi.BoolPtrOutput)
}

// (Block List, Max: 1, Required) Notification of the log search. See
// notification schema
func (o LogSearchScheduleOutput) Notification() LogSearchScheduleNotificationOutput {
	return o.ApplyT(func(v LogSearchSchedule) LogSearchScheduleNotification { return v.Notification }).(LogSearchScheduleNotificationOutput)
}

func (o LogSearchScheduleOutput) Parameters() LogSearchScheduleParameterArrayOutput {
	return o.ApplyT(func(v LogSearchSchedule) []LogSearchScheduleParameter { return v.Parameters }).(LogSearchScheduleParameterArrayOutput)
}

// (Block List, Max: 1, Required) Time range of the scheduled log search. See
// time range schema
func (o LogSearchScheduleOutput) ParseableTimeRange() LogSearchScheduleParseableTimeRangeOutput {
	return o.ApplyT(func(v LogSearchSchedule) LogSearchScheduleParseableTimeRange { return v.ParseableTimeRange }).(LogSearchScheduleParseableTimeRangeOutput)
}

// Run schedule of the scheduled search. Set to "Custom" to specify the schedule with
// a CRON expression. Possible schedule types are: `RealTime`, `15Minutes`, `1Hour`, `2Hours`, `4Hours`, `6Hours`,
// `8Hours`, `12Hours`, `1Day`, `1Week`, `Custom`.
//
// > With `Custom`, `1Day` and `1Week` schedule types you need to provide the corresponding cron expression
// to determine when to actually run the search. E.g. valid cron for `1Day` is `0 0 16 ? * 2-6 *`.
func (o LogSearchScheduleOutput) ScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchSchedule) string { return v.ScheduleType }).(pulumi.StringOutput)
}

// (Block List, Max: 1, Optional) Threshold for when to send notification. See
// threshold schema
func (o LogSearchScheduleOutput) Threshold() LogSearchScheduleThresholdPtrOutput {
	return o.ApplyT(func(v LogSearchSchedule) *LogSearchScheduleThreshold { return v.Threshold }).(LogSearchScheduleThresholdPtrOutput)
}

// Time zone for the scheduled log search. Either an abbreviation such as "PST",
// a full name such as "America/Los_Angeles", or a custom ID such as "GMT-8:00". Note that the support of
// abbreviations is for JDK 1.1.x compatibility only and full names should be used.
func (o LogSearchScheduleOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchSchedule) string { return v.TimeZone }).(pulumi.StringOutput)
}

type LogSearchSchedulePtrOutput struct{ *pulumi.OutputState }

func (LogSearchSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchSchedule)(nil)).Elem()
}

func (o LogSearchSchedulePtrOutput) ToLogSearchSchedulePtrOutput() LogSearchSchedulePtrOutput {
	return o
}

func (o LogSearchSchedulePtrOutput) ToLogSearchSchedulePtrOutputWithContext(ctx context.Context) LogSearchSchedulePtrOutput {
	return o
}

func (o LogSearchSchedulePtrOutput) Elem() LogSearchScheduleOutput {
	return o.ApplyT(func(v *LogSearchSchedule) LogSearchSchedule {
		if v != nil {
			return *v
		}
		var ret LogSearchSchedule
		return ret
	}).(LogSearchScheduleOutput)
}

// Cron-like expression specifying the search's schedule. `scheduleType` must be set
// to "Custom", otherwise, `scheduleType` takes precedence over `cronExpression`.
func (o LogSearchSchedulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *string {
		if v == nil {
			return nil
		}
		return v.CronExpression
	}).(pulumi.StringPtrOutput)
}

// If enabled, emails are not sent out in case of errors with the search.
func (o LogSearchSchedulePtrOutput) MuteErrorEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *bool {
		if v == nil {
			return nil
		}
		return v.MuteErrorEmails
	}).(pulumi.BoolPtrOutput)
}

// (Block List, Max: 1, Required) Notification of the log search. See
// notification schema
func (o LogSearchSchedulePtrOutput) Notification() LogSearchScheduleNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *LogSearchScheduleNotification {
		if v == nil {
			return nil
		}
		return &v.Notification
	}).(LogSearchScheduleNotificationPtrOutput)
}

func (o LogSearchSchedulePtrOutput) Parameters() LogSearchScheduleParameterArrayOutput {
	return o.ApplyT(func(v *LogSearchSchedule) []LogSearchScheduleParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(LogSearchScheduleParameterArrayOutput)
}

// (Block List, Max: 1, Required) Time range of the scheduled log search. See
// time range schema
func (o LogSearchSchedulePtrOutput) ParseableTimeRange() LogSearchScheduleParseableTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *LogSearchScheduleParseableTimeRange {
		if v == nil {
			return nil
		}
		return &v.ParseableTimeRange
	}).(LogSearchScheduleParseableTimeRangePtrOutput)
}

// Run schedule of the scheduled search. Set to "Custom" to specify the schedule with
// a CRON expression. Possible schedule types are: `RealTime`, `15Minutes`, `1Hour`, `2Hours`, `4Hours`, `6Hours`,
// `8Hours`, `12Hours`, `1Day`, `1Week`, `Custom`.
//
// > With `Custom`, `1Day` and `1Week` schedule types you need to provide the corresponding cron expression
// to determine when to actually run the search. E.g. valid cron for `1Day` is `0 0 16 ? * 2-6 *`.
func (o LogSearchSchedulePtrOutput) ScheduleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleType
	}).(pulumi.StringPtrOutput)
}

// (Block List, Max: 1, Optional) Threshold for when to send notification. See
// threshold schema
func (o LogSearchSchedulePtrOutput) Threshold() LogSearchScheduleThresholdPtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *LogSearchScheduleThreshold {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(LogSearchScheduleThresholdPtrOutput)
}

// Time zone for the scheduled log search. Either an abbreviation such as "PST",
// a full name such as "America/Los_Angeles", or a custom ID such as "GMT-8:00". Note that the support of
// abbreviations is for JDK 1.1.x compatibility only and full names should be used.
func (o LogSearchSchedulePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleNotification struct {
	// (Block List, Max: 1, Optional) Run an script action. See
	// alertSearchNotification schema for details.
	AlertSearchNotification *LogSearchScheduleNotificationAlertSearchNotification `pulumi:"alertSearchNotification"`
	// (Block List, Max: 1, Optional) Create a CSE signal with a scheduled search.
	// See cseSignalNotification schema schema for details.
	CseSignalNotification *LogSearchScheduleNotificationCseSignalNotification `pulumi:"cseSignalNotification"`
	// (Block List, Max: 1, Optional) Send an alert via email. See
	// emailSearchNotification schema schema for details.
	EmailSearchNotification *LogSearchScheduleNotificationEmailSearchNotification `pulumi:"emailSearchNotification"`
	// (Block List, Max: 1, Optional) Save results to a Lookup Table. See
	// saveToLookupNotification schema schema for details.
	SaveToLookupNotification *LogSearchScheduleNotificationSaveToLookupNotification `pulumi:"saveToLookupNotification"`
	// (Block List, Max: 1, Optional) Save results to an index. See
	// saveToViewNotification schema schema for details.
	SaveToViewNotification *LogSearchScheduleNotificationSaveToViewNotification `pulumi:"saveToViewNotification"`
	// (Block List, Max: 1, Optional) Send results to Service Now. See
	// serviceNowSearchNotification schema schema for details.
	ServiceNowSearchNotification *LogSearchScheduleNotificationServiceNowSearchNotification `pulumi:"serviceNowSearchNotification"`
	// (Block List, Max: 1, Optional) Send an alert via Webhook. See
	// webhookSearchNotification schema schema for details.
	WebhookSearchNotification *LogSearchScheduleNotificationWebhookSearchNotification `pulumi:"webhookSearchNotification"`
}

// LogSearchScheduleNotificationInput is an input type that accepts LogSearchScheduleNotificationArgs and LogSearchScheduleNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationInput` via:
//
//	LogSearchScheduleNotificationArgs{...}
type LogSearchScheduleNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationOutput() LogSearchScheduleNotificationOutput
	ToLogSearchScheduleNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationOutput
}

type LogSearchScheduleNotificationArgs struct {
	// (Block List, Max: 1, Optional) Run an script action. See
	// alertSearchNotification schema for details.
	AlertSearchNotification LogSearchScheduleNotificationAlertSearchNotificationPtrInput `pulumi:"alertSearchNotification"`
	// (Block List, Max: 1, Optional) Create a CSE signal with a scheduled search.
	// See cseSignalNotification schema schema for details.
	CseSignalNotification LogSearchScheduleNotificationCseSignalNotificationPtrInput `pulumi:"cseSignalNotification"`
	// (Block List, Max: 1, Optional) Send an alert via email. See
	// emailSearchNotification schema schema for details.
	EmailSearchNotification LogSearchScheduleNotificationEmailSearchNotificationPtrInput `pulumi:"emailSearchNotification"`
	// (Block List, Max: 1, Optional) Save results to a Lookup Table. See
	// saveToLookupNotification schema schema for details.
	SaveToLookupNotification LogSearchScheduleNotificationSaveToLookupNotificationPtrInput `pulumi:"saveToLookupNotification"`
	// (Block List, Max: 1, Optional) Save results to an index. See
	// saveToViewNotification schema schema for details.
	SaveToViewNotification LogSearchScheduleNotificationSaveToViewNotificationPtrInput `pulumi:"saveToViewNotification"`
	// (Block List, Max: 1, Optional) Send results to Service Now. See
	// serviceNowSearchNotification schema schema for details.
	ServiceNowSearchNotification LogSearchScheduleNotificationServiceNowSearchNotificationPtrInput `pulumi:"serviceNowSearchNotification"`
	// (Block List, Max: 1, Optional) Send an alert via Webhook. See
	// webhookSearchNotification schema schema for details.
	WebhookSearchNotification LogSearchScheduleNotificationWebhookSearchNotificationPtrInput `pulumi:"webhookSearchNotification"`
}

func (LogSearchScheduleNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationArgs) ToLogSearchScheduleNotificationOutput() LogSearchScheduleNotificationOutput {
	return i.ToLogSearchScheduleNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationArgs) ToLogSearchScheduleNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationOutput)
}

func (i LogSearchScheduleNotificationArgs) ToLogSearchScheduleNotificationPtrOutput() LogSearchScheduleNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationArgs) ToLogSearchScheduleNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationOutput).ToLogSearchScheduleNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationArgs, LogSearchScheduleNotificationPtr and LogSearchScheduleNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationPtrOutput() LogSearchScheduleNotificationPtrOutput
	ToLogSearchScheduleNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationPtrOutput
}

type logSearchScheduleNotificationPtrType LogSearchScheduleNotificationArgs

func LogSearchScheduleNotificationPtr(v *LogSearchScheduleNotificationArgs) LogSearchScheduleNotificationPtrInput {
	return (*logSearchScheduleNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationPtrType) ToLogSearchScheduleNotificationPtrOutput() LogSearchScheduleNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationPtrType) ToLogSearchScheduleNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationPtrOutput)
}

type LogSearchScheduleNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationOutput) ToLogSearchScheduleNotificationOutput() LogSearchScheduleNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationOutput) ToLogSearchScheduleNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationOutput) ToLogSearchScheduleNotificationPtrOutput() LogSearchScheduleNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationOutput) ToLogSearchScheduleNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotification) *LogSearchScheduleNotification {
		return &v
	}).(LogSearchScheduleNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Run an script action. See
// alertSearchNotification schema for details.
func (o LogSearchScheduleNotificationOutput) AlertSearchNotification() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationAlertSearchNotification {
		return v.AlertSearchNotification
	}).(LogSearchScheduleNotificationAlertSearchNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Create a CSE signal with a scheduled search.
// See cseSignalNotification schema schema for details.
func (o LogSearchScheduleNotificationOutput) CseSignalNotification() LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationCseSignalNotification {
		return v.CseSignalNotification
	}).(LogSearchScheduleNotificationCseSignalNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Send an alert via email. See
// emailSearchNotification schema schema for details.
func (o LogSearchScheduleNotificationOutput) EmailSearchNotification() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationEmailSearchNotification {
		return v.EmailSearchNotification
	}).(LogSearchScheduleNotificationEmailSearchNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Save results to a Lookup Table. See
// saveToLookupNotification schema schema for details.
func (o LogSearchScheduleNotificationOutput) SaveToLookupNotification() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationSaveToLookupNotification {
		return v.SaveToLookupNotification
	}).(LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Save results to an index. See
// saveToViewNotification schema schema for details.
func (o LogSearchScheduleNotificationOutput) SaveToViewNotification() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationSaveToViewNotification {
		return v.SaveToViewNotification
	}).(LogSearchScheduleNotificationSaveToViewNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Send results to Service Now. See
// serviceNowSearchNotification schema schema for details.
func (o LogSearchScheduleNotificationOutput) ServiceNowSearchNotification() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationServiceNowSearchNotification {
		return v.ServiceNowSearchNotification
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Send an alert via Webhook. See
// webhookSearchNotification schema schema for details.
func (o LogSearchScheduleNotificationOutput) WebhookSearchNotification() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotification) *LogSearchScheduleNotificationWebhookSearchNotification {
		return v.WebhookSearchNotification
	}).(LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput)
}

type LogSearchScheduleNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationPtrOutput) ToLogSearchScheduleNotificationPtrOutput() LogSearchScheduleNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationPtrOutput) ToLogSearchScheduleNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationPtrOutput) Elem() LogSearchScheduleNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) LogSearchScheduleNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotification
		return ret
	}).(LogSearchScheduleNotificationOutput)
}

// (Block List, Max: 1, Optional) Run an script action. See
// alertSearchNotification schema for details.
func (o LogSearchScheduleNotificationPtrOutput) AlertSearchNotification() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationAlertSearchNotification {
		if v == nil {
			return nil
		}
		return v.AlertSearchNotification
	}).(LogSearchScheduleNotificationAlertSearchNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Create a CSE signal with a scheduled search.
// See cseSignalNotification schema schema for details.
func (o LogSearchScheduleNotificationPtrOutput) CseSignalNotification() LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationCseSignalNotification {
		if v == nil {
			return nil
		}
		return v.CseSignalNotification
	}).(LogSearchScheduleNotificationCseSignalNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Send an alert via email. See
// emailSearchNotification schema schema for details.
func (o LogSearchScheduleNotificationPtrOutput) EmailSearchNotification() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationEmailSearchNotification {
		if v == nil {
			return nil
		}
		return v.EmailSearchNotification
	}).(LogSearchScheduleNotificationEmailSearchNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Save results to a Lookup Table. See
// saveToLookupNotification schema schema for details.
func (o LogSearchScheduleNotificationPtrOutput) SaveToLookupNotification() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationSaveToLookupNotification {
		if v == nil {
			return nil
		}
		return v.SaveToLookupNotification
	}).(LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Save results to an index. See
// saveToViewNotification schema schema for details.
func (o LogSearchScheduleNotificationPtrOutput) SaveToViewNotification() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationSaveToViewNotification {
		if v == nil {
			return nil
		}
		return v.SaveToViewNotification
	}).(LogSearchScheduleNotificationSaveToViewNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Send results to Service Now. See
// serviceNowSearchNotification schema schema for details.
func (o LogSearchScheduleNotificationPtrOutput) ServiceNowSearchNotification() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationServiceNowSearchNotification {
		if v == nil {
			return nil
		}
		return v.ServiceNowSearchNotification
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput)
}

// (Block List, Max: 1, Optional) Send an alert via Webhook. See
// webhookSearchNotification schema schema for details.
func (o LogSearchScheduleNotificationPtrOutput) WebhookSearchNotification() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotification) *LogSearchScheduleNotificationWebhookSearchNotification {
		if v == nil {
			return nil
		}
		return v.WebhookSearchNotification
	}).(LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput)
}

type LogSearchScheduleNotificationAlertSearchNotification struct {
	// Identifier of the collector's source.
	SourceId string `pulumi:"sourceId"`
}

// LogSearchScheduleNotificationAlertSearchNotificationInput is an input type that accepts LogSearchScheduleNotificationAlertSearchNotificationArgs and LogSearchScheduleNotificationAlertSearchNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationAlertSearchNotificationInput` via:
//
//	LogSearchScheduleNotificationAlertSearchNotificationArgs{...}
type LogSearchScheduleNotificationAlertSearchNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationAlertSearchNotificationOutput() LogSearchScheduleNotificationAlertSearchNotificationOutput
	ToLogSearchScheduleNotificationAlertSearchNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationAlertSearchNotificationOutput
}

type LogSearchScheduleNotificationAlertSearchNotificationArgs struct {
	// Identifier of the collector's source.
	SourceId pulumi.StringInput `pulumi:"sourceId"`
}

func (LogSearchScheduleNotificationAlertSearchNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationAlertSearchNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationAlertSearchNotificationArgs) ToLogSearchScheduleNotificationAlertSearchNotificationOutput() LogSearchScheduleNotificationAlertSearchNotificationOutput {
	return i.ToLogSearchScheduleNotificationAlertSearchNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationAlertSearchNotificationArgs) ToLogSearchScheduleNotificationAlertSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationAlertSearchNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationAlertSearchNotificationOutput)
}

func (i LogSearchScheduleNotificationAlertSearchNotificationArgs) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutput() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationAlertSearchNotificationArgs) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationAlertSearchNotificationOutput).ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationAlertSearchNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationAlertSearchNotificationArgs, LogSearchScheduleNotificationAlertSearchNotificationPtr and LogSearchScheduleNotificationAlertSearchNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationAlertSearchNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationAlertSearchNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationAlertSearchNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutput() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput
	ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationAlertSearchNotificationPtrOutput
}

type logSearchScheduleNotificationAlertSearchNotificationPtrType LogSearchScheduleNotificationAlertSearchNotificationArgs

func LogSearchScheduleNotificationAlertSearchNotificationPtr(v *LogSearchScheduleNotificationAlertSearchNotificationArgs) LogSearchScheduleNotificationAlertSearchNotificationPtrInput {
	return (*logSearchScheduleNotificationAlertSearchNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationAlertSearchNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationAlertSearchNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationAlertSearchNotificationPtrType) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutput() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationAlertSearchNotificationPtrType) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationAlertSearchNotificationPtrOutput)
}

type LogSearchScheduleNotificationAlertSearchNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationAlertSearchNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationAlertSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationAlertSearchNotificationOutput) ToLogSearchScheduleNotificationAlertSearchNotificationOutput() LogSearchScheduleNotificationAlertSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationAlertSearchNotificationOutput) ToLogSearchScheduleNotificationAlertSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationAlertSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationAlertSearchNotificationOutput) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutput() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationAlertSearchNotificationOutput) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationAlertSearchNotification) *LogSearchScheduleNotificationAlertSearchNotification {
		return &v
	}).(LogSearchScheduleNotificationAlertSearchNotificationPtrOutput)
}

// Identifier of the collector's source.
func (o LogSearchScheduleNotificationAlertSearchNotificationOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationAlertSearchNotification) string { return v.SourceId }).(pulumi.StringOutput)
}

type LogSearchScheduleNotificationAlertSearchNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationAlertSearchNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationAlertSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationAlertSearchNotificationPtrOutput) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutput() LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationAlertSearchNotificationPtrOutput) ToLogSearchScheduleNotificationAlertSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationAlertSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationAlertSearchNotificationPtrOutput) Elem() LogSearchScheduleNotificationAlertSearchNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationAlertSearchNotification) LogSearchScheduleNotificationAlertSearchNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationAlertSearchNotification
		return ret
	}).(LogSearchScheduleNotificationAlertSearchNotificationOutput)
}

// Identifier of the collector's source.
func (o LogSearchScheduleNotificationAlertSearchNotificationPtrOutput) SourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationAlertSearchNotification) *string {
		if v == nil {
			return nil
		}
		return &v.SourceId
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleNotificationCseSignalNotification struct {
	// Name of the Cloud SIEM Enterprise Record to be created.
	RecordType string `pulumi:"recordType"`
}

// LogSearchScheduleNotificationCseSignalNotificationInput is an input type that accepts LogSearchScheduleNotificationCseSignalNotificationArgs and LogSearchScheduleNotificationCseSignalNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationCseSignalNotificationInput` via:
//
//	LogSearchScheduleNotificationCseSignalNotificationArgs{...}
type LogSearchScheduleNotificationCseSignalNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationCseSignalNotificationOutput() LogSearchScheduleNotificationCseSignalNotificationOutput
	ToLogSearchScheduleNotificationCseSignalNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationCseSignalNotificationOutput
}

type LogSearchScheduleNotificationCseSignalNotificationArgs struct {
	// Name of the Cloud SIEM Enterprise Record to be created.
	RecordType pulumi.StringInput `pulumi:"recordType"`
}

func (LogSearchScheduleNotificationCseSignalNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationCseSignalNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationCseSignalNotificationArgs) ToLogSearchScheduleNotificationCseSignalNotificationOutput() LogSearchScheduleNotificationCseSignalNotificationOutput {
	return i.ToLogSearchScheduleNotificationCseSignalNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationCseSignalNotificationArgs) ToLogSearchScheduleNotificationCseSignalNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationCseSignalNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationCseSignalNotificationOutput)
}

func (i LogSearchScheduleNotificationCseSignalNotificationArgs) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutput() LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationCseSignalNotificationArgs) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationCseSignalNotificationOutput).ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationCseSignalNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationCseSignalNotificationArgs, LogSearchScheduleNotificationCseSignalNotificationPtr and LogSearchScheduleNotificationCseSignalNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationCseSignalNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationCseSignalNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationCseSignalNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationCseSignalNotificationPtrOutput() LogSearchScheduleNotificationCseSignalNotificationPtrOutput
	ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationCseSignalNotificationPtrOutput
}

type logSearchScheduleNotificationCseSignalNotificationPtrType LogSearchScheduleNotificationCseSignalNotificationArgs

func LogSearchScheduleNotificationCseSignalNotificationPtr(v *LogSearchScheduleNotificationCseSignalNotificationArgs) LogSearchScheduleNotificationCseSignalNotificationPtrInput {
	return (*logSearchScheduleNotificationCseSignalNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationCseSignalNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationCseSignalNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationCseSignalNotificationPtrType) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutput() LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationCseSignalNotificationPtrType) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationCseSignalNotificationPtrOutput)
}

type LogSearchScheduleNotificationCseSignalNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationCseSignalNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationCseSignalNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationCseSignalNotificationOutput) ToLogSearchScheduleNotificationCseSignalNotificationOutput() LogSearchScheduleNotificationCseSignalNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationCseSignalNotificationOutput) ToLogSearchScheduleNotificationCseSignalNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationCseSignalNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationCseSignalNotificationOutput) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutput() LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationCseSignalNotificationOutput) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationCseSignalNotification) *LogSearchScheduleNotificationCseSignalNotification {
		return &v
	}).(LogSearchScheduleNotificationCseSignalNotificationPtrOutput)
}

// Name of the Cloud SIEM Enterprise Record to be created.
func (o LogSearchScheduleNotificationCseSignalNotificationOutput) RecordType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationCseSignalNotification) string { return v.RecordType }).(pulumi.StringOutput)
}

type LogSearchScheduleNotificationCseSignalNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationCseSignalNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationCseSignalNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationCseSignalNotificationPtrOutput) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutput() LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationCseSignalNotificationPtrOutput) ToLogSearchScheduleNotificationCseSignalNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationCseSignalNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationCseSignalNotificationPtrOutput) Elem() LogSearchScheduleNotificationCseSignalNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationCseSignalNotification) LogSearchScheduleNotificationCseSignalNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationCseSignalNotification
		return ret
	}).(LogSearchScheduleNotificationCseSignalNotificationOutput)
}

// Name of the Cloud SIEM Enterprise Record to be created.
func (o LogSearchScheduleNotificationCseSignalNotificationPtrOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationCseSignalNotification) *string {
		if v == nil {
			return nil
		}
		return &v.RecordType
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleNotificationEmailSearchNotification struct {
	// If the search results should be included in the notification email
	// as a CSV attachment.
	IncludeCsvAttachment *bool `pulumi:"includeCsvAttachment"`
	// If the search result histogram should be included in the notification email.
	IncludeHistogram *bool `pulumi:"includeHistogram"`
	// If the search query should be included in the notification email.
	IncludeQuery *bool `pulumi:"includeQuery"`
	// If the search result set should be included in the notification email.
	IncludeResultSet *bool `pulumi:"includeResultSet"`
	// Subject of the email. If the notification is scheduled with a threshold,
	// the default subject template will be `Search Alert: {{AlertCondition}} results found for {{SearchName}}`.
	// For email notifications without a threshold, the default subject template is `Search Results: {{SearchName}}`.
	SubjectTemplate *string `pulumi:"subjectTemplate"`
	// (Block List, Required) A list of email recipients.
	ToLists []string `pulumi:"toLists"`
}

// LogSearchScheduleNotificationEmailSearchNotificationInput is an input type that accepts LogSearchScheduleNotificationEmailSearchNotificationArgs and LogSearchScheduleNotificationEmailSearchNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationEmailSearchNotificationInput` via:
//
//	LogSearchScheduleNotificationEmailSearchNotificationArgs{...}
type LogSearchScheduleNotificationEmailSearchNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationEmailSearchNotificationOutput() LogSearchScheduleNotificationEmailSearchNotificationOutput
	ToLogSearchScheduleNotificationEmailSearchNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationEmailSearchNotificationOutput
}

type LogSearchScheduleNotificationEmailSearchNotificationArgs struct {
	// If the search results should be included in the notification email
	// as a CSV attachment.
	IncludeCsvAttachment pulumi.BoolPtrInput `pulumi:"includeCsvAttachment"`
	// If the search result histogram should be included in the notification email.
	IncludeHistogram pulumi.BoolPtrInput `pulumi:"includeHistogram"`
	// If the search query should be included in the notification email.
	IncludeQuery pulumi.BoolPtrInput `pulumi:"includeQuery"`
	// If the search result set should be included in the notification email.
	IncludeResultSet pulumi.BoolPtrInput `pulumi:"includeResultSet"`
	// Subject of the email. If the notification is scheduled with a threshold,
	// the default subject template will be `Search Alert: {{AlertCondition}} results found for {{SearchName}}`.
	// For email notifications without a threshold, the default subject template is `Search Results: {{SearchName}}`.
	SubjectTemplate pulumi.StringPtrInput `pulumi:"subjectTemplate"`
	// (Block List, Required) A list of email recipients.
	ToLists pulumi.StringArrayInput `pulumi:"toLists"`
}

func (LogSearchScheduleNotificationEmailSearchNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationEmailSearchNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationEmailSearchNotificationArgs) ToLogSearchScheduleNotificationEmailSearchNotificationOutput() LogSearchScheduleNotificationEmailSearchNotificationOutput {
	return i.ToLogSearchScheduleNotificationEmailSearchNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationEmailSearchNotificationArgs) ToLogSearchScheduleNotificationEmailSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationEmailSearchNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationEmailSearchNotificationOutput)
}

func (i LogSearchScheduleNotificationEmailSearchNotificationArgs) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutput() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationEmailSearchNotificationArgs) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationEmailSearchNotificationOutput).ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationEmailSearchNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationEmailSearchNotificationArgs, LogSearchScheduleNotificationEmailSearchNotificationPtr and LogSearchScheduleNotificationEmailSearchNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationEmailSearchNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationEmailSearchNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationEmailSearchNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutput() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput
	ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationEmailSearchNotificationPtrOutput
}

type logSearchScheduleNotificationEmailSearchNotificationPtrType LogSearchScheduleNotificationEmailSearchNotificationArgs

func LogSearchScheduleNotificationEmailSearchNotificationPtr(v *LogSearchScheduleNotificationEmailSearchNotificationArgs) LogSearchScheduleNotificationEmailSearchNotificationPtrInput {
	return (*logSearchScheduleNotificationEmailSearchNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationEmailSearchNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationEmailSearchNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationEmailSearchNotificationPtrType) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutput() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationEmailSearchNotificationPtrType) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationEmailSearchNotificationPtrOutput)
}

type LogSearchScheduleNotificationEmailSearchNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationEmailSearchNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationEmailSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) ToLogSearchScheduleNotificationEmailSearchNotificationOutput() LogSearchScheduleNotificationEmailSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) ToLogSearchScheduleNotificationEmailSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationEmailSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutput() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationEmailSearchNotification) *LogSearchScheduleNotificationEmailSearchNotification {
		return &v
	}).(LogSearchScheduleNotificationEmailSearchNotificationPtrOutput)
}

// If the search results should be included in the notification email
// as a CSV attachment.
func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) IncludeCsvAttachment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationEmailSearchNotification) *bool { return v.IncludeCsvAttachment }).(pulumi.BoolPtrOutput)
}

// If the search result histogram should be included in the notification email.
func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) IncludeHistogram() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationEmailSearchNotification) *bool { return v.IncludeHistogram }).(pulumi.BoolPtrOutput)
}

// If the search query should be included in the notification email.
func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationEmailSearchNotification) *bool { return v.IncludeQuery }).(pulumi.BoolPtrOutput)
}

// If the search result set should be included in the notification email.
func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) IncludeResultSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationEmailSearchNotification) *bool { return v.IncludeResultSet }).(pulumi.BoolPtrOutput)
}

// Subject of the email. If the notification is scheduled with a threshold,
// the default subject template will be `Search Alert: {{AlertCondition}} results found for {{SearchName}}`.
// For email notifications without a threshold, the default subject template is `Search Results: {{SearchName}}`.
func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) SubjectTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationEmailSearchNotification) *string { return v.SubjectTemplate }).(pulumi.StringPtrOutput)
}

// (Block List, Required) A list of email recipients.
func (o LogSearchScheduleNotificationEmailSearchNotificationOutput) ToLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationEmailSearchNotification) []string { return v.ToLists }).(pulumi.StringArrayOutput)
}

type LogSearchScheduleNotificationEmailSearchNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationEmailSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutput() LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) ToLogSearchScheduleNotificationEmailSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationEmailSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) Elem() LogSearchScheduleNotificationEmailSearchNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) LogSearchScheduleNotificationEmailSearchNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationEmailSearchNotification
		return ret
	}).(LogSearchScheduleNotificationEmailSearchNotificationOutput)
}

// If the search results should be included in the notification email
// as a CSV attachment.
func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) IncludeCsvAttachment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCsvAttachment
	}).(pulumi.BoolPtrOutput)
}

// If the search result histogram should be included in the notification email.
func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) IncludeHistogram() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeHistogram
	}).(pulumi.BoolPtrOutput)
}

// If the search query should be included in the notification email.
func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) IncludeQuery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeQuery
	}).(pulumi.BoolPtrOutput)
}

// If the search result set should be included in the notification email.
func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) IncludeResultSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeResultSet
	}).(pulumi.BoolPtrOutput)
}

// Subject of the email. If the notification is scheduled with a threshold,
// the default subject template will be `Search Alert: {{AlertCondition}} results found for {{SearchName}}`.
// For email notifications without a threshold, the default subject template is `Search Results: {{SearchName}}`.
func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) SubjectTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) *string {
		if v == nil {
			return nil
		}
		return v.SubjectTemplate
	}).(pulumi.StringPtrOutput)
}

// (Block List, Required) A list of email recipients.
func (o LogSearchScheduleNotificationEmailSearchNotificationPtrOutput) ToLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationEmailSearchNotification) []string {
		if v == nil {
			return nil
		}
		return v.ToLists
	}).(pulumi.StringArrayOutput)
}

type LogSearchScheduleNotificationSaveToLookupNotification struct {
	// Whether to merge the file contents with existing data in the lookup table.
	IsLookupMergeOperation bool `pulumi:"isLookupMergeOperation"`
	// Path of the lookup table to save the results to.
	LookupFilePath string `pulumi:"lookupFilePath"`
}

// LogSearchScheduleNotificationSaveToLookupNotificationInput is an input type that accepts LogSearchScheduleNotificationSaveToLookupNotificationArgs and LogSearchScheduleNotificationSaveToLookupNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationSaveToLookupNotificationInput` via:
//
//	LogSearchScheduleNotificationSaveToLookupNotificationArgs{...}
type LogSearchScheduleNotificationSaveToLookupNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationSaveToLookupNotificationOutput() LogSearchScheduleNotificationSaveToLookupNotificationOutput
	ToLogSearchScheduleNotificationSaveToLookupNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationSaveToLookupNotificationOutput
}

type LogSearchScheduleNotificationSaveToLookupNotificationArgs struct {
	// Whether to merge the file contents with existing data in the lookup table.
	IsLookupMergeOperation pulumi.BoolInput `pulumi:"isLookupMergeOperation"`
	// Path of the lookup table to save the results to.
	LookupFilePath pulumi.StringInput `pulumi:"lookupFilePath"`
}

func (LogSearchScheduleNotificationSaveToLookupNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationSaveToLookupNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationSaveToLookupNotificationArgs) ToLogSearchScheduleNotificationSaveToLookupNotificationOutput() LogSearchScheduleNotificationSaveToLookupNotificationOutput {
	return i.ToLogSearchScheduleNotificationSaveToLookupNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationSaveToLookupNotificationArgs) ToLogSearchScheduleNotificationSaveToLookupNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToLookupNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationSaveToLookupNotificationOutput)
}

func (i LogSearchScheduleNotificationSaveToLookupNotificationArgs) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutput() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationSaveToLookupNotificationArgs) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationSaveToLookupNotificationOutput).ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationSaveToLookupNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationSaveToLookupNotificationArgs, LogSearchScheduleNotificationSaveToLookupNotificationPtr and LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationSaveToLookupNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationSaveToLookupNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationSaveToLookupNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutput() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput
	ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput
}

type logSearchScheduleNotificationSaveToLookupNotificationPtrType LogSearchScheduleNotificationSaveToLookupNotificationArgs

func LogSearchScheduleNotificationSaveToLookupNotificationPtr(v *LogSearchScheduleNotificationSaveToLookupNotificationArgs) LogSearchScheduleNotificationSaveToLookupNotificationPtrInput {
	return (*logSearchScheduleNotificationSaveToLookupNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationSaveToLookupNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationSaveToLookupNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationSaveToLookupNotificationPtrType) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutput() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationSaveToLookupNotificationPtrType) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput)
}

type LogSearchScheduleNotificationSaveToLookupNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationSaveToLookupNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationSaveToLookupNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationOutput) ToLogSearchScheduleNotificationSaveToLookupNotificationOutput() LogSearchScheduleNotificationSaveToLookupNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationOutput) ToLogSearchScheduleNotificationSaveToLookupNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToLookupNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationOutput) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutput() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationOutput) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationSaveToLookupNotification) *LogSearchScheduleNotificationSaveToLookupNotification {
		return &v
	}).(LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput)
}

// Whether to merge the file contents with existing data in the lookup table.
func (o LogSearchScheduleNotificationSaveToLookupNotificationOutput) IsLookupMergeOperation() pulumi.BoolOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationSaveToLookupNotification) bool { return v.IsLookupMergeOperation }).(pulumi.BoolOutput)
}

// Path of the lookup table to save the results to.
func (o LogSearchScheduleNotificationSaveToLookupNotificationOutput) LookupFilePath() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationSaveToLookupNotification) string { return v.LookupFilePath }).(pulumi.StringOutput)
}

type LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationSaveToLookupNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutput() LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput) ToLogSearchScheduleNotificationSaveToLookupNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput) Elem() LogSearchScheduleNotificationSaveToLookupNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationSaveToLookupNotification) LogSearchScheduleNotificationSaveToLookupNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationSaveToLookupNotification
		return ret
	}).(LogSearchScheduleNotificationSaveToLookupNotificationOutput)
}

// Whether to merge the file contents with existing data in the lookup table.
func (o LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput) IsLookupMergeOperation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationSaveToLookupNotification) *bool {
		if v == nil {
			return nil
		}
		return &v.IsLookupMergeOperation
	}).(pulumi.BoolPtrOutput)
}

// Path of the lookup table to save the results to.
func (o LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput) LookupFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationSaveToLookupNotification) *string {
		if v == nil {
			return nil
		}
		return &v.LookupFilePath
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleNotificationSaveToViewNotification struct {
	// Name of the View(Index) to save the results to.
	ViewName string `pulumi:"viewName"`
}

// LogSearchScheduleNotificationSaveToViewNotificationInput is an input type that accepts LogSearchScheduleNotificationSaveToViewNotificationArgs and LogSearchScheduleNotificationSaveToViewNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationSaveToViewNotificationInput` via:
//
//	LogSearchScheduleNotificationSaveToViewNotificationArgs{...}
type LogSearchScheduleNotificationSaveToViewNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationSaveToViewNotificationOutput() LogSearchScheduleNotificationSaveToViewNotificationOutput
	ToLogSearchScheduleNotificationSaveToViewNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationSaveToViewNotificationOutput
}

type LogSearchScheduleNotificationSaveToViewNotificationArgs struct {
	// Name of the View(Index) to save the results to.
	ViewName pulumi.StringInput `pulumi:"viewName"`
}

func (LogSearchScheduleNotificationSaveToViewNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationSaveToViewNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationSaveToViewNotificationArgs) ToLogSearchScheduleNotificationSaveToViewNotificationOutput() LogSearchScheduleNotificationSaveToViewNotificationOutput {
	return i.ToLogSearchScheduleNotificationSaveToViewNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationSaveToViewNotificationArgs) ToLogSearchScheduleNotificationSaveToViewNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToViewNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationSaveToViewNotificationOutput)
}

func (i LogSearchScheduleNotificationSaveToViewNotificationArgs) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutput() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationSaveToViewNotificationArgs) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationSaveToViewNotificationOutput).ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationSaveToViewNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationSaveToViewNotificationArgs, LogSearchScheduleNotificationSaveToViewNotificationPtr and LogSearchScheduleNotificationSaveToViewNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationSaveToViewNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationSaveToViewNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationSaveToViewNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutput() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput
	ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationSaveToViewNotificationPtrOutput
}

type logSearchScheduleNotificationSaveToViewNotificationPtrType LogSearchScheduleNotificationSaveToViewNotificationArgs

func LogSearchScheduleNotificationSaveToViewNotificationPtr(v *LogSearchScheduleNotificationSaveToViewNotificationArgs) LogSearchScheduleNotificationSaveToViewNotificationPtrInput {
	return (*logSearchScheduleNotificationSaveToViewNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationSaveToViewNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationSaveToViewNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationSaveToViewNotificationPtrType) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutput() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationSaveToViewNotificationPtrType) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationSaveToViewNotificationPtrOutput)
}

type LogSearchScheduleNotificationSaveToViewNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationSaveToViewNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationSaveToViewNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationSaveToViewNotificationOutput) ToLogSearchScheduleNotificationSaveToViewNotificationOutput() LogSearchScheduleNotificationSaveToViewNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToViewNotificationOutput) ToLogSearchScheduleNotificationSaveToViewNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToViewNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToViewNotificationOutput) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutput() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationSaveToViewNotificationOutput) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationSaveToViewNotification) *LogSearchScheduleNotificationSaveToViewNotification {
		return &v
	}).(LogSearchScheduleNotificationSaveToViewNotificationPtrOutput)
}

// Name of the View(Index) to save the results to.
func (o LogSearchScheduleNotificationSaveToViewNotificationOutput) ViewName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationSaveToViewNotification) string { return v.ViewName }).(pulumi.StringOutput)
}

type LogSearchScheduleNotificationSaveToViewNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationSaveToViewNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationSaveToViewNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationSaveToViewNotificationPtrOutput) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutput() LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToViewNotificationPtrOutput) ToLogSearchScheduleNotificationSaveToViewNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationSaveToViewNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationSaveToViewNotificationPtrOutput) Elem() LogSearchScheduleNotificationSaveToViewNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationSaveToViewNotification) LogSearchScheduleNotificationSaveToViewNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationSaveToViewNotification
		return ret
	}).(LogSearchScheduleNotificationSaveToViewNotificationOutput)
}

// Name of the View(Index) to save the results to.
func (o LogSearchScheduleNotificationSaveToViewNotificationPtrOutput) ViewName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationSaveToViewNotification) *string {
		if v == nil {
			return nil
		}
		return &v.ViewName
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleNotificationServiceNowSearchNotification struct {
	// Service Now Identifier.
	ExternalId string `pulumi:"externalId"`
	// (Block List, Optional) Service Now fields.
	Fields *LogSearchScheduleNotificationServiceNowSearchNotificationFields `pulumi:"fields"`
}

// LogSearchScheduleNotificationServiceNowSearchNotificationInput is an input type that accepts LogSearchScheduleNotificationServiceNowSearchNotificationArgs and LogSearchScheduleNotificationServiceNowSearchNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationServiceNowSearchNotificationInput` via:
//
//	LogSearchScheduleNotificationServiceNowSearchNotificationArgs{...}
type LogSearchScheduleNotificationServiceNowSearchNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationServiceNowSearchNotificationOutput() LogSearchScheduleNotificationServiceNowSearchNotificationOutput
	ToLogSearchScheduleNotificationServiceNowSearchNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationOutput
}

type LogSearchScheduleNotificationServiceNowSearchNotificationArgs struct {
	// Service Now Identifier.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// (Block List, Optional) Service Now fields.
	Fields LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrInput `pulumi:"fields"`
}

func (LogSearchScheduleNotificationServiceNowSearchNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationOutput() LogSearchScheduleNotificationServiceNowSearchNotificationOutput {
	return i.ToLogSearchScheduleNotificationServiceNowSearchNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationServiceNowSearchNotificationOutput)
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationServiceNowSearchNotificationOutput).ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationServiceNowSearchNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationServiceNowSearchNotificationArgs, LogSearchScheduleNotificationServiceNowSearchNotificationPtr and LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationServiceNowSearchNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationServiceNowSearchNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationServiceNowSearchNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput
	ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput
}

type logSearchScheduleNotificationServiceNowSearchNotificationPtrType LogSearchScheduleNotificationServiceNowSearchNotificationArgs

func LogSearchScheduleNotificationServiceNowSearchNotificationPtr(v *LogSearchScheduleNotificationServiceNowSearchNotificationArgs) LogSearchScheduleNotificationServiceNowSearchNotificationPtrInput {
	return (*logSearchScheduleNotificationServiceNowSearchNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationServiceNowSearchNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationServiceNowSearchNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationServiceNowSearchNotificationPtrType) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationServiceNowSearchNotificationPtrType) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput)
}

type LogSearchScheduleNotificationServiceNowSearchNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationServiceNowSearchNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationOutput() LogSearchScheduleNotificationServiceNowSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationServiceNowSearchNotification) *LogSearchScheduleNotificationServiceNowSearchNotification {
		return &v
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput)
}

// Service Now Identifier.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationServiceNowSearchNotification) string { return v.ExternalId }).(pulumi.StringOutput)
}

// (Block List, Optional) Service Now fields.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationOutput) Fields() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationServiceNowSearchNotification) *LogSearchScheduleNotificationServiceNowSearchNotificationFields {
		return v.Fields
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput)
}

type LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationServiceNowSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput) Elem() LogSearchScheduleNotificationServiceNowSearchNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotification) LogSearchScheduleNotificationServiceNowSearchNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationServiceNowSearchNotification
		return ret
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationOutput)
}

// Service Now Identifier.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotification) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// (Block List, Optional) Service Now fields.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput) Fields() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotification) *LogSearchScheduleNotificationServiceNowSearchNotificationFields {
		if v == nil {
			return nil
		}
		return v.Fields
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput)
}

type LogSearchScheduleNotificationServiceNowSearchNotificationFields struct {
	// The category that the event source uses to identify the event.
	EventType *string `pulumi:"eventType"`
	// The physical or virtual device on which the event occurred.
	Node *string `pulumi:"node"`
	// The component on the node to which the event applies.
	Resource *string `pulumi:"resource"`
	// An integer value representing the severity of the alert. Supported values are:
	// * 0 for Clear
	// * 1 for Critical
	// * 2 for Major
	// * 3 for Minor
	// * 4 for Warning
	Severity *int `pulumi:"severity"`
}

// LogSearchScheduleNotificationServiceNowSearchNotificationFieldsInput is an input type that accepts LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs and LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationServiceNowSearchNotificationFieldsInput` via:
//
//	LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs{...}
type LogSearchScheduleNotificationServiceNowSearchNotificationFieldsInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput
	ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutputWithContext(context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput
}

type LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs struct {
	// The category that the event source uses to identify the event.
	EventType pulumi.StringPtrInput `pulumi:"eventType"`
	// The physical or virtual device on which the event occurred.
	Node pulumi.StringPtrInput `pulumi:"node"`
	// The component on the node to which the event applies.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// An integer value representing the severity of the alert. Supported values are:
	// * 0 for Clear
	// * 1 for Critical
	// * 2 for Major
	// * 3 for Minor
	// * 4 for Warning
	Severity pulumi.IntPtrInput `pulumi:"severity"`
}

func (LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotificationFields)(nil)).Elem()
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput {
	return i.ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput)
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return i.ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput).ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrInput is an input type that accepts LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs, LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtr and LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrInput` via:
//
//	        LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput
	ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput
}

type logSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrType LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs

func LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtr(v *LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrInput {
	return (*logSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrType)(v)
}

func (*logSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationServiceNowSearchNotificationFields)(nil)).Elem()
}

func (i *logSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrType) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return i.ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrType) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput)
}

type LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotificationFields)(nil)).Elem()
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return o.ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationServiceNowSearchNotificationFields) *LogSearchScheduleNotificationServiceNowSearchNotificationFields {
		return &v
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput)
}

// The category that the event source uses to identify the event.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationServiceNowSearchNotificationFields) *string { return v.EventType }).(pulumi.StringPtrOutput)
}

// The physical or virtual device on which the event occurred.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) Node() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationServiceNowSearchNotificationFields) *string { return v.Node }).(pulumi.StringPtrOutput)
}

// The component on the node to which the event applies.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationServiceNowSearchNotificationFields) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// An integer value representing the severity of the alert. Supported values are:
// * 0 for Clear
// * 1 for Critical
// * 2 for Major
// * 3 for Minor
// * 4 for Warning
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationServiceNowSearchNotificationFields) *int { return v.Severity }).(pulumi.IntPtrOutput)
}

type LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationServiceNowSearchNotificationFields)(nil)).Elem()
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) ToLogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) Elem() LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotificationFields) LogSearchScheduleNotificationServiceNowSearchNotificationFields {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationServiceNowSearchNotificationFields
		return ret
	}).(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput)
}

// The category that the event source uses to identify the event.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotificationFields) *string {
		if v == nil {
			return nil
		}
		return v.EventType
	}).(pulumi.StringPtrOutput)
}

// The physical or virtual device on which the event occurred.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) Node() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotificationFields) *string {
		if v == nil {
			return nil
		}
		return v.Node
	}).(pulumi.StringPtrOutput)
}

// The component on the node to which the event applies.
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotificationFields) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// An integer value representing the severity of the alert. Supported values are:
// * 0 for Clear
// * 1 for Critical
// * 2 for Major
// * 3 for Minor
// * 4 for Warning
func (o LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput) Severity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationServiceNowSearchNotificationFields) *int {
		if v == nil {
			return nil
		}
		return v.Severity
	}).(pulumi.IntPtrOutput)
}

type LogSearchScheduleNotificationWebhookSearchNotification struct {
	// If set to true, one webhook per result will be sent when the trigger conditions are met.
	ItemizeAlerts *bool `pulumi:"itemizeAlerts"`
	// The maximum number of results for which we send separate alerts.
	MaxItemizedAlerts *int `pulumi:"maxItemizedAlerts"`
	// A JSON object in the format required by the target WebHook URL.
	Payload *string `pulumi:"payload"`
	// Identifier of the webhook connection.
	WebhookId string `pulumi:"webhookId"`
}

// LogSearchScheduleNotificationWebhookSearchNotificationInput is an input type that accepts LogSearchScheduleNotificationWebhookSearchNotificationArgs and LogSearchScheduleNotificationWebhookSearchNotificationOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationWebhookSearchNotificationInput` via:
//
//	LogSearchScheduleNotificationWebhookSearchNotificationArgs{...}
type LogSearchScheduleNotificationWebhookSearchNotificationInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationWebhookSearchNotificationOutput() LogSearchScheduleNotificationWebhookSearchNotificationOutput
	ToLogSearchScheduleNotificationWebhookSearchNotificationOutputWithContext(context.Context) LogSearchScheduleNotificationWebhookSearchNotificationOutput
}

type LogSearchScheduleNotificationWebhookSearchNotificationArgs struct {
	// If set to true, one webhook per result will be sent when the trigger conditions are met.
	ItemizeAlerts pulumi.BoolPtrInput `pulumi:"itemizeAlerts"`
	// The maximum number of results for which we send separate alerts.
	MaxItemizedAlerts pulumi.IntPtrInput `pulumi:"maxItemizedAlerts"`
	// A JSON object in the format required by the target WebHook URL.
	Payload pulumi.StringPtrInput `pulumi:"payload"`
	// Identifier of the webhook connection.
	WebhookId pulumi.StringInput `pulumi:"webhookId"`
}

func (LogSearchScheduleNotificationWebhookSearchNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationWebhookSearchNotification)(nil)).Elem()
}

func (i LogSearchScheduleNotificationWebhookSearchNotificationArgs) ToLogSearchScheduleNotificationWebhookSearchNotificationOutput() LogSearchScheduleNotificationWebhookSearchNotificationOutput {
	return i.ToLogSearchScheduleNotificationWebhookSearchNotificationOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationWebhookSearchNotificationArgs) ToLogSearchScheduleNotificationWebhookSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationWebhookSearchNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationWebhookSearchNotificationOutput)
}

func (i LogSearchScheduleNotificationWebhookSearchNotificationArgs) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutput() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleNotificationWebhookSearchNotificationArgs) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationWebhookSearchNotificationOutput).ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(ctx)
}

// LogSearchScheduleNotificationWebhookSearchNotificationPtrInput is an input type that accepts LogSearchScheduleNotificationWebhookSearchNotificationArgs, LogSearchScheduleNotificationWebhookSearchNotificationPtr and LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleNotificationWebhookSearchNotificationPtrInput` via:
//
//	        LogSearchScheduleNotificationWebhookSearchNotificationArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleNotificationWebhookSearchNotificationPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutput() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput
	ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(context.Context) LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput
}

type logSearchScheduleNotificationWebhookSearchNotificationPtrType LogSearchScheduleNotificationWebhookSearchNotificationArgs

func LogSearchScheduleNotificationWebhookSearchNotificationPtr(v *LogSearchScheduleNotificationWebhookSearchNotificationArgs) LogSearchScheduleNotificationWebhookSearchNotificationPtrInput {
	return (*logSearchScheduleNotificationWebhookSearchNotificationPtrType)(v)
}

func (*logSearchScheduleNotificationWebhookSearchNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationWebhookSearchNotification)(nil)).Elem()
}

func (i *logSearchScheduleNotificationWebhookSearchNotificationPtrType) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutput() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return i.ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleNotificationWebhookSearchNotificationPtrType) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput)
}

type LogSearchScheduleNotificationWebhookSearchNotificationOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationWebhookSearchNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleNotificationWebhookSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) ToLogSearchScheduleNotificationWebhookSearchNotificationOutput() LogSearchScheduleNotificationWebhookSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) ToLogSearchScheduleNotificationWebhookSearchNotificationOutputWithContext(ctx context.Context) LogSearchScheduleNotificationWebhookSearchNotificationOutput {
	return o
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutput() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return o.ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleNotificationWebhookSearchNotification) *LogSearchScheduleNotificationWebhookSearchNotification {
		return &v
	}).(LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput)
}

// If set to true, one webhook per result will be sent when the trigger conditions are met.
func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) ItemizeAlerts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationWebhookSearchNotification) *bool { return v.ItemizeAlerts }).(pulumi.BoolPtrOutput)
}

// The maximum number of results for which we send separate alerts.
func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) MaxItemizedAlerts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationWebhookSearchNotification) *int { return v.MaxItemizedAlerts }).(pulumi.IntPtrOutput)
}

// A JSON object in the format required by the target WebHook URL.
func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationWebhookSearchNotification) *string { return v.Payload }).(pulumi.StringPtrOutput)
}

// Identifier of the webhook connection.
func (o LogSearchScheduleNotificationWebhookSearchNotificationOutput) WebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleNotificationWebhookSearchNotification) string { return v.WebhookId }).(pulumi.StringOutput)
}

type LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleNotificationWebhookSearchNotification)(nil)).Elem()
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutput() LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) ToLogSearchScheduleNotificationWebhookSearchNotificationPtrOutputWithContext(ctx context.Context) LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput {
	return o
}

func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) Elem() LogSearchScheduleNotificationWebhookSearchNotificationOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationWebhookSearchNotification) LogSearchScheduleNotificationWebhookSearchNotification {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleNotificationWebhookSearchNotification
		return ret
	}).(LogSearchScheduleNotificationWebhookSearchNotificationOutput)
}

// If set to true, one webhook per result will be sent when the trigger conditions are met.
func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) ItemizeAlerts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationWebhookSearchNotification) *bool {
		if v == nil {
			return nil
		}
		return v.ItemizeAlerts
	}).(pulumi.BoolPtrOutput)
}

// The maximum number of results for which we send separate alerts.
func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) MaxItemizedAlerts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationWebhookSearchNotification) *int {
		if v == nil {
			return nil
		}
		return v.MaxItemizedAlerts
	}).(pulumi.IntPtrOutput)
}

// A JSON object in the format required by the target WebHook URL.
func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationWebhookSearchNotification) *string {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.StringPtrOutput)
}

// Identifier of the webhook connection.
func (o LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput) WebhookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleNotificationWebhookSearchNotification) *string {
		if v == nil {
			return nil
		}
		return &v.WebhookId
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParameter struct {
	// Name of the search.
	Name string `pulumi:"name"`
	// The default value for the parameter. It should be compatible with the type set in the `dataType` field.
	Value string `pulumi:"value"`
}

// LogSearchScheduleParameterInput is an input type that accepts LogSearchScheduleParameterArgs and LogSearchScheduleParameterOutput values.
// You can construct a concrete instance of `LogSearchScheduleParameterInput` via:
//
//	LogSearchScheduleParameterArgs{...}
type LogSearchScheduleParameterInput interface {
	pulumi.Input

	ToLogSearchScheduleParameterOutput() LogSearchScheduleParameterOutput
	ToLogSearchScheduleParameterOutputWithContext(context.Context) LogSearchScheduleParameterOutput
}

type LogSearchScheduleParameterArgs struct {
	// Name of the search.
	Name pulumi.StringInput `pulumi:"name"`
	// The default value for the parameter. It should be compatible with the type set in the `dataType` field.
	Value pulumi.StringInput `pulumi:"value"`
}

func (LogSearchScheduleParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParameter)(nil)).Elem()
}

func (i LogSearchScheduleParameterArgs) ToLogSearchScheduleParameterOutput() LogSearchScheduleParameterOutput {
	return i.ToLogSearchScheduleParameterOutputWithContext(context.Background())
}

func (i LogSearchScheduleParameterArgs) ToLogSearchScheduleParameterOutputWithContext(ctx context.Context) LogSearchScheduleParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParameterOutput)
}

// LogSearchScheduleParameterArrayInput is an input type that accepts LogSearchScheduleParameterArray and LogSearchScheduleParameterArrayOutput values.
// You can construct a concrete instance of `LogSearchScheduleParameterArrayInput` via:
//
//	LogSearchScheduleParameterArray{ LogSearchScheduleParameterArgs{...} }
type LogSearchScheduleParameterArrayInput interface {
	pulumi.Input

	ToLogSearchScheduleParameterArrayOutput() LogSearchScheduleParameterArrayOutput
	ToLogSearchScheduleParameterArrayOutputWithContext(context.Context) LogSearchScheduleParameterArrayOutput
}

type LogSearchScheduleParameterArray []LogSearchScheduleParameterInput

func (LogSearchScheduleParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSearchScheduleParameter)(nil)).Elem()
}

func (i LogSearchScheduleParameterArray) ToLogSearchScheduleParameterArrayOutput() LogSearchScheduleParameterArrayOutput {
	return i.ToLogSearchScheduleParameterArrayOutputWithContext(context.Background())
}

func (i LogSearchScheduleParameterArray) ToLogSearchScheduleParameterArrayOutputWithContext(ctx context.Context) LogSearchScheduleParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParameterArrayOutput)
}

type LogSearchScheduleParameterOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParameter)(nil)).Elem()
}

func (o LogSearchScheduleParameterOutput) ToLogSearchScheduleParameterOutput() LogSearchScheduleParameterOutput {
	return o
}

func (o LogSearchScheduleParameterOutput) ToLogSearchScheduleParameterOutputWithContext(ctx context.Context) LogSearchScheduleParameterOutput {
	return o
}

// Name of the search.
func (o LogSearchScheduleParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The default value for the parameter. It should be compatible with the type set in the `dataType` field.
func (o LogSearchScheduleParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParameter) string { return v.Value }).(pulumi.StringOutput)
}

type LogSearchScheduleParameterArrayOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogSearchScheduleParameter)(nil)).Elem()
}

func (o LogSearchScheduleParameterArrayOutput) ToLogSearchScheduleParameterArrayOutput() LogSearchScheduleParameterArrayOutput {
	return o
}

func (o LogSearchScheduleParameterArrayOutput) ToLogSearchScheduleParameterArrayOutputWithContext(ctx context.Context) LogSearchScheduleParameterArrayOutput {
	return o
}

func (o LogSearchScheduleParameterArrayOutput) Index(i pulumi.IntInput) LogSearchScheduleParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogSearchScheduleParameter {
		return vs[0].([]LogSearchScheduleParameter)[vs[1].(int)]
	}).(LogSearchScheduleParameterOutput)
}

type LogSearchScheduleParseableTimeRange struct {
	// (Block List, Max: 1, Optional) Bounded time range. See
	// beginBoundedTimeRange schema schema for details.
	BeginBoundedTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange `pulumi:"beginBoundedTimeRange"`
	// (Block List, Max: 1, Optional) Literal time range. See
	// completeLiteralTimeRange schema for details.
	CompleteLiteralTimeRange *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// LogSearchScheduleParseableTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeArgs and LogSearchScheduleParseableTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeOutput() LogSearchScheduleParseableTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeArgs struct {
	// (Block List, Max: 1, Optional) Bounded time range. See
	// beginBoundedTimeRange schema schema for details.
	BeginBoundedTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrInput `pulumi:"beginBoundedTimeRange"`
	// (Block List, Max: 1, Optional) Literal time range. See
	// completeLiteralTimeRange schema for details.
	CompleteLiteralTimeRange LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (LogSearchScheduleParseableTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeOutput() LogSearchScheduleParseableTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeArgs) ToLogSearchScheduleParseableTimeRangePtrOutput() LogSearchScheduleParseableTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeArgs) ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeOutput).ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeArgs, LogSearchScheduleParseableTimeRangePtr and LogSearchScheduleParseableTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangePtrOutput() LogSearchScheduleParseableTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangePtrType LogSearchScheduleParseableTimeRangeArgs

func LogSearchScheduleParseableTimeRangePtr(v *LogSearchScheduleParseableTimeRangeArgs) LogSearchScheduleParseableTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangePtrType) ToLogSearchScheduleParseableTimeRangePtrOutput() LogSearchScheduleParseableTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangePtrType) ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeOutput() LogSearchScheduleParseableTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeOutput) ToLogSearchScheduleParseableTimeRangePtrOutput() LogSearchScheduleParseableTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeOutput) ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRange) *LogSearchScheduleParseableTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Bounded time range. See
// beginBoundedTimeRange schema schema for details.
func (o LogSearchScheduleParseableTimeRangeOutput) BeginBoundedTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange {
		return v.BeginBoundedTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Literal time range. See
// completeLiteralTimeRange schema for details.
func (o LogSearchScheduleParseableTimeRangeOutput) CompleteLiteralTimeRange() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRange) *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangePtrOutput() LogSearchScheduleParseableTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRange) LogSearchScheduleParseableTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeOutput)
}

// (Block List, Max: 1, Optional) Bounded time range. See
// beginBoundedTimeRange schema schema for details.
func (o LogSearchScheduleParseableTimeRangePtrOutput) BeginBoundedTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Literal time range. See
// completeLiteralTimeRange schema for details.
func (o LogSearchScheduleParseableTimeRangePtrOutput) CompleteLiteralTimeRange() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRange) *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange struct {
	// (Block List, Max: 1, Required) Start boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	From LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	// (Block List, Max: 1, Optional) End boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	To *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo `pulumi:"to"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs struct {
	// (Block List, Max: 1, Required) Start boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	From LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromInput `pulumi:"from"`
	// (Block List, Max: 1, Optional) End boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	To LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Required) Start boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) From() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput)
}

// (Block List, Max: 1, Optional) End boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput) To() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput)
}

// (Block List, Max: 1, Required) Start boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput) From() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

// (Block List, Max: 1, Optional) End boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput) To() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFrom) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis int `pulumi:"epochMillis"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int {
		return v.EpochMillis
	}).(pulumi.IntOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time string `pulumi:"iso8601Time"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string {
		return v.Iso8601Time
	}).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string {
		return v.RangeName
	}).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	// Relative time as a string consisting of following elements:
	RelativeTime string `pulumi:"relativeTime"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	// Relative time as a string consisting of following elements:
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string {
		return v.RelativeTime
	}).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeTo) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis int `pulumi:"epochMillis"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int {
		return v.EpochMillis
	}).(pulumi.IntOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time string `pulumi:"iso8601Time"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string {
		return v.Iso8601Time
	}).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string {
		return v.RangeName
	}).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	// Relative time as a string consisting of following elements:
	RelativeTime string `pulumi:"relativeTime"`
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	// Relative time as a string consisting of following elements:
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string {
		return v.RelativeTime
	}).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs and LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeInput` via:
//
//	LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs{...}
type LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput
	ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput
}

type LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput).ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs, LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtr and LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//	        LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput
	ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput
}

type logSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrType LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs

func LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtr(v *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*logSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*logSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *logSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrType) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange) *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput) ToLogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange) LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange
		return ret
	}).(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type LogSearchScheduleThreshold struct {
	// Expected result count.
	Count int `pulumi:"count"`
	// Criterion to be applied when comparing actual result count with expected count. Possible
	// values are: `eq`, `gt`, `ge`, `lt`, and `le`.
	Operator string `pulumi:"operator"`
	// Threshold type for the scheduled log search. Possible values are: `message` and `group`.
	// Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it
	// to `message`.
	ThresholdType string `pulumi:"thresholdType"`
}

// LogSearchScheduleThresholdInput is an input type that accepts LogSearchScheduleThresholdArgs and LogSearchScheduleThresholdOutput values.
// You can construct a concrete instance of `LogSearchScheduleThresholdInput` via:
//
//	LogSearchScheduleThresholdArgs{...}
type LogSearchScheduleThresholdInput interface {
	pulumi.Input

	ToLogSearchScheduleThresholdOutput() LogSearchScheduleThresholdOutput
	ToLogSearchScheduleThresholdOutputWithContext(context.Context) LogSearchScheduleThresholdOutput
}

type LogSearchScheduleThresholdArgs struct {
	// Expected result count.
	Count pulumi.IntInput `pulumi:"count"`
	// Criterion to be applied when comparing actual result count with expected count. Possible
	// values are: `eq`, `gt`, `ge`, `lt`, and `le`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Threshold type for the scheduled log search. Possible values are: `message` and `group`.
	// Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it
	// to `message`.
	ThresholdType pulumi.StringInput `pulumi:"thresholdType"`
}

func (LogSearchScheduleThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleThreshold)(nil)).Elem()
}

func (i LogSearchScheduleThresholdArgs) ToLogSearchScheduleThresholdOutput() LogSearchScheduleThresholdOutput {
	return i.ToLogSearchScheduleThresholdOutputWithContext(context.Background())
}

func (i LogSearchScheduleThresholdArgs) ToLogSearchScheduleThresholdOutputWithContext(ctx context.Context) LogSearchScheduleThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleThresholdOutput)
}

func (i LogSearchScheduleThresholdArgs) ToLogSearchScheduleThresholdPtrOutput() LogSearchScheduleThresholdPtrOutput {
	return i.ToLogSearchScheduleThresholdPtrOutputWithContext(context.Background())
}

func (i LogSearchScheduleThresholdArgs) ToLogSearchScheduleThresholdPtrOutputWithContext(ctx context.Context) LogSearchScheduleThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleThresholdOutput).ToLogSearchScheduleThresholdPtrOutputWithContext(ctx)
}

// LogSearchScheduleThresholdPtrInput is an input type that accepts LogSearchScheduleThresholdArgs, LogSearchScheduleThresholdPtr and LogSearchScheduleThresholdPtrOutput values.
// You can construct a concrete instance of `LogSearchScheduleThresholdPtrInput` via:
//
//	        LogSearchScheduleThresholdArgs{...}
//
//	or:
//
//	        nil
type LogSearchScheduleThresholdPtrInput interface {
	pulumi.Input

	ToLogSearchScheduleThresholdPtrOutput() LogSearchScheduleThresholdPtrOutput
	ToLogSearchScheduleThresholdPtrOutputWithContext(context.Context) LogSearchScheduleThresholdPtrOutput
}

type logSearchScheduleThresholdPtrType LogSearchScheduleThresholdArgs

func LogSearchScheduleThresholdPtr(v *LogSearchScheduleThresholdArgs) LogSearchScheduleThresholdPtrInput {
	return (*logSearchScheduleThresholdPtrType)(v)
}

func (*logSearchScheduleThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleThreshold)(nil)).Elem()
}

func (i *logSearchScheduleThresholdPtrType) ToLogSearchScheduleThresholdPtrOutput() LogSearchScheduleThresholdPtrOutput {
	return i.ToLogSearchScheduleThresholdPtrOutputWithContext(context.Background())
}

func (i *logSearchScheduleThresholdPtrType) ToLogSearchScheduleThresholdPtrOutputWithContext(ctx context.Context) LogSearchScheduleThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchScheduleThresholdPtrOutput)
}

type LogSearchScheduleThresholdOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchScheduleThreshold)(nil)).Elem()
}

func (o LogSearchScheduleThresholdOutput) ToLogSearchScheduleThresholdOutput() LogSearchScheduleThresholdOutput {
	return o
}

func (o LogSearchScheduleThresholdOutput) ToLogSearchScheduleThresholdOutputWithContext(ctx context.Context) LogSearchScheduleThresholdOutput {
	return o
}

func (o LogSearchScheduleThresholdOutput) ToLogSearchScheduleThresholdPtrOutput() LogSearchScheduleThresholdPtrOutput {
	return o.ToLogSearchScheduleThresholdPtrOutputWithContext(context.Background())
}

func (o LogSearchScheduleThresholdOutput) ToLogSearchScheduleThresholdPtrOutputWithContext(ctx context.Context) LogSearchScheduleThresholdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchScheduleThreshold) *LogSearchScheduleThreshold {
		return &v
	}).(LogSearchScheduleThresholdPtrOutput)
}

// Expected result count.
func (o LogSearchScheduleThresholdOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v LogSearchScheduleThreshold) int { return v.Count }).(pulumi.IntOutput)
}

// Criterion to be applied when comparing actual result count with expected count. Possible
// values are: `eq`, `gt`, `ge`, `lt`, and `le`.
func (o LogSearchScheduleThresholdOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleThreshold) string { return v.Operator }).(pulumi.StringOutput)
}

// Threshold type for the scheduled log search. Possible values are: `message` and `group`.
// Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it
// to `message`.
func (o LogSearchScheduleThresholdOutput) ThresholdType() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchScheduleThreshold) string { return v.ThresholdType }).(pulumi.StringOutput)
}

type LogSearchScheduleThresholdPtrOutput struct{ *pulumi.OutputState }

func (LogSearchScheduleThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchScheduleThreshold)(nil)).Elem()
}

func (o LogSearchScheduleThresholdPtrOutput) ToLogSearchScheduleThresholdPtrOutput() LogSearchScheduleThresholdPtrOutput {
	return o
}

func (o LogSearchScheduleThresholdPtrOutput) ToLogSearchScheduleThresholdPtrOutputWithContext(ctx context.Context) LogSearchScheduleThresholdPtrOutput {
	return o
}

func (o LogSearchScheduleThresholdPtrOutput) Elem() LogSearchScheduleThresholdOutput {
	return o.ApplyT(func(v *LogSearchScheduleThreshold) LogSearchScheduleThreshold {
		if v != nil {
			return *v
		}
		var ret LogSearchScheduleThreshold
		return ret
	}).(LogSearchScheduleThresholdOutput)
}

// Expected result count.
func (o LogSearchScheduleThresholdPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleThreshold) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// Criterion to be applied when comparing actual result count with expected count. Possible
// values are: `eq`, `gt`, `ge`, `lt`, and `le`.
func (o LogSearchScheduleThresholdPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleThreshold) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Threshold type for the scheduled log search. Possible values are: `message` and `group`.
// Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it
// to `message`.
func (o LogSearchScheduleThresholdPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchScheduleThreshold) *string {
		if v == nil {
			return nil
		}
		return &v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRange struct {
	// (Block List, Max: 1, Optional) Bounded time range. See
	// beginBoundedTimeRange schema schema for details.
	BeginBoundedTimeRange *LogSearchTimeRangeBeginBoundedTimeRange `pulumi:"beginBoundedTimeRange"`
	// (Block List, Max: 1, Optional) Literal time range. See
	// completeLiteralTimeRange schema for details.
	CompleteLiteralTimeRange *LogSearchTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// LogSearchTimeRangeInput is an input type that accepts LogSearchTimeRangeArgs and LogSearchTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeInput` via:
//
//	LogSearchTimeRangeArgs{...}
type LogSearchTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeOutput() LogSearchTimeRangeOutput
	ToLogSearchTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeOutput
}

type LogSearchTimeRangeArgs struct {
	// (Block List, Max: 1, Optional) Bounded time range. See
	// beginBoundedTimeRange schema schema for details.
	BeginBoundedTimeRange LogSearchTimeRangeBeginBoundedTimeRangePtrInput `pulumi:"beginBoundedTimeRange"`
	// (Block List, Max: 1, Optional) Literal time range. See
	// completeLiteralTimeRange schema for details.
	CompleteLiteralTimeRange LogSearchTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (LogSearchTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeArgs) ToLogSearchTimeRangeOutput() LogSearchTimeRangeOutput {
	return i.ToLogSearchTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeArgs) ToLogSearchTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeOutput)
}

func (i LogSearchTimeRangeArgs) ToLogSearchTimeRangePtrOutput() LogSearchTimeRangePtrOutput {
	return i.ToLogSearchTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeArgs) ToLogSearchTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeOutput).ToLogSearchTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangePtrInput is an input type that accepts LogSearchTimeRangeArgs, LogSearchTimeRangePtr and LogSearchTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangePtrOutput() LogSearchTimeRangePtrOutput
	ToLogSearchTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangePtrOutput
}

type logSearchTimeRangePtrType LogSearchTimeRangeArgs

func LogSearchTimeRangePtr(v *LogSearchTimeRangeArgs) LogSearchTimeRangePtrInput {
	return (*logSearchTimeRangePtrType)(v)
}

func (*logSearchTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangePtrType) ToLogSearchTimeRangePtrOutput() LogSearchTimeRangePtrOutput {
	return i.ToLogSearchTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangePtrType) ToLogSearchTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangePtrOutput)
}

type LogSearchTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeOutput) ToLogSearchTimeRangeOutput() LogSearchTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeOutput) ToLogSearchTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeOutput) ToLogSearchTimeRangePtrOutput() LogSearchTimeRangePtrOutput {
	return o.ToLogSearchTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeOutput) ToLogSearchTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRange) *LogSearchTimeRange {
		return &v
	}).(LogSearchTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Bounded time range. See
// beginBoundedTimeRange schema schema for details.
func (o LogSearchTimeRangeOutput) BeginBoundedTimeRange() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRange) *LogSearchTimeRangeBeginBoundedTimeRange { return v.BeginBoundedTimeRange }).(LogSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Literal time range. See
// completeLiteralTimeRange schema for details.
func (o LogSearchTimeRangeOutput) CompleteLiteralTimeRange() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRange) *LogSearchTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type LogSearchTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangePtrOutput) ToLogSearchTimeRangePtrOutput() LogSearchTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangePtrOutput) ToLogSearchTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangePtrOutput) Elem() LogSearchTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRange) LogSearchTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRange
		return ret
	}).(LogSearchTimeRangeOutput)
}

// (Block List, Max: 1, Optional) Bounded time range. See
// beginBoundedTimeRange schema schema for details.
func (o LogSearchTimeRangePtrOutput) BeginBoundedTimeRange() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRange) *LogSearchTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Literal time range. See
// completeLiteralTimeRange schema for details.
func (o LogSearchTimeRangePtrOutput) CompleteLiteralTimeRange() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRange) *LogSearchTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRange struct {
	// (Block List, Max: 1, Required) Start boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	From LogSearchTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	// (Block List, Max: 1, Optional) End boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	To *LogSearchTimeRangeBeginBoundedTimeRangeTo `pulumi:"to"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeArgs struct {
	// (Block List, Max: 1, Required) Start boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	From LogSearchTimeRangeBeginBoundedTimeRangeFromInput `pulumi:"from"`
	// (Block List, Max: 1, Optional) End boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	To LogSearchTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRange) *LogSearchTimeRangeBeginBoundedTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Required) Start boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchTimeRangeBeginBoundedTimeRangeOutput) From() LogSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromOutput)
}

// (Block List, Max: 1, Optional) End boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchTimeRangeBeginBoundedTimeRangeOutput) To() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRange) LogSearchTimeRangeBeginBoundedTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeOutput)
}

// (Block List, Max: 1, Required) Start boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchTimeRangeBeginBoundedTimeRangePtrOutput) From() LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

// (Block List, Max: 1, Optional) End boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o LogSearchTimeRangeBeginBoundedTimeRangePtrOutput) To() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFrom struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromArgs and LogSearchTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeFromArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromArgs struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromArgs, LogSearchTimeRangeBeginBoundedTimeRangeFromPtr and LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeFromPtrType LogSearchTimeRangeBeginBoundedTimeRangeFromArgs

func LogSearchTimeRangeBeginBoundedTimeRangeFromPtr(v *LogSearchTimeRangeBeginBoundedTimeRangeFromArgs) LogSearchTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromPtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromPtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFrom) LogSearchTimeRangeBeginBoundedTimeRangeFrom {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeFrom
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFrom) *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis int `pulumi:"epochMillis"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time string `pulumi:"iso8601Time"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	// Relative time as a string consisting of following elements:
	RelativeTime string `pulumi:"relativeTime"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	// Relative time as a string consisting of following elements:
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeTo struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToArgs and LogSearchTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeToArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToOutput() LogSearchTimeRangeBeginBoundedTimeRangeToOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeToArgs struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToOutput() LogSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToArgs, LogSearchTimeRangeBeginBoundedTimeRangeToPtr and LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeToPtrType LogSearchTimeRangeBeginBoundedTimeRangeToArgs

func LogSearchTimeRangeBeginBoundedTimeRangeToPtr(v *LogSearchTimeRangeBeginBoundedTimeRangeToArgs) LogSearchTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToPtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToPtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToOutput() LogSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeTo) LogSearchTimeRangeBeginBoundedTimeRangeTo {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeTo
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToOutput)
}

// (Block List, Optional) Time since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeTo) *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis int `pulumi:"epochMillis"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

// Time as a number of milliseconds since the epoch.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time string `pulumi:"iso8601Time"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

// Time as a string in ISO 8601 format.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	// Relative time as a string consisting of following elements:
	RelativeTime string `pulumi:"relativeTime"`
}

// LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//	LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	// Relative time as a string consisting of following elements:
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type logSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*logSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*logSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToLogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange
		return ret
	}).(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

// Relative time as a string consisting of following elements:
func (o LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type LogSearchTimeRangeCompleteLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// LogSearchTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts LogSearchTimeRangeCompleteLiteralTimeRangeArgs and LogSearchTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeCompleteLiteralTimeRangeInput` via:
//
//	LogSearchTimeRangeCompleteLiteralTimeRangeArgs{...}
type LogSearchTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToLogSearchTimeRangeCompleteLiteralTimeRangeOutput() LogSearchTimeRangeCompleteLiteralTimeRangeOutput
	ToLogSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) LogSearchTimeRangeCompleteLiteralTimeRangeOutput
}

type LogSearchTimeRangeCompleteLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (LogSearchTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i LogSearchTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchTimeRangeCompleteLiteralTimeRangeOutput() LogSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToLogSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i LogSearchTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i LogSearchTimeRangeCompleteLiteralTimeRangeArgs) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeCompleteLiteralTimeRangeOutput).ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// LogSearchTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts LogSearchTimeRangeCompleteLiteralTimeRangeArgs, LogSearchTimeRangeCompleteLiteralTimeRangePtr and LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `LogSearchTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//	        LogSearchTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type LogSearchTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput
	ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput
}

type logSearchTimeRangeCompleteLiteralTimeRangePtrType LogSearchTimeRangeCompleteLiteralTimeRangeArgs

func LogSearchTimeRangeCompleteLiteralTimeRangePtr(v *LogSearchTimeRangeCompleteLiteralTimeRangeArgs) LogSearchTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*logSearchTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*logSearchTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *logSearchTimeRangeCompleteLiteralTimeRangePtrType) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *logSearchTimeRangeCompleteLiteralTimeRangePtrType) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type LogSearchTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchTimeRangeCompleteLiteralTimeRangeOutput() LogSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) LogSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangeOutput) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogSearchTimeRangeCompleteLiteralTimeRange) *LogSearchTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v LogSearchTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutput() LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput) ToLogSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() LogSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeCompleteLiteralTimeRange) LogSearchTimeRangeCompleteLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret LogSearchTimeRangeCompleteLiteralTimeRange
		return ret
	}).(LogSearchTimeRangeCompleteLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSearchTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type LookupTableField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
}

// LookupTableFieldInput is an input type that accepts LookupTableFieldArgs and LookupTableFieldOutput values.
// You can construct a concrete instance of `LookupTableFieldInput` via:
//
//	LookupTableFieldArgs{...}
type LookupTableFieldInput interface {
	pulumi.Input

	ToLookupTableFieldOutput() LookupTableFieldOutput
	ToLookupTableFieldOutputWithContext(context.Context) LookupTableFieldOutput
}

type LookupTableFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
}

func (LookupTableFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableField)(nil)).Elem()
}

func (i LookupTableFieldArgs) ToLookupTableFieldOutput() LookupTableFieldOutput {
	return i.ToLookupTableFieldOutputWithContext(context.Background())
}

func (i LookupTableFieldArgs) ToLookupTableFieldOutputWithContext(ctx context.Context) LookupTableFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupTableFieldOutput)
}

// LookupTableFieldArrayInput is an input type that accepts LookupTableFieldArray and LookupTableFieldArrayOutput values.
// You can construct a concrete instance of `LookupTableFieldArrayInput` via:
//
//	LookupTableFieldArray{ LookupTableFieldArgs{...} }
type LookupTableFieldArrayInput interface {
	pulumi.Input

	ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput
	ToLookupTableFieldArrayOutputWithContext(context.Context) LookupTableFieldArrayOutput
}

type LookupTableFieldArray []LookupTableFieldInput

func (LookupTableFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupTableField)(nil)).Elem()
}

func (i LookupTableFieldArray) ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput {
	return i.ToLookupTableFieldArrayOutputWithContext(context.Background())
}

func (i LookupTableFieldArray) ToLookupTableFieldArrayOutputWithContext(ctx context.Context) LookupTableFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupTableFieldArrayOutput)
}

type LookupTableFieldOutput struct{ *pulumi.OutputState }

func (LookupTableFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableField)(nil)).Elem()
}

func (o LookupTableFieldOutput) ToLookupTableFieldOutput() LookupTableFieldOutput {
	return o
}

func (o LookupTableFieldOutput) ToLookupTableFieldOutputWithContext(ctx context.Context) LookupTableFieldOutput {
	return o
}

func (o LookupTableFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o LookupTableFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableField) string { return v.FieldType }).(pulumi.StringOutput)
}

type LookupTableFieldArrayOutput struct{ *pulumi.OutputState }

func (LookupTableFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupTableField)(nil)).Elem()
}

func (o LookupTableFieldArrayOutput) ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput {
	return o
}

func (o LookupTableFieldArrayOutput) ToLookupTableFieldArrayOutputWithContext(ctx context.Context) LookupTableFieldArrayOutput {
	return o
}

func (o LookupTableFieldArrayOutput) Index(i pulumi.IntInput) LookupTableFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupTableField {
		return vs[0].([]LookupTableField)[vs[1].(int)]
	}).(LookupTableFieldOutput)
}

type MetadataSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type string `pulumi:"type"`
}

// MetadataSourceAuthenticationInput is an input type that accepts MetadataSourceAuthenticationArgs and MetadataSourceAuthenticationOutput values.
// You can construct a concrete instance of `MetadataSourceAuthenticationInput` via:
//
//	MetadataSourceAuthenticationArgs{...}
type MetadataSourceAuthenticationInput interface {
	pulumi.Input

	ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput
	ToMetadataSourceAuthenticationOutputWithContext(context.Context) MetadataSourceAuthenticationOutput
}

type MetadataSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type pulumi.StringInput `pulumi:"type"`
}

func (MetadataSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceAuthentication)(nil)).Elem()
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput {
	return i.ToMetadataSourceAuthenticationOutputWithContext(context.Background())
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationOutputWithContext(ctx context.Context) MetadataSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationOutput)
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return i.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationOutput).ToMetadataSourceAuthenticationPtrOutputWithContext(ctx)
}

// MetadataSourceAuthenticationPtrInput is an input type that accepts MetadataSourceAuthenticationArgs, MetadataSourceAuthenticationPtr and MetadataSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `MetadataSourceAuthenticationPtrInput` via:
//
//	        MetadataSourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type MetadataSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput
	ToMetadataSourceAuthenticationPtrOutputWithContext(context.Context) MetadataSourceAuthenticationPtrOutput
}

type metadataSourceAuthenticationPtrType MetadataSourceAuthenticationArgs

func MetadataSourceAuthenticationPtr(v *MetadataSourceAuthenticationArgs) MetadataSourceAuthenticationPtrInput {
	return (*metadataSourceAuthenticationPtrType)(v)
}

func (*metadataSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceAuthentication)(nil)).Elem()
}

func (i *metadataSourceAuthenticationPtrType) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return i.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *metadataSourceAuthenticationPtrType) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationPtrOutput)
}

type MetadataSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (MetadataSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceAuthentication)(nil)).Elem()
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput {
	return o
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationOutputWithContext(ctx context.Context) MetadataSourceAuthenticationOutput {
	return o
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return o.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSourceAuthentication) *MetadataSourceAuthentication {
		return &v
	}).(MetadataSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o MetadataSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o MetadataSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type MetadataSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (MetadataSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceAuthentication)(nil)).Elem()
}

func (o MetadataSourceAuthenticationPtrOutput) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return o
}

func (o MetadataSourceAuthenticationPtrOutput) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return o
}

func (o MetadataSourceAuthenticationPtrOutput) Elem() MetadataSourceAuthenticationOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) MetadataSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret MetadataSourceAuthentication
		return ret
	}).(MetadataSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o MetadataSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o MetadataSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MetadataSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// MetadataSourceDefaultDateFormatInput is an input type that accepts MetadataSourceDefaultDateFormatArgs and MetadataSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `MetadataSourceDefaultDateFormatInput` via:
//
//	MetadataSourceDefaultDateFormatArgs{...}
type MetadataSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput
	ToMetadataSourceDefaultDateFormatOutputWithContext(context.Context) MetadataSourceDefaultDateFormatOutput
}

type MetadataSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (MetadataSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (i MetadataSourceDefaultDateFormatArgs) ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput {
	return i.ToMetadataSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i MetadataSourceDefaultDateFormatArgs) ToMetadataSourceDefaultDateFormatOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceDefaultDateFormatOutput)
}

// MetadataSourceDefaultDateFormatArrayInput is an input type that accepts MetadataSourceDefaultDateFormatArray and MetadataSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `MetadataSourceDefaultDateFormatArrayInput` via:
//
//	MetadataSourceDefaultDateFormatArray{ MetadataSourceDefaultDateFormatArgs{...} }
type MetadataSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput
	ToMetadataSourceDefaultDateFormatArrayOutputWithContext(context.Context) MetadataSourceDefaultDateFormatArrayOutput
}

type MetadataSourceDefaultDateFormatArray []MetadataSourceDefaultDateFormatInput

func (MetadataSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (i MetadataSourceDefaultDateFormatArray) ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput {
	return i.ToMetadataSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i MetadataSourceDefaultDateFormatArray) ToMetadataSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceDefaultDateFormatArrayOutput)
}

type MetadataSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (MetadataSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (o MetadataSourceDefaultDateFormatOutput) ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatOutput) ToMetadataSourceDefaultDateFormatOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o MetadataSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type MetadataSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (MetadataSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (o MetadataSourceDefaultDateFormatArrayOutput) ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatArrayOutput) ToMetadataSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatArrayOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) MetadataSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataSourceDefaultDateFormat {
		return vs[0].([]MetadataSourceDefaultDateFormat)[vs[1].(int)]
	}).(MetadataSourceDefaultDateFormatOutput)
}

type MetadataSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// MetadataSourceFilterInput is an input type that accepts MetadataSourceFilterArgs and MetadataSourceFilterOutput values.
// You can construct a concrete instance of `MetadataSourceFilterInput` via:
//
//	MetadataSourceFilterArgs{...}
type MetadataSourceFilterInput interface {
	pulumi.Input

	ToMetadataSourceFilterOutput() MetadataSourceFilterOutput
	ToMetadataSourceFilterOutputWithContext(context.Context) MetadataSourceFilterOutput
}

type MetadataSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (MetadataSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceFilter)(nil)).Elem()
}

func (i MetadataSourceFilterArgs) ToMetadataSourceFilterOutput() MetadataSourceFilterOutput {
	return i.ToMetadataSourceFilterOutputWithContext(context.Background())
}

func (i MetadataSourceFilterArgs) ToMetadataSourceFilterOutputWithContext(ctx context.Context) MetadataSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceFilterOutput)
}

// MetadataSourceFilterArrayInput is an input type that accepts MetadataSourceFilterArray and MetadataSourceFilterArrayOutput values.
// You can construct a concrete instance of `MetadataSourceFilterArrayInput` via:
//
//	MetadataSourceFilterArray{ MetadataSourceFilterArgs{...} }
type MetadataSourceFilterArrayInput interface {
	pulumi.Input

	ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput
	ToMetadataSourceFilterArrayOutputWithContext(context.Context) MetadataSourceFilterArrayOutput
}

type MetadataSourceFilterArray []MetadataSourceFilterInput

func (MetadataSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceFilter)(nil)).Elem()
}

func (i MetadataSourceFilterArray) ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput {
	return i.ToMetadataSourceFilterArrayOutputWithContext(context.Background())
}

func (i MetadataSourceFilterArray) ToMetadataSourceFilterArrayOutputWithContext(ctx context.Context) MetadataSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceFilterArrayOutput)
}

type MetadataSourceFilterOutput struct{ *pulumi.OutputState }

func (MetadataSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceFilter)(nil)).Elem()
}

func (o MetadataSourceFilterOutput) ToMetadataSourceFilterOutput() MetadataSourceFilterOutput {
	return o
}

func (o MetadataSourceFilterOutput) ToMetadataSourceFilterOutputWithContext(ctx context.Context) MetadataSourceFilterOutput {
	return o
}

func (o MetadataSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o MetadataSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o MetadataSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o MetadataSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type MetadataSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (MetadataSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceFilter)(nil)).Elem()
}

func (o MetadataSourceFilterArrayOutput) ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput {
	return o
}

func (o MetadataSourceFilterArrayOutput) ToMetadataSourceFilterArrayOutputWithContext(ctx context.Context) MetadataSourceFilterArrayOutput {
	return o
}

func (o MetadataSourceFilterArrayOutput) Index(i pulumi.IntInput) MetadataSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataSourceFilter {
		return vs[0].([]MetadataSourceFilter)[vs[1].(int)]
	}).(MetadataSourceFilterOutput)
}

type MetadataSourcePath struct {
	// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions []string `pulumi:"limitToRegions"`
	// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
	TagFilters []string `pulumi:"tagFilters"`
	// type of polling source. Only allowed value is `AwsMetadataPath`.
	Type string `pulumi:"type"`
}

// MetadataSourcePathInput is an input type that accepts MetadataSourcePathArgs and MetadataSourcePathOutput values.
// You can construct a concrete instance of `MetadataSourcePathInput` via:
//
//	MetadataSourcePathArgs{...}
type MetadataSourcePathInput interface {
	pulumi.Input

	ToMetadataSourcePathOutput() MetadataSourcePathOutput
	ToMetadataSourcePathOutputWithContext(context.Context) MetadataSourcePathOutput
}

type MetadataSourcePathArgs struct {
	// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions pulumi.StringArrayInput `pulumi:"limitToRegions"`
	// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
	TagFilters pulumi.StringArrayInput `pulumi:"tagFilters"`
	// type of polling source. Only allowed value is `AwsMetadataPath`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MetadataSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourcePath)(nil)).Elem()
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathOutput() MetadataSourcePathOutput {
	return i.ToMetadataSourcePathOutputWithContext(context.Background())
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathOutputWithContext(ctx context.Context) MetadataSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathOutput)
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return i.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathOutput).ToMetadataSourcePathPtrOutputWithContext(ctx)
}

// MetadataSourcePathPtrInput is an input type that accepts MetadataSourcePathArgs, MetadataSourcePathPtr and MetadataSourcePathPtrOutput values.
// You can construct a concrete instance of `MetadataSourcePathPtrInput` via:
//
//	        MetadataSourcePathArgs{...}
//
//	or:
//
//	        nil
type MetadataSourcePathPtrInput interface {
	pulumi.Input

	ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput
	ToMetadataSourcePathPtrOutputWithContext(context.Context) MetadataSourcePathPtrOutput
}

type metadataSourcePathPtrType MetadataSourcePathArgs

func MetadataSourcePathPtr(v *MetadataSourcePathArgs) MetadataSourcePathPtrInput {
	return (*metadataSourcePathPtrType)(v)
}

func (*metadataSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourcePath)(nil)).Elem()
}

func (i *metadataSourcePathPtrType) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return i.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (i *metadataSourcePathPtrType) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathPtrOutput)
}

type MetadataSourcePathOutput struct{ *pulumi.OutputState }

func (MetadataSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourcePath)(nil)).Elem()
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathOutput() MetadataSourcePathOutput {
	return o
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathOutputWithContext(ctx context.Context) MetadataSourcePathOutput {
	return o
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return o.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSourcePath) *MetadataSourcePath {
		return &v
	}).(MetadataSourcePathPtrOutput)
}

// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
func (o MetadataSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o MetadataSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
func (o MetadataSourcePathOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.TagFilters }).(pulumi.StringArrayOutput)
}

// type of polling source. Only allowed value is `AwsMetadataPath`.
func (o MetadataSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type MetadataSourcePathPtrOutput struct{ *pulumi.OutputState }

func (MetadataSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourcePath)(nil)).Elem()
}

func (o MetadataSourcePathPtrOutput) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return o
}

func (o MetadataSourcePathPtrOutput) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return o
}

func (o MetadataSourcePathPtrOutput) Elem() MetadataSourcePathOutput {
	return o.ApplyT(func(v *MetadataSourcePath) MetadataSourcePath {
		if v != nil {
			return *v
		}
		var ret MetadataSourcePath
		return ret
	}).(MetadataSourcePathOutput)
}

// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
func (o MetadataSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o MetadataSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
func (o MetadataSourcePathPtrOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(pulumi.StringArrayOutput)
}

// type of polling source. Only allowed value is `AwsMetadataPath`.
func (o MetadataSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchMetricsQuery struct {
	// A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
	// Strictly speaking, both filters and operators are optional.
	// Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
	// In practice, your metric queries will almost always contain filters that narrow the scope of your query.
	// For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
	Query string `pulumi:"query"`
	// Row id for the query row, A to Z letter.
	RowId string `pulumi:"rowId"`
}

// MetricsSearchMetricsQueryInput is an input type that accepts MetricsSearchMetricsQueryArgs and MetricsSearchMetricsQueryOutput values.
// You can construct a concrete instance of `MetricsSearchMetricsQueryInput` via:
//
//	MetricsSearchMetricsQueryArgs{...}
type MetricsSearchMetricsQueryInput interface {
	pulumi.Input

	ToMetricsSearchMetricsQueryOutput() MetricsSearchMetricsQueryOutput
	ToMetricsSearchMetricsQueryOutputWithContext(context.Context) MetricsSearchMetricsQueryOutput
}

type MetricsSearchMetricsQueryArgs struct {
	// A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
	// Strictly speaking, both filters and operators are optional.
	// Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
	// In practice, your metric queries will almost always contain filters that narrow the scope of your query.
	// For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
	Query pulumi.StringInput `pulumi:"query"`
	// Row id for the query row, A to Z letter.
	RowId pulumi.StringInput `pulumi:"rowId"`
}

func (MetricsSearchMetricsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchMetricsQuery)(nil)).Elem()
}

func (i MetricsSearchMetricsQueryArgs) ToMetricsSearchMetricsQueryOutput() MetricsSearchMetricsQueryOutput {
	return i.ToMetricsSearchMetricsQueryOutputWithContext(context.Background())
}

func (i MetricsSearchMetricsQueryArgs) ToMetricsSearchMetricsQueryOutputWithContext(ctx context.Context) MetricsSearchMetricsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchMetricsQueryOutput)
}

// MetricsSearchMetricsQueryArrayInput is an input type that accepts MetricsSearchMetricsQueryArray and MetricsSearchMetricsQueryArrayOutput values.
// You can construct a concrete instance of `MetricsSearchMetricsQueryArrayInput` via:
//
//	MetricsSearchMetricsQueryArray{ MetricsSearchMetricsQueryArgs{...} }
type MetricsSearchMetricsQueryArrayInput interface {
	pulumi.Input

	ToMetricsSearchMetricsQueryArrayOutput() MetricsSearchMetricsQueryArrayOutput
	ToMetricsSearchMetricsQueryArrayOutputWithContext(context.Context) MetricsSearchMetricsQueryArrayOutput
}

type MetricsSearchMetricsQueryArray []MetricsSearchMetricsQueryInput

func (MetricsSearchMetricsQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsSearchMetricsQuery)(nil)).Elem()
}

func (i MetricsSearchMetricsQueryArray) ToMetricsSearchMetricsQueryArrayOutput() MetricsSearchMetricsQueryArrayOutput {
	return i.ToMetricsSearchMetricsQueryArrayOutputWithContext(context.Background())
}

func (i MetricsSearchMetricsQueryArray) ToMetricsSearchMetricsQueryArrayOutputWithContext(ctx context.Context) MetricsSearchMetricsQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchMetricsQueryArrayOutput)
}

type MetricsSearchMetricsQueryOutput struct{ *pulumi.OutputState }

func (MetricsSearchMetricsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchMetricsQuery)(nil)).Elem()
}

func (o MetricsSearchMetricsQueryOutput) ToMetricsSearchMetricsQueryOutput() MetricsSearchMetricsQueryOutput {
	return o
}

func (o MetricsSearchMetricsQueryOutput) ToMetricsSearchMetricsQueryOutputWithContext(ctx context.Context) MetricsSearchMetricsQueryOutput {
	return o
}

// A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
// Strictly speaking, both filters and operators are optional.
// Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
// In practice, your metric queries will almost always contain filters that narrow the scope of your query.
// For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
func (o MetricsSearchMetricsQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchMetricsQuery) string { return v.Query }).(pulumi.StringOutput)
}

// Row id for the query row, A to Z letter.
func (o MetricsSearchMetricsQueryOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchMetricsQuery) string { return v.RowId }).(pulumi.StringOutput)
}

type MetricsSearchMetricsQueryArrayOutput struct{ *pulumi.OutputState }

func (MetricsSearchMetricsQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricsSearchMetricsQuery)(nil)).Elem()
}

func (o MetricsSearchMetricsQueryArrayOutput) ToMetricsSearchMetricsQueryArrayOutput() MetricsSearchMetricsQueryArrayOutput {
	return o
}

func (o MetricsSearchMetricsQueryArrayOutput) ToMetricsSearchMetricsQueryArrayOutputWithContext(ctx context.Context) MetricsSearchMetricsQueryArrayOutput {
	return o
}

func (o MetricsSearchMetricsQueryArrayOutput) Index(i pulumi.IntInput) MetricsSearchMetricsQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricsSearchMetricsQuery {
		return vs[0].([]MetricsSearchMetricsQuery)[vs[1].(int)]
	}).(MetricsSearchMetricsQueryOutput)
}

type MetricsSearchTimeRange struct {
	// (Block List, Max: 1, Optional) Bounded time range. See
	// beginBoundedTimeRange schema schema for details.
	BeginBoundedTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRange `pulumi:"beginBoundedTimeRange"`
	// (Block List, Max: 1, Optional) Literal time range. See
	// completeLiteralTimeRange schema for details.
	CompleteLiteralTimeRange *MetricsSearchTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// MetricsSearchTimeRangeInput is an input type that accepts MetricsSearchTimeRangeArgs and MetricsSearchTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeInput` via:
//
//	MetricsSearchTimeRangeArgs{...}
type MetricsSearchTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeOutput() MetricsSearchTimeRangeOutput
	ToMetricsSearchTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeOutput
}

type MetricsSearchTimeRangeArgs struct {
	// (Block List, Max: 1, Optional) Bounded time range. See
	// beginBoundedTimeRange schema schema for details.
	BeginBoundedTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangePtrInput `pulumi:"beginBoundedTimeRange"`
	// (Block List, Max: 1, Optional) Literal time range. See
	// completeLiteralTimeRange schema for details.
	CompleteLiteralTimeRange MetricsSearchTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (MetricsSearchTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeArgs) ToMetricsSearchTimeRangeOutput() MetricsSearchTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeArgs) ToMetricsSearchTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeOutput)
}

func (i MetricsSearchTimeRangeArgs) ToMetricsSearchTimeRangePtrOutput() MetricsSearchTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeArgs) ToMetricsSearchTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeOutput).ToMetricsSearchTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeArgs, MetricsSearchTimeRangePtr and MetricsSearchTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangePtrOutput() MetricsSearchTimeRangePtrOutput
	ToMetricsSearchTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangePtrOutput
}

type metricsSearchTimeRangePtrType MetricsSearchTimeRangeArgs

func MetricsSearchTimeRangePtr(v *MetricsSearchTimeRangeArgs) MetricsSearchTimeRangePtrInput {
	return (*metricsSearchTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangePtrType) ToMetricsSearchTimeRangePtrOutput() MetricsSearchTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangePtrType) ToMetricsSearchTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangePtrOutput)
}

type MetricsSearchTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeOutput) ToMetricsSearchTimeRangeOutput() MetricsSearchTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeOutput) ToMetricsSearchTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeOutput) ToMetricsSearchTimeRangePtrOutput() MetricsSearchTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeOutput) ToMetricsSearchTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRange) *MetricsSearchTimeRange {
		return &v
	}).(MetricsSearchTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Bounded time range. See
// beginBoundedTimeRange schema schema for details.
func (o MetricsSearchTimeRangeOutput) BeginBoundedTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRange {
		return v.BeginBoundedTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Literal time range. See
// completeLiteralTimeRange schema for details.
func (o MetricsSearchTimeRangeOutput) CompleteLiteralTimeRange() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRange) *MetricsSearchTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type MetricsSearchTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangePtrOutput) ToMetricsSearchTimeRangePtrOutput() MetricsSearchTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangePtrOutput) ToMetricsSearchTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangePtrOutput) Elem() MetricsSearchTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRange) MetricsSearchTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRange
		return ret
	}).(MetricsSearchTimeRangeOutput)
}

// (Block List, Max: 1, Optional) Bounded time range. See
// beginBoundedTimeRange schema schema for details.
func (o MetricsSearchTimeRangePtrOutput) BeginBoundedTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Optional) Literal time range. See
// completeLiteralTimeRange schema for details.
func (o MetricsSearchTimeRangePtrOutput) CompleteLiteralTimeRange() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRange) *MetricsSearchTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRange struct {
	// (Block List, Max: 1, Required) Start boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	From MetricsSearchTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	// (Block List, Max: 1, Optional) End boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	To *MetricsSearchTimeRangeBeginBoundedTimeRangeTo `pulumi:"to"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeArgs struct {
	// (Block List, Max: 1, Required) Start boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	From MetricsSearchTimeRangeBeginBoundedTimeRangeFromInput `pulumi:"from"`
	// (Block List, Max: 1, Optional) End boundary of bounded time range. See
	// timeRangeBoundary schema for details.
	To MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput)
}

// (Block List, Max: 1, Required) Start boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) From() MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput)
}

// (Block List, Max: 1, Optional) End boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeOutput) To() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeOutput)
}

// (Block List, Max: 1, Required) Start boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput) From() MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

// (Block List, Max: 1, Optional) End boundary of bounded time range. See
// timeRangeBoundary schema for details.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput) To() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFrom struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtr and MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeFromPtrType MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromPtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromPtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

// (Block List, Optional) Time since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) MetricsSearchTimeRangeBeginBoundedTimeRangeFrom {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeFrom
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput)
}

// (Block List, Optional) Time since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFrom) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis int `pulumi:"epochMillis"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

// Time as a number of milliseconds since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

// Time as a number of milliseconds since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time string `pulumi:"iso8601Time"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

// Time as a string in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

// Time as a string in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	// Relative time as a string consisting of following elements:
	RelativeTime string `pulumi:"relativeTime"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	// Relative time as a string consisting of following elements:
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

// Relative time as a string consisting of following elements:
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

// Relative time as a string consisting of following elements:
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeTo struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs struct {
	// (Block List, Optional) Time since the epoch.
	EpochTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput `pulumi:"epochTimeRange"`
	// (Block List, Optional) Time in ISO 8601 format.
	Iso8601TimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput `pulumi:"iso8601TimeRange"`
	// (Block List, Optional) Time in literal format.
	LiteralTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput `pulumi:"literalTimeRange"`
	// (Block List, Optional) Time in relative format.
	RelativeTimeRange MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeToPtr and MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeToPtrType MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeToPtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToPtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToPtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

// (Block List, Optional) Time since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeTo) MetricsSearchTimeRangeBeginBoundedTimeRangeTo {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeTo
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput)
}

// (Block List, Optional) Time since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// (Block List, Optional) Time in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// (Block List, Optional) Time in literal format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// (Block List, Optional) Time in relative format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeTo) *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis int `pulumi:"epochMillis"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	// Time as a number of milliseconds since the epoch.
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

// Time as a number of milliseconds since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

// Time as a number of milliseconds since the epoch.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time string `pulumi:"iso8601Time"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	// Time as a string in ISO 8601 format.
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

// Time as a string in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

// Time as a string in ISO 8601 format.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	// Relative time as a string consisting of following elements:
	RelativeTime string `pulumi:"relativeTime"`
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//	MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	// Relative time as a string consisting of following elements:
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type metricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*metricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

// Relative time as a string consisting of following elements:
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToMetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange
		return ret
	}).(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

// Relative time as a string consisting of following elements:
func (o MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type MetricsSearchTimeRangeCompleteLiteralTimeRange struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName string `pulumi:"rangeName"`
}

// MetricsSearchTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs and MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeCompleteLiteralTimeRangeInput` via:
//
//	MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs{...}
type MetricsSearchTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput
	ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput
}

type MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs struct {
	// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs) ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs) ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput).ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// MetricsSearchTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs, MetricsSearchTimeRangeCompleteLiteralTimeRangePtr and MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `MetricsSearchTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//	        MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//	or:
//
//	        nil
type MetricsSearchTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput
	ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput
}

type metricsSearchTimeRangeCompleteLiteralTimeRangePtrType MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs

func MetricsSearchTimeRangeCompleteLiteralTimeRangePtr(v *MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs) MetricsSearchTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*metricsSearchTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*metricsSearchTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *metricsSearchTimeRangeCompleteLiteralTimeRangePtrType) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *metricsSearchTimeRangeCompleteLiteralTimeRangePtrType) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricsSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput) ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput) ToMetricsSearchTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricsSearchTimeRangeCompleteLiteralTimeRange) *MetricsSearchTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricsSearchTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricsSearchTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput() MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput) ToMetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeCompleteLiteralTimeRange) MetricsSearchTimeRangeCompleteLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret MetricsSearchTimeRangeCompleteLiteralTimeRange
		return ret
	}).(MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput)
}

// One of `now`, `second`, `minute`, `hour`, `day`, `today`, `week`, `month`, `year`.
func (o MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricsSearchTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type MonitorFolderObjPermission struct {
	// A Set of Permissions. Valid Permission Values:
	Permissions []string `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId string `pulumi:"subjectId"`
	// Valid values:
	SubjectType string `pulumi:"subjectType"`
}

// MonitorFolderObjPermissionInput is an input type that accepts MonitorFolderObjPermissionArgs and MonitorFolderObjPermissionOutput values.
// You can construct a concrete instance of `MonitorFolderObjPermissionInput` via:
//
//	MonitorFolderObjPermissionArgs{...}
type MonitorFolderObjPermissionInput interface {
	pulumi.Input

	ToMonitorFolderObjPermissionOutput() MonitorFolderObjPermissionOutput
	ToMonitorFolderObjPermissionOutputWithContext(context.Context) MonitorFolderObjPermissionOutput
}

type MonitorFolderObjPermissionArgs struct {
	// A Set of Permissions. Valid Permission Values:
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId pulumi.StringInput `pulumi:"subjectId"`
	// Valid values:
	SubjectType pulumi.StringInput `pulumi:"subjectType"`
}

func (MonitorFolderObjPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorFolderObjPermission)(nil)).Elem()
}

func (i MonitorFolderObjPermissionArgs) ToMonitorFolderObjPermissionOutput() MonitorFolderObjPermissionOutput {
	return i.ToMonitorFolderObjPermissionOutputWithContext(context.Background())
}

func (i MonitorFolderObjPermissionArgs) ToMonitorFolderObjPermissionOutputWithContext(ctx context.Context) MonitorFolderObjPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorFolderObjPermissionOutput)
}

// MonitorFolderObjPermissionArrayInput is an input type that accepts MonitorFolderObjPermissionArray and MonitorFolderObjPermissionArrayOutput values.
// You can construct a concrete instance of `MonitorFolderObjPermissionArrayInput` via:
//
//	MonitorFolderObjPermissionArray{ MonitorFolderObjPermissionArgs{...} }
type MonitorFolderObjPermissionArrayInput interface {
	pulumi.Input

	ToMonitorFolderObjPermissionArrayOutput() MonitorFolderObjPermissionArrayOutput
	ToMonitorFolderObjPermissionArrayOutputWithContext(context.Context) MonitorFolderObjPermissionArrayOutput
}

type MonitorFolderObjPermissionArray []MonitorFolderObjPermissionInput

func (MonitorFolderObjPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorFolderObjPermission)(nil)).Elem()
}

func (i MonitorFolderObjPermissionArray) ToMonitorFolderObjPermissionArrayOutput() MonitorFolderObjPermissionArrayOutput {
	return i.ToMonitorFolderObjPermissionArrayOutputWithContext(context.Background())
}

func (i MonitorFolderObjPermissionArray) ToMonitorFolderObjPermissionArrayOutputWithContext(ctx context.Context) MonitorFolderObjPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorFolderObjPermissionArrayOutput)
}

type MonitorFolderObjPermissionOutput struct{ *pulumi.OutputState }

func (MonitorFolderObjPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorFolderObjPermission)(nil)).Elem()
}

func (o MonitorFolderObjPermissionOutput) ToMonitorFolderObjPermissionOutput() MonitorFolderObjPermissionOutput {
	return o
}

func (o MonitorFolderObjPermissionOutput) ToMonitorFolderObjPermissionOutputWithContext(ctx context.Context) MonitorFolderObjPermissionOutput {
	return o
}

// A Set of Permissions. Valid Permission Values:
func (o MonitorFolderObjPermissionOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorFolderObjPermission) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

// A Role ID or the Org ID of the account
func (o MonitorFolderObjPermissionOutput) SubjectId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorFolderObjPermission) string { return v.SubjectId }).(pulumi.StringOutput)
}

// Valid values:
func (o MonitorFolderObjPermissionOutput) SubjectType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorFolderObjPermission) string { return v.SubjectType }).(pulumi.StringOutput)
}

type MonitorFolderObjPermissionArrayOutput struct{ *pulumi.OutputState }

func (MonitorFolderObjPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorFolderObjPermission)(nil)).Elem()
}

func (o MonitorFolderObjPermissionArrayOutput) ToMonitorFolderObjPermissionArrayOutput() MonitorFolderObjPermissionArrayOutput {
	return o
}

func (o MonitorFolderObjPermissionArrayOutput) ToMonitorFolderObjPermissionArrayOutputWithContext(ctx context.Context) MonitorFolderObjPermissionArrayOutput {
	return o
}

func (o MonitorFolderObjPermissionArrayOutput) Index(i pulumi.IntInput) MonitorFolderObjPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorFolderObjPermission {
		return vs[0].([]MonitorFolderObjPermission)[vs[1].(int)]
	}).(MonitorFolderObjPermissionOutput)
}

type MonitorNotification struct {
	Notification       MonitorNotificationNotification `pulumi:"notification"`
	RunForTriggerTypes []string                        `pulumi:"runForTriggerTypes"`
}

// MonitorNotificationInput is an input type that accepts MonitorNotificationArgs and MonitorNotificationOutput values.
// You can construct a concrete instance of `MonitorNotificationInput` via:
//
//	MonitorNotificationArgs{...}
type MonitorNotificationInput interface {
	pulumi.Input

	ToMonitorNotificationOutput() MonitorNotificationOutput
	ToMonitorNotificationOutputWithContext(context.Context) MonitorNotificationOutput
}

type MonitorNotificationArgs struct {
	Notification       MonitorNotificationNotificationInput `pulumi:"notification"`
	RunForTriggerTypes pulumi.StringArrayInput              `pulumi:"runForTriggerTypes"`
}

func (MonitorNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotification)(nil)).Elem()
}

func (i MonitorNotificationArgs) ToMonitorNotificationOutput() MonitorNotificationOutput {
	return i.ToMonitorNotificationOutputWithContext(context.Background())
}

func (i MonitorNotificationArgs) ToMonitorNotificationOutputWithContext(ctx context.Context) MonitorNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationOutput)
}

// MonitorNotificationArrayInput is an input type that accepts MonitorNotificationArray and MonitorNotificationArrayOutput values.
// You can construct a concrete instance of `MonitorNotificationArrayInput` via:
//
//	MonitorNotificationArray{ MonitorNotificationArgs{...} }
type MonitorNotificationArrayInput interface {
	pulumi.Input

	ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput
	ToMonitorNotificationArrayOutputWithContext(context.Context) MonitorNotificationArrayOutput
}

type MonitorNotificationArray []MonitorNotificationInput

func (MonitorNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorNotification)(nil)).Elem()
}

func (i MonitorNotificationArray) ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput {
	return i.ToMonitorNotificationArrayOutputWithContext(context.Background())
}

func (i MonitorNotificationArray) ToMonitorNotificationArrayOutputWithContext(ctx context.Context) MonitorNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationArrayOutput)
}

type MonitorNotificationOutput struct{ *pulumi.OutputState }

func (MonitorNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotification)(nil)).Elem()
}

func (o MonitorNotificationOutput) ToMonitorNotificationOutput() MonitorNotificationOutput {
	return o
}

func (o MonitorNotificationOutput) ToMonitorNotificationOutputWithContext(ctx context.Context) MonitorNotificationOutput {
	return o
}

func (o MonitorNotificationOutput) Notification() MonitorNotificationNotificationOutput {
	return o.ApplyT(func(v MonitorNotification) MonitorNotificationNotification { return v.Notification }).(MonitorNotificationNotificationOutput)
}

func (o MonitorNotificationOutput) RunForTriggerTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorNotification) []string { return v.RunForTriggerTypes }).(pulumi.StringArrayOutput)
}

type MonitorNotificationArrayOutput struct{ *pulumi.OutputState }

func (MonitorNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorNotification)(nil)).Elem()
}

func (o MonitorNotificationArrayOutput) ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput {
	return o
}

func (o MonitorNotificationArrayOutput) ToMonitorNotificationArrayOutputWithContext(ctx context.Context) MonitorNotificationArrayOutput {
	return o
}

func (o MonitorNotificationArrayOutput) Index(i pulumi.IntInput) MonitorNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorNotification {
		return vs[0].([]MonitorNotification)[vs[1].(int)]
	}).(MonitorNotificationOutput)
}

type MonitorNotificationNotification struct {
	// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
	ActionType                *string  `pulumi:"actionType"`
	ConnectionId              *string  `pulumi:"connectionId"`
	ConnectionType            *string  `pulumi:"connectionType"`
	MessageBody               *string  `pulumi:"messageBody"`
	PayloadOverride           *string  `pulumi:"payloadOverride"`
	Recipients                []string `pulumi:"recipients"`
	ResolutionPayloadOverride *string  `pulumi:"resolutionPayloadOverride"`
	Subject                   *string  `pulumi:"subject"`
	TimeZone                  *string  `pulumi:"timeZone"`
}

// MonitorNotificationNotificationInput is an input type that accepts MonitorNotificationNotificationArgs and MonitorNotificationNotificationOutput values.
// You can construct a concrete instance of `MonitorNotificationNotificationInput` via:
//
//	MonitorNotificationNotificationArgs{...}
type MonitorNotificationNotificationInput interface {
	pulumi.Input

	ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput
	ToMonitorNotificationNotificationOutputWithContext(context.Context) MonitorNotificationNotificationOutput
}

type MonitorNotificationNotificationArgs struct {
	// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
	ActionType                pulumi.StringPtrInput   `pulumi:"actionType"`
	ConnectionId              pulumi.StringPtrInput   `pulumi:"connectionId"`
	ConnectionType            pulumi.StringPtrInput   `pulumi:"connectionType"`
	MessageBody               pulumi.StringPtrInput   `pulumi:"messageBody"`
	PayloadOverride           pulumi.StringPtrInput   `pulumi:"payloadOverride"`
	Recipients                pulumi.StringArrayInput `pulumi:"recipients"`
	ResolutionPayloadOverride pulumi.StringPtrInput   `pulumi:"resolutionPayloadOverride"`
	Subject                   pulumi.StringPtrInput   `pulumi:"subject"`
	TimeZone                  pulumi.StringPtrInput   `pulumi:"timeZone"`
}

func (MonitorNotificationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotificationNotification)(nil)).Elem()
}

func (i MonitorNotificationNotificationArgs) ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput {
	return i.ToMonitorNotificationNotificationOutputWithContext(context.Background())
}

func (i MonitorNotificationNotificationArgs) ToMonitorNotificationNotificationOutputWithContext(ctx context.Context) MonitorNotificationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationNotificationOutput)
}

type MonitorNotificationNotificationOutput struct{ *pulumi.OutputState }

func (MonitorNotificationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotificationNotification)(nil)).Elem()
}

func (o MonitorNotificationNotificationOutput) ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput {
	return o
}

func (o MonitorNotificationNotificationOutput) ToMonitorNotificationNotificationOutputWithContext(ctx context.Context) MonitorNotificationNotificationOutput {
	return o
}

// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
func (o MonitorNotificationNotificationOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) PayloadOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.PayloadOverride }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) Recipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) []string { return v.Recipients }).(pulumi.StringArrayOutput)
}

func (o MonitorNotificationNotificationOutput) ResolutionPayloadOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ResolutionPayloadOverride }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type MonitorObjPermission struct {
	// A Set of Permissions. Valid Permission Values:
	Permissions []string `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId string `pulumi:"subjectId"`
	// Valid values:
	SubjectType string `pulumi:"subjectType"`
}

// MonitorObjPermissionInput is an input type that accepts MonitorObjPermissionArgs and MonitorObjPermissionOutput values.
// You can construct a concrete instance of `MonitorObjPermissionInput` via:
//
//	MonitorObjPermissionArgs{...}
type MonitorObjPermissionInput interface {
	pulumi.Input

	ToMonitorObjPermissionOutput() MonitorObjPermissionOutput
	ToMonitorObjPermissionOutputWithContext(context.Context) MonitorObjPermissionOutput
}

type MonitorObjPermissionArgs struct {
	// A Set of Permissions. Valid Permission Values:
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId pulumi.StringInput `pulumi:"subjectId"`
	// Valid values:
	SubjectType pulumi.StringInput `pulumi:"subjectType"`
}

func (MonitorObjPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorObjPermission)(nil)).Elem()
}

func (i MonitorObjPermissionArgs) ToMonitorObjPermissionOutput() MonitorObjPermissionOutput {
	return i.ToMonitorObjPermissionOutputWithContext(context.Background())
}

func (i MonitorObjPermissionArgs) ToMonitorObjPermissionOutputWithContext(ctx context.Context) MonitorObjPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorObjPermissionOutput)
}

// MonitorObjPermissionArrayInput is an input type that accepts MonitorObjPermissionArray and MonitorObjPermissionArrayOutput values.
// You can construct a concrete instance of `MonitorObjPermissionArrayInput` via:
//
//	MonitorObjPermissionArray{ MonitorObjPermissionArgs{...} }
type MonitorObjPermissionArrayInput interface {
	pulumi.Input

	ToMonitorObjPermissionArrayOutput() MonitorObjPermissionArrayOutput
	ToMonitorObjPermissionArrayOutputWithContext(context.Context) MonitorObjPermissionArrayOutput
}

type MonitorObjPermissionArray []MonitorObjPermissionInput

func (MonitorObjPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorObjPermission)(nil)).Elem()
}

func (i MonitorObjPermissionArray) ToMonitorObjPermissionArrayOutput() MonitorObjPermissionArrayOutput {
	return i.ToMonitorObjPermissionArrayOutputWithContext(context.Background())
}

func (i MonitorObjPermissionArray) ToMonitorObjPermissionArrayOutputWithContext(ctx context.Context) MonitorObjPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorObjPermissionArrayOutput)
}

type MonitorObjPermissionOutput struct{ *pulumi.OutputState }

func (MonitorObjPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorObjPermission)(nil)).Elem()
}

func (o MonitorObjPermissionOutput) ToMonitorObjPermissionOutput() MonitorObjPermissionOutput {
	return o
}

func (o MonitorObjPermissionOutput) ToMonitorObjPermissionOutputWithContext(ctx context.Context) MonitorObjPermissionOutput {
	return o
}

// A Set of Permissions. Valid Permission Values:
func (o MonitorObjPermissionOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorObjPermission) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

// A Role ID or the Org ID of the account
func (o MonitorObjPermissionOutput) SubjectId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorObjPermission) string { return v.SubjectId }).(pulumi.StringOutput)
}

// Valid values:
func (o MonitorObjPermissionOutput) SubjectType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorObjPermission) string { return v.SubjectType }).(pulumi.StringOutput)
}

type MonitorObjPermissionArrayOutput struct{ *pulumi.OutputState }

func (MonitorObjPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorObjPermission)(nil)).Elem()
}

func (o MonitorObjPermissionArrayOutput) ToMonitorObjPermissionArrayOutput() MonitorObjPermissionArrayOutput {
	return o
}

func (o MonitorObjPermissionArrayOutput) ToMonitorObjPermissionArrayOutputWithContext(ctx context.Context) MonitorObjPermissionArrayOutput {
	return o
}

func (o MonitorObjPermissionArrayOutput) Index(i pulumi.IntInput) MonitorObjPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorObjPermission {
		return vs[0].([]MonitorObjPermission)[vs[1].(int)]
	}).(MonitorObjPermissionOutput)
}

type MonitorQuery struct {
	Query string `pulumi:"query"`
	RowId string `pulumi:"rowId"`
}

// MonitorQueryInput is an input type that accepts MonitorQueryArgs and MonitorQueryOutput values.
// You can construct a concrete instance of `MonitorQueryInput` via:
//
//	MonitorQueryArgs{...}
type MonitorQueryInput interface {
	pulumi.Input

	ToMonitorQueryOutput() MonitorQueryOutput
	ToMonitorQueryOutputWithContext(context.Context) MonitorQueryOutput
}

type MonitorQueryArgs struct {
	Query pulumi.StringInput `pulumi:"query"`
	RowId pulumi.StringInput `pulumi:"rowId"`
}

func (MonitorQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArgs) ToMonitorQueryOutput() MonitorQueryOutput {
	return i.ToMonitorQueryOutputWithContext(context.Background())
}

func (i MonitorQueryArgs) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryOutput)
}

// MonitorQueryArrayInput is an input type that accepts MonitorQueryArray and MonitorQueryArrayOutput values.
// You can construct a concrete instance of `MonitorQueryArrayInput` via:
//
//	MonitorQueryArray{ MonitorQueryArgs{...} }
type MonitorQueryArrayInput interface {
	pulumi.Input

	ToMonitorQueryArrayOutput() MonitorQueryArrayOutput
	ToMonitorQueryArrayOutputWithContext(context.Context) MonitorQueryArrayOutput
}

type MonitorQueryArray []MonitorQueryInput

func (MonitorQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArray) ToMonitorQueryArrayOutput() MonitorQueryArrayOutput {
	return i.ToMonitorQueryArrayOutputWithContext(context.Background())
}

func (i MonitorQueryArray) ToMonitorQueryArrayOutputWithContext(ctx context.Context) MonitorQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryArrayOutput)
}

type MonitorQueryOutput struct{ *pulumi.OutputState }

func (MonitorQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryOutput) ToMonitorQueryOutput() MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorQuery) string { return v.Query }).(pulumi.StringOutput)
}

func (o MonitorQueryOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorQuery) string { return v.RowId }).(pulumi.StringOutput)
}

type MonitorQueryArrayOutput struct{ *pulumi.OutputState }

func (MonitorQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryArrayOutput) ToMonitorQueryArrayOutput() MonitorQueryArrayOutput {
	return o
}

func (o MonitorQueryArrayOutput) ToMonitorQueryArrayOutputWithContext(ctx context.Context) MonitorQueryArrayOutput {
	return o
}

func (o MonitorQueryArrayOutput) Index(i pulumi.IntInput) MonitorQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorQuery {
		return vs[0].([]MonitorQuery)[vs[1].(int)]
	}).(MonitorQueryOutput)
}

type MonitorTrigger struct {
	DetectionMethod *string `pulumi:"detectionMethod"`
	MinDataPoints   *int    `pulumi:"minDataPoints"`
	OccurrenceType  *string `pulumi:"occurrenceType"`
	// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
	ResolutionWindow *string  `pulumi:"resolutionWindow"`
	Threshold        *float64 `pulumi:"threshold"`
	ThresholdType    *string  `pulumi:"thresholdType"`
	TimeRange        *string  `pulumi:"timeRange"`
	TriggerSource    *string  `pulumi:"triggerSource"`
	TriggerType      *string  `pulumi:"triggerType"`
}

// MonitorTriggerInput is an input type that accepts MonitorTriggerArgs and MonitorTriggerOutput values.
// You can construct a concrete instance of `MonitorTriggerInput` via:
//
//	MonitorTriggerArgs{...}
type MonitorTriggerInput interface {
	pulumi.Input

	ToMonitorTriggerOutput() MonitorTriggerOutput
	ToMonitorTriggerOutputWithContext(context.Context) MonitorTriggerOutput
}

type MonitorTriggerArgs struct {
	DetectionMethod pulumi.StringPtrInput `pulumi:"detectionMethod"`
	MinDataPoints   pulumi.IntPtrInput    `pulumi:"minDataPoints"`
	OccurrenceType  pulumi.StringPtrInput `pulumi:"occurrenceType"`
	// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
	ResolutionWindow pulumi.StringPtrInput  `pulumi:"resolutionWindow"`
	Threshold        pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType    pulumi.StringPtrInput  `pulumi:"thresholdType"`
	TimeRange        pulumi.StringPtrInput  `pulumi:"timeRange"`
	TriggerSource    pulumi.StringPtrInput  `pulumi:"triggerSource"`
	TriggerType      pulumi.StringPtrInput  `pulumi:"triggerType"`
}

func (MonitorTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTrigger)(nil)).Elem()
}

func (i MonitorTriggerArgs) ToMonitorTriggerOutput() MonitorTriggerOutput {
	return i.ToMonitorTriggerOutputWithContext(context.Background())
}

func (i MonitorTriggerArgs) ToMonitorTriggerOutputWithContext(ctx context.Context) MonitorTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerOutput)
}

// MonitorTriggerArrayInput is an input type that accepts MonitorTriggerArray and MonitorTriggerArrayOutput values.
// You can construct a concrete instance of `MonitorTriggerArrayInput` via:
//
//	MonitorTriggerArray{ MonitorTriggerArgs{...} }
type MonitorTriggerArrayInput interface {
	pulumi.Input

	ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput
	ToMonitorTriggerArrayOutputWithContext(context.Context) MonitorTriggerArrayOutput
}

type MonitorTriggerArray []MonitorTriggerInput

func (MonitorTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTrigger)(nil)).Elem()
}

func (i MonitorTriggerArray) ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput {
	return i.ToMonitorTriggerArrayOutputWithContext(context.Background())
}

func (i MonitorTriggerArray) ToMonitorTriggerArrayOutputWithContext(ctx context.Context) MonitorTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerArrayOutput)
}

type MonitorTriggerOutput struct{ *pulumi.OutputState }

func (MonitorTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTrigger)(nil)).Elem()
}

func (o MonitorTriggerOutput) ToMonitorTriggerOutput() MonitorTriggerOutput {
	return o
}

func (o MonitorTriggerOutput) ToMonitorTriggerOutputWithContext(ctx context.Context) MonitorTriggerOutput {
	return o
}

func (o MonitorTriggerOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *int { return v.MinDataPoints }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.OccurrenceType }).(pulumi.StringPtrOutput)
}

// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
func (o MonitorTriggerOutput) ResolutionWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.ResolutionWindow }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TriggerSource }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerArrayOutput struct{ *pulumi.OutputState }

func (MonitorTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTrigger)(nil)).Elem()
}

func (o MonitorTriggerArrayOutput) ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput {
	return o
}

func (o MonitorTriggerArrayOutput) ToMonitorTriggerArrayOutputWithContext(ctx context.Context) MonitorTriggerArrayOutput {
	return o
}

func (o MonitorTriggerArrayOutput) Index(i pulumi.IntInput) MonitorTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorTrigger {
		return vs[0].([]MonitorTrigger)[vs[1].(int)]
	}).(MonitorTriggerOutput)
}

type MonitorTriggerConditions struct {
	LogsMissingDataCondition    *MonitorTriggerConditionsLogsMissingDataCondition    `pulumi:"logsMissingDataCondition"`
	LogsOutlierCondition        *MonitorTriggerConditionsLogsOutlierCondition        `pulumi:"logsOutlierCondition"`
	LogsStaticCondition         *MonitorTriggerConditionsLogsStaticCondition         `pulumi:"logsStaticCondition"`
	MetricsMissingDataCondition *MonitorTriggerConditionsMetricsMissingDataCondition `pulumi:"metricsMissingDataCondition"`
	MetricsOutlierCondition     *MonitorTriggerConditionsMetricsOutlierCondition     `pulumi:"metricsOutlierCondition"`
	MetricsStaticCondition      *MonitorTriggerConditionsMetricsStaticCondition      `pulumi:"metricsStaticCondition"`
	SloBurnRateCondition        *MonitorTriggerConditionsSloBurnRateCondition        `pulumi:"sloBurnRateCondition"`
	SloSliCondition             *MonitorTriggerConditionsSloSliCondition             `pulumi:"sloSliCondition"`
}

// MonitorTriggerConditionsInput is an input type that accepts MonitorTriggerConditionsArgs and MonitorTriggerConditionsOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsInput` via:
//
//	MonitorTriggerConditionsArgs{...}
type MonitorTriggerConditionsInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsOutput() MonitorTriggerConditionsOutput
	ToMonitorTriggerConditionsOutputWithContext(context.Context) MonitorTriggerConditionsOutput
}

type MonitorTriggerConditionsArgs struct {
	LogsMissingDataCondition    MonitorTriggerConditionsLogsMissingDataConditionPtrInput    `pulumi:"logsMissingDataCondition"`
	LogsOutlierCondition        MonitorTriggerConditionsLogsOutlierConditionPtrInput        `pulumi:"logsOutlierCondition"`
	LogsStaticCondition         MonitorTriggerConditionsLogsStaticConditionPtrInput         `pulumi:"logsStaticCondition"`
	MetricsMissingDataCondition MonitorTriggerConditionsMetricsMissingDataConditionPtrInput `pulumi:"metricsMissingDataCondition"`
	MetricsOutlierCondition     MonitorTriggerConditionsMetricsOutlierConditionPtrInput     `pulumi:"metricsOutlierCondition"`
	MetricsStaticCondition      MonitorTriggerConditionsMetricsStaticConditionPtrInput      `pulumi:"metricsStaticCondition"`
	SloBurnRateCondition        MonitorTriggerConditionsSloBurnRateConditionPtrInput        `pulumi:"sloBurnRateCondition"`
	SloSliCondition             MonitorTriggerConditionsSloSliConditionPtrInput             `pulumi:"sloSliCondition"`
}

func (MonitorTriggerConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditions)(nil)).Elem()
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsOutput() MonitorTriggerConditionsOutput {
	return i.ToMonitorTriggerConditionsOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsOutputWithContext(ctx context.Context) MonitorTriggerConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsOutput)
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return i.ToMonitorTriggerConditionsPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsOutput).ToMonitorTriggerConditionsPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsPtrInput is an input type that accepts MonitorTriggerConditionsArgs, MonitorTriggerConditionsPtr and MonitorTriggerConditionsPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsPtrInput` via:
//
//	        MonitorTriggerConditionsArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput
	ToMonitorTriggerConditionsPtrOutputWithContext(context.Context) MonitorTriggerConditionsPtrOutput
}

type monitorTriggerConditionsPtrType MonitorTriggerConditionsArgs

func MonitorTriggerConditionsPtr(v *MonitorTriggerConditionsArgs) MonitorTriggerConditionsPtrInput {
	return (*monitorTriggerConditionsPtrType)(v)
}

func (*monitorTriggerConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditions)(nil)).Elem()
}

func (i *monitorTriggerConditionsPtrType) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return i.ToMonitorTriggerConditionsPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsPtrType) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsPtrOutput)
}

type MonitorTriggerConditionsOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditions)(nil)).Elem()
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsOutput() MonitorTriggerConditionsOutput {
	return o
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsOutputWithContext(ctx context.Context) MonitorTriggerConditionsOutput {
	return o
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return o.ToMonitorTriggerConditionsPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditions) *MonitorTriggerConditions {
		return &v
	}).(MonitorTriggerConditionsPtrOutput)
}

func (o MonitorTriggerConditionsOutput) LogsMissingDataCondition() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsLogsMissingDataCondition {
		return v.LogsMissingDataCondition
	}).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) LogsOutlierCondition() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsLogsOutlierCondition {
		return v.LogsOutlierCondition
	}).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) LogsStaticCondition() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsLogsStaticCondition {
		return v.LogsStaticCondition
	}).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) MetricsMissingDataCondition() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsMetricsMissingDataCondition {
		return v.MetricsMissingDataCondition
	}).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) MetricsOutlierCondition() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsMetricsOutlierCondition {
		return v.MetricsOutlierCondition
	}).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) MetricsStaticCondition() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsMetricsStaticCondition {
		return v.MetricsStaticCondition
	}).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) SloBurnRateCondition() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsSloBurnRateCondition {
		return v.SloBurnRateCondition
	}).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) SloSliCondition() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsSloSliCondition { return v.SloSliCondition }).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

type MonitorTriggerConditionsPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditions)(nil)).Elem()
}

func (o MonitorTriggerConditionsPtrOutput) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return o
}

func (o MonitorTriggerConditionsPtrOutput) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return o
}

func (o MonitorTriggerConditionsPtrOutput) Elem() MonitorTriggerConditionsOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) MonitorTriggerConditions {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditions
		return ret
	}).(MonitorTriggerConditionsOutput)
}

func (o MonitorTriggerConditionsPtrOutput) LogsMissingDataCondition() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsLogsMissingDataCondition {
		if v == nil {
			return nil
		}
		return v.LogsMissingDataCondition
	}).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) LogsOutlierCondition() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsLogsOutlierCondition {
		if v == nil {
			return nil
		}
		return v.LogsOutlierCondition
	}).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) LogsStaticCondition() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsLogsStaticCondition {
		if v == nil {
			return nil
		}
		return v.LogsStaticCondition
	}).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) MetricsMissingDataCondition() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsMetricsMissingDataCondition {
		if v == nil {
			return nil
		}
		return v.MetricsMissingDataCondition
	}).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) MetricsOutlierCondition() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsMetricsOutlierCondition {
		if v == nil {
			return nil
		}
		return v.MetricsOutlierCondition
	}).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) MetricsStaticCondition() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsMetricsStaticCondition {
		if v == nil {
			return nil
		}
		return v.MetricsStaticCondition
	}).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) SloBurnRateCondition() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsSloBurnRateCondition {
		if v == nil {
			return nil
		}
		return v.SloBurnRateCondition
	}).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) SloSliCondition() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsSloSliCondition {
		if v == nil {
			return nil
		}
		return v.SloSliCondition
	}).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

type MonitorTriggerConditionsLogsMissingDataCondition struct {
	TimeRange string `pulumi:"timeRange"`
}

// MonitorTriggerConditionsLogsMissingDataConditionInput is an input type that accepts MonitorTriggerConditionsLogsMissingDataConditionArgs and MonitorTriggerConditionsLogsMissingDataConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsMissingDataConditionInput` via:
//
//	MonitorTriggerConditionsLogsMissingDataConditionArgs{...}
type MonitorTriggerConditionsLogsMissingDataConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsMissingDataConditionOutput() MonitorTriggerConditionsLogsMissingDataConditionOutput
	ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(context.Context) MonitorTriggerConditionsLogsMissingDataConditionOutput
}

type MonitorTriggerConditionsLogsMissingDataConditionArgs struct {
	TimeRange pulumi.StringInput `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsLogsMissingDataConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionOutput() MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return i.ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsMissingDataConditionOutput)
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsMissingDataConditionOutput).ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsMissingDataConditionPtrInput is an input type that accepts MonitorTriggerConditionsLogsMissingDataConditionArgs, MonitorTriggerConditionsLogsMissingDataConditionPtr and MonitorTriggerConditionsLogsMissingDataConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsMissingDataConditionPtrInput` via:
//
//	        MonitorTriggerConditionsLogsMissingDataConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsMissingDataConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput
	ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput
}

type monitorTriggerConditionsLogsMissingDataConditionPtrType MonitorTriggerConditionsLogsMissingDataConditionArgs

func MonitorTriggerConditionsLogsMissingDataConditionPtr(v *MonitorTriggerConditionsLogsMissingDataConditionArgs) MonitorTriggerConditionsLogsMissingDataConditionPtrInput {
	return (*monitorTriggerConditionsLogsMissingDataConditionPtrType)(v)
}

func (*monitorTriggerConditionsLogsMissingDataConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsMissingDataConditionPtrType) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsMissingDataConditionPtrType) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

type MonitorTriggerConditionsLogsMissingDataConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsMissingDataConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionOutput() MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsMissingDataCondition) *MonitorTriggerConditionsLogsMissingDataCondition {
		return &v
	}).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsMissingDataCondition) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsLogsMissingDataConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) Elem() MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsMissingDataCondition) MonitorTriggerConditionsLogsMissingDataCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsMissingDataCondition
		return ret
	}).(MonitorTriggerConditionsLogsMissingDataConditionOutput)
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsMissingDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierCondition struct {
	Critical  *MonitorTriggerConditionsLogsOutlierConditionCritical `pulumi:"critical"`
	Direction *string                                               `pulumi:"direction"`
	Field     *string                                               `pulumi:"field"`
	Warning   *MonitorTriggerConditionsLogsOutlierConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsLogsOutlierConditionInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionArgs and MonitorTriggerConditionsLogsOutlierConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionInput` via:
//
//	MonitorTriggerConditionsLogsOutlierConditionArgs{...}
type MonitorTriggerConditionsLogsOutlierConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionOutput() MonitorTriggerConditionsLogsOutlierConditionOutput
	ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionOutput
}

type MonitorTriggerConditionsLogsOutlierConditionArgs struct {
	Critical  MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput `pulumi:"critical"`
	Direction pulumi.StringPtrInput                                        `pulumi:"direction"`
	Field     pulumi.StringPtrInput                                        `pulumi:"field"`
	Warning   MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsLogsOutlierConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionOutput() MonitorTriggerConditionsLogsOutlierConditionOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionOutput)
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionOutput).ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsOutlierConditionPtrInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionArgs, MonitorTriggerConditionsLogsOutlierConditionPtr and MonitorTriggerConditionsLogsOutlierConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionPtrInput` via:
//
//	        MonitorTriggerConditionsLogsOutlierConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsOutlierConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput
	ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput
}

type monitorTriggerConditionsLogsOutlierConditionPtrType MonitorTriggerConditionsLogsOutlierConditionArgs

func MonitorTriggerConditionsLogsOutlierConditionPtr(v *MonitorTriggerConditionsLogsOutlierConditionArgs) MonitorTriggerConditionsLogsOutlierConditionPtrInput {
	return (*monitorTriggerConditionsLogsOutlierConditionPtrType)(v)
}

func (*monitorTriggerConditionsLogsOutlierConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsOutlierConditionPtrType) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsOutlierConditionPtrType) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionOutput() MonitorTriggerConditionsLogsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierCondition {
		return &v
	}).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Critical() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Warning() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Elem() MonitorTriggerConditionsLogsOutlierConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) MonitorTriggerConditionsLogsOutlierCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsOutlierCondition
		return ret
	}).(MonitorTriggerConditionsLogsOutlierConditionOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Critical() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *string {
		if v == nil {
			return nil
		}
		return v.Direction
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Warning() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionCritical struct {
	Consecutive *int     `pulumi:"consecutive"`
	Threshold   *float64 `pulumi:"threshold"`
	Window      *int     `pulumi:"window"`
}

// MonitorTriggerConditionsLogsOutlierConditionCriticalInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionCriticalArgs and MonitorTriggerConditionsLogsOutlierConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionCriticalInput` via:
//
//	MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{...}
type MonitorTriggerConditionsLogsOutlierConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput
	ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalOutput
}

type MonitorTriggerConditionsLogsOutlierConditionCriticalArgs struct {
	Consecutive pulumi.IntPtrInput     `pulumi:"consecutive"`
	Threshold   pulumi.Float64PtrInput `pulumi:"threshold"`
	Window      pulumi.IntPtrInput     `pulumi:"window"`
}

func (MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput)
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput).ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionCriticalArgs, MonitorTriggerConditionsLogsOutlierConditionCriticalPtr and MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput` via:
//
//	        MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput
	ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput
}

type monitorTriggerConditionsLogsOutlierConditionCriticalPtrType MonitorTriggerConditionsLogsOutlierConditionCriticalArgs

func MonitorTriggerConditionsLogsOutlierConditionCriticalPtr(v *MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput {
	return (*monitorTriggerConditionsLogsOutlierConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsLogsOutlierConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsOutlierConditionCritical) *MonitorTriggerConditionsLogsOutlierConditionCritical {
		return &v
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionCritical) *int { return v.Consecutive }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionCritical) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionCritical) *int { return v.Window }).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) MonitorTriggerConditionsLogsOutlierConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsOutlierConditionCritical
		return ret
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) *int {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionWarning struct {
	Consecutive *int     `pulumi:"consecutive"`
	Threshold   *float64 `pulumi:"threshold"`
	Window      *int     `pulumi:"window"`
}

// MonitorTriggerConditionsLogsOutlierConditionWarningInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionWarningArgs and MonitorTriggerConditionsLogsOutlierConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionWarningInput` via:
//
//	MonitorTriggerConditionsLogsOutlierConditionWarningArgs{...}
type MonitorTriggerConditionsLogsOutlierConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionWarningOutput() MonitorTriggerConditionsLogsOutlierConditionWarningOutput
	ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningOutput
}

type MonitorTriggerConditionsLogsOutlierConditionWarningArgs struct {
	Consecutive pulumi.IntPtrInput     `pulumi:"consecutive"`
	Threshold   pulumi.Float64PtrInput `pulumi:"threshold"`
	Window      pulumi.IntPtrInput     `pulumi:"window"`
}

func (MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutput() MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionWarningOutput)
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionWarningOutput).ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionWarningArgs, MonitorTriggerConditionsLogsOutlierConditionWarningPtr and MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput` via:
//
//	        MonitorTriggerConditionsLogsOutlierConditionWarningArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput
	ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput
}

type monitorTriggerConditionsLogsOutlierConditionWarningPtrType MonitorTriggerConditionsLogsOutlierConditionWarningArgs

func MonitorTriggerConditionsLogsOutlierConditionWarningPtr(v *MonitorTriggerConditionsLogsOutlierConditionWarningArgs) MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput {
	return (*monitorTriggerConditionsLogsOutlierConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsLogsOutlierConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutput() MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsOutlierConditionWarning) *MonitorTriggerConditionsLogsOutlierConditionWarning {
		return &v
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionWarning) *int { return v.Consecutive }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionWarning) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionWarning) *int { return v.Window }).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Elem() MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) MonitorTriggerConditionsLogsOutlierConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsOutlierConditionWarning
		return ret
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) *int {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsStaticCondition struct {
	Critical *MonitorTriggerConditionsLogsStaticConditionCritical `pulumi:"critical"`
	Field    *string                                              `pulumi:"field"`
	Warning  *MonitorTriggerConditionsLogsStaticConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsLogsStaticConditionInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionArgs and MonitorTriggerConditionsLogsStaticConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionArgs{...}
type MonitorTriggerConditionsLogsStaticConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionOutput() MonitorTriggerConditionsLogsStaticConditionOutput
	ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionOutput
}

type MonitorTriggerConditionsLogsStaticConditionArgs struct {
	Critical MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput `pulumi:"critical"`
	Field    pulumi.StringPtrInput                                       `pulumi:"field"`
	Warning  MonitorTriggerConditionsLogsStaticConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsLogsStaticConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionOutput() MonitorTriggerConditionsLogsStaticConditionOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionOutput).ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionArgs, MonitorTriggerConditionsLogsStaticConditionPtr and MonitorTriggerConditionsLogsStaticConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionPtrType MonitorTriggerConditionsLogsStaticConditionArgs

func MonitorTriggerConditionsLogsStaticConditionPtr(v *MonitorTriggerConditionsLogsStaticConditionArgs) MonitorTriggerConditionsLogsStaticConditionPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionPtrType) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionPtrType) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionOutput() MonitorTriggerConditionsLogsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticCondition {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) Critical() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticCondition) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) Warning() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) MonitorTriggerConditionsLogsStaticCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticCondition
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Critical() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Warning() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCritical struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionCriticalAlert      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionCriticalResolution `pulumi:"resolution"`
	TimeRange  string                                                        `pulumi:"timeRange"`
}

// MonitorTriggerConditionsLogsStaticConditionCriticalInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalArgs and MonitorTriggerConditionsLogsStaticConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionCriticalArgs{...}
type MonitorTriggerConditionsLogsStaticConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalOutput() MonitorTriggerConditionsLogsStaticConditionCriticalOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalOutput
}

type MonitorTriggerConditionsLogsStaticConditionCriticalArgs struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput `pulumi:"resolution"`
	TimeRange  pulumi.StringInput                                                 `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutput() MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalOutput).ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalArgs, MonitorTriggerConditionsLogsStaticConditionCriticalPtr and MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionCriticalPtrType MonitorTriggerConditionsLogsStaticConditionCriticalArgs

func MonitorTriggerConditionsLogsStaticConditionCriticalPtr(v *MonitorTriggerConditionsLogsStaticConditionCriticalArgs) MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutput() MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionCritical) *MonitorTriggerConditionsLogsStaticConditionCritical {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) Alert() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCritical) MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		return v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCritical) MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCritical) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) MonitorTriggerConditionsLogsStaticConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionCritical
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) Alert() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) *MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) *MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlert struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs and MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{...}
type MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput).ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs, MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtr and MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs

func MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtr(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlert) MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionCriticalAlert
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolution struct {
	// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
	ResolutionWindow *string  `pulumi:"resolutionWindow"`
	Threshold        *float64 `pulumi:"threshold"`
	ThresholdType    *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs and MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{...}
type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs struct {
	// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
	ResolutionWindow pulumi.StringPtrInput  `pulumi:"resolutionWindow"`
	Threshold        pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType    pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput).ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs, MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtr and MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs

func MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtr(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput)
}

// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ResolutionWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *string {
		return v.ResolutionWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionCriticalResolution
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput)
}

// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ResolutionWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.ResolutionWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarning struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionWarningAlert      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionWarningResolution `pulumi:"resolution"`
	TimeRange  string                                                       `pulumi:"timeRange"`
}

// MonitorTriggerConditionsLogsStaticConditionWarningInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningArgs and MonitorTriggerConditionsLogsStaticConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionWarningArgs{...}
type MonitorTriggerConditionsLogsStaticConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningOutput() MonitorTriggerConditionsLogsStaticConditionWarningOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningOutput
}

type MonitorTriggerConditionsLogsStaticConditionWarningArgs struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionWarningAlertInput      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput `pulumi:"resolution"`
	TimeRange  pulumi.StringInput                                                `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsLogsStaticConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningOutput() MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningOutput).ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningArgs, MonitorTriggerConditionsLogsStaticConditionWarningPtr and MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionWarningArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionWarningPtrType MonitorTriggerConditionsLogsStaticConditionWarningArgs

func MonitorTriggerConditionsLogsStaticConditionWarningPtr(v *MonitorTriggerConditionsLogsStaticConditionWarningArgs) MonitorTriggerConditionsLogsStaticConditionWarningPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningOutput() MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionWarning) *MonitorTriggerConditionsLogsStaticConditionWarning {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) Alert() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarning) MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		return v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarning) MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarning) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) MonitorTriggerConditionsLogsStaticConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionWarning
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionWarningOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) Alert() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) *MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) *MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlert struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionWarningAlertInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs and MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningAlertInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{...}
type MonitorTriggerConditionsLogsStaticConditionWarningAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput).ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs, MonitorTriggerConditionsLogsStaticConditionWarningAlertPtr and MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs

func MonitorTriggerConditionsLogsStaticConditionWarningAlertPtr(v *MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionWarningAlert) *MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningAlert) MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionWarningAlert
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolution struct {
	// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
	ResolutionWindow *string  `pulumi:"resolutionWindow"`
	Threshold        *float64 `pulumi:"threshold"`
	ThresholdType    *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs and MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput` via:
//
//	MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{...}
type MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs struct {
	// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
	ResolutionWindow pulumi.StringPtrInput  `pulumi:"resolutionWindow"`
	Threshold        pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType    pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput).ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs, MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtr and MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput` via:
//
//	        MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs

func MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtr(v *MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput)
}

// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ResolutionWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *string {
		return v.ResolutionWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionWarningResolution
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput)
}

// The resolution window that the recovery condition must be met in each evaluation that happens within this entire duration before the alert is recovered (resolved). If not specified, the time range of your trigger will be used.
func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ResolutionWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.ResolutionWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsMissingDataCondition struct {
	TimeRange     string `pulumi:"timeRange"`
	TriggerSource string `pulumi:"triggerSource"`
}

// MonitorTriggerConditionsMetricsMissingDataConditionInput is an input type that accepts MonitorTriggerConditionsMetricsMissingDataConditionArgs and MonitorTriggerConditionsMetricsMissingDataConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsMissingDataConditionInput` via:
//
//	MonitorTriggerConditionsMetricsMissingDataConditionArgs{...}
type MonitorTriggerConditionsMetricsMissingDataConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsMissingDataConditionOutput() MonitorTriggerConditionsMetricsMissingDataConditionOutput
	ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsMissingDataConditionOutput
}

type MonitorTriggerConditionsMetricsMissingDataConditionArgs struct {
	TimeRange     pulumi.StringInput `pulumi:"timeRange"`
	TriggerSource pulumi.StringInput `pulumi:"triggerSource"`
}

func (MonitorTriggerConditionsMetricsMissingDataConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionOutput() MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return i.ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsMissingDataConditionOutput)
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsMissingDataConditionOutput).ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsMissingDataConditionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsMissingDataConditionArgs, MonitorTriggerConditionsMetricsMissingDataConditionPtr and MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsMissingDataConditionPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsMissingDataConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsMissingDataConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput
	ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput
}

type monitorTriggerConditionsMetricsMissingDataConditionPtrType MonitorTriggerConditionsMetricsMissingDataConditionArgs

func MonitorTriggerConditionsMetricsMissingDataConditionPtr(v *MonitorTriggerConditionsMetricsMissingDataConditionArgs) MonitorTriggerConditionsMetricsMissingDataConditionPtrInput {
	return (*monitorTriggerConditionsMetricsMissingDataConditionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsMissingDataConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsMissingDataConditionPtrType) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsMissingDataConditionPtrType) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

type MonitorTriggerConditionsMetricsMissingDataConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsMissingDataConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionOutput() MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsMissingDataCondition) *MonitorTriggerConditionsMetricsMissingDataCondition {
		return &v
	}).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsMissingDataCondition) string { return v.TimeRange }).(pulumi.StringOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) TriggerSource() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsMissingDataCondition) string { return v.TriggerSource }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) Elem() MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsMissingDataCondition) MonitorTriggerConditionsMetricsMissingDataCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsMissingDataCondition
		return ret
	}).(MonitorTriggerConditionsMetricsMissingDataConditionOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsMissingDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsMissingDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerSource
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierCondition struct {
	Critical  *MonitorTriggerConditionsMetricsOutlierConditionCritical `pulumi:"critical"`
	Direction *string                                                  `pulumi:"direction"`
	Warning   *MonitorTriggerConditionsMetricsOutlierConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsMetricsOutlierConditionInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionArgs and MonitorTriggerConditionsMetricsOutlierConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionInput` via:
//
//	MonitorTriggerConditionsMetricsOutlierConditionArgs{...}
type MonitorTriggerConditionsMetricsOutlierConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionOutput() MonitorTriggerConditionsMetricsOutlierConditionOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionOutput
}

type MonitorTriggerConditionsMetricsOutlierConditionArgs struct {
	Critical  MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput `pulumi:"critical"`
	Direction pulumi.StringPtrInput                                           `pulumi:"direction"`
	Warning   MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsMetricsOutlierConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionOutput() MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionOutput)
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionOutput).ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsOutlierConditionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionArgs, MonitorTriggerConditionsMetricsOutlierConditionPtr and MonitorTriggerConditionsMetricsOutlierConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsOutlierConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsOutlierConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput
}

type monitorTriggerConditionsMetricsOutlierConditionPtrType MonitorTriggerConditionsMetricsOutlierConditionArgs

func MonitorTriggerConditionsMetricsOutlierConditionPtr(v *MonitorTriggerConditionsMetricsOutlierConditionArgs) MonitorTriggerConditionsMetricsOutlierConditionPtrInput {
	return (*monitorTriggerConditionsMetricsOutlierConditionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsOutlierConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsOutlierConditionPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsOutlierConditionPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionOutput() MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierCondition {
		return &v
	}).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) Critical() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierCondition) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) Warning() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Elem() MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) MonitorTriggerConditionsMetricsOutlierCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsOutlierCondition
		return ret
	}).(MonitorTriggerConditionsMetricsOutlierConditionOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Critical() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) *string {
		if v == nil {
			return nil
		}
		return v.Direction
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Warning() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionCritical struct {
	BaselineWindow *string  `pulumi:"baselineWindow"`
	Threshold      *float64 `pulumi:"threshold"`
}

// MonitorTriggerConditionsMetricsOutlierConditionCriticalInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs and MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionCriticalInput` via:
//
//	MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{...}
type MonitorTriggerConditionsMetricsOutlierConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput
}

type MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs struct {
	BaselineWindow pulumi.StringPtrInput  `pulumi:"baselineWindow"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput)
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput).ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs, MonitorTriggerConditionsMetricsOutlierConditionCriticalPtr and MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput
}

type monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs

func MonitorTriggerConditionsMetricsOutlierConditionCriticalPtr(v *MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput {
	return (*monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsOutlierConditionCritical) *MonitorTriggerConditionsMetricsOutlierConditionCritical {
		return &v
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionCritical) *string { return v.BaselineWindow }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionCritical) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionCritical) MonitorTriggerConditionsMetricsOutlierConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsOutlierConditionCritical
		return ret
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.BaselineWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionWarning struct {
	BaselineWindow *string  `pulumi:"baselineWindow"`
	Threshold      *float64 `pulumi:"threshold"`
}

// MonitorTriggerConditionsMetricsOutlierConditionWarningInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionWarningArgs and MonitorTriggerConditionsMetricsOutlierConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionWarningInput` via:
//
//	MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{...}
type MonitorTriggerConditionsMetricsOutlierConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningOutput
}

type MonitorTriggerConditionsMetricsOutlierConditionWarningArgs struct {
	BaselineWindow pulumi.StringPtrInput  `pulumi:"baselineWindow"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput)
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput).ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionWarningArgs, MonitorTriggerConditionsMetricsOutlierConditionWarningPtr and MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput
}

type monitorTriggerConditionsMetricsOutlierConditionWarningPtrType MonitorTriggerConditionsMetricsOutlierConditionWarningArgs

func MonitorTriggerConditionsMetricsOutlierConditionWarningPtr(v *MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput {
	return (*monitorTriggerConditionsMetricsOutlierConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsMetricsOutlierConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsOutlierConditionWarning) *MonitorTriggerConditionsMetricsOutlierConditionWarning {
		return &v
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionWarning) *string { return v.BaselineWindow }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionWarning) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) Elem() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionWarning) MonitorTriggerConditionsMetricsOutlierConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsOutlierConditionWarning
		return ret
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.BaselineWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsStaticCondition struct {
	Critical *MonitorTriggerConditionsMetricsStaticConditionCritical `pulumi:"critical"`
	Warning  *MonitorTriggerConditionsMetricsStaticConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsMetricsStaticConditionInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionArgs and MonitorTriggerConditionsMetricsStaticConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionOutput() MonitorTriggerConditionsMetricsStaticConditionOutput
	ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionOutput
}

type MonitorTriggerConditionsMetricsStaticConditionArgs struct {
	Critical MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput `pulumi:"critical"`
	Warning  MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsMetricsStaticConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionOutput() MonitorTriggerConditionsMetricsStaticConditionOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionOutput).ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionArgs, MonitorTriggerConditionsMetricsStaticConditionPtr and MonitorTriggerConditionsMetricsStaticConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionPtrType MonitorTriggerConditionsMetricsStaticConditionArgs

func MonitorTriggerConditionsMetricsStaticConditionPtr(v *MonitorTriggerConditionsMetricsStaticConditionArgs) MonitorTriggerConditionsMetricsStaticConditionPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionOutput() MonitorTriggerConditionsMetricsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticCondition {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) Critical() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) Warning() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticCondition) MonitorTriggerConditionsMetricsStaticCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticCondition
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) Critical() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) Warning() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCritical struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionCriticalAlert      `pulumi:"alert"`
	OccurrenceType string                                                           `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionCriticalResolution `pulumi:"resolution"`
	TimeRange      string                                                           `pulumi:"timeRange"`
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalArgs and MonitorTriggerConditionsMetricsStaticConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalOutput
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalArgs struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput      `pulumi:"alert"`
	OccurrenceType pulumi.StringInput                                                    `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput `pulumi:"resolution"`
	TimeRange      pulumi.StringInput                                                    `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput).ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalArgs, MonitorTriggerConditionsMetricsStaticConditionCriticalPtr and MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionCriticalPtrType MonitorTriggerConditionsMetricsStaticConditionCriticalArgs

func MonitorTriggerConditionsMetricsStaticConditionCriticalPtr(v *MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionCritical) *MonitorTriggerConditionsMetricsStaticConditionCritical {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		return v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) OccurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) string { return v.OccurrenceType }).(pulumi.StringOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) MonitorTriggerConditionsMetricsStaticConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionCritical
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlert struct {
	MinDataPoints *int     `pulumi:"minDataPoints"`
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs and MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs struct {
	MinDataPoints pulumi.IntPtrInput     `pulumi:"minDataPoints"`
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput).ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs, MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtr and MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs

func MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtr(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *int { return v.MinDataPoints }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionCriticalAlert
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *int {
		if v == nil {
			return nil
		}
		return v.MinDataPoints
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolution struct {
	MinDataPoints  *int     `pulumi:"minDataPoints"`
	OccurrenceType *string  `pulumi:"occurrenceType"`
	Threshold      *float64 `pulumi:"threshold"`
	ThresholdType  *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs and MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs struct {
	MinDataPoints  pulumi.IntPtrInput     `pulumi:"minDataPoints"`
	OccurrenceType pulumi.StringPtrInput  `pulumi:"occurrenceType"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType  pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput).ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs, MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtr and MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs

func MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtr(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *int { return v.MinDataPoints }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionCriticalResolution
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *int {
		if v == nil {
			return nil
		}
		return v.MinDataPoints
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarning struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionWarningAlert      `pulumi:"alert"`
	OccurrenceType string                                                          `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionWarningResolution `pulumi:"resolution"`
	TimeRange      string                                                          `pulumi:"timeRange"`
}

// MonitorTriggerConditionsMetricsStaticConditionWarningInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningArgs and MonitorTriggerConditionsMetricsStaticConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionWarningArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningOutput() MonitorTriggerConditionsMetricsStaticConditionWarningOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningOutput
}

type MonitorTriggerConditionsMetricsStaticConditionWarningArgs struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput      `pulumi:"alert"`
	OccurrenceType pulumi.StringInput                                                   `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput `pulumi:"resolution"`
	TimeRange      pulumi.StringInput                                                   `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutput() MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningOutput).ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningArgs, MonitorTriggerConditionsMetricsStaticConditionWarningPtr and MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionWarningArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionWarningPtrType MonitorTriggerConditionsMetricsStaticConditionWarningArgs

func MonitorTriggerConditionsMetricsStaticConditionWarningPtr(v *MonitorTriggerConditionsMetricsStaticConditionWarningArgs) MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutput() MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionWarning) *MonitorTriggerConditionsMetricsStaticConditionWarning {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		return v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) OccurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) string { return v.OccurrenceType }).(pulumi.StringOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) MonitorTriggerConditionsMetricsStaticConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionWarning
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlert struct {
	MinDataPoints *int     `pulumi:"minDataPoints"`
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs and MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs struct {
	MinDataPoints pulumi.IntPtrInput     `pulumi:"minDataPoints"`
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput).ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs, MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtr and MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs

func MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtr(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *int { return v.MinDataPoints }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionWarningAlert
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *int {
		if v == nil {
			return nil
		}
		return v.MinDataPoints
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolution struct {
	MinDataPoints  *int     `pulumi:"minDataPoints"`
	OccurrenceType *string  `pulumi:"occurrenceType"`
	Threshold      *float64 `pulumi:"threshold"`
	ThresholdType  *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs and MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput` via:
//
//	MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs struct {
	MinDataPoints  pulumi.IntPtrInput     `pulumi:"minDataPoints"`
	OccurrenceType pulumi.StringPtrInput  `pulumi:"occurrenceType"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType  pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput).ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs, MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtr and MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput` via:
//
//	        MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs

func MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtr(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *int { return v.MinDataPoints }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionWarningResolution
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) MinDataPoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *int {
		if v == nil {
			return nil
		}
		return v.MinDataPoints
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateCondition struct {
	Critical *MonitorTriggerConditionsSloBurnRateConditionCritical `pulumi:"critical"`
	Warning  *MonitorTriggerConditionsSloBurnRateConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsSloBurnRateConditionInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionArgs and MonitorTriggerConditionsSloBurnRateConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionOutput() MonitorTriggerConditionsSloBurnRateConditionOutput
	ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionOutput
}

type MonitorTriggerConditionsSloBurnRateConditionArgs struct {
	Critical MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput `pulumi:"critical"`
	Warning  MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsSloBurnRateConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionOutput() MonitorTriggerConditionsSloBurnRateConditionOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionOutput)
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionOutput).ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloBurnRateConditionPtrInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionArgs, MonitorTriggerConditionsSloBurnRateConditionPtr and MonitorTriggerConditionsSloBurnRateConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionPtrInput` via:
//
//	        MonitorTriggerConditionsSloBurnRateConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsSloBurnRateConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput
	ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput
}

type monitorTriggerConditionsSloBurnRateConditionPtrType MonitorTriggerConditionsSloBurnRateConditionArgs

func MonitorTriggerConditionsSloBurnRateConditionPtr(v *MonitorTriggerConditionsSloBurnRateConditionArgs) MonitorTriggerConditionsSloBurnRateConditionPtrInput {
	return (*monitorTriggerConditionsSloBurnRateConditionPtrType)(v)
}

func (*monitorTriggerConditionsSloBurnRateConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloBurnRateConditionPtrType) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloBurnRateConditionPtrType) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionOutput() MonitorTriggerConditionsSloBurnRateConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateCondition {
		return &v
	}).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) Critical() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) Warning() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) Elem() MonitorTriggerConditionsSloBurnRateConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateCondition) MonitorTriggerConditionsSloBurnRateCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloBurnRateCondition
		return ret
	}).(MonitorTriggerConditionsSloBurnRateConditionOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) Critical() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) Warning() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCritical struct {
	BurnRateThreshold *float64                                                       `pulumi:"burnRateThreshold"`
	BurnRates         []MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate `pulumi:"burnRates"`
	TimeRange         *string                                                        `pulumi:"timeRange"`
}

// MonitorTriggerConditionsSloBurnRateConditionCriticalInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionCriticalArgs and MonitorTriggerConditionsSloBurnRateConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionCriticalInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput
	ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalOutput
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalArgs struct {
	BurnRateThreshold pulumi.Float64PtrInput                                                 `pulumi:"burnRateThreshold"`
	BurnRates         MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayInput `pulumi:"burnRates"`
	TimeRange         pulumi.StringPtrInput                                                  `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput)
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput).ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionCriticalArgs, MonitorTriggerConditionsSloBurnRateConditionCriticalPtr and MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput` via:
//
//	        MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput
	ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput
}

type monitorTriggerConditionsSloBurnRateConditionCriticalPtrType MonitorTriggerConditionsSloBurnRateConditionCriticalArgs

func MonitorTriggerConditionsSloBurnRateConditionCriticalPtr(v *MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput {
	return (*monitorTriggerConditionsSloBurnRateConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsSloBurnRateConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloBurnRateConditionCriticalPtrType) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloBurnRateConditionCriticalPtrType) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloBurnRateConditionCritical) *MonitorTriggerConditionsSloBurnRateConditionCritical {
		return &v
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) BurnRateThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCritical) *float64 { return v.BurnRateThreshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) BurnRates() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCritical) []MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate {
		return v.BurnRates
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCritical) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) MonitorTriggerConditionsSloBurnRateConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloBurnRateConditionCritical
		return ret
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) BurnRateThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return v.BurnRateThreshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) BurnRates() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) []MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate {
		if v == nil {
			return nil
		}
		return v.BurnRates
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate struct {
	BurnRateThreshold float64 `pulumi:"burnRateThreshold"`
	TimeRange         string  `pulumi:"timeRange"`
}

// MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs and MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput
	ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs struct {
	BurnRateThreshold pulumi.Float64Input `pulumi:"burnRateThreshold"`
	TimeRange         pulumi.StringInput  `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput)
}

// MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray and MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray{ MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs{...} }
type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput
	ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray []MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateInput

func (MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput) BurnRateThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate) float64 {
		return v.BurnRateThreshold
	}).(pulumi.Float64Output)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput) Index(i pulumi.IntInput) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate {
		return vs[0].([]MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRate)[vs[1].(int)]
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarning struct {
	BurnRateThreshold *float64                                                      `pulumi:"burnRateThreshold"`
	BurnRates         []MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate `pulumi:"burnRates"`
	TimeRange         *string                                                       `pulumi:"timeRange"`
}

// MonitorTriggerConditionsSloBurnRateConditionWarningInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionWarningArgs and MonitorTriggerConditionsSloBurnRateConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionWarningInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionWarningArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionWarningOutput() MonitorTriggerConditionsSloBurnRateConditionWarningOutput
	ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningOutput
}

type MonitorTriggerConditionsSloBurnRateConditionWarningArgs struct {
	BurnRateThreshold pulumi.Float64PtrInput                                                `pulumi:"burnRateThreshold"`
	BurnRates         MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayInput `pulumi:"burnRates"`
	TimeRange         pulumi.StringPtrInput                                                 `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutput() MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningOutput)
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningOutput).ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionWarningArgs, MonitorTriggerConditionsSloBurnRateConditionWarningPtr and MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput` via:
//
//	        MonitorTriggerConditionsSloBurnRateConditionWarningArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput
	ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput
}

type monitorTriggerConditionsSloBurnRateConditionWarningPtrType MonitorTriggerConditionsSloBurnRateConditionWarningArgs

func MonitorTriggerConditionsSloBurnRateConditionWarningPtr(v *MonitorTriggerConditionsSloBurnRateConditionWarningArgs) MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput {
	return (*monitorTriggerConditionsSloBurnRateConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsSloBurnRateConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloBurnRateConditionWarningPtrType) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloBurnRateConditionWarningPtrType) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutput() MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloBurnRateConditionWarning) *MonitorTriggerConditionsSloBurnRateConditionWarning {
		return &v
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) BurnRateThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarning) *float64 { return v.BurnRateThreshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) BurnRates() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarning) []MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate {
		return v.BurnRates
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarning) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) Elem() MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) MonitorTriggerConditionsSloBurnRateConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloBurnRateConditionWarning
		return ret
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) BurnRateThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return v.BurnRateThreshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) BurnRates() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) []MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate {
		if v == nil {
			return nil
		}
		return v.BurnRates
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate struct {
	BurnRateThreshold float64 `pulumi:"burnRateThreshold"`
	TimeRange         string  `pulumi:"timeRange"`
}

// MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs and MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput
	ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput
}

type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs struct {
	BurnRateThreshold pulumi.Float64Input `pulumi:"burnRateThreshold"`
	TimeRange         pulumi.StringInput  `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput)
}

// MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray and MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayInput` via:
//
//	MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray{ MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs{...} }
type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput
	ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput
}

type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray []MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateInput

func (MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput) BurnRateThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate) float64 {
		return v.BurnRateThreshold
	}).(pulumi.Float64Output)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput() MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput) Index(i pulumi.IntInput) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate {
		return vs[0].([]MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate)[vs[1].(int)]
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput)
}

type MonitorTriggerConditionsSloSliCondition struct {
	Critical *MonitorTriggerConditionsSloSliConditionCritical `pulumi:"critical"`
	Warning  *MonitorTriggerConditionsSloSliConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsSloSliConditionInput is an input type that accepts MonitorTriggerConditionsSloSliConditionArgs and MonitorTriggerConditionsSloSliConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionInput` via:
//
//	MonitorTriggerConditionsSloSliConditionArgs{...}
type MonitorTriggerConditionsSloSliConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionOutput() MonitorTriggerConditionsSloSliConditionOutput
	ToMonitorTriggerConditionsSloSliConditionOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionOutput
}

type MonitorTriggerConditionsSloSliConditionArgs struct {
	Critical MonitorTriggerConditionsSloSliConditionCriticalPtrInput `pulumi:"critical"`
	Warning  MonitorTriggerConditionsSloSliConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsSloSliConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionOutput() MonitorTriggerConditionsSloSliConditionOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionOutput)
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionOutput).ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloSliConditionPtrInput is an input type that accepts MonitorTriggerConditionsSloSliConditionArgs, MonitorTriggerConditionsSloSliConditionPtr and MonitorTriggerConditionsSloSliConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionPtrInput` via:
//
//	        MonitorTriggerConditionsSloSliConditionArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsSloSliConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput
	ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput
}

type monitorTriggerConditionsSloSliConditionPtrType MonitorTriggerConditionsSloSliConditionArgs

func MonitorTriggerConditionsSloSliConditionPtr(v *MonitorTriggerConditionsSloSliConditionArgs) MonitorTriggerConditionsSloSliConditionPtrInput {
	return (*monitorTriggerConditionsSloSliConditionPtrType)(v)
}

func (*monitorTriggerConditionsSloSliConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloSliConditionPtrType) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloSliConditionPtrType) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionOutput() MonitorTriggerConditionsSloSliConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliCondition {
		return &v
	}).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionOutput) Critical() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionOutput) Warning() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) Elem() MonitorTriggerConditionsSloSliConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliCondition) MonitorTriggerConditionsSloSliCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloSliCondition
		return ret
	}).(MonitorTriggerConditionsSloSliConditionOutput)
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) Critical() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) Warning() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionCritical struct {
	SliThreshold float64 `pulumi:"sliThreshold"`
}

// MonitorTriggerConditionsSloSliConditionCriticalInput is an input type that accepts MonitorTriggerConditionsSloSliConditionCriticalArgs and MonitorTriggerConditionsSloSliConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionCriticalInput` via:
//
//	MonitorTriggerConditionsSloSliConditionCriticalArgs{...}
type MonitorTriggerConditionsSloSliConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionCriticalOutput() MonitorTriggerConditionsSloSliConditionCriticalOutput
	ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionCriticalOutput
}

type MonitorTriggerConditionsSloSliConditionCriticalArgs struct {
	SliThreshold pulumi.Float64Input `pulumi:"sliThreshold"`
}

func (MonitorTriggerConditionsSloSliConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalOutput() MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionCriticalOutput)
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionCriticalOutput).ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloSliConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsSloSliConditionCriticalArgs, MonitorTriggerConditionsSloSliConditionCriticalPtr and MonitorTriggerConditionsSloSliConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionCriticalPtrInput` via:
//
//	        MonitorTriggerConditionsSloSliConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsSloSliConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput
	ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput
}

type monitorTriggerConditionsSloSliConditionCriticalPtrType MonitorTriggerConditionsSloSliConditionCriticalArgs

func MonitorTriggerConditionsSloSliConditionCriticalPtr(v *MonitorTriggerConditionsSloSliConditionCriticalArgs) MonitorTriggerConditionsSloSliConditionCriticalPtrInput {
	return (*monitorTriggerConditionsSloSliConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsSloSliConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloSliConditionCriticalPtrType) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloSliConditionCriticalPtrType) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalOutput() MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloSliConditionCritical) *MonitorTriggerConditionsSloSliConditionCritical {
		return &v
	}).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) SliThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliConditionCritical) float64 { return v.SliThreshold }).(pulumi.Float64Output)
}

type MonitorTriggerConditionsSloSliConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionCritical) MonitorTriggerConditionsSloSliConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloSliConditionCritical
		return ret
	}).(MonitorTriggerConditionsSloSliConditionCriticalOutput)
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) SliThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return &v.SliThreshold
	}).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsSloSliConditionWarning struct {
	SliThreshold float64 `pulumi:"sliThreshold"`
}

// MonitorTriggerConditionsSloSliConditionWarningInput is an input type that accepts MonitorTriggerConditionsSloSliConditionWarningArgs and MonitorTriggerConditionsSloSliConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionWarningInput` via:
//
//	MonitorTriggerConditionsSloSliConditionWarningArgs{...}
type MonitorTriggerConditionsSloSliConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionWarningOutput() MonitorTriggerConditionsSloSliConditionWarningOutput
	ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionWarningOutput
}

type MonitorTriggerConditionsSloSliConditionWarningArgs struct {
	SliThreshold pulumi.Float64Input `pulumi:"sliThreshold"`
}

func (MonitorTriggerConditionsSloSliConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningOutput() MonitorTriggerConditionsSloSliConditionWarningOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionWarningOutput)
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionWarningOutput).ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloSliConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsSloSliConditionWarningArgs, MonitorTriggerConditionsSloSliConditionWarningPtr and MonitorTriggerConditionsSloSliConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionWarningPtrInput` via:
//
//	        MonitorTriggerConditionsSloSliConditionWarningArgs{...}
//
//	or:
//
//	        nil
type MonitorTriggerConditionsSloSliConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput
	ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput
}

type monitorTriggerConditionsSloSliConditionWarningPtrType MonitorTriggerConditionsSloSliConditionWarningArgs

func MonitorTriggerConditionsSloSliConditionWarningPtr(v *MonitorTriggerConditionsSloSliConditionWarningArgs) MonitorTriggerConditionsSloSliConditionWarningPtrInput {
	return (*monitorTriggerConditionsSloSliConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsSloSliConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloSliConditionWarningPtrType) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloSliConditionWarningPtrType) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningOutput() MonitorTriggerConditionsSloSliConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloSliConditionWarning) *MonitorTriggerConditionsSloSliConditionWarning {
		return &v
	}).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) SliThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliConditionWarning) float64 { return v.SliThreshold }).(pulumi.Float64Output)
}

type MonitorTriggerConditionsSloSliConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) Elem() MonitorTriggerConditionsSloSliConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionWarning) MonitorTriggerConditionsSloSliConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloSliConditionWarning
		return ret
	}).(MonitorTriggerConditionsSloSliConditionWarningOutput)
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) SliThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return &v.SliThreshold
	}).(pulumi.Float64PtrOutput)
}

type MutingScheduleMonitor struct {
	// True if the schedule applies to all monitors
	All *bool `pulumi:"all"`
	// List of monitor Ids in hex. Must be empty if `all` is true.
	Ids []string `pulumi:"ids"`
}

// MutingScheduleMonitorInput is an input type that accepts MutingScheduleMonitorArgs and MutingScheduleMonitorOutput values.
// You can construct a concrete instance of `MutingScheduleMonitorInput` via:
//
//	MutingScheduleMonitorArgs{...}
type MutingScheduleMonitorInput interface {
	pulumi.Input

	ToMutingScheduleMonitorOutput() MutingScheduleMonitorOutput
	ToMutingScheduleMonitorOutputWithContext(context.Context) MutingScheduleMonitorOutput
}

type MutingScheduleMonitorArgs struct {
	// True if the schedule applies to all monitors
	All pulumi.BoolPtrInput `pulumi:"all"`
	// List of monitor Ids in hex. Must be empty if `all` is true.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
}

func (MutingScheduleMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MutingScheduleMonitor)(nil)).Elem()
}

func (i MutingScheduleMonitorArgs) ToMutingScheduleMonitorOutput() MutingScheduleMonitorOutput {
	return i.ToMutingScheduleMonitorOutputWithContext(context.Background())
}

func (i MutingScheduleMonitorArgs) ToMutingScheduleMonitorOutputWithContext(ctx context.Context) MutingScheduleMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutingScheduleMonitorOutput)
}

func (i MutingScheduleMonitorArgs) ToMutingScheduleMonitorPtrOutput() MutingScheduleMonitorPtrOutput {
	return i.ToMutingScheduleMonitorPtrOutputWithContext(context.Background())
}

func (i MutingScheduleMonitorArgs) ToMutingScheduleMonitorPtrOutputWithContext(ctx context.Context) MutingScheduleMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutingScheduleMonitorOutput).ToMutingScheduleMonitorPtrOutputWithContext(ctx)
}

// MutingScheduleMonitorPtrInput is an input type that accepts MutingScheduleMonitorArgs, MutingScheduleMonitorPtr and MutingScheduleMonitorPtrOutput values.
// You can construct a concrete instance of `MutingScheduleMonitorPtrInput` via:
//
//	        MutingScheduleMonitorArgs{...}
//
//	or:
//
//	        nil
type MutingScheduleMonitorPtrInput interface {
	pulumi.Input

	ToMutingScheduleMonitorPtrOutput() MutingScheduleMonitorPtrOutput
	ToMutingScheduleMonitorPtrOutputWithContext(context.Context) MutingScheduleMonitorPtrOutput
}

type mutingScheduleMonitorPtrType MutingScheduleMonitorArgs

func MutingScheduleMonitorPtr(v *MutingScheduleMonitorArgs) MutingScheduleMonitorPtrInput {
	return (*mutingScheduleMonitorPtrType)(v)
}

func (*mutingScheduleMonitorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MutingScheduleMonitor)(nil)).Elem()
}

func (i *mutingScheduleMonitorPtrType) ToMutingScheduleMonitorPtrOutput() MutingScheduleMonitorPtrOutput {
	return i.ToMutingScheduleMonitorPtrOutputWithContext(context.Background())
}

func (i *mutingScheduleMonitorPtrType) ToMutingScheduleMonitorPtrOutputWithContext(ctx context.Context) MutingScheduleMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutingScheduleMonitorPtrOutput)
}

type MutingScheduleMonitorOutput struct{ *pulumi.OutputState }

func (MutingScheduleMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MutingScheduleMonitor)(nil)).Elem()
}

func (o MutingScheduleMonitorOutput) ToMutingScheduleMonitorOutput() MutingScheduleMonitorOutput {
	return o
}

func (o MutingScheduleMonitorOutput) ToMutingScheduleMonitorOutputWithContext(ctx context.Context) MutingScheduleMonitorOutput {
	return o
}

func (o MutingScheduleMonitorOutput) ToMutingScheduleMonitorPtrOutput() MutingScheduleMonitorPtrOutput {
	return o.ToMutingScheduleMonitorPtrOutputWithContext(context.Background())
}

func (o MutingScheduleMonitorOutput) ToMutingScheduleMonitorPtrOutputWithContext(ctx context.Context) MutingScheduleMonitorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MutingScheduleMonitor) *MutingScheduleMonitor {
		return &v
	}).(MutingScheduleMonitorPtrOutput)
}

// True if the schedule applies to all monitors
func (o MutingScheduleMonitorOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MutingScheduleMonitor) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// List of monitor Ids in hex. Must be empty if `all` is true.
func (o MutingScheduleMonitorOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MutingScheduleMonitor) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

type MutingScheduleMonitorPtrOutput struct{ *pulumi.OutputState }

func (MutingScheduleMonitorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutingScheduleMonitor)(nil)).Elem()
}

func (o MutingScheduleMonitorPtrOutput) ToMutingScheduleMonitorPtrOutput() MutingScheduleMonitorPtrOutput {
	return o
}

func (o MutingScheduleMonitorPtrOutput) ToMutingScheduleMonitorPtrOutputWithContext(ctx context.Context) MutingScheduleMonitorPtrOutput {
	return o
}

func (o MutingScheduleMonitorPtrOutput) Elem() MutingScheduleMonitorOutput {
	return o.ApplyT(func(v *MutingScheduleMonitor) MutingScheduleMonitor {
		if v != nil {
			return *v
		}
		var ret MutingScheduleMonitor
		return ret
	}).(MutingScheduleMonitorOutput)
}

// True if the schedule applies to all monitors
func (o MutingScheduleMonitorPtrOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MutingScheduleMonitor) *bool {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.BoolPtrOutput)
}

// List of monitor Ids in hex. Must be empty if `all` is true.
func (o MutingScheduleMonitorPtrOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MutingScheduleMonitor) []string {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(pulumi.StringArrayOutput)
}

type MutingScheduleSchedule struct {
	// Duration of the muting in minutes
	Duration int `pulumi:"duration"`
	// RRule (Recurrence Rule) Below are some examples of how to represent recurring events using the RRULE format:
	// A rule occurring on the third Sunday of April would be as follows: `FREQ=YEARLY;BYMONTH=4;BYDAY=SU;BYSETPOS=3`
	// An event occurring on the first and second Monday of October would be specified by the rule: `FREQ=YEARLY;BYMONTH=10;BYDAY=MO;BYSETPOS=1,2`
	// Event that repeats monthly: every 29th of every other month! `FREQ=MONTHLY;INTERVAL=2;BYMONTHDAY=29`
	// (https://freetools.textmagic.com/rrule-generator)
	Rrule *string `pulumi:"rrule"`
	// Schedule start date in the format of `yyyy-mm-dd`
	StartDate string `pulumi:"startDate"`
	// Schedule start time in the format of `hh:mm`
	StartTime string `pulumi:"startTime"`
	// Time zone for the schedule per
	// [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone string `pulumi:"timezone"`
}

// MutingScheduleScheduleInput is an input type that accepts MutingScheduleScheduleArgs and MutingScheduleScheduleOutput values.
// You can construct a concrete instance of `MutingScheduleScheduleInput` via:
//
//	MutingScheduleScheduleArgs{...}
type MutingScheduleScheduleInput interface {
	pulumi.Input

	ToMutingScheduleScheduleOutput() MutingScheduleScheduleOutput
	ToMutingScheduleScheduleOutputWithContext(context.Context) MutingScheduleScheduleOutput
}

type MutingScheduleScheduleArgs struct {
	// Duration of the muting in minutes
	Duration pulumi.IntInput `pulumi:"duration"`
	// RRule (Recurrence Rule) Below are some examples of how to represent recurring events using the RRULE format:
	// A rule occurring on the third Sunday of April would be as follows: `FREQ=YEARLY;BYMONTH=4;BYDAY=SU;BYSETPOS=3`
	// An event occurring on the first and second Monday of October would be specified by the rule: `FREQ=YEARLY;BYMONTH=10;BYDAY=MO;BYSETPOS=1,2`
	// Event that repeats monthly: every 29th of every other month! `FREQ=MONTHLY;INTERVAL=2;BYMONTHDAY=29`
	// (https://freetools.textmagic.com/rrule-generator)
	Rrule pulumi.StringPtrInput `pulumi:"rrule"`
	// Schedule start date in the format of `yyyy-mm-dd`
	StartDate pulumi.StringInput `pulumi:"startDate"`
	// Schedule start time in the format of `hh:mm`
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Time zone for the schedule per
	// [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (MutingScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MutingScheduleSchedule)(nil)).Elem()
}

func (i MutingScheduleScheduleArgs) ToMutingScheduleScheduleOutput() MutingScheduleScheduleOutput {
	return i.ToMutingScheduleScheduleOutputWithContext(context.Background())
}

func (i MutingScheduleScheduleArgs) ToMutingScheduleScheduleOutputWithContext(ctx context.Context) MutingScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutingScheduleScheduleOutput)
}

func (i MutingScheduleScheduleArgs) ToMutingScheduleSchedulePtrOutput() MutingScheduleSchedulePtrOutput {
	return i.ToMutingScheduleSchedulePtrOutputWithContext(context.Background())
}

func (i MutingScheduleScheduleArgs) ToMutingScheduleSchedulePtrOutputWithContext(ctx context.Context) MutingScheduleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutingScheduleScheduleOutput).ToMutingScheduleSchedulePtrOutputWithContext(ctx)
}

// MutingScheduleSchedulePtrInput is an input type that accepts MutingScheduleScheduleArgs, MutingScheduleSchedulePtr and MutingScheduleSchedulePtrOutput values.
// You can construct a concrete instance of `MutingScheduleSchedulePtrInput` via:
//
//	        MutingScheduleScheduleArgs{...}
//
//	or:
//
//	        nil
type MutingScheduleSchedulePtrInput interface {
	pulumi.Input

	ToMutingScheduleSchedulePtrOutput() MutingScheduleSchedulePtrOutput
	ToMutingScheduleSchedulePtrOutputWithContext(context.Context) MutingScheduleSchedulePtrOutput
}

type mutingScheduleSchedulePtrType MutingScheduleScheduleArgs

func MutingScheduleSchedulePtr(v *MutingScheduleScheduleArgs) MutingScheduleSchedulePtrInput {
	return (*mutingScheduleSchedulePtrType)(v)
}

func (*mutingScheduleSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MutingScheduleSchedule)(nil)).Elem()
}

func (i *mutingScheduleSchedulePtrType) ToMutingScheduleSchedulePtrOutput() MutingScheduleSchedulePtrOutput {
	return i.ToMutingScheduleSchedulePtrOutputWithContext(context.Background())
}

func (i *mutingScheduleSchedulePtrType) ToMutingScheduleSchedulePtrOutputWithContext(ctx context.Context) MutingScheduleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutingScheduleSchedulePtrOutput)
}

type MutingScheduleScheduleOutput struct{ *pulumi.OutputState }

func (MutingScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MutingScheduleSchedule)(nil)).Elem()
}

func (o MutingScheduleScheduleOutput) ToMutingScheduleScheduleOutput() MutingScheduleScheduleOutput {
	return o
}

func (o MutingScheduleScheduleOutput) ToMutingScheduleScheduleOutputWithContext(ctx context.Context) MutingScheduleScheduleOutput {
	return o
}

func (o MutingScheduleScheduleOutput) ToMutingScheduleSchedulePtrOutput() MutingScheduleSchedulePtrOutput {
	return o.ToMutingScheduleSchedulePtrOutputWithContext(context.Background())
}

func (o MutingScheduleScheduleOutput) ToMutingScheduleSchedulePtrOutputWithContext(ctx context.Context) MutingScheduleSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MutingScheduleSchedule) *MutingScheduleSchedule {
		return &v
	}).(MutingScheduleSchedulePtrOutput)
}

// Duration of the muting in minutes
func (o MutingScheduleScheduleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v MutingScheduleSchedule) int { return v.Duration }).(pulumi.IntOutput)
}

// RRule (Recurrence Rule) Below are some examples of how to represent recurring events using the RRULE format:
// A rule occurring on the third Sunday of April would be as follows: `FREQ=YEARLY;BYMONTH=4;BYDAY=SU;BYSETPOS=3`
// An event occurring on the first and second Monday of October would be specified by the rule: `FREQ=YEARLY;BYMONTH=10;BYDAY=MO;BYSETPOS=1,2`
// Event that repeats monthly: every 29th of every other month! `FREQ=MONTHLY;INTERVAL=2;BYMONTHDAY=29`
// (https://freetools.textmagic.com/rrule-generator)
func (o MutingScheduleScheduleOutput) Rrule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MutingScheduleSchedule) *string { return v.Rrule }).(pulumi.StringPtrOutput)
}

// Schedule start date in the format of `yyyy-mm-dd`
func (o MutingScheduleScheduleOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v MutingScheduleSchedule) string { return v.StartDate }).(pulumi.StringOutput)
}

// Schedule start time in the format of `hh:mm`
func (o MutingScheduleScheduleOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v MutingScheduleSchedule) string { return v.StartTime }).(pulumi.StringOutput)
}

// Time zone for the schedule per
// [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
func (o MutingScheduleScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v MutingScheduleSchedule) string { return v.Timezone }).(pulumi.StringOutput)
}

type MutingScheduleSchedulePtrOutput struct{ *pulumi.OutputState }

func (MutingScheduleSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutingScheduleSchedule)(nil)).Elem()
}

func (o MutingScheduleSchedulePtrOutput) ToMutingScheduleSchedulePtrOutput() MutingScheduleSchedulePtrOutput {
	return o
}

func (o MutingScheduleSchedulePtrOutput) ToMutingScheduleSchedulePtrOutputWithContext(ctx context.Context) MutingScheduleSchedulePtrOutput {
	return o
}

func (o MutingScheduleSchedulePtrOutput) Elem() MutingScheduleScheduleOutput {
	return o.ApplyT(func(v *MutingScheduleSchedule) MutingScheduleSchedule {
		if v != nil {
			return *v
		}
		var ret MutingScheduleSchedule
		return ret
	}).(MutingScheduleScheduleOutput)
}

// Duration of the muting in minutes
func (o MutingScheduleSchedulePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MutingScheduleSchedule) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// RRule (Recurrence Rule) Below are some examples of how to represent recurring events using the RRULE format:
// A rule occurring on the third Sunday of April would be as follows: `FREQ=YEARLY;BYMONTH=4;BYDAY=SU;BYSETPOS=3`
// An event occurring on the first and second Monday of October would be specified by the rule: `FREQ=YEARLY;BYMONTH=10;BYDAY=MO;BYSETPOS=1,2`
// Event that repeats monthly: every 29th of every other month! `FREQ=MONTHLY;INTERVAL=2;BYMONTHDAY=29`
// (https://freetools.textmagic.com/rrule-generator)
func (o MutingScheduleSchedulePtrOutput) Rrule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutingScheduleSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Rrule
	}).(pulumi.StringPtrOutput)
}

// Schedule start date in the format of `yyyy-mm-dd`
func (o MutingScheduleSchedulePtrOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutingScheduleSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.StartDate
	}).(pulumi.StringPtrOutput)
}

// Schedule start time in the format of `hh:mm`
func (o MutingScheduleSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutingScheduleSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Time zone for the schedule per
// [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
func (o MutingScheduleSchedulePtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutingScheduleSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type PoliciesUserConcurrentSessionsLimit struct {
	// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
	Enabled bool `pulumi:"enabled"`
	// Maximum number of concurrent sessions a user may have. Defaults to `100`.
	MaxConcurrentSessions *int `pulumi:"maxConcurrentSessions"`
}

// PoliciesUserConcurrentSessionsLimitInput is an input type that accepts PoliciesUserConcurrentSessionsLimitArgs and PoliciesUserConcurrentSessionsLimitOutput values.
// You can construct a concrete instance of `PoliciesUserConcurrentSessionsLimitInput` via:
//
//	PoliciesUserConcurrentSessionsLimitArgs{...}
type PoliciesUserConcurrentSessionsLimitInput interface {
	pulumi.Input

	ToPoliciesUserConcurrentSessionsLimitOutput() PoliciesUserConcurrentSessionsLimitOutput
	ToPoliciesUserConcurrentSessionsLimitOutputWithContext(context.Context) PoliciesUserConcurrentSessionsLimitOutput
}

type PoliciesUserConcurrentSessionsLimitArgs struct {
	// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Maximum number of concurrent sessions a user may have. Defaults to `100`.
	MaxConcurrentSessions pulumi.IntPtrInput `pulumi:"maxConcurrentSessions"`
}

func (PoliciesUserConcurrentSessionsLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitOutput() PoliciesUserConcurrentSessionsLimitOutput {
	return i.ToPoliciesUserConcurrentSessionsLimitOutputWithContext(context.Background())
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesUserConcurrentSessionsLimitOutput)
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return i.ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Background())
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesUserConcurrentSessionsLimitOutput).ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx)
}

// PoliciesUserConcurrentSessionsLimitPtrInput is an input type that accepts PoliciesUserConcurrentSessionsLimitArgs, PoliciesUserConcurrentSessionsLimitPtr and PoliciesUserConcurrentSessionsLimitPtrOutput values.
// You can construct a concrete instance of `PoliciesUserConcurrentSessionsLimitPtrInput` via:
//
//	        PoliciesUserConcurrentSessionsLimitArgs{...}
//
//	or:
//
//	        nil
type PoliciesUserConcurrentSessionsLimitPtrInput interface {
	pulumi.Input

	ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput
	ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput
}

type policiesUserConcurrentSessionsLimitPtrType PoliciesUserConcurrentSessionsLimitArgs

func PoliciesUserConcurrentSessionsLimitPtr(v *PoliciesUserConcurrentSessionsLimitArgs) PoliciesUserConcurrentSessionsLimitPtrInput {
	return (*policiesUserConcurrentSessionsLimitPtrType)(v)
}

func (*policiesUserConcurrentSessionsLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (i *policiesUserConcurrentSessionsLimitPtrType) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return i.ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Background())
}

func (i *policiesUserConcurrentSessionsLimitPtrType) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesUserConcurrentSessionsLimitPtrOutput)
}

type PoliciesUserConcurrentSessionsLimitOutput struct{ *pulumi.OutputState }

func (PoliciesUserConcurrentSessionsLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitOutput() PoliciesUserConcurrentSessionsLimitOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o.ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Background())
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoliciesUserConcurrentSessionsLimit) *PoliciesUserConcurrentSessionsLimit {
		return &v
	}).(PoliciesUserConcurrentSessionsLimitPtrOutput)
}

// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
func (o PoliciesUserConcurrentSessionsLimitOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PoliciesUserConcurrentSessionsLimit) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Maximum number of concurrent sessions a user may have. Defaults to `100`.
func (o PoliciesUserConcurrentSessionsLimitOutput) MaxConcurrentSessions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoliciesUserConcurrentSessionsLimit) *int { return v.MaxConcurrentSessions }).(pulumi.IntPtrOutput)
}

type PoliciesUserConcurrentSessionsLimitPtrOutput struct{ *pulumi.OutputState }

func (PoliciesUserConcurrentSessionsLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (o PoliciesUserConcurrentSessionsLimitPtrOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitPtrOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitPtrOutput) Elem() PoliciesUserConcurrentSessionsLimitOutput {
	return o.ApplyT(func(v *PoliciesUserConcurrentSessionsLimit) PoliciesUserConcurrentSessionsLimit {
		if v != nil {
			return *v
		}
		var ret PoliciesUserConcurrentSessionsLimit
		return ret
	}).(PoliciesUserConcurrentSessionsLimitOutput)
}

// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
func (o PoliciesUserConcurrentSessionsLimitPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoliciesUserConcurrentSessionsLimit) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of concurrent sessions a user may have. Defaults to `100`.
func (o PoliciesUserConcurrentSessionsLimitPtrOutput) MaxConcurrentSessions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoliciesUserConcurrentSessionsLimit) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentSessions
	}).(pulumi.IntPtrOutput)
}

type PollingSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type string `pulumi:"type"`
}

// PollingSourceAuthenticationInput is an input type that accepts PollingSourceAuthenticationArgs and PollingSourceAuthenticationOutput values.
// You can construct a concrete instance of `PollingSourceAuthenticationInput` via:
//
//	PollingSourceAuthenticationArgs{...}
type PollingSourceAuthenticationInput interface {
	pulumi.Input

	ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput
	ToPollingSourceAuthenticationOutputWithContext(context.Context) PollingSourceAuthenticationOutput
}

type PollingSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PollingSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceAuthentication)(nil)).Elem()
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput {
	return i.ToPollingSourceAuthenticationOutputWithContext(context.Background())
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationOutputWithContext(ctx context.Context) PollingSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationOutput)
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return i.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationOutput).ToPollingSourceAuthenticationPtrOutputWithContext(ctx)
}

// PollingSourceAuthenticationPtrInput is an input type that accepts PollingSourceAuthenticationArgs, PollingSourceAuthenticationPtr and PollingSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `PollingSourceAuthenticationPtrInput` via:
//
//	        PollingSourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type PollingSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput
	ToPollingSourceAuthenticationPtrOutputWithContext(context.Context) PollingSourceAuthenticationPtrOutput
}

type pollingSourceAuthenticationPtrType PollingSourceAuthenticationArgs

func PollingSourceAuthenticationPtr(v *PollingSourceAuthenticationArgs) PollingSourceAuthenticationPtrInput {
	return (*pollingSourceAuthenticationPtrType)(v)
}

func (*pollingSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourceAuthentication)(nil)).Elem()
}

func (i *pollingSourceAuthenticationPtrType) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return i.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *pollingSourceAuthenticationPtrType) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationPtrOutput)
}

type PollingSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (PollingSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceAuthentication)(nil)).Elem()
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput {
	return o
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationOutputWithContext(ctx context.Context) PollingSourceAuthenticationOutput {
	return o
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return o.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PollingSourceAuthentication) *PollingSourceAuthentication {
		return &v
	}).(PollingSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o PollingSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o PollingSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type PollingSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (PollingSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourceAuthentication)(nil)).Elem()
}

func (o PollingSourceAuthenticationPtrOutput) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return o
}

func (o PollingSourceAuthenticationPtrOutput) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return o
}

func (o PollingSourceAuthenticationPtrOutput) Elem() PollingSourceAuthenticationOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) PollingSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret PollingSourceAuthentication
		return ret
	}).(PollingSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o PollingSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o PollingSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PollingSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// PollingSourceDefaultDateFormatInput is an input type that accepts PollingSourceDefaultDateFormatArgs and PollingSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `PollingSourceDefaultDateFormatInput` via:
//
//	PollingSourceDefaultDateFormatArgs{...}
type PollingSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput
	ToPollingSourceDefaultDateFormatOutputWithContext(context.Context) PollingSourceDefaultDateFormatOutput
}

type PollingSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (PollingSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (i PollingSourceDefaultDateFormatArgs) ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput {
	return i.ToPollingSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i PollingSourceDefaultDateFormatArgs) ToPollingSourceDefaultDateFormatOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceDefaultDateFormatOutput)
}

// PollingSourceDefaultDateFormatArrayInput is an input type that accepts PollingSourceDefaultDateFormatArray and PollingSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `PollingSourceDefaultDateFormatArrayInput` via:
//
//	PollingSourceDefaultDateFormatArray{ PollingSourceDefaultDateFormatArgs{...} }
type PollingSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput
	ToPollingSourceDefaultDateFormatArrayOutputWithContext(context.Context) PollingSourceDefaultDateFormatArrayOutput
}

type PollingSourceDefaultDateFormatArray []PollingSourceDefaultDateFormatInput

func (PollingSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (i PollingSourceDefaultDateFormatArray) ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput {
	return i.ToPollingSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i PollingSourceDefaultDateFormatArray) ToPollingSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceDefaultDateFormatArrayOutput)
}

type PollingSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (PollingSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (o PollingSourceDefaultDateFormatOutput) ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput {
	return o
}

func (o PollingSourceDefaultDateFormatOutput) ToPollingSourceDefaultDateFormatOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatOutput {
	return o
}

func (o PollingSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o PollingSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type PollingSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (PollingSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (o PollingSourceDefaultDateFormatArrayOutput) ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput {
	return o
}

func (o PollingSourceDefaultDateFormatArrayOutput) ToPollingSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatArrayOutput {
	return o
}

func (o PollingSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) PollingSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourceDefaultDateFormat {
		return vs[0].([]PollingSourceDefaultDateFormat)[vs[1].(int)]
	}).(PollingSourceDefaultDateFormatOutput)
}

type PollingSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// PollingSourceFilterInput is an input type that accepts PollingSourceFilterArgs and PollingSourceFilterOutput values.
// You can construct a concrete instance of `PollingSourceFilterInput` via:
//
//	PollingSourceFilterArgs{...}
type PollingSourceFilterInput interface {
	pulumi.Input

	ToPollingSourceFilterOutput() PollingSourceFilterOutput
	ToPollingSourceFilterOutputWithContext(context.Context) PollingSourceFilterOutput
}

type PollingSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (PollingSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceFilter)(nil)).Elem()
}

func (i PollingSourceFilterArgs) ToPollingSourceFilterOutput() PollingSourceFilterOutput {
	return i.ToPollingSourceFilterOutputWithContext(context.Background())
}

func (i PollingSourceFilterArgs) ToPollingSourceFilterOutputWithContext(ctx context.Context) PollingSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceFilterOutput)
}

// PollingSourceFilterArrayInput is an input type that accepts PollingSourceFilterArray and PollingSourceFilterArrayOutput values.
// You can construct a concrete instance of `PollingSourceFilterArrayInput` via:
//
//	PollingSourceFilterArray{ PollingSourceFilterArgs{...} }
type PollingSourceFilterArrayInput interface {
	pulumi.Input

	ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput
	ToPollingSourceFilterArrayOutputWithContext(context.Context) PollingSourceFilterArrayOutput
}

type PollingSourceFilterArray []PollingSourceFilterInput

func (PollingSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceFilter)(nil)).Elem()
}

func (i PollingSourceFilterArray) ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput {
	return i.ToPollingSourceFilterArrayOutputWithContext(context.Background())
}

func (i PollingSourceFilterArray) ToPollingSourceFilterArrayOutputWithContext(ctx context.Context) PollingSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceFilterArrayOutput)
}

type PollingSourceFilterOutput struct{ *pulumi.OutputState }

func (PollingSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceFilter)(nil)).Elem()
}

func (o PollingSourceFilterOutput) ToPollingSourceFilterOutput() PollingSourceFilterOutput {
	return o
}

func (o PollingSourceFilterOutput) ToPollingSourceFilterOutputWithContext(ctx context.Context) PollingSourceFilterOutput {
	return o
}

func (o PollingSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o PollingSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o PollingSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o PollingSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type PollingSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (PollingSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceFilter)(nil)).Elem()
}

func (o PollingSourceFilterArrayOutput) ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput {
	return o
}

func (o PollingSourceFilterArrayOutput) ToPollingSourceFilterArrayOutputWithContext(ctx context.Context) PollingSourceFilterArrayOutput {
	return o
}

func (o PollingSourceFilterArrayOutput) Index(i pulumi.IntInput) PollingSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourceFilter {
		return vs[0].([]PollingSourceFilter)[vs[1].(int)]
	}).(PollingSourceFilterOutput)
}

type PollingSourcePath struct {
	// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
	BucketName *string `pulumi:"bucketName"`
	// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
	LimitToRegions []string `pulumi:"limitToRegions"`
	// The path to the data. This is needed if using type `S3BucketPathExpression`.
	PathExpression *string `pulumi:"pathExpression"`
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters []PollingSourcePathTagFilter `pulumi:"tagFilters"`
	// type of polling source. Can be one of `S3BucketPathExpression` or  `CloudWatchPath`
	Type string `pulumi:"type"`
}

// PollingSourcePathInput is an input type that accepts PollingSourcePathArgs and PollingSourcePathOutput values.
// You can construct a concrete instance of `PollingSourcePathInput` via:
//
//	PollingSourcePathArgs{...}
type PollingSourcePathInput interface {
	pulumi.Input

	ToPollingSourcePathOutput() PollingSourcePathOutput
	ToPollingSourcePathOutputWithContext(context.Context) PollingSourcePathOutput
}

type PollingSourcePathArgs struct {
	// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
	LimitToRegions pulumi.StringArrayInput `pulumi:"limitToRegions"`
	// The path to the data. This is needed if using type `S3BucketPathExpression`.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters PollingSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	// type of polling source. Can be one of `S3BucketPathExpression` or  `CloudWatchPath`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PollingSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePath)(nil)).Elem()
}

func (i PollingSourcePathArgs) ToPollingSourcePathOutput() PollingSourcePathOutput {
	return i.ToPollingSourcePathOutputWithContext(context.Background())
}

func (i PollingSourcePathArgs) ToPollingSourcePathOutputWithContext(ctx context.Context) PollingSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathOutput)
}

func (i PollingSourcePathArgs) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return i.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (i PollingSourcePathArgs) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathOutput).ToPollingSourcePathPtrOutputWithContext(ctx)
}

// PollingSourcePathPtrInput is an input type that accepts PollingSourcePathArgs, PollingSourcePathPtr and PollingSourcePathPtrOutput values.
// You can construct a concrete instance of `PollingSourcePathPtrInput` via:
//
//	        PollingSourcePathArgs{...}
//
//	or:
//
//	        nil
type PollingSourcePathPtrInput interface {
	pulumi.Input

	ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput
	ToPollingSourcePathPtrOutputWithContext(context.Context) PollingSourcePathPtrOutput
}

type pollingSourcePathPtrType PollingSourcePathArgs

func PollingSourcePathPtr(v *PollingSourcePathArgs) PollingSourcePathPtrInput {
	return (*pollingSourcePathPtrType)(v)
}

func (*pollingSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourcePath)(nil)).Elem()
}

func (i *pollingSourcePathPtrType) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return i.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (i *pollingSourcePathPtrType) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathPtrOutput)
}

type PollingSourcePathOutput struct{ *pulumi.OutputState }

func (PollingSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePath)(nil)).Elem()
}

func (o PollingSourcePathOutput) ToPollingSourcePathOutput() PollingSourcePathOutput {
	return o
}

func (o PollingSourcePathOutput) ToPollingSourcePathOutputWithContext(ctx context.Context) PollingSourcePathOutput {
	return o
}

func (o PollingSourcePathOutput) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return o.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (o PollingSourcePathOutput) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PollingSourcePath) *PollingSourcePath {
		return &v
	}).(PollingSourcePathPtrOutput)
}

// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
func (o PollingSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
func (o PollingSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

// The path to the data. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o PollingSourcePathOutput) TagFilters() PollingSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []PollingSourcePathTagFilter { return v.TagFilters }).(PollingSourcePathTagFilterArrayOutput)
}

// type of polling source. Can be one of `S3BucketPathExpression` or  `CloudWatchPath`
func (o PollingSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type PollingSourcePathPtrOutput struct{ *pulumi.OutputState }

func (PollingSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourcePath)(nil)).Elem()
}

func (o PollingSourcePathPtrOutput) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return o
}

func (o PollingSourcePathPtrOutput) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return o
}

func (o PollingSourcePathPtrOutput) Elem() PollingSourcePathOutput {
	return o.ApplyT(func(v *PollingSourcePath) PollingSourcePath {
		if v != nil {
			return *v
		}
		var ret PollingSourcePath
		return ret
	}).(PollingSourcePathOutput)
}

// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
func (o PollingSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
func (o PollingSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

// The path to the data. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o PollingSourcePathPtrOutput) TagFilters() PollingSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []PollingSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(PollingSourcePathTagFilterArrayOutput)
}

// type of polling source. Can be one of `S3BucketPathExpression` or  `CloudWatchPath`
func (o PollingSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PollingSourcePathTagFilter struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace *string `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags []string `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type *string `pulumi:"type"`
}

// PollingSourcePathTagFilterInput is an input type that accepts PollingSourcePathTagFilterArgs and PollingSourcePathTagFilterOutput values.
// You can construct a concrete instance of `PollingSourcePathTagFilterInput` via:
//
//	PollingSourcePathTagFilterArgs{...}
type PollingSourcePathTagFilterInput interface {
	pulumi.Input

	ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput
	ToPollingSourcePathTagFilterOutputWithContext(context.Context) PollingSourcePathTagFilterOutput
}

type PollingSourcePathTagFilterArgs struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PollingSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePathTagFilter)(nil)).Elem()
}

func (i PollingSourcePathTagFilterArgs) ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput {
	return i.ToPollingSourcePathTagFilterOutputWithContext(context.Background())
}

func (i PollingSourcePathTagFilterArgs) ToPollingSourcePathTagFilterOutputWithContext(ctx context.Context) PollingSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathTagFilterOutput)
}

// PollingSourcePathTagFilterArrayInput is an input type that accepts PollingSourcePathTagFilterArray and PollingSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `PollingSourcePathTagFilterArrayInput` via:
//
//	PollingSourcePathTagFilterArray{ PollingSourcePathTagFilterArgs{...} }
type PollingSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput
	ToPollingSourcePathTagFilterArrayOutputWithContext(context.Context) PollingSourcePathTagFilterArrayOutput
}

type PollingSourcePathTagFilterArray []PollingSourcePathTagFilterInput

func (PollingSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourcePathTagFilter)(nil)).Elem()
}

func (i PollingSourcePathTagFilterArray) ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput {
	return i.ToPollingSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i PollingSourcePathTagFilterArray) ToPollingSourcePathTagFilterArrayOutputWithContext(ctx context.Context) PollingSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathTagFilterArrayOutput)
}

type PollingSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (PollingSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePathTagFilter)(nil)).Elem()
}

func (o PollingSourcePathTagFilterOutput) ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput {
	return o
}

func (o PollingSourcePathTagFilterOutput) ToPollingSourcePathTagFilterOutputWithContext(ctx context.Context) PollingSourcePathTagFilterOutput {
	return o
}

// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
func (o PollingSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
func (o PollingSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`
func (o PollingSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PollingSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (PollingSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourcePathTagFilter)(nil)).Elem()
}

func (o PollingSourcePathTagFilterArrayOutput) ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput {
	return o
}

func (o PollingSourcePathTagFilterArrayOutput) ToPollingSourcePathTagFilterArrayOutputWithContext(ctx context.Context) PollingSourcePathTagFilterArrayOutput {
	return o
}

func (o PollingSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) PollingSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourcePathTagFilter {
		return vs[0].([]PollingSourcePathTagFilter)[vs[1].(int)]
	}).(PollingSourcePathTagFilterOutput)
}

type RumSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// RumSourceDefaultDateFormatInput is an input type that accepts RumSourceDefaultDateFormatArgs and RumSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `RumSourceDefaultDateFormatInput` via:
//
//	RumSourceDefaultDateFormatArgs{...}
type RumSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToRumSourceDefaultDateFormatOutput() RumSourceDefaultDateFormatOutput
	ToRumSourceDefaultDateFormatOutputWithContext(context.Context) RumSourceDefaultDateFormatOutput
}

type RumSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (RumSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumSourceDefaultDateFormat)(nil)).Elem()
}

func (i RumSourceDefaultDateFormatArgs) ToRumSourceDefaultDateFormatOutput() RumSourceDefaultDateFormatOutput {
	return i.ToRumSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i RumSourceDefaultDateFormatArgs) ToRumSourceDefaultDateFormatOutputWithContext(ctx context.Context) RumSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourceDefaultDateFormatOutput)
}

// RumSourceDefaultDateFormatArrayInput is an input type that accepts RumSourceDefaultDateFormatArray and RumSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `RumSourceDefaultDateFormatArrayInput` via:
//
//	RumSourceDefaultDateFormatArray{ RumSourceDefaultDateFormatArgs{...} }
type RumSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToRumSourceDefaultDateFormatArrayOutput() RumSourceDefaultDateFormatArrayOutput
	ToRumSourceDefaultDateFormatArrayOutputWithContext(context.Context) RumSourceDefaultDateFormatArrayOutput
}

type RumSourceDefaultDateFormatArray []RumSourceDefaultDateFormatInput

func (RumSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RumSourceDefaultDateFormat)(nil)).Elem()
}

func (i RumSourceDefaultDateFormatArray) ToRumSourceDefaultDateFormatArrayOutput() RumSourceDefaultDateFormatArrayOutput {
	return i.ToRumSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i RumSourceDefaultDateFormatArray) ToRumSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) RumSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourceDefaultDateFormatArrayOutput)
}

type RumSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (RumSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumSourceDefaultDateFormat)(nil)).Elem()
}

func (o RumSourceDefaultDateFormatOutput) ToRumSourceDefaultDateFormatOutput() RumSourceDefaultDateFormatOutput {
	return o
}

func (o RumSourceDefaultDateFormatOutput) ToRumSourceDefaultDateFormatOutputWithContext(ctx context.Context) RumSourceDefaultDateFormatOutput {
	return o
}

func (o RumSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v RumSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o RumSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type RumSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (RumSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RumSourceDefaultDateFormat)(nil)).Elem()
}

func (o RumSourceDefaultDateFormatArrayOutput) ToRumSourceDefaultDateFormatArrayOutput() RumSourceDefaultDateFormatArrayOutput {
	return o
}

func (o RumSourceDefaultDateFormatArrayOutput) ToRumSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) RumSourceDefaultDateFormatArrayOutput {
	return o
}

func (o RumSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) RumSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RumSourceDefaultDateFormat {
		return vs[0].([]RumSourceDefaultDateFormat)[vs[1].(int)]
	}).(RumSourceDefaultDateFormatOutput)
}

type RumSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// RumSourceFilterInput is an input type that accepts RumSourceFilterArgs and RumSourceFilterOutput values.
// You can construct a concrete instance of `RumSourceFilterInput` via:
//
//	RumSourceFilterArgs{...}
type RumSourceFilterInput interface {
	pulumi.Input

	ToRumSourceFilterOutput() RumSourceFilterOutput
	ToRumSourceFilterOutputWithContext(context.Context) RumSourceFilterOutput
}

type RumSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (RumSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumSourceFilter)(nil)).Elem()
}

func (i RumSourceFilterArgs) ToRumSourceFilterOutput() RumSourceFilterOutput {
	return i.ToRumSourceFilterOutputWithContext(context.Background())
}

func (i RumSourceFilterArgs) ToRumSourceFilterOutputWithContext(ctx context.Context) RumSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourceFilterOutput)
}

// RumSourceFilterArrayInput is an input type that accepts RumSourceFilterArray and RumSourceFilterArrayOutput values.
// You can construct a concrete instance of `RumSourceFilterArrayInput` via:
//
//	RumSourceFilterArray{ RumSourceFilterArgs{...} }
type RumSourceFilterArrayInput interface {
	pulumi.Input

	ToRumSourceFilterArrayOutput() RumSourceFilterArrayOutput
	ToRumSourceFilterArrayOutputWithContext(context.Context) RumSourceFilterArrayOutput
}

type RumSourceFilterArray []RumSourceFilterInput

func (RumSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RumSourceFilter)(nil)).Elem()
}

func (i RumSourceFilterArray) ToRumSourceFilterArrayOutput() RumSourceFilterArrayOutput {
	return i.ToRumSourceFilterArrayOutputWithContext(context.Background())
}

func (i RumSourceFilterArray) ToRumSourceFilterArrayOutputWithContext(ctx context.Context) RumSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourceFilterArrayOutput)
}

type RumSourceFilterOutput struct{ *pulumi.OutputState }

func (RumSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumSourceFilter)(nil)).Elem()
}

func (o RumSourceFilterOutput) ToRumSourceFilterOutput() RumSourceFilterOutput {
	return o
}

func (o RumSourceFilterOutput) ToRumSourceFilterOutputWithContext(ctx context.Context) RumSourceFilterOutput {
	return o
}

func (o RumSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v RumSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o RumSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o RumSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RumSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RumSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v RumSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type RumSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (RumSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RumSourceFilter)(nil)).Elem()
}

func (o RumSourceFilterArrayOutput) ToRumSourceFilterArrayOutput() RumSourceFilterArrayOutput {
	return o
}

func (o RumSourceFilterArrayOutput) ToRumSourceFilterArrayOutputWithContext(ctx context.Context) RumSourceFilterArrayOutput {
	return o
}

func (o RumSourceFilterArrayOutput) Index(i pulumi.IntInput) RumSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RumSourceFilter {
		return vs[0].([]RumSourceFilter)[vs[1].(int)]
	}).(RumSourceFilterOutput)
}

type RumSourcePath struct {
	// (Recommended) Add an Application Name tag of a text string to show for the app name in spans (for example, bookings-app). This groups services in the Application Service View. If left blank, services will belong to a "default" application.
	ApplicationName *string `pulumi:"applicationName"`
	// Defines custom tags attached to the spans. For example: "internal.version = 0.1.21"
	CustomTags map[string]string `pulumi:"customTags"`
	// Your production, staging, or development environment name.
	DeploymentEnvironment *string `pulumi:"deploymentEnvironment"`
	// Add a list of URLs not to collect trace data from. Supports regex. Make sure provided URLs are valid JavaScript flavor regexes. For example: "/^https:\/\/www.tracker.com\/.*/, /^https:\/\/api.mydomain.com\/log\/.*/"
	IgnoreUrls []string `pulumi:"ignoreUrls"`
	// (Recommended) Add a list of URLs or URL patterns that pass tracing context to construct traces end-to-end. Provided URLs should be valid JavaScript flavor regexes. Some examples are "/^https:\/\/api.mydomain.com\/apiv3\/.*/" and "/^https:\/\/www.3rdparty.com\/.*/".
	PropagateTraceHeaderCorsUrls []string `pulumi:"propagateTraceHeaderCorsUrls"`
	// Add a Probabilistic sampling rate for heavy traffic sites in a decimal value based on percentage, for example, 10% would be entered as 0.1. Supports floating values between 0.0 and 1.0, defaults to 1.0 (all data is passed).
	SamplingRate *float64 `pulumi:"samplingRate"`
	// Specify if you want to enrich spans with the details level up to the city - if left blank, enrichment works down to the state level.
	SelectedCountry *string `pulumi:"selectedCountry"`
	// Add a Service Name of a text string to show for the service name in spans (for example, "bookings-web-app").
	ServiceName string `pulumi:"serviceName"`
}

// RumSourcePathInput is an input type that accepts RumSourcePathArgs and RumSourcePathOutput values.
// You can construct a concrete instance of `RumSourcePathInput` via:
//
//	RumSourcePathArgs{...}
type RumSourcePathInput interface {
	pulumi.Input

	ToRumSourcePathOutput() RumSourcePathOutput
	ToRumSourcePathOutputWithContext(context.Context) RumSourcePathOutput
}

type RumSourcePathArgs struct {
	// (Recommended) Add an Application Name tag of a text string to show for the app name in spans (for example, bookings-app). This groups services in the Application Service View. If left blank, services will belong to a "default" application.
	ApplicationName pulumi.StringPtrInput `pulumi:"applicationName"`
	// Defines custom tags attached to the spans. For example: "internal.version = 0.1.21"
	CustomTags pulumi.StringMapInput `pulumi:"customTags"`
	// Your production, staging, or development environment name.
	DeploymentEnvironment pulumi.StringPtrInput `pulumi:"deploymentEnvironment"`
	// Add a list of URLs not to collect trace data from. Supports regex. Make sure provided URLs are valid JavaScript flavor regexes. For example: "/^https:\/\/www.tracker.com\/.*/, /^https:\/\/api.mydomain.com\/log\/.*/"
	IgnoreUrls pulumi.StringArrayInput `pulumi:"ignoreUrls"`
	// (Recommended) Add a list of URLs or URL patterns that pass tracing context to construct traces end-to-end. Provided URLs should be valid JavaScript flavor regexes. Some examples are "/^https:\/\/api.mydomain.com\/apiv3\/.*/" and "/^https:\/\/www.3rdparty.com\/.*/".
	PropagateTraceHeaderCorsUrls pulumi.StringArrayInput `pulumi:"propagateTraceHeaderCorsUrls"`
	// Add a Probabilistic sampling rate for heavy traffic sites in a decimal value based on percentage, for example, 10% would be entered as 0.1. Supports floating values between 0.0 and 1.0, defaults to 1.0 (all data is passed).
	SamplingRate pulumi.Float64PtrInput `pulumi:"samplingRate"`
	// Specify if you want to enrich spans with the details level up to the city - if left blank, enrichment works down to the state level.
	SelectedCountry pulumi.StringPtrInput `pulumi:"selectedCountry"`
	// Add a Service Name of a text string to show for the service name in spans (for example, "bookings-web-app").
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (RumSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumSourcePath)(nil)).Elem()
}

func (i RumSourcePathArgs) ToRumSourcePathOutput() RumSourcePathOutput {
	return i.ToRumSourcePathOutputWithContext(context.Background())
}

func (i RumSourcePathArgs) ToRumSourcePathOutputWithContext(ctx context.Context) RumSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourcePathOutput)
}

func (i RumSourcePathArgs) ToRumSourcePathPtrOutput() RumSourcePathPtrOutput {
	return i.ToRumSourcePathPtrOutputWithContext(context.Background())
}

func (i RumSourcePathArgs) ToRumSourcePathPtrOutputWithContext(ctx context.Context) RumSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourcePathOutput).ToRumSourcePathPtrOutputWithContext(ctx)
}

// RumSourcePathPtrInput is an input type that accepts RumSourcePathArgs, RumSourcePathPtr and RumSourcePathPtrOutput values.
// You can construct a concrete instance of `RumSourcePathPtrInput` via:
//
//	        RumSourcePathArgs{...}
//
//	or:
//
//	        nil
type RumSourcePathPtrInput interface {
	pulumi.Input

	ToRumSourcePathPtrOutput() RumSourcePathPtrOutput
	ToRumSourcePathPtrOutputWithContext(context.Context) RumSourcePathPtrOutput
}

type rumSourcePathPtrType RumSourcePathArgs

func RumSourcePathPtr(v *RumSourcePathArgs) RumSourcePathPtrInput {
	return (*rumSourcePathPtrType)(v)
}

func (*rumSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RumSourcePath)(nil)).Elem()
}

func (i *rumSourcePathPtrType) ToRumSourcePathPtrOutput() RumSourcePathPtrOutput {
	return i.ToRumSourcePathPtrOutputWithContext(context.Background())
}

func (i *rumSourcePathPtrType) ToRumSourcePathPtrOutputWithContext(ctx context.Context) RumSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumSourcePathPtrOutput)
}

type RumSourcePathOutput struct{ *pulumi.OutputState }

func (RumSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumSourcePath)(nil)).Elem()
}

func (o RumSourcePathOutput) ToRumSourcePathOutput() RumSourcePathOutput {
	return o
}

func (o RumSourcePathOutput) ToRumSourcePathOutputWithContext(ctx context.Context) RumSourcePathOutput {
	return o
}

func (o RumSourcePathOutput) ToRumSourcePathPtrOutput() RumSourcePathPtrOutput {
	return o.ToRumSourcePathPtrOutputWithContext(context.Background())
}

func (o RumSourcePathOutput) ToRumSourcePathPtrOutputWithContext(ctx context.Context) RumSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RumSourcePath) *RumSourcePath {
		return &v
	}).(RumSourcePathPtrOutput)
}

// (Recommended) Add an Application Name tag of a text string to show for the app name in spans (for example, bookings-app). This groups services in the Application Service View. If left blank, services will belong to a "default" application.
func (o RumSourcePathOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumSourcePath) *string { return v.ApplicationName }).(pulumi.StringPtrOutput)
}

// Defines custom tags attached to the spans. For example: "internal.version = 0.1.21"
func (o RumSourcePathOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RumSourcePath) map[string]string { return v.CustomTags }).(pulumi.StringMapOutput)
}

// Your production, staging, or development environment name.
func (o RumSourcePathOutput) DeploymentEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumSourcePath) *string { return v.DeploymentEnvironment }).(pulumi.StringPtrOutput)
}

// Add a list of URLs not to collect trace data from. Supports regex. Make sure provided URLs are valid JavaScript flavor regexes. For example: "/^https:\/\/www.tracker.com\/.*/, /^https:\/\/api.mydomain.com\/log\/.*/"
func (o RumSourcePathOutput) IgnoreUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RumSourcePath) []string { return v.IgnoreUrls }).(pulumi.StringArrayOutput)
}

// (Recommended) Add a list of URLs or URL patterns that pass tracing context to construct traces end-to-end. Provided URLs should be valid JavaScript flavor regexes. Some examples are "/^https:\/\/api.mydomain.com\/apiv3\/.*/" and "/^https:\/\/www.3rdparty.com\/.*/".
func (o RumSourcePathOutput) PropagateTraceHeaderCorsUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RumSourcePath) []string { return v.PropagateTraceHeaderCorsUrls }).(pulumi.StringArrayOutput)
}

// Add a Probabilistic sampling rate for heavy traffic sites in a decimal value based on percentage, for example, 10% would be entered as 0.1. Supports floating values between 0.0 and 1.0, defaults to 1.0 (all data is passed).
func (o RumSourcePathOutput) SamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RumSourcePath) *float64 { return v.SamplingRate }).(pulumi.Float64PtrOutput)
}

// Specify if you want to enrich spans with the details level up to the city - if left blank, enrichment works down to the state level.
func (o RumSourcePathOutput) SelectedCountry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumSourcePath) *string { return v.SelectedCountry }).(pulumi.StringPtrOutput)
}

// Add a Service Name of a text string to show for the service name in spans (for example, "bookings-web-app").
func (o RumSourcePathOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v RumSourcePath) string { return v.ServiceName }).(pulumi.StringOutput)
}

type RumSourcePathPtrOutput struct{ *pulumi.OutputState }

func (RumSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RumSourcePath)(nil)).Elem()
}

func (o RumSourcePathPtrOutput) ToRumSourcePathPtrOutput() RumSourcePathPtrOutput {
	return o
}

func (o RumSourcePathPtrOutput) ToRumSourcePathPtrOutputWithContext(ctx context.Context) RumSourcePathPtrOutput {
	return o
}

func (o RumSourcePathPtrOutput) Elem() RumSourcePathOutput {
	return o.ApplyT(func(v *RumSourcePath) RumSourcePath {
		if v != nil {
			return *v
		}
		var ret RumSourcePath
		return ret
	}).(RumSourcePathOutput)
}

// (Recommended) Add an Application Name tag of a text string to show for the app name in spans (for example, bookings-app). This groups services in the Application Service View. If left blank, services will belong to a "default" application.
func (o RumSourcePathPtrOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationName
	}).(pulumi.StringPtrOutput)
}

// Defines custom tags attached to the spans. For example: "internal.version = 0.1.21"
func (o RumSourcePathPtrOutput) CustomTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RumSourcePath) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomTags
	}).(pulumi.StringMapOutput)
}

// Your production, staging, or development environment name.
func (o RumSourcePathPtrOutput) DeploymentEnvironment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.DeploymentEnvironment
	}).(pulumi.StringPtrOutput)
}

// Add a list of URLs not to collect trace data from. Supports regex. Make sure provided URLs are valid JavaScript flavor regexes. For example: "/^https:\/\/www.tracker.com\/.*/, /^https:\/\/api.mydomain.com\/log\/.*/"
func (o RumSourcePathPtrOutput) IgnoreUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RumSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.IgnoreUrls
	}).(pulumi.StringArrayOutput)
}

// (Recommended) Add a list of URLs or URL patterns that pass tracing context to construct traces end-to-end. Provided URLs should be valid JavaScript flavor regexes. Some examples are "/^https:\/\/api.mydomain.com\/apiv3\/.*/" and "/^https:\/\/www.3rdparty.com\/.*/".
func (o RumSourcePathPtrOutput) PropagateTraceHeaderCorsUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RumSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.PropagateTraceHeaderCorsUrls
	}).(pulumi.StringArrayOutput)
}

// Add a Probabilistic sampling rate for heavy traffic sites in a decimal value based on percentage, for example, 10% would be entered as 0.1. Supports floating values between 0.0 and 1.0, defaults to 1.0 (all data is passed).
func (o RumSourcePathPtrOutput) SamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RumSourcePath) *float64 {
		if v == nil {
			return nil
		}
		return v.SamplingRate
	}).(pulumi.Float64PtrOutput)
}

// Specify if you want to enrich spans with the details level up to the city - if left blank, enrichment works down to the state level.
func (o RumSourcePathPtrOutput) SelectedCountry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.SelectedCountry
	}).(pulumi.StringPtrOutput)
}

// Add a Service Name of a text string to show for the service name in spans (for example, "bookings-web-app").
func (o RumSourcePathPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type S3ArchiveSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type string `pulumi:"type"`
}

// S3ArchiveSourceAuthenticationInput is an input type that accepts S3ArchiveSourceAuthenticationArgs and S3ArchiveSourceAuthenticationOutput values.
// You can construct a concrete instance of `S3ArchiveSourceAuthenticationInput` via:
//
//	S3ArchiveSourceAuthenticationArgs{...}
type S3ArchiveSourceAuthenticationInput interface {
	pulumi.Input

	ToS3ArchiveSourceAuthenticationOutput() S3ArchiveSourceAuthenticationOutput
	ToS3ArchiveSourceAuthenticationOutputWithContext(context.Context) S3ArchiveSourceAuthenticationOutput
}

type S3ArchiveSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (S3ArchiveSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourceAuthentication)(nil)).Elem()
}

func (i S3ArchiveSourceAuthenticationArgs) ToS3ArchiveSourceAuthenticationOutput() S3ArchiveSourceAuthenticationOutput {
	return i.ToS3ArchiveSourceAuthenticationOutputWithContext(context.Background())
}

func (i S3ArchiveSourceAuthenticationArgs) ToS3ArchiveSourceAuthenticationOutputWithContext(ctx context.Context) S3ArchiveSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceAuthenticationOutput)
}

func (i S3ArchiveSourceAuthenticationArgs) ToS3ArchiveSourceAuthenticationPtrOutput() S3ArchiveSourceAuthenticationPtrOutput {
	return i.ToS3ArchiveSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3ArchiveSourceAuthenticationArgs) ToS3ArchiveSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3ArchiveSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceAuthenticationOutput).ToS3ArchiveSourceAuthenticationPtrOutputWithContext(ctx)
}

// S3ArchiveSourceAuthenticationPtrInput is an input type that accepts S3ArchiveSourceAuthenticationArgs, S3ArchiveSourceAuthenticationPtr and S3ArchiveSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3ArchiveSourceAuthenticationPtrInput` via:
//
//	        S3ArchiveSourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type S3ArchiveSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3ArchiveSourceAuthenticationPtrOutput() S3ArchiveSourceAuthenticationPtrOutput
	ToS3ArchiveSourceAuthenticationPtrOutputWithContext(context.Context) S3ArchiveSourceAuthenticationPtrOutput
}

type s3archiveSourceAuthenticationPtrType S3ArchiveSourceAuthenticationArgs

func S3ArchiveSourceAuthenticationPtr(v *S3ArchiveSourceAuthenticationArgs) S3ArchiveSourceAuthenticationPtrInput {
	return (*s3archiveSourceAuthenticationPtrType)(v)
}

func (*s3archiveSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3ArchiveSourceAuthentication)(nil)).Elem()
}

func (i *s3archiveSourceAuthenticationPtrType) ToS3ArchiveSourceAuthenticationPtrOutput() S3ArchiveSourceAuthenticationPtrOutput {
	return i.ToS3ArchiveSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3archiveSourceAuthenticationPtrType) ToS3ArchiveSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3ArchiveSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceAuthenticationPtrOutput)
}

type S3ArchiveSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourceAuthentication)(nil)).Elem()
}

func (o S3ArchiveSourceAuthenticationOutput) ToS3ArchiveSourceAuthenticationOutput() S3ArchiveSourceAuthenticationOutput {
	return o
}

func (o S3ArchiveSourceAuthenticationOutput) ToS3ArchiveSourceAuthenticationOutputWithContext(ctx context.Context) S3ArchiveSourceAuthenticationOutput {
	return o
}

func (o S3ArchiveSourceAuthenticationOutput) ToS3ArchiveSourceAuthenticationPtrOutput() S3ArchiveSourceAuthenticationPtrOutput {
	return o.ToS3ArchiveSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3ArchiveSourceAuthenticationOutput) ToS3ArchiveSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3ArchiveSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3ArchiveSourceAuthentication) *S3ArchiveSourceAuthentication {
		return &v
	}).(S3ArchiveSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3ArchiveSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3ArchiveSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o S3ArchiveSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3ArchiveSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3ArchiveSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3ArchiveSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3ArchiveSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3ArchiveSourceAuthentication)(nil)).Elem()
}

func (o S3ArchiveSourceAuthenticationPtrOutput) ToS3ArchiveSourceAuthenticationPtrOutput() S3ArchiveSourceAuthenticationPtrOutput {
	return o
}

func (o S3ArchiveSourceAuthenticationPtrOutput) ToS3ArchiveSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3ArchiveSourceAuthenticationPtrOutput {
	return o
}

func (o S3ArchiveSourceAuthenticationPtrOutput) Elem() S3ArchiveSourceAuthenticationOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) S3ArchiveSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret S3ArchiveSourceAuthentication
		return ret
	}).(S3ArchiveSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3ArchiveSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3ArchiveSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o S3ArchiveSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3ArchiveSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3ArchiveSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3ArchiveSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3ArchiveSourceDefaultDateFormatInput is an input type that accepts S3ArchiveSourceDefaultDateFormatArgs and S3ArchiveSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3ArchiveSourceDefaultDateFormatInput` via:
//
//	S3ArchiveSourceDefaultDateFormatArgs{...}
type S3ArchiveSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3ArchiveSourceDefaultDateFormatOutput() S3ArchiveSourceDefaultDateFormatOutput
	ToS3ArchiveSourceDefaultDateFormatOutputWithContext(context.Context) S3ArchiveSourceDefaultDateFormatOutput
}

type S3ArchiveSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3ArchiveSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3ArchiveSourceDefaultDateFormatArgs) ToS3ArchiveSourceDefaultDateFormatOutput() S3ArchiveSourceDefaultDateFormatOutput {
	return i.ToS3ArchiveSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3ArchiveSourceDefaultDateFormatArgs) ToS3ArchiveSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3ArchiveSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceDefaultDateFormatOutput)
}

// S3ArchiveSourceDefaultDateFormatArrayInput is an input type that accepts S3ArchiveSourceDefaultDateFormatArray and S3ArchiveSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3ArchiveSourceDefaultDateFormatArrayInput` via:
//
//	S3ArchiveSourceDefaultDateFormatArray{ S3ArchiveSourceDefaultDateFormatArgs{...} }
type S3ArchiveSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3ArchiveSourceDefaultDateFormatArrayOutput() S3ArchiveSourceDefaultDateFormatArrayOutput
	ToS3ArchiveSourceDefaultDateFormatArrayOutputWithContext(context.Context) S3ArchiveSourceDefaultDateFormatArrayOutput
}

type S3ArchiveSourceDefaultDateFormatArray []S3ArchiveSourceDefaultDateFormatInput

func (S3ArchiveSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3ArchiveSourceDefaultDateFormatArray) ToS3ArchiveSourceDefaultDateFormatArrayOutput() S3ArchiveSourceDefaultDateFormatArrayOutput {
	return i.ToS3ArchiveSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3ArchiveSourceDefaultDateFormatArray) ToS3ArchiveSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3ArchiveSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceDefaultDateFormatArrayOutput)
}

type S3ArchiveSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3ArchiveSourceDefaultDateFormatOutput) ToS3ArchiveSourceDefaultDateFormatOutput() S3ArchiveSourceDefaultDateFormatOutput {
	return o
}

func (o S3ArchiveSourceDefaultDateFormatOutput) ToS3ArchiveSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3ArchiveSourceDefaultDateFormatOutput {
	return o
}

func (o S3ArchiveSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3ArchiveSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3ArchiveSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3ArchiveSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3ArchiveSourceDefaultDateFormatArrayOutput) ToS3ArchiveSourceDefaultDateFormatArrayOutput() S3ArchiveSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3ArchiveSourceDefaultDateFormatArrayOutput) ToS3ArchiveSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3ArchiveSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3ArchiveSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3ArchiveSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3ArchiveSourceDefaultDateFormat {
		return vs[0].([]S3ArchiveSourceDefaultDateFormat)[vs[1].(int)]
	}).(S3ArchiveSourceDefaultDateFormatOutput)
}

type S3ArchiveSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3ArchiveSourceFilterInput is an input type that accepts S3ArchiveSourceFilterArgs and S3ArchiveSourceFilterOutput values.
// You can construct a concrete instance of `S3ArchiveSourceFilterInput` via:
//
//	S3ArchiveSourceFilterArgs{...}
type S3ArchiveSourceFilterInput interface {
	pulumi.Input

	ToS3ArchiveSourceFilterOutput() S3ArchiveSourceFilterOutput
	ToS3ArchiveSourceFilterOutputWithContext(context.Context) S3ArchiveSourceFilterOutput
}

type S3ArchiveSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3ArchiveSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourceFilter)(nil)).Elem()
}

func (i S3ArchiveSourceFilterArgs) ToS3ArchiveSourceFilterOutput() S3ArchiveSourceFilterOutput {
	return i.ToS3ArchiveSourceFilterOutputWithContext(context.Background())
}

func (i S3ArchiveSourceFilterArgs) ToS3ArchiveSourceFilterOutputWithContext(ctx context.Context) S3ArchiveSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceFilterOutput)
}

// S3ArchiveSourceFilterArrayInput is an input type that accepts S3ArchiveSourceFilterArray and S3ArchiveSourceFilterArrayOutput values.
// You can construct a concrete instance of `S3ArchiveSourceFilterArrayInput` via:
//
//	S3ArchiveSourceFilterArray{ S3ArchiveSourceFilterArgs{...} }
type S3ArchiveSourceFilterArrayInput interface {
	pulumi.Input

	ToS3ArchiveSourceFilterArrayOutput() S3ArchiveSourceFilterArrayOutput
	ToS3ArchiveSourceFilterArrayOutputWithContext(context.Context) S3ArchiveSourceFilterArrayOutput
}

type S3ArchiveSourceFilterArray []S3ArchiveSourceFilterInput

func (S3ArchiveSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourceFilter)(nil)).Elem()
}

func (i S3ArchiveSourceFilterArray) ToS3ArchiveSourceFilterArrayOutput() S3ArchiveSourceFilterArrayOutput {
	return i.ToS3ArchiveSourceFilterArrayOutputWithContext(context.Background())
}

func (i S3ArchiveSourceFilterArray) ToS3ArchiveSourceFilterArrayOutputWithContext(ctx context.Context) S3ArchiveSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourceFilterArrayOutput)
}

type S3ArchiveSourceFilterOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourceFilter)(nil)).Elem()
}

func (o S3ArchiveSourceFilterOutput) ToS3ArchiveSourceFilterOutput() S3ArchiveSourceFilterOutput {
	return o
}

func (o S3ArchiveSourceFilterOutput) ToS3ArchiveSourceFilterOutputWithContext(ctx context.Context) S3ArchiveSourceFilterOutput {
	return o
}

func (o S3ArchiveSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3ArchiveSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3ArchiveSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3ArchiveSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3ArchiveSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3ArchiveSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3ArchiveSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourceFilter)(nil)).Elem()
}

func (o S3ArchiveSourceFilterArrayOutput) ToS3ArchiveSourceFilterArrayOutput() S3ArchiveSourceFilterArrayOutput {
	return o
}

func (o S3ArchiveSourceFilterArrayOutput) ToS3ArchiveSourceFilterArrayOutputWithContext(ctx context.Context) S3ArchiveSourceFilterArrayOutput {
	return o
}

func (o S3ArchiveSourceFilterArrayOutput) Index(i pulumi.IntInput) S3ArchiveSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3ArchiveSourceFilter {
		return vs[0].([]S3ArchiveSourceFilter)[vs[1].(int)]
	}).(S3ArchiveSourceFilterOutput)
}

type S3ArchiveSourcePath struct {
	// The name of the bucket.
	BucketName        *string                            `pulumi:"bucketName"`
	CustomServices    []S3ArchiveSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                           `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                           `pulumi:"limitToRegions"`
	LimitToServices   []string                           `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression             *string                                        `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns []S3ArchiveSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []S3ArchiveSourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// S3ArchiveSourcePathInput is an input type that accepts S3ArchiveSourcePathArgs and S3ArchiveSourcePathOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathInput` via:
//
//	S3ArchiveSourcePathArgs{...}
type S3ArchiveSourcePathInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathOutput() S3ArchiveSourcePathOutput
	ToS3ArchiveSourcePathOutputWithContext(context.Context) S3ArchiveSourcePathOutput
}

type S3ArchiveSourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput                      `pulumi:"bucketName"`
	CustomServices    S3ArchiveSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                    `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                    `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput                    `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression             pulumi.StringPtrInput                                  `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 S3ArchiveSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (S3ArchiveSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePath)(nil)).Elem()
}

func (i S3ArchiveSourcePathArgs) ToS3ArchiveSourcePathOutput() S3ArchiveSourcePathOutput {
	return i.ToS3ArchiveSourcePathOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathArgs) ToS3ArchiveSourcePathOutputWithContext(ctx context.Context) S3ArchiveSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathOutput)
}

func (i S3ArchiveSourcePathArgs) ToS3ArchiveSourcePathPtrOutput() S3ArchiveSourcePathPtrOutput {
	return i.ToS3ArchiveSourcePathPtrOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathArgs) ToS3ArchiveSourcePathPtrOutputWithContext(ctx context.Context) S3ArchiveSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathOutput).ToS3ArchiveSourcePathPtrOutputWithContext(ctx)
}

// S3ArchiveSourcePathPtrInput is an input type that accepts S3ArchiveSourcePathArgs, S3ArchiveSourcePathPtr and S3ArchiveSourcePathPtrOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathPtrInput` via:
//
//	        S3ArchiveSourcePathArgs{...}
//
//	or:
//
//	        nil
type S3ArchiveSourcePathPtrInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathPtrOutput() S3ArchiveSourcePathPtrOutput
	ToS3ArchiveSourcePathPtrOutputWithContext(context.Context) S3ArchiveSourcePathPtrOutput
}

type s3archiveSourcePathPtrType S3ArchiveSourcePathArgs

func S3ArchiveSourcePathPtr(v *S3ArchiveSourcePathArgs) S3ArchiveSourcePathPtrInput {
	return (*s3archiveSourcePathPtrType)(v)
}

func (*s3archiveSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3ArchiveSourcePath)(nil)).Elem()
}

func (i *s3archiveSourcePathPtrType) ToS3ArchiveSourcePathPtrOutput() S3ArchiveSourcePathPtrOutput {
	return i.ToS3ArchiveSourcePathPtrOutputWithContext(context.Background())
}

func (i *s3archiveSourcePathPtrType) ToS3ArchiveSourcePathPtrOutputWithContext(ctx context.Context) S3ArchiveSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathPtrOutput)
}

type S3ArchiveSourcePathOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePath)(nil)).Elem()
}

func (o S3ArchiveSourcePathOutput) ToS3ArchiveSourcePathOutput() S3ArchiveSourcePathOutput {
	return o
}

func (o S3ArchiveSourcePathOutput) ToS3ArchiveSourcePathOutputWithContext(ctx context.Context) S3ArchiveSourcePathOutput {
	return o
}

func (o S3ArchiveSourcePathOutput) ToS3ArchiveSourcePathPtrOutput() S3ArchiveSourcePathPtrOutput {
	return o.ToS3ArchiveSourcePathPtrOutputWithContext(context.Background())
}

func (o S3ArchiveSourcePathOutput) ToS3ArchiveSourcePathPtrOutputWithContext(ctx context.Context) S3ArchiveSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3ArchiveSourcePath) *S3ArchiveSourcePath {
		return &v
	}).(S3ArchiveSourcePathPtrOutput)
}

// The name of the bucket.
func (o S3ArchiveSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathOutput) CustomServices() S3ArchiveSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) []S3ArchiveSourcePathCustomService { return v.CustomServices }).(S3ArchiveSourcePathCustomServiceArrayOutput)
}

func (o S3ArchiveSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3ArchiveSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3ArchiveSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3ArchiveSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathOutput) SnsTopicOrSubscriptionArns() S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) []S3ArchiveSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3ArchiveSourcePathOutput) TagFilters() S3ArchiveSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) []S3ArchiveSourcePathTagFilter { return v.TagFilters }).(S3ArchiveSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3ArchiveSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o S3ArchiveSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type S3ArchiveSourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3ArchiveSourcePath)(nil)).Elem()
}

func (o S3ArchiveSourcePathPtrOutput) ToS3ArchiveSourcePathPtrOutput() S3ArchiveSourcePathPtrOutput {
	return o
}

func (o S3ArchiveSourcePathPtrOutput) ToS3ArchiveSourcePathPtrOutputWithContext(ctx context.Context) S3ArchiveSourcePathPtrOutput {
	return o
}

func (o S3ArchiveSourcePathPtrOutput) Elem() S3ArchiveSourcePathOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) S3ArchiveSourcePath {
		if v != nil {
			return *v
		}
		var ret S3ArchiveSourcePath
		return ret
	}).(S3ArchiveSourcePathOutput)
}

// The name of the bucket.
func (o S3ArchiveSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathPtrOutput) CustomServices() S3ArchiveSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) []S3ArchiveSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(S3ArchiveSourcePathCustomServiceArrayOutput)
}

func (o S3ArchiveSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3ArchiveSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3ArchiveSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3ArchiveSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathPtrOutput) SnsTopicOrSubscriptionArns() S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) []S3ArchiveSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3ArchiveSourcePathPtrOutput) TagFilters() S3ArchiveSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) []S3ArchiveSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3ArchiveSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3ArchiveSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3ArchiveSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type S3ArchiveSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// S3ArchiveSourcePathCustomServiceInput is an input type that accepts S3ArchiveSourcePathCustomServiceArgs and S3ArchiveSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathCustomServiceInput` via:
//
//	S3ArchiveSourcePathCustomServiceArgs{...}
type S3ArchiveSourcePathCustomServiceInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathCustomServiceOutput() S3ArchiveSourcePathCustomServiceOutput
	ToS3ArchiveSourcePathCustomServiceOutputWithContext(context.Context) S3ArchiveSourcePathCustomServiceOutput
}

type S3ArchiveSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (S3ArchiveSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePathCustomService)(nil)).Elem()
}

func (i S3ArchiveSourcePathCustomServiceArgs) ToS3ArchiveSourcePathCustomServiceOutput() S3ArchiveSourcePathCustomServiceOutput {
	return i.ToS3ArchiveSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathCustomServiceArgs) ToS3ArchiveSourcePathCustomServiceOutputWithContext(ctx context.Context) S3ArchiveSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathCustomServiceOutput)
}

// S3ArchiveSourcePathCustomServiceArrayInput is an input type that accepts S3ArchiveSourcePathCustomServiceArray and S3ArchiveSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathCustomServiceArrayInput` via:
//
//	S3ArchiveSourcePathCustomServiceArray{ S3ArchiveSourcePathCustomServiceArgs{...} }
type S3ArchiveSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathCustomServiceArrayOutput() S3ArchiveSourcePathCustomServiceArrayOutput
	ToS3ArchiveSourcePathCustomServiceArrayOutputWithContext(context.Context) S3ArchiveSourcePathCustomServiceArrayOutput
}

type S3ArchiveSourcePathCustomServiceArray []S3ArchiveSourcePathCustomServiceInput

func (S3ArchiveSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourcePathCustomService)(nil)).Elem()
}

func (i S3ArchiveSourcePathCustomServiceArray) ToS3ArchiveSourcePathCustomServiceArrayOutput() S3ArchiveSourcePathCustomServiceArrayOutput {
	return i.ToS3ArchiveSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathCustomServiceArray) ToS3ArchiveSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3ArchiveSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathCustomServiceArrayOutput)
}

type S3ArchiveSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePathCustomService)(nil)).Elem()
}

func (o S3ArchiveSourcePathCustomServiceOutput) ToS3ArchiveSourcePathCustomServiceOutput() S3ArchiveSourcePathCustomServiceOutput {
	return o
}

func (o S3ArchiveSourcePathCustomServiceOutput) ToS3ArchiveSourcePathCustomServiceOutputWithContext(ctx context.Context) S3ArchiveSourcePathCustomServiceOutput {
	return o
}

func (o S3ArchiveSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o S3ArchiveSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type S3ArchiveSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourcePathCustomService)(nil)).Elem()
}

func (o S3ArchiveSourcePathCustomServiceArrayOutput) ToS3ArchiveSourcePathCustomServiceArrayOutput() S3ArchiveSourcePathCustomServiceArrayOutput {
	return o
}

func (o S3ArchiveSourcePathCustomServiceArrayOutput) ToS3ArchiveSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3ArchiveSourcePathCustomServiceArrayOutput {
	return o
}

func (o S3ArchiveSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) S3ArchiveSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3ArchiveSourcePathCustomService {
		return vs[0].([]S3ArchiveSourcePathCustomService)[vs[1].(int)]
	}).(S3ArchiveSourcePathCustomServiceOutput)
}

type S3ArchiveSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// S3ArchiveSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs and S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//	S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs{...}
type S3ArchiveSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput() S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput
	ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput
}

type S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput() S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput)
}

// S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray and S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//	S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray{ S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray []S3ArchiveSourcePathSnsTopicOrSubscriptionArnInput

func (S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput() S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3ArchiveSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]S3ArchiveSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput)
}

type S3ArchiveSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type *string `pulumi:"type"`
}

// S3ArchiveSourcePathTagFilterInput is an input type that accepts S3ArchiveSourcePathTagFilterArgs and S3ArchiveSourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathTagFilterInput` via:
//
//	S3ArchiveSourcePathTagFilterArgs{...}
type S3ArchiveSourcePathTagFilterInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathTagFilterOutput() S3ArchiveSourcePathTagFilterOutput
	ToS3ArchiveSourcePathTagFilterOutputWithContext(context.Context) S3ArchiveSourcePathTagFilterOutput
}

type S3ArchiveSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (S3ArchiveSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePathTagFilter)(nil)).Elem()
}

func (i S3ArchiveSourcePathTagFilterArgs) ToS3ArchiveSourcePathTagFilterOutput() S3ArchiveSourcePathTagFilterOutput {
	return i.ToS3ArchiveSourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathTagFilterArgs) ToS3ArchiveSourcePathTagFilterOutputWithContext(ctx context.Context) S3ArchiveSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathTagFilterOutput)
}

// S3ArchiveSourcePathTagFilterArrayInput is an input type that accepts S3ArchiveSourcePathTagFilterArray and S3ArchiveSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3ArchiveSourcePathTagFilterArrayInput` via:
//
//	S3ArchiveSourcePathTagFilterArray{ S3ArchiveSourcePathTagFilterArgs{...} }
type S3ArchiveSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3ArchiveSourcePathTagFilterArrayOutput() S3ArchiveSourcePathTagFilterArrayOutput
	ToS3ArchiveSourcePathTagFilterArrayOutputWithContext(context.Context) S3ArchiveSourcePathTagFilterArrayOutput
}

type S3ArchiveSourcePathTagFilterArray []S3ArchiveSourcePathTagFilterInput

func (S3ArchiveSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourcePathTagFilter)(nil)).Elem()
}

func (i S3ArchiveSourcePathTagFilterArray) ToS3ArchiveSourcePathTagFilterArrayOutput() S3ArchiveSourcePathTagFilterArrayOutput {
	return i.ToS3ArchiveSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3ArchiveSourcePathTagFilterArray) ToS3ArchiveSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3ArchiveSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3ArchiveSourcePathTagFilterArrayOutput)
}

type S3ArchiveSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3ArchiveSourcePathTagFilter)(nil)).Elem()
}

func (o S3ArchiveSourcePathTagFilterOutput) ToS3ArchiveSourcePathTagFilterOutput() S3ArchiveSourcePathTagFilterOutput {
	return o
}

func (o S3ArchiveSourcePathTagFilterOutput) ToS3ArchiveSourcePathTagFilterOutputWithContext(ctx context.Context) S3ArchiveSourcePathTagFilterOutput {
	return o
}

func (o S3ArchiveSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3ArchiveSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3ArchiveSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3ArchiveSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3ArchiveSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3ArchiveSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3ArchiveSourcePathTagFilter)(nil)).Elem()
}

func (o S3ArchiveSourcePathTagFilterArrayOutput) ToS3ArchiveSourcePathTagFilterArrayOutput() S3ArchiveSourcePathTagFilterArrayOutput {
	return o
}

func (o S3ArchiveSourcePathTagFilterArrayOutput) ToS3ArchiveSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3ArchiveSourcePathTagFilterArrayOutput {
	return o
}

func (o S3ArchiveSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3ArchiveSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3ArchiveSourcePathTagFilter {
		return vs[0].([]S3ArchiveSourcePathTagFilter)[vs[1].(int)]
	}).(S3ArchiveSourcePathTagFilterOutput)
}

type S3AuditSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type string `pulumi:"type"`
}

// S3AuditSourceAuthenticationInput is an input type that accepts S3AuditSourceAuthenticationArgs and S3AuditSourceAuthenticationOutput values.
// You can construct a concrete instance of `S3AuditSourceAuthenticationInput` via:
//
//	S3AuditSourceAuthenticationArgs{...}
type S3AuditSourceAuthenticationInput interface {
	pulumi.Input

	ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput
	ToS3AuditSourceAuthenticationOutputWithContext(context.Context) S3AuditSourceAuthenticationOutput
}

type S3AuditSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (S3AuditSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceAuthentication)(nil)).Elem()
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput {
	return i.ToS3AuditSourceAuthenticationOutputWithContext(context.Background())
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationOutput)
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return i.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationOutput).ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx)
}

// S3AuditSourceAuthenticationPtrInput is an input type that accepts S3AuditSourceAuthenticationArgs, S3AuditSourceAuthenticationPtr and S3AuditSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3AuditSourceAuthenticationPtrInput` via:
//
//	        S3AuditSourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type S3AuditSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput
	ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Context) S3AuditSourceAuthenticationPtrOutput
}

type s3auditSourceAuthenticationPtrType S3AuditSourceAuthenticationArgs

func S3AuditSourceAuthenticationPtr(v *S3AuditSourceAuthenticationArgs) S3AuditSourceAuthenticationPtrInput {
	return (*s3auditSourceAuthenticationPtrType)(v)
}

func (*s3auditSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourceAuthentication)(nil)).Elem()
}

func (i *s3auditSourceAuthenticationPtrType) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return i.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3auditSourceAuthenticationPtrType) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationPtrOutput)
}

type S3AuditSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3AuditSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceAuthentication)(nil)).Elem()
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput {
	return o
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationOutput {
	return o
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return o.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3AuditSourceAuthentication) *S3AuditSourceAuthentication {
		return &v
	}).(S3AuditSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3AuditSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
func (o S3AuditSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3AuditSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3AuditSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3AuditSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourceAuthentication)(nil)).Elem()
}

func (o S3AuditSourceAuthenticationPtrOutput) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return o
}

func (o S3AuditSourceAuthenticationPtrOutput) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return o
}

func (o S3AuditSourceAuthenticationPtrOutput) Elem() S3AuditSourceAuthenticationOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) S3AuditSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret S3AuditSourceAuthentication
		return ret
	}).(S3AuditSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3AuditSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
func (o S3AuditSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3AuditSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3AuditSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3AuditSourceDefaultDateFormatInput is an input type that accepts S3AuditSourceDefaultDateFormatArgs and S3AuditSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3AuditSourceDefaultDateFormatInput` via:
//
//	S3AuditSourceDefaultDateFormatArgs{...}
type S3AuditSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput
	ToS3AuditSourceDefaultDateFormatOutputWithContext(context.Context) S3AuditSourceDefaultDateFormatOutput
}

type S3AuditSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3AuditSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3AuditSourceDefaultDateFormatArgs) ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput {
	return i.ToS3AuditSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3AuditSourceDefaultDateFormatArgs) ToS3AuditSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceDefaultDateFormatOutput)
}

// S3AuditSourceDefaultDateFormatArrayInput is an input type that accepts S3AuditSourceDefaultDateFormatArray and S3AuditSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3AuditSourceDefaultDateFormatArrayInput` via:
//
//	S3AuditSourceDefaultDateFormatArray{ S3AuditSourceDefaultDateFormatArgs{...} }
type S3AuditSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput
	ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(context.Context) S3AuditSourceDefaultDateFormatArrayOutput
}

type S3AuditSourceDefaultDateFormatArray []S3AuditSourceDefaultDateFormatInput

func (S3AuditSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3AuditSourceDefaultDateFormatArray) ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput {
	return i.ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3AuditSourceDefaultDateFormatArray) ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceDefaultDateFormatArrayOutput)
}

type S3AuditSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3AuditSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3AuditSourceDefaultDateFormatOutput) ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatOutput) ToS3AuditSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3AuditSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3AuditSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3AuditSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourceDefaultDateFormat {
		return vs[0].([]S3AuditSourceDefaultDateFormat)[vs[1].(int)]
	}).(S3AuditSourceDefaultDateFormatOutput)
}

type S3AuditSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3AuditSourceFilterInput is an input type that accepts S3AuditSourceFilterArgs and S3AuditSourceFilterOutput values.
// You can construct a concrete instance of `S3AuditSourceFilterInput` via:
//
//	S3AuditSourceFilterArgs{...}
type S3AuditSourceFilterInput interface {
	pulumi.Input

	ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput
	ToS3AuditSourceFilterOutputWithContext(context.Context) S3AuditSourceFilterOutput
}

type S3AuditSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3AuditSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceFilter)(nil)).Elem()
}

func (i S3AuditSourceFilterArgs) ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput {
	return i.ToS3AuditSourceFilterOutputWithContext(context.Background())
}

func (i S3AuditSourceFilterArgs) ToS3AuditSourceFilterOutputWithContext(ctx context.Context) S3AuditSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceFilterOutput)
}

// S3AuditSourceFilterArrayInput is an input type that accepts S3AuditSourceFilterArray and S3AuditSourceFilterArrayOutput values.
// You can construct a concrete instance of `S3AuditSourceFilterArrayInput` via:
//
//	S3AuditSourceFilterArray{ S3AuditSourceFilterArgs{...} }
type S3AuditSourceFilterArrayInput interface {
	pulumi.Input

	ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput
	ToS3AuditSourceFilterArrayOutputWithContext(context.Context) S3AuditSourceFilterArrayOutput
}

type S3AuditSourceFilterArray []S3AuditSourceFilterInput

func (S3AuditSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceFilter)(nil)).Elem()
}

func (i S3AuditSourceFilterArray) ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput {
	return i.ToS3AuditSourceFilterArrayOutputWithContext(context.Background())
}

func (i S3AuditSourceFilterArray) ToS3AuditSourceFilterArrayOutputWithContext(ctx context.Context) S3AuditSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceFilterArrayOutput)
}

type S3AuditSourceFilterOutput struct{ *pulumi.OutputState }

func (S3AuditSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceFilter)(nil)).Elem()
}

func (o S3AuditSourceFilterOutput) ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput {
	return o
}

func (o S3AuditSourceFilterOutput) ToS3AuditSourceFilterOutputWithContext(ctx context.Context) S3AuditSourceFilterOutput {
	return o
}

func (o S3AuditSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3AuditSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3AuditSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3AuditSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceFilter)(nil)).Elem()
}

func (o S3AuditSourceFilterArrayOutput) ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput {
	return o
}

func (o S3AuditSourceFilterArrayOutput) ToS3AuditSourceFilterArrayOutputWithContext(ctx context.Context) S3AuditSourceFilterArrayOutput {
	return o
}

func (o S3AuditSourceFilterArrayOutput) Index(i pulumi.IntInput) S3AuditSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourceFilter {
		return vs[0].([]S3AuditSourceFilter)[vs[1].(int)]
	}).(S3AuditSourceFilterOutput)
}

type S3AuditSourcePath struct {
	// The name of the bucket.
	BucketName        *string                          `pulumi:"bucketName"`
	CustomServices    []S3AuditSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                         `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                         `pulumi:"limitToRegions"`
	LimitToServices   []string                         `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []S3AuditSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []S3AuditSourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// S3AuditSourcePathInput is an input type that accepts S3AuditSourcePathArgs and S3AuditSourcePathOutput values.
// You can construct a concrete instance of `S3AuditSourcePathInput` via:
//
//	S3AuditSourcePathArgs{...}
type S3AuditSourcePathInput interface {
	pulumi.Input

	ToS3AuditSourcePathOutput() S3AuditSourcePathOutput
	ToS3AuditSourcePathOutputWithContext(context.Context) S3AuditSourcePathOutput
}

type S3AuditSourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput                    `pulumi:"bucketName"`
	CustomServices    S3AuditSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                  `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                  `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput                  `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 S3AuditSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (S3AuditSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePath)(nil)).Elem()
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathOutput() S3AuditSourcePathOutput {
	return i.ToS3AuditSourcePathOutputWithContext(context.Background())
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathOutputWithContext(ctx context.Context) S3AuditSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathOutput)
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return i.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathOutput).ToS3AuditSourcePathPtrOutputWithContext(ctx)
}

// S3AuditSourcePathPtrInput is an input type that accepts S3AuditSourcePathArgs, S3AuditSourcePathPtr and S3AuditSourcePathPtrOutput values.
// You can construct a concrete instance of `S3AuditSourcePathPtrInput` via:
//
//	        S3AuditSourcePathArgs{...}
//
//	or:
//
//	        nil
type S3AuditSourcePathPtrInput interface {
	pulumi.Input

	ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput
	ToS3AuditSourcePathPtrOutputWithContext(context.Context) S3AuditSourcePathPtrOutput
}

type s3auditSourcePathPtrType S3AuditSourcePathArgs

func S3AuditSourcePathPtr(v *S3AuditSourcePathArgs) S3AuditSourcePathPtrInput {
	return (*s3auditSourcePathPtrType)(v)
}

func (*s3auditSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourcePath)(nil)).Elem()
}

func (i *s3auditSourcePathPtrType) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return i.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (i *s3auditSourcePathPtrType) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathPtrOutput)
}

type S3AuditSourcePathOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePath)(nil)).Elem()
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathOutput() S3AuditSourcePathOutput {
	return o
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathOutputWithContext(ctx context.Context) S3AuditSourcePathOutput {
	return o
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return o.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3AuditSourcePath) *S3AuditSourcePath {
		return &v
	}).(S3AuditSourcePathPtrOutput)
}

// The name of the bucket.
func (o S3AuditSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathOutput) CustomServices() S3AuditSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathCustomService { return v.CustomServices }).(S3AuditSourcePathCustomServiceArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3AuditSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3AuditSourcePathOutput) SnsTopicOrSubscriptionArns() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3AuditSourcePathOutput) TagFilters() S3AuditSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathTagFilter { return v.TagFilters }).(S3AuditSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o S3AuditSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type S3AuditSourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourcePath)(nil)).Elem()
}

func (o S3AuditSourcePathPtrOutput) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return o
}

func (o S3AuditSourcePathPtrOutput) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return o
}

func (o S3AuditSourcePathPtrOutput) Elem() S3AuditSourcePathOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) S3AuditSourcePath {
		if v != nil {
			return *v
		}
		var ret S3AuditSourcePath
		return ret
	}).(S3AuditSourcePathOutput)
}

// The name of the bucket.
func (o S3AuditSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathPtrOutput) CustomServices() S3AuditSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(S3AuditSourcePathCustomServiceArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3AuditSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3AuditSourcePathPtrOutput) SnsTopicOrSubscriptionArns() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) TagFilters() S3AuditSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3AuditSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type S3AuditSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// S3AuditSourcePathCustomServiceInput is an input type that accepts S3AuditSourcePathCustomServiceArgs and S3AuditSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `S3AuditSourcePathCustomServiceInput` via:
//
//	S3AuditSourcePathCustomServiceArgs{...}
type S3AuditSourcePathCustomServiceInput interface {
	pulumi.Input

	ToS3AuditSourcePathCustomServiceOutput() S3AuditSourcePathCustomServiceOutput
	ToS3AuditSourcePathCustomServiceOutputWithContext(context.Context) S3AuditSourcePathCustomServiceOutput
}

type S3AuditSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (S3AuditSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathCustomService)(nil)).Elem()
}

func (i S3AuditSourcePathCustomServiceArgs) ToS3AuditSourcePathCustomServiceOutput() S3AuditSourcePathCustomServiceOutput {
	return i.ToS3AuditSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i S3AuditSourcePathCustomServiceArgs) ToS3AuditSourcePathCustomServiceOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathCustomServiceOutput)
}

// S3AuditSourcePathCustomServiceArrayInput is an input type that accepts S3AuditSourcePathCustomServiceArray and S3AuditSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathCustomServiceArrayInput` via:
//
//	S3AuditSourcePathCustomServiceArray{ S3AuditSourcePathCustomServiceArgs{...} }
type S3AuditSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathCustomServiceArrayOutput() S3AuditSourcePathCustomServiceArrayOutput
	ToS3AuditSourcePathCustomServiceArrayOutputWithContext(context.Context) S3AuditSourcePathCustomServiceArrayOutput
}

type S3AuditSourcePathCustomServiceArray []S3AuditSourcePathCustomServiceInput

func (S3AuditSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathCustomService)(nil)).Elem()
}

func (i S3AuditSourcePathCustomServiceArray) ToS3AuditSourcePathCustomServiceArrayOutput() S3AuditSourcePathCustomServiceArrayOutput {
	return i.ToS3AuditSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathCustomServiceArray) ToS3AuditSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathCustomServiceArrayOutput)
}

type S3AuditSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathCustomService)(nil)).Elem()
}

func (o S3AuditSourcePathCustomServiceOutput) ToS3AuditSourcePathCustomServiceOutput() S3AuditSourcePathCustomServiceOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceOutput) ToS3AuditSourcePathCustomServiceOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type S3AuditSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathCustomService)(nil)).Elem()
}

func (o S3AuditSourcePathCustomServiceArrayOutput) ToS3AuditSourcePathCustomServiceArrayOutput() S3AuditSourcePathCustomServiceArrayOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceArrayOutput) ToS3AuditSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceArrayOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathCustomService {
		return vs[0].([]S3AuditSourcePathCustomService)[vs[1].(int)]
	}).(S3AuditSourcePathCustomServiceOutput)
}

type S3AuditSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// S3AuditSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts S3AuditSourcePathSnsTopicOrSubscriptionArnArgs and S3AuditSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `S3AuditSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//	S3AuditSourcePathSnsTopicOrSubscriptionArnArgs{...}
type S3AuditSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnOutput
	ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (S3AuditSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArgs) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArgs) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathSnsTopicOrSubscriptionArnOutput)
}

// S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts S3AuditSourcePathSnsTopicOrSubscriptionArnArray and S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//	S3AuditSourcePathSnsTopicOrSubscriptionArnArray{ S3AuditSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnArray []S3AuditSourcePathSnsTopicOrSubscriptionArnInput

func (S3AuditSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArray) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArray) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]S3AuditSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(S3AuditSourcePathSnsTopicOrSubscriptionArnOutput)
}

type S3AuditSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type *string `pulumi:"type"`
}

// S3AuditSourcePathTagFilterInput is an input type that accepts S3AuditSourcePathTagFilterArgs and S3AuditSourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3AuditSourcePathTagFilterInput` via:
//
//	S3AuditSourcePathTagFilterArgs{...}
type S3AuditSourcePathTagFilterInput interface {
	pulumi.Input

	ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput
	ToS3AuditSourcePathTagFilterOutputWithContext(context.Context) S3AuditSourcePathTagFilterOutput
}

type S3AuditSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (S3AuditSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (i S3AuditSourcePathTagFilterArgs) ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput {
	return i.ToS3AuditSourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3AuditSourcePathTagFilterArgs) ToS3AuditSourcePathTagFilterOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathTagFilterOutput)
}

// S3AuditSourcePathTagFilterArrayInput is an input type that accepts S3AuditSourcePathTagFilterArray and S3AuditSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathTagFilterArrayInput` via:
//
//	S3AuditSourcePathTagFilterArray{ S3AuditSourcePathTagFilterArgs{...} }
type S3AuditSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput
	ToS3AuditSourcePathTagFilterArrayOutputWithContext(context.Context) S3AuditSourcePathTagFilterArrayOutput
}

type S3AuditSourcePathTagFilterArray []S3AuditSourcePathTagFilterInput

func (S3AuditSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (i S3AuditSourcePathTagFilterArray) ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput {
	return i.ToS3AuditSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathTagFilterArray) ToS3AuditSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathTagFilterArrayOutput)
}

type S3AuditSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (o S3AuditSourcePathTagFilterOutput) ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput {
	return o
}

func (o S3AuditSourcePathTagFilterOutput) ToS3AuditSourcePathTagFilterOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterOutput {
	return o
}

func (o S3AuditSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3AuditSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3AuditSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (o S3AuditSourcePathTagFilterArrayOutput) ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput {
	return o
}

func (o S3AuditSourcePathTagFilterArrayOutput) ToS3AuditSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterArrayOutput {
	return o
}

func (o S3AuditSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathTagFilter {
		return vs[0].([]S3AuditSourcePathTagFilter)[vs[1].(int)]
	}).(S3AuditSourcePathTagFilterOutput)
}

type S3SourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type string `pulumi:"type"`
}

// S3SourceAuthenticationInput is an input type that accepts S3SourceAuthenticationArgs and S3SourceAuthenticationOutput values.
// You can construct a concrete instance of `S3SourceAuthenticationInput` via:
//
//	S3SourceAuthenticationArgs{...}
type S3SourceAuthenticationInput interface {
	pulumi.Input

	ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput
	ToS3SourceAuthenticationOutputWithContext(context.Context) S3SourceAuthenticationOutput
}

type S3SourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (S3SourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceAuthentication)(nil)).Elem()
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput {
	return i.ToS3SourceAuthenticationOutputWithContext(context.Background())
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationOutputWithContext(ctx context.Context) S3SourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationOutput)
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return i.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationOutput).ToS3SourceAuthenticationPtrOutputWithContext(ctx)
}

// S3SourceAuthenticationPtrInput is an input type that accepts S3SourceAuthenticationArgs, S3SourceAuthenticationPtr and S3SourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3SourceAuthenticationPtrInput` via:
//
//	        S3SourceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type S3SourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput
	ToS3SourceAuthenticationPtrOutputWithContext(context.Context) S3SourceAuthenticationPtrOutput
}

type s3sourceAuthenticationPtrType S3SourceAuthenticationArgs

func S3SourceAuthenticationPtr(v *S3SourceAuthenticationArgs) S3SourceAuthenticationPtrInput {
	return (*s3sourceAuthenticationPtrType)(v)
}

func (*s3sourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourceAuthentication)(nil)).Elem()
}

func (i *s3sourceAuthenticationPtrType) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return i.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3sourceAuthenticationPtrType) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationPtrOutput)
}

type S3SourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3SourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceAuthentication)(nil)).Elem()
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput {
	return o
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationOutputWithContext(ctx context.Context) S3SourceAuthenticationOutput {
	return o
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return o.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3SourceAuthentication) *S3SourceAuthentication {
		return &v
	}).(S3SourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3SourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o S3SourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3SourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3SourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3SourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourceAuthentication)(nil)).Elem()
}

func (o S3SourceAuthenticationPtrOutput) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return o
}

func (o S3SourceAuthenticationPtrOutput) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return o
}

func (o S3SourceAuthenticationPtrOutput) Elem() S3SourceAuthenticationOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) S3SourceAuthentication {
		if v != nil {
			return *v
		}
		var ret S3SourceAuthentication
		return ret
	}).(S3SourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3SourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o S3SourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3SourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3SourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3SourceDefaultDateFormatInput is an input type that accepts S3SourceDefaultDateFormatArgs and S3SourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3SourceDefaultDateFormatInput` via:
//
//	S3SourceDefaultDateFormatArgs{...}
type S3SourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput
	ToS3SourceDefaultDateFormatOutputWithContext(context.Context) S3SourceDefaultDateFormatOutput
}

type S3SourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3SourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceDefaultDateFormat)(nil)).Elem()
}

func (i S3SourceDefaultDateFormatArgs) ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput {
	return i.ToS3SourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3SourceDefaultDateFormatArgs) ToS3SourceDefaultDateFormatOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceDefaultDateFormatOutput)
}

// S3SourceDefaultDateFormatArrayInput is an input type that accepts S3SourceDefaultDateFormatArray and S3SourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3SourceDefaultDateFormatArrayInput` via:
//
//	S3SourceDefaultDateFormatArray{ S3SourceDefaultDateFormatArgs{...} }
type S3SourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput
	ToS3SourceDefaultDateFormatArrayOutputWithContext(context.Context) S3SourceDefaultDateFormatArrayOutput
}

type S3SourceDefaultDateFormatArray []S3SourceDefaultDateFormatInput

func (S3SourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceDefaultDateFormat)(nil)).Elem()
}

func (i S3SourceDefaultDateFormatArray) ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput {
	return i.ToS3SourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3SourceDefaultDateFormatArray) ToS3SourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceDefaultDateFormatArrayOutput)
}

type S3SourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3SourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceDefaultDateFormat)(nil)).Elem()
}

func (o S3SourceDefaultDateFormatOutput) ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput {
	return o
}

func (o S3SourceDefaultDateFormatOutput) ToS3SourceDefaultDateFormatOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatOutput {
	return o
}

func (o S3SourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3SourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3SourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3SourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceDefaultDateFormat)(nil)).Elem()
}

func (o S3SourceDefaultDateFormatArrayOutput) ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3SourceDefaultDateFormatArrayOutput) ToS3SourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3SourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3SourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourceDefaultDateFormat {
		return vs[0].([]S3SourceDefaultDateFormat)[vs[1].(int)]
	}).(S3SourceDefaultDateFormatOutput)
}

type S3SourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3SourceFilterInput is an input type that accepts S3SourceFilterArgs and S3SourceFilterOutput values.
// You can construct a concrete instance of `S3SourceFilterInput` via:
//
//	S3SourceFilterArgs{...}
type S3SourceFilterInput interface {
	pulumi.Input

	ToS3SourceFilterOutput() S3SourceFilterOutput
	ToS3SourceFilterOutputWithContext(context.Context) S3SourceFilterOutput
}

type S3SourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3SourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceFilter)(nil)).Elem()
}

func (i S3SourceFilterArgs) ToS3SourceFilterOutput() S3SourceFilterOutput {
	return i.ToS3SourceFilterOutputWithContext(context.Background())
}

func (i S3SourceFilterArgs) ToS3SourceFilterOutputWithContext(ctx context.Context) S3SourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceFilterOutput)
}

// S3SourceFilterArrayInput is an input type that accepts S3SourceFilterArray and S3SourceFilterArrayOutput values.
// You can construct a concrete instance of `S3SourceFilterArrayInput` via:
//
//	S3SourceFilterArray{ S3SourceFilterArgs{...} }
type S3SourceFilterArrayInput interface {
	pulumi.Input

	ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput
	ToS3SourceFilterArrayOutputWithContext(context.Context) S3SourceFilterArrayOutput
}

type S3SourceFilterArray []S3SourceFilterInput

func (S3SourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceFilter)(nil)).Elem()
}

func (i S3SourceFilterArray) ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput {
	return i.ToS3SourceFilterArrayOutputWithContext(context.Background())
}

func (i S3SourceFilterArray) ToS3SourceFilterArrayOutputWithContext(ctx context.Context) S3SourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceFilterArrayOutput)
}

type S3SourceFilterOutput struct{ *pulumi.OutputState }

func (S3SourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceFilter)(nil)).Elem()
}

func (o S3SourceFilterOutput) ToS3SourceFilterOutput() S3SourceFilterOutput {
	return o
}

func (o S3SourceFilterOutput) ToS3SourceFilterOutputWithContext(ctx context.Context) S3SourceFilterOutput {
	return o
}

func (o S3SourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3SourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3SourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3SourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3SourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3SourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceFilter)(nil)).Elem()
}

func (o S3SourceFilterArrayOutput) ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput {
	return o
}

func (o S3SourceFilterArrayOutput) ToS3SourceFilterArrayOutputWithContext(ctx context.Context) S3SourceFilterArrayOutput {
	return o
}

func (o S3SourceFilterArrayOutput) Index(i pulumi.IntInput) S3SourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourceFilter {
		return vs[0].([]S3SourceFilter)[vs[1].(int)]
	}).(S3SourceFilterOutput)
}

type S3SourcePath struct {
	// The name of the bucket.
	BucketName        *string                     `pulumi:"bucketName"`
	CustomServices    []S3SourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                    `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                    `pulumi:"limitToRegions"`
	LimitToServices   []string                    `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []S3SourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []S3SourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type string `pulumi:"type"`
	// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
	UseVersionedApi *bool `pulumi:"useVersionedApi"`
}

// S3SourcePathInput is an input type that accepts S3SourcePathArgs and S3SourcePathOutput values.
// You can construct a concrete instance of `S3SourcePathInput` via:
//
//	S3SourcePathArgs{...}
type S3SourcePathInput interface {
	pulumi.Input

	ToS3SourcePathOutput() S3SourcePathOutput
	ToS3SourcePathOutputWithContext(context.Context) S3SourcePathOutput
}

type S3SourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput               `pulumi:"bucketName"`
	CustomServices    S3SourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput             `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput             `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput             `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns S3SourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 S3SourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type pulumi.StringInput `pulumi:"type"`
	// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (S3SourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePath)(nil)).Elem()
}

func (i S3SourcePathArgs) ToS3SourcePathOutput() S3SourcePathOutput {
	return i.ToS3SourcePathOutputWithContext(context.Background())
}

func (i S3SourcePathArgs) ToS3SourcePathOutputWithContext(ctx context.Context) S3SourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathOutput)
}

func (i S3SourcePathArgs) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return i.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (i S3SourcePathArgs) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathOutput).ToS3SourcePathPtrOutputWithContext(ctx)
}

// S3SourcePathPtrInput is an input type that accepts S3SourcePathArgs, S3SourcePathPtr and S3SourcePathPtrOutput values.
// You can construct a concrete instance of `S3SourcePathPtrInput` via:
//
//	        S3SourcePathArgs{...}
//
//	or:
//
//	        nil
type S3SourcePathPtrInput interface {
	pulumi.Input

	ToS3SourcePathPtrOutput() S3SourcePathPtrOutput
	ToS3SourcePathPtrOutputWithContext(context.Context) S3SourcePathPtrOutput
}

type s3sourcePathPtrType S3SourcePathArgs

func S3SourcePathPtr(v *S3SourcePathArgs) S3SourcePathPtrInput {
	return (*s3sourcePathPtrType)(v)
}

func (*s3sourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourcePath)(nil)).Elem()
}

func (i *s3sourcePathPtrType) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return i.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (i *s3sourcePathPtrType) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathPtrOutput)
}

type S3SourcePathOutput struct{ *pulumi.OutputState }

func (S3SourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePath)(nil)).Elem()
}

func (o S3SourcePathOutput) ToS3SourcePathOutput() S3SourcePathOutput {
	return o
}

func (o S3SourcePathOutput) ToS3SourcePathOutputWithContext(ctx context.Context) S3SourcePathOutput {
	return o
}

func (o S3SourcePathOutput) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return o.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (o S3SourcePathOutput) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3SourcePath) *S3SourcePath {
		return &v
	}).(S3SourcePathPtrOutput)
}

// The name of the bucket.
func (o S3SourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathOutput) CustomServices() S3SourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathCustomService { return v.CustomServices }).(S3SourcePathCustomServiceArrayOutput)
}

func (o S3SourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3SourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3SourcePathOutput) SnsTopicOrSubscriptionArns() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathSnsTopicOrSubscriptionArn { return v.SnsTopicOrSubscriptionArns }).(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3SourcePathOutput) TagFilters() S3SourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathTagFilter { return v.TagFilters }).(S3SourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourcePath) string { return v.Type }).(pulumi.StringOutput)
}

// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
func (o S3SourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type S3SourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3SourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourcePath)(nil)).Elem()
}

func (o S3SourcePathPtrOutput) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return o
}

func (o S3SourcePathPtrOutput) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return o
}

func (o S3SourcePathPtrOutput) Elem() S3SourcePathOutput {
	return o.ApplyT(func(v *S3SourcePath) S3SourcePath {
		if v != nil {
			return *v
		}
		var ret S3SourcePath
		return ret
	}).(S3SourcePathOutput)
}

// The name of the bucket.
func (o S3SourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3SourcePathPtrOutput) CustomServices() S3SourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(S3SourcePathCustomServiceArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3SourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3SourcePathPtrOutput) SnsTopicOrSubscriptionArns() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3SourcePathPtrOutput) TagFilters() S3SourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3SourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
func (o S3SourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type S3SourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// S3SourcePathCustomServiceInput is an input type that accepts S3SourcePathCustomServiceArgs and S3SourcePathCustomServiceOutput values.
// You can construct a concrete instance of `S3SourcePathCustomServiceInput` via:
//
//	S3SourcePathCustomServiceArgs{...}
type S3SourcePathCustomServiceInput interface {
	pulumi.Input

	ToS3SourcePathCustomServiceOutput() S3SourcePathCustomServiceOutput
	ToS3SourcePathCustomServiceOutputWithContext(context.Context) S3SourcePathCustomServiceOutput
}

type S3SourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (S3SourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathCustomService)(nil)).Elem()
}

func (i S3SourcePathCustomServiceArgs) ToS3SourcePathCustomServiceOutput() S3SourcePathCustomServiceOutput {
	return i.ToS3SourcePathCustomServiceOutputWithContext(context.Background())
}

func (i S3SourcePathCustomServiceArgs) ToS3SourcePathCustomServiceOutputWithContext(ctx context.Context) S3SourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathCustomServiceOutput)
}

// S3SourcePathCustomServiceArrayInput is an input type that accepts S3SourcePathCustomServiceArray and S3SourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `S3SourcePathCustomServiceArrayInput` via:
//
//	S3SourcePathCustomServiceArray{ S3SourcePathCustomServiceArgs{...} }
type S3SourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToS3SourcePathCustomServiceArrayOutput() S3SourcePathCustomServiceArrayOutput
	ToS3SourcePathCustomServiceArrayOutputWithContext(context.Context) S3SourcePathCustomServiceArrayOutput
}

type S3SourcePathCustomServiceArray []S3SourcePathCustomServiceInput

func (S3SourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathCustomService)(nil)).Elem()
}

func (i S3SourcePathCustomServiceArray) ToS3SourcePathCustomServiceArrayOutput() S3SourcePathCustomServiceArrayOutput {
	return i.ToS3SourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i S3SourcePathCustomServiceArray) ToS3SourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3SourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathCustomServiceArrayOutput)
}

type S3SourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (S3SourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathCustomService)(nil)).Elem()
}

func (o S3SourcePathCustomServiceOutput) ToS3SourcePathCustomServiceOutput() S3SourcePathCustomServiceOutput {
	return o
}

func (o S3SourcePathCustomServiceOutput) ToS3SourcePathCustomServiceOutputWithContext(ctx context.Context) S3SourcePathCustomServiceOutput {
	return o
}

func (o S3SourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type S3SourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathCustomService)(nil)).Elem()
}

func (o S3SourcePathCustomServiceArrayOutput) ToS3SourcePathCustomServiceArrayOutput() S3SourcePathCustomServiceArrayOutput {
	return o
}

func (o S3SourcePathCustomServiceArrayOutput) ToS3SourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3SourcePathCustomServiceArrayOutput {
	return o
}

func (o S3SourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) S3SourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathCustomService {
		return vs[0].([]S3SourcePathCustomService)[vs[1].(int)]
	}).(S3SourcePathCustomServiceOutput)
}

type S3SourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// S3SourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts S3SourcePathSnsTopicOrSubscriptionArnArgs and S3SourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `S3SourcePathSnsTopicOrSubscriptionArnInput` via:
//
//	S3SourcePathSnsTopicOrSubscriptionArnArgs{...}
type S3SourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToS3SourcePathSnsTopicOrSubscriptionArnOutput() S3SourcePathSnsTopicOrSubscriptionArnOutput
	ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) S3SourcePathSnsTopicOrSubscriptionArnOutput
}

type S3SourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (S3SourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArgs) ToS3SourcePathSnsTopicOrSubscriptionArnOutput() S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArgs) ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathSnsTopicOrSubscriptionArnOutput)
}

// S3SourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts S3SourcePathSnsTopicOrSubscriptionArnArray and S3SourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `S3SourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//	S3SourcePathSnsTopicOrSubscriptionArnArray{ S3SourcePathSnsTopicOrSubscriptionArnArgs{...} }
type S3SourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutput() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) S3SourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type S3SourcePathSnsTopicOrSubscriptionArnArray []S3SourcePathSnsTopicOrSubscriptionArnInput

func (S3SourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArray) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutput() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArray) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type S3SourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (S3SourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) ToS3SourcePathSnsTopicOrSubscriptionArnOutput() S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3SourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type S3SourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutput() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]S3SourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(S3SourcePathSnsTopicOrSubscriptionArnOutput)
}

type S3SourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type *string `pulumi:"type"`
}

// S3SourcePathTagFilterInput is an input type that accepts S3SourcePathTagFilterArgs and S3SourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3SourcePathTagFilterInput` via:
//
//	S3SourcePathTagFilterArgs{...}
type S3SourcePathTagFilterInput interface {
	pulumi.Input

	ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput
	ToS3SourcePathTagFilterOutputWithContext(context.Context) S3SourcePathTagFilterOutput
}

type S3SourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (S3SourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathTagFilter)(nil)).Elem()
}

func (i S3SourcePathTagFilterArgs) ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput {
	return i.ToS3SourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3SourcePathTagFilterArgs) ToS3SourcePathTagFilterOutputWithContext(ctx context.Context) S3SourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathTagFilterOutput)
}

// S3SourcePathTagFilterArrayInput is an input type that accepts S3SourcePathTagFilterArray and S3SourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3SourcePathTagFilterArrayInput` via:
//
//	S3SourcePathTagFilterArray{ S3SourcePathTagFilterArgs{...} }
type S3SourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput
	ToS3SourcePathTagFilterArrayOutputWithContext(context.Context) S3SourcePathTagFilterArrayOutput
}

type S3SourcePathTagFilterArray []S3SourcePathTagFilterInput

func (S3SourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathTagFilter)(nil)).Elem()
}

func (i S3SourcePathTagFilterArray) ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput {
	return i.ToS3SourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3SourcePathTagFilterArray) ToS3SourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3SourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathTagFilterArrayOutput)
}

type S3SourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3SourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathTagFilter)(nil)).Elem()
}

func (o S3SourcePathTagFilterOutput) ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput {
	return o
}

func (o S3SourcePathTagFilterOutput) ToS3SourcePathTagFilterOutputWithContext(ctx context.Context) S3SourcePathTagFilterOutput {
	return o
}

func (o S3SourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Must be either `S3BucketAuthentication` or `AWSRoleBasedAuthentication`.
func (o S3SourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3SourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathTagFilter)(nil)).Elem()
}

func (o S3SourcePathTagFilterArrayOutput) ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput {
	return o
}

func (o S3SourcePathTagFilterArrayOutput) ToS3SourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3SourcePathTagFilterArrayOutput {
	return o
}

func (o S3SourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3SourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathTagFilter {
		return vs[0].([]S3SourcePathTagFilter)[vs[1].(int)]
	}).(S3SourcePathTagFilterOutput)
}

type SamlConfigurationOnDemandProvisioningEnabled struct {
	// First name attribute of the new user account. Defaults to "".
	FirstNameAttribute *string `pulumi:"firstNameAttribute"`
	// Last name attribute of the new user account. Defaults to "".
	LastNameAttribute *string `pulumi:"lastNameAttribute"`
	// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
	OnDemandProvisioningRoles []string `pulumi:"onDemandProvisioningRoles"`
}

// SamlConfigurationOnDemandProvisioningEnabledInput is an input type that accepts SamlConfigurationOnDemandProvisioningEnabledArgs and SamlConfigurationOnDemandProvisioningEnabledOutput values.
// You can construct a concrete instance of `SamlConfigurationOnDemandProvisioningEnabledInput` via:
//
//	SamlConfigurationOnDemandProvisioningEnabledArgs{...}
type SamlConfigurationOnDemandProvisioningEnabledInput interface {
	pulumi.Input

	ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput
	ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput
}

type SamlConfigurationOnDemandProvisioningEnabledArgs struct {
	// First name attribute of the new user account. Defaults to "".
	FirstNameAttribute pulumi.StringPtrInput `pulumi:"firstNameAttribute"`
	// Last name attribute of the new user account. Defaults to "".
	LastNameAttribute pulumi.StringPtrInput `pulumi:"lastNameAttribute"`
	// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
	OnDemandProvisioningRoles pulumi.StringArrayInput `pulumi:"onDemandProvisioningRoles"`
}

func (SamlConfigurationOnDemandProvisioningEnabledArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(context.Background())
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledOutput)
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledOutput).ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx)
}

// SamlConfigurationOnDemandProvisioningEnabledPtrInput is an input type that accepts SamlConfigurationOnDemandProvisioningEnabledArgs, SamlConfigurationOnDemandProvisioningEnabledPtr and SamlConfigurationOnDemandProvisioningEnabledPtrOutput values.
// You can construct a concrete instance of `SamlConfigurationOnDemandProvisioningEnabledPtrInput` via:
//
//	        SamlConfigurationOnDemandProvisioningEnabledArgs{...}
//
//	or:
//
//	        nil
type SamlConfigurationOnDemandProvisioningEnabledPtrInput interface {
	pulumi.Input

	ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput
	ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput
}

type samlConfigurationOnDemandProvisioningEnabledPtrType SamlConfigurationOnDemandProvisioningEnabledArgs

func SamlConfigurationOnDemandProvisioningEnabledPtr(v *SamlConfigurationOnDemandProvisioningEnabledArgs) SamlConfigurationOnDemandProvisioningEnabledPtrInput {
	return (*samlConfigurationOnDemandProvisioningEnabledPtrType)(v)
}

func (*samlConfigurationOnDemandProvisioningEnabledPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (i *samlConfigurationOnDemandProvisioningEnabledPtrType) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (i *samlConfigurationOnDemandProvisioningEnabledPtrType) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledPtrOutput)
}

type SamlConfigurationOnDemandProvisioningEnabledOutput struct{ *pulumi.OutputState }

func (SamlConfigurationOnDemandProvisioningEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SamlConfigurationOnDemandProvisioningEnabled) *SamlConfigurationOnDemandProvisioningEnabled {
		return &v
	}).(SamlConfigurationOnDemandProvisioningEnabledPtrOutput)
}

// First name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *string { return v.FirstNameAttribute }).(pulumi.StringPtrOutput)
}

// Last name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *string { return v.LastNameAttribute }).(pulumi.StringPtrOutput)
}

// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) OnDemandProvisioningRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) []string { return v.OnDemandProvisioningRoles }).(pulumi.StringArrayOutput)
}

type SamlConfigurationOnDemandProvisioningEnabledPtrOutput struct{ *pulumi.OutputState }

func (SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) Elem() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) SamlConfigurationOnDemandProvisioningEnabled {
		if v != nil {
			return *v
		}
		var ret SamlConfigurationOnDemandProvisioningEnabled
		return ret
	}).(SamlConfigurationOnDemandProvisioningEnabledOutput)
}

// First name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) *string {
		if v == nil {
			return nil
		}
		return v.FirstNameAttribute
	}).(pulumi.StringPtrOutput)
}

// Last name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) *string {
		if v == nil {
			return nil
		}
		return v.LastNameAttribute
	}).(pulumi.StringPtrOutput)
}

// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) OnDemandProvisioningRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) []string {
		if v == nil {
			return nil
		}
		return v.OnDemandProvisioningRoles
	}).(pulumi.StringArrayOutput)
}

type SloCompliance struct {
	// The type of compliance to use. Valid values are `Rolling` or `Calendar`.
	ComplianceType string `pulumi:"complianceType"`
	// The size of the compliance period to use.
	// - For `Rolling` compliance type it must be a multiple of days e.g. `1d`, `2d`.
	// - For `Calendar` compliance type the allowed values are `Week`, `Month`, `Quarter`.
	Size string `pulumi:"size"`
	// Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
	// Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
	// For `Month` it's not required and is set to first day of the month.
	StartFrom *string `pulumi:"startFrom"`
	// Target percentage for the SLI over the compliance period. Must be a number between 0 and 100.
	Target float64 `pulumi:"target"`
	// Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone string `pulumi:"timezone"`
}

// SloComplianceInput is an input type that accepts SloComplianceArgs and SloComplianceOutput values.
// You can construct a concrete instance of `SloComplianceInput` via:
//
//	SloComplianceArgs{...}
type SloComplianceInput interface {
	pulumi.Input

	ToSloComplianceOutput() SloComplianceOutput
	ToSloComplianceOutputWithContext(context.Context) SloComplianceOutput
}

type SloComplianceArgs struct {
	// The type of compliance to use. Valid values are `Rolling` or `Calendar`.
	ComplianceType pulumi.StringInput `pulumi:"complianceType"`
	// The size of the compliance period to use.
	// - For `Rolling` compliance type it must be a multiple of days e.g. `1d`, `2d`.
	// - For `Calendar` compliance type the allowed values are `Week`, `Month`, `Quarter`.
	Size pulumi.StringInput `pulumi:"size"`
	// Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
	// Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
	// For `Month` it's not required and is set to first day of the month.
	StartFrom pulumi.StringPtrInput `pulumi:"startFrom"`
	// Target percentage for the SLI over the compliance period. Must be a number between 0 and 100.
	Target pulumi.Float64Input `pulumi:"target"`
	// Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (SloComplianceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloCompliance)(nil)).Elem()
}

func (i SloComplianceArgs) ToSloComplianceOutput() SloComplianceOutput {
	return i.ToSloComplianceOutputWithContext(context.Background())
}

func (i SloComplianceArgs) ToSloComplianceOutputWithContext(ctx context.Context) SloComplianceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloComplianceOutput)
}

// SloComplianceArrayInput is an input type that accepts SloComplianceArray and SloComplianceArrayOutput values.
// You can construct a concrete instance of `SloComplianceArrayInput` via:
//
//	SloComplianceArray{ SloComplianceArgs{...} }
type SloComplianceArrayInput interface {
	pulumi.Input

	ToSloComplianceArrayOutput() SloComplianceArrayOutput
	ToSloComplianceArrayOutputWithContext(context.Context) SloComplianceArrayOutput
}

type SloComplianceArray []SloComplianceInput

func (SloComplianceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloCompliance)(nil)).Elem()
}

func (i SloComplianceArray) ToSloComplianceArrayOutput() SloComplianceArrayOutput {
	return i.ToSloComplianceArrayOutputWithContext(context.Background())
}

func (i SloComplianceArray) ToSloComplianceArrayOutputWithContext(ctx context.Context) SloComplianceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloComplianceArrayOutput)
}

type SloComplianceOutput struct{ *pulumi.OutputState }

func (SloComplianceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloCompliance)(nil)).Elem()
}

func (o SloComplianceOutput) ToSloComplianceOutput() SloComplianceOutput {
	return o
}

func (o SloComplianceOutput) ToSloComplianceOutputWithContext(ctx context.Context) SloComplianceOutput {
	return o
}

// The type of compliance to use. Valid values are `Rolling` or `Calendar`.
func (o SloComplianceOutput) ComplianceType() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompliance) string { return v.ComplianceType }).(pulumi.StringOutput)
}

// The size of the compliance period to use.
// - For `Rolling` compliance type it must be a multiple of days e.g. `1d`, `2d`.
// - For `Calendar` compliance type the allowed values are `Week`, `Month`, `Quarter`.
func (o SloComplianceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompliance) string { return v.Size }).(pulumi.StringOutput)
}

// Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
// Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
// For `Month` it's not required and is set to first day of the month.
func (o SloComplianceOutput) StartFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloCompliance) *string { return v.StartFrom }).(pulumi.StringPtrOutput)
}

// Target percentage for the SLI over the compliance period. Must be a number between 0 and 100.
func (o SloComplianceOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v SloCompliance) float64 { return v.Target }).(pulumi.Float64Output)
}

// Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
func (o SloComplianceOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompliance) string { return v.Timezone }).(pulumi.StringOutput)
}

type SloComplianceArrayOutput struct{ *pulumi.OutputState }

func (SloComplianceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloCompliance)(nil)).Elem()
}

func (o SloComplianceArrayOutput) ToSloComplianceArrayOutput() SloComplianceArrayOutput {
	return o
}

func (o SloComplianceArrayOutput) ToSloComplianceArrayOutputWithContext(ctx context.Context) SloComplianceArrayOutput {
	return o
}

func (o SloComplianceArrayOutput) Index(i pulumi.IntInput) SloComplianceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloCompliance {
		return vs[0].([]SloCompliance)[vs[1].(int)]
	}).(SloComplianceOutput)
}

type SloIndicator struct {
	MonitorBasedEvaluation *SloIndicatorMonitorBasedEvaluation `pulumi:"monitorBasedEvaluation"`
	RequestBasedEvaluation *SloIndicatorRequestBasedEvaluation `pulumi:"requestBasedEvaluation"`
	WindowBasedEvaluation  *SloIndicatorWindowBasedEvaluation  `pulumi:"windowBasedEvaluation"`
}

// SloIndicatorInput is an input type that accepts SloIndicatorArgs and SloIndicatorOutput values.
// You can construct a concrete instance of `SloIndicatorInput` via:
//
//	SloIndicatorArgs{...}
type SloIndicatorInput interface {
	pulumi.Input

	ToSloIndicatorOutput() SloIndicatorOutput
	ToSloIndicatorOutputWithContext(context.Context) SloIndicatorOutput
}

type SloIndicatorArgs struct {
	MonitorBasedEvaluation SloIndicatorMonitorBasedEvaluationPtrInput `pulumi:"monitorBasedEvaluation"`
	RequestBasedEvaluation SloIndicatorRequestBasedEvaluationPtrInput `pulumi:"requestBasedEvaluation"`
	WindowBasedEvaluation  SloIndicatorWindowBasedEvaluationPtrInput  `pulumi:"windowBasedEvaluation"`
}

func (SloIndicatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicator)(nil)).Elem()
}

func (i SloIndicatorArgs) ToSloIndicatorOutput() SloIndicatorOutput {
	return i.ToSloIndicatorOutputWithContext(context.Background())
}

func (i SloIndicatorArgs) ToSloIndicatorOutputWithContext(ctx context.Context) SloIndicatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorOutput)
}

func (i SloIndicatorArgs) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return i.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (i SloIndicatorArgs) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorOutput).ToSloIndicatorPtrOutputWithContext(ctx)
}

// SloIndicatorPtrInput is an input type that accepts SloIndicatorArgs, SloIndicatorPtr and SloIndicatorPtrOutput values.
// You can construct a concrete instance of `SloIndicatorPtrInput` via:
//
//	        SloIndicatorArgs{...}
//
//	or:
//
//	        nil
type SloIndicatorPtrInput interface {
	pulumi.Input

	ToSloIndicatorPtrOutput() SloIndicatorPtrOutput
	ToSloIndicatorPtrOutputWithContext(context.Context) SloIndicatorPtrOutput
}

type sloIndicatorPtrType SloIndicatorArgs

func SloIndicatorPtr(v *SloIndicatorArgs) SloIndicatorPtrInput {
	return (*sloIndicatorPtrType)(v)
}

func (*sloIndicatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicator)(nil)).Elem()
}

func (i *sloIndicatorPtrType) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return i.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorPtrType) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorPtrOutput)
}

type SloIndicatorOutput struct{ *pulumi.OutputState }

func (SloIndicatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicator)(nil)).Elem()
}

func (o SloIndicatorOutput) ToSloIndicatorOutput() SloIndicatorOutput {
	return o
}

func (o SloIndicatorOutput) ToSloIndicatorOutputWithContext(ctx context.Context) SloIndicatorOutput {
	return o
}

func (o SloIndicatorOutput) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return o.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (o SloIndicatorOutput) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicator) *SloIndicator {
		return &v
	}).(SloIndicatorPtrOutput)
}

func (o SloIndicatorOutput) MonitorBasedEvaluation() SloIndicatorMonitorBasedEvaluationPtrOutput {
	return o.ApplyT(func(v SloIndicator) *SloIndicatorMonitorBasedEvaluation { return v.MonitorBasedEvaluation }).(SloIndicatorMonitorBasedEvaluationPtrOutput)
}

func (o SloIndicatorOutput) RequestBasedEvaluation() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ApplyT(func(v SloIndicator) *SloIndicatorRequestBasedEvaluation { return v.RequestBasedEvaluation }).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

func (o SloIndicatorOutput) WindowBasedEvaluation() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ApplyT(func(v SloIndicator) *SloIndicatorWindowBasedEvaluation { return v.WindowBasedEvaluation }).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

type SloIndicatorPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicator)(nil)).Elem()
}

func (o SloIndicatorPtrOutput) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return o
}

func (o SloIndicatorPtrOutput) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return o
}

func (o SloIndicatorPtrOutput) Elem() SloIndicatorOutput {
	return o.ApplyT(func(v *SloIndicator) SloIndicator {
		if v != nil {
			return *v
		}
		var ret SloIndicator
		return ret
	}).(SloIndicatorOutput)
}

func (o SloIndicatorPtrOutput) MonitorBasedEvaluation() SloIndicatorMonitorBasedEvaluationPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *SloIndicatorMonitorBasedEvaluation {
		if v == nil {
			return nil
		}
		return v.MonitorBasedEvaluation
	}).(SloIndicatorMonitorBasedEvaluationPtrOutput)
}

func (o SloIndicatorPtrOutput) RequestBasedEvaluation() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *SloIndicatorRequestBasedEvaluation {
		if v == nil {
			return nil
		}
		return v.RequestBasedEvaluation
	}).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

func (o SloIndicatorPtrOutput) WindowBasedEvaluation() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *SloIndicatorWindowBasedEvaluation {
		if v == nil {
			return nil
		}
		return v.WindowBasedEvaluation
	}).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

type SloIndicatorMonitorBasedEvaluation struct {
	// Monitor details on which SLO will be based. Only single monitor is supported here.
	MonitorTriggers SloIndicatorMonitorBasedEvaluationMonitorTriggers `pulumi:"monitorTriggers"`
}

// SloIndicatorMonitorBasedEvaluationInput is an input type that accepts SloIndicatorMonitorBasedEvaluationArgs and SloIndicatorMonitorBasedEvaluationOutput values.
// You can construct a concrete instance of `SloIndicatorMonitorBasedEvaluationInput` via:
//
//	SloIndicatorMonitorBasedEvaluationArgs{...}
type SloIndicatorMonitorBasedEvaluationInput interface {
	pulumi.Input

	ToSloIndicatorMonitorBasedEvaluationOutput() SloIndicatorMonitorBasedEvaluationOutput
	ToSloIndicatorMonitorBasedEvaluationOutputWithContext(context.Context) SloIndicatorMonitorBasedEvaluationOutput
}

type SloIndicatorMonitorBasedEvaluationArgs struct {
	// Monitor details on which SLO will be based. Only single monitor is supported here.
	MonitorTriggers SloIndicatorMonitorBasedEvaluationMonitorTriggersInput `pulumi:"monitorTriggers"`
}

func (SloIndicatorMonitorBasedEvaluationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorMonitorBasedEvaluation)(nil)).Elem()
}

func (i SloIndicatorMonitorBasedEvaluationArgs) ToSloIndicatorMonitorBasedEvaluationOutput() SloIndicatorMonitorBasedEvaluationOutput {
	return i.ToSloIndicatorMonitorBasedEvaluationOutputWithContext(context.Background())
}

func (i SloIndicatorMonitorBasedEvaluationArgs) ToSloIndicatorMonitorBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorMonitorBasedEvaluationOutput)
}

func (i SloIndicatorMonitorBasedEvaluationArgs) ToSloIndicatorMonitorBasedEvaluationPtrOutput() SloIndicatorMonitorBasedEvaluationPtrOutput {
	return i.ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i SloIndicatorMonitorBasedEvaluationArgs) ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorMonitorBasedEvaluationOutput).ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(ctx)
}

// SloIndicatorMonitorBasedEvaluationPtrInput is an input type that accepts SloIndicatorMonitorBasedEvaluationArgs, SloIndicatorMonitorBasedEvaluationPtr and SloIndicatorMonitorBasedEvaluationPtrOutput values.
// You can construct a concrete instance of `SloIndicatorMonitorBasedEvaluationPtrInput` via:
//
//	        SloIndicatorMonitorBasedEvaluationArgs{...}
//
//	or:
//
//	        nil
type SloIndicatorMonitorBasedEvaluationPtrInput interface {
	pulumi.Input

	ToSloIndicatorMonitorBasedEvaluationPtrOutput() SloIndicatorMonitorBasedEvaluationPtrOutput
	ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(context.Context) SloIndicatorMonitorBasedEvaluationPtrOutput
}

type sloIndicatorMonitorBasedEvaluationPtrType SloIndicatorMonitorBasedEvaluationArgs

func SloIndicatorMonitorBasedEvaluationPtr(v *SloIndicatorMonitorBasedEvaluationArgs) SloIndicatorMonitorBasedEvaluationPtrInput {
	return (*sloIndicatorMonitorBasedEvaluationPtrType)(v)
}

func (*sloIndicatorMonitorBasedEvaluationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorMonitorBasedEvaluation)(nil)).Elem()
}

func (i *sloIndicatorMonitorBasedEvaluationPtrType) ToSloIndicatorMonitorBasedEvaluationPtrOutput() SloIndicatorMonitorBasedEvaluationPtrOutput {
	return i.ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorMonitorBasedEvaluationPtrType) ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorMonitorBasedEvaluationPtrOutput)
}

type SloIndicatorMonitorBasedEvaluationOutput struct{ *pulumi.OutputState }

func (SloIndicatorMonitorBasedEvaluationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorMonitorBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorMonitorBasedEvaluationOutput) ToSloIndicatorMonitorBasedEvaluationOutput() SloIndicatorMonitorBasedEvaluationOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationOutput) ToSloIndicatorMonitorBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationOutput) ToSloIndicatorMonitorBasedEvaluationPtrOutput() SloIndicatorMonitorBasedEvaluationPtrOutput {
	return o.ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(context.Background())
}

func (o SloIndicatorMonitorBasedEvaluationOutput) ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicatorMonitorBasedEvaluation) *SloIndicatorMonitorBasedEvaluation {
		return &v
	}).(SloIndicatorMonitorBasedEvaluationPtrOutput)
}

// Monitor details on which SLO will be based. Only single monitor is supported here.
func (o SloIndicatorMonitorBasedEvaluationOutput) MonitorTriggers() SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput {
	return o.ApplyT(func(v SloIndicatorMonitorBasedEvaluation) SloIndicatorMonitorBasedEvaluationMonitorTriggers {
		return v.MonitorTriggers
	}).(SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput)
}

type SloIndicatorMonitorBasedEvaluationPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorMonitorBasedEvaluationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorMonitorBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorMonitorBasedEvaluationPtrOutput) ToSloIndicatorMonitorBasedEvaluationPtrOutput() SloIndicatorMonitorBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationPtrOutput) ToSloIndicatorMonitorBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationPtrOutput) Elem() SloIndicatorMonitorBasedEvaluationOutput {
	return o.ApplyT(func(v *SloIndicatorMonitorBasedEvaluation) SloIndicatorMonitorBasedEvaluation {
		if v != nil {
			return *v
		}
		var ret SloIndicatorMonitorBasedEvaluation
		return ret
	}).(SloIndicatorMonitorBasedEvaluationOutput)
}

// Monitor details on which SLO will be based. Only single monitor is supported here.
func (o SloIndicatorMonitorBasedEvaluationPtrOutput) MonitorTriggers() SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return o.ApplyT(func(v *SloIndicatorMonitorBasedEvaluation) *SloIndicatorMonitorBasedEvaluationMonitorTriggers {
		if v == nil {
			return nil
		}
		return &v.MonitorTriggers
	}).(SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput)
}

type SloIndicatorMonitorBasedEvaluationMonitorTriggers struct {
	// ID of the monitor. Ex: `0000000000BCB3A4`
	MonitorId string `pulumi:"monitorId"`
	// Type of monitor trigger which will attribute towards a successful or unsuccessful SLO
	// window. Valid values are `Critical`, `Warning`, `MissingData`. Only one trigger type is supported.
	TriggerTypes string `pulumi:"triggerTypes"`
}

// SloIndicatorMonitorBasedEvaluationMonitorTriggersInput is an input type that accepts SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs and SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput values.
// You can construct a concrete instance of `SloIndicatorMonitorBasedEvaluationMonitorTriggersInput` via:
//
//	SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs{...}
type SloIndicatorMonitorBasedEvaluationMonitorTriggersInput interface {
	pulumi.Input

	ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput
	ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutputWithContext(context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput
}

type SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs struct {
	// ID of the monitor. Ex: `0000000000BCB3A4`
	MonitorId pulumi.StringInput `pulumi:"monitorId"`
	// Type of monitor trigger which will attribute towards a successful or unsuccessful SLO
	// window. Valid values are `Critical`, `Warning`, `MissingData`. Only one trigger type is supported.
	TriggerTypes pulumi.StringInput `pulumi:"triggerTypes"`
}

func (SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorMonitorBasedEvaluationMonitorTriggers)(nil)).Elem()
}

func (i SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput {
	return i.ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutputWithContext(context.Background())
}

func (i SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput)
}

func (i SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return i.ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(context.Background())
}

func (i SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput).ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(ctx)
}

// SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrInput is an input type that accepts SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs, SloIndicatorMonitorBasedEvaluationMonitorTriggersPtr and SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput values.
// You can construct a concrete instance of `SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrInput` via:
//
//	        SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs{...}
//
//	or:
//
//	        nil
type SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrInput interface {
	pulumi.Input

	ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput
	ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput
}

type sloIndicatorMonitorBasedEvaluationMonitorTriggersPtrType SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs

func SloIndicatorMonitorBasedEvaluationMonitorTriggersPtr(v *SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs) SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrInput {
	return (*sloIndicatorMonitorBasedEvaluationMonitorTriggersPtrType)(v)
}

func (*sloIndicatorMonitorBasedEvaluationMonitorTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorMonitorBasedEvaluationMonitorTriggers)(nil)).Elem()
}

func (i *sloIndicatorMonitorBasedEvaluationMonitorTriggersPtrType) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return i.ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorMonitorBasedEvaluationMonitorTriggersPtrType) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput)
}

type SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput struct{ *pulumi.OutputState }

func (SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorMonitorBasedEvaluationMonitorTriggers)(nil)).Elem()
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return o.ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(context.Background())
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicatorMonitorBasedEvaluationMonitorTriggers) *SloIndicatorMonitorBasedEvaluationMonitorTriggers {
		return &v
	}).(SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput)
}

// ID of the monitor. Ex: `0000000000BCB3A4`
func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) MonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorMonitorBasedEvaluationMonitorTriggers) string { return v.MonitorId }).(pulumi.StringOutput)
}

// Type of monitor trigger which will attribute towards a successful or unsuccessful SLO
// window. Valid values are `Critical`, `Warning`, `MissingData`. Only one trigger type is supported.
func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput) TriggerTypes() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorMonitorBasedEvaluationMonitorTriggers) string { return v.TriggerTypes }).(pulumi.StringOutput)
}

type SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorMonitorBasedEvaluationMonitorTriggers)(nil)).Elem()
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput() SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput) ToSloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutputWithContext(ctx context.Context) SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput {
	return o
}

func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput) Elem() SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput {
	return o.ApplyT(func(v *SloIndicatorMonitorBasedEvaluationMonitorTriggers) SloIndicatorMonitorBasedEvaluationMonitorTriggers {
		if v != nil {
			return *v
		}
		var ret SloIndicatorMonitorBasedEvaluationMonitorTriggers
		return ret
	}).(SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput)
}

// ID of the monitor. Ex: `0000000000BCB3A4`
func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput) MonitorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorMonitorBasedEvaluationMonitorTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.MonitorId
	}).(pulumi.StringPtrOutput)
}

// Type of monitor trigger which will attribute towards a successful or unsuccessful SLO
// window. Valid values are `Critical`, `Warning`, `MissingData`. Only one trigger type is supported.
func (o SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput) TriggerTypes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorMonitorBasedEvaluationMonitorTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerTypes
	}).(pulumi.StringPtrOutput)
}

type SloIndicatorRequestBasedEvaluation struct {
	// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op *string `pulumi:"op"`
	// The queries to use.
	Queries []SloIndicatorRequestBasedEvaluationQuery `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType string `pulumi:"queryType"`
	// Compared against threshold query's raw data points to determine success criteria.
	Threshold *float64 `pulumi:"threshold"`
}

// SloIndicatorRequestBasedEvaluationInput is an input type that accepts SloIndicatorRequestBasedEvaluationArgs and SloIndicatorRequestBasedEvaluationOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationInput` via:
//
//	SloIndicatorRequestBasedEvaluationArgs{...}
type SloIndicatorRequestBasedEvaluationInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationOutput() SloIndicatorRequestBasedEvaluationOutput
	ToSloIndicatorRequestBasedEvaluationOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationOutput
}

type SloIndicatorRequestBasedEvaluationArgs struct {
	// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op pulumi.StringPtrInput `pulumi:"op"`
	// The queries to use.
	Queries SloIndicatorRequestBasedEvaluationQueryArrayInput `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// Compared against threshold query's raw data points to determine success criteria.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (SloIndicatorRequestBasedEvaluationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationOutput() SloIndicatorRequestBasedEvaluationOutput {
	return i.ToSloIndicatorRequestBasedEvaluationOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationOutput)
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return i.ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationOutput).ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx)
}

// SloIndicatorRequestBasedEvaluationPtrInput is an input type that accepts SloIndicatorRequestBasedEvaluationArgs, SloIndicatorRequestBasedEvaluationPtr and SloIndicatorRequestBasedEvaluationPtrOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationPtrInput` via:
//
//	        SloIndicatorRequestBasedEvaluationArgs{...}
//
//	or:
//
//	        nil
type SloIndicatorRequestBasedEvaluationPtrInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput
	ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationPtrOutput
}

type sloIndicatorRequestBasedEvaluationPtrType SloIndicatorRequestBasedEvaluationArgs

func SloIndicatorRequestBasedEvaluationPtr(v *SloIndicatorRequestBasedEvaluationArgs) SloIndicatorRequestBasedEvaluationPtrInput {
	return (*sloIndicatorRequestBasedEvaluationPtrType)(v)
}

func (*sloIndicatorRequestBasedEvaluationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (i *sloIndicatorRequestBasedEvaluationPtrType) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return i.ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorRequestBasedEvaluationPtrType) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

type SloIndicatorRequestBasedEvaluationOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationOutput() SloIndicatorRequestBasedEvaluationOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Background())
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicatorRequestBasedEvaluation) *SloIndicatorRequestBasedEvaluation {
		return &v
	}).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorRequestBasedEvaluationOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) *string { return v.Op }).(pulumi.StringPtrOutput)
}

// The queries to use.
func (o SloIndicatorRequestBasedEvaluationOutput) Queries() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) []SloIndicatorRequestBasedEvaluationQuery { return v.Queries }).(SloIndicatorRequestBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorRequestBasedEvaluationOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) string { return v.QueryType }).(pulumi.StringOutput)
}

// Compared against threshold query's raw data points to determine success criteria.
func (o SloIndicatorRequestBasedEvaluationOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type SloIndicatorRequestBasedEvaluationPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationPtrOutput) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationPtrOutput) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationPtrOutput) Elem() SloIndicatorRequestBasedEvaluationOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) SloIndicatorRequestBasedEvaluation {
		if v != nil {
			return *v
		}
		var ret SloIndicatorRequestBasedEvaluation
		return ret
	}).(SloIndicatorRequestBasedEvaluationOutput)
}

// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return v.Op
	}).(pulumi.StringPtrOutput)
}

// The queries to use.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) Queries() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) []SloIndicatorRequestBasedEvaluationQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(SloIndicatorRequestBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.QueryType
	}).(pulumi.StringPtrOutput)
}

// Compared against threshold query's raw data points to determine success criteria.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type SloIndicatorRequestBasedEvaluationQuery struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType string `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups []SloIndicatorRequestBasedEvaluationQueryQueryGroup `pulumi:"queryGroups"`
}

// SloIndicatorRequestBasedEvaluationQueryInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryArgs and SloIndicatorRequestBasedEvaluationQueryOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryInput` via:
//
//	SloIndicatorRequestBasedEvaluationQueryArgs{...}
type SloIndicatorRequestBasedEvaluationQueryInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryOutput() SloIndicatorRequestBasedEvaluationQueryOutput
	ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryOutput
}

type SloIndicatorRequestBasedEvaluationQueryArgs struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType pulumi.StringInput `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput `pulumi:"queryGroups"`
}

func (SloIndicatorRequestBasedEvaluationQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryArgs) ToSloIndicatorRequestBasedEvaluationQueryOutput() SloIndicatorRequestBasedEvaluationQueryOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryArgs) ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryOutput)
}

// SloIndicatorRequestBasedEvaluationQueryArrayInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryArray and SloIndicatorRequestBasedEvaluationQueryArrayOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryArrayInput` via:
//
//	SloIndicatorRequestBasedEvaluationQueryArray{ SloIndicatorRequestBasedEvaluationQueryArgs{...} }
type SloIndicatorRequestBasedEvaluationQueryArrayInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryArrayOutput() SloIndicatorRequestBasedEvaluationQueryArrayOutput
	ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryArrayOutput
}

type SloIndicatorRequestBasedEvaluationQueryArray []SloIndicatorRequestBasedEvaluationQueryInput

func (SloIndicatorRequestBasedEvaluationQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryArray) ToSloIndicatorRequestBasedEvaluationQueryArrayOutput() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryArray) ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryArrayOutput)
}

type SloIndicatorRequestBasedEvaluationQueryOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryOutput) ToSloIndicatorRequestBasedEvaluationQueryOutput() SloIndicatorRequestBasedEvaluationQueryOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryOutput) ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryOutput {
	return o
}

// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
// , `Threshold`.
func (o SloIndicatorRequestBasedEvaluationQueryOutput) QueryGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQuery) string { return v.QueryGroupType }).(pulumi.StringOutput)
}

// List of queries to use.
func (o SloIndicatorRequestBasedEvaluationQueryOutput) QueryGroups() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQuery) []SloIndicatorRequestBasedEvaluationQueryQueryGroup {
		return v.QueryGroups
	}).(SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorRequestBasedEvaluationQueryArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryArrayOutput() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryArrayOutput) Index(i pulumi.IntInput) SloIndicatorRequestBasedEvaluationQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorRequestBasedEvaluationQuery {
		return vs[0].([]SloIndicatorRequestBasedEvaluationQuery)[vs[1].(int)]
	}).(SloIndicatorRequestBasedEvaluationQueryOutput)
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroup struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field *string `pulumi:"field"`
	// The query string to use.
	Query string `pulumi:"query"`
	// The row ID to use.
	RowId string `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount bool `pulumi:"useRowCount"`
}

// SloIndicatorRequestBasedEvaluationQueryQueryGroupInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs and SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryQueryGroupInput` via:
//
//	SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs{...}
type SloIndicatorRequestBasedEvaluationQueryQueryGroupInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput
	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The query string to use.
	Query pulumi.StringInput `pulumi:"query"`
	// The row ID to use.
	RowId pulumi.StringInput `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount pulumi.BoolInput `pulumi:"useRowCount"`
}

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput)
}

// SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryQueryGroupArray and SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput` via:
//
//	SloIndicatorRequestBasedEvaluationQueryQueryGroupArray{ SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs{...} }
type SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput
	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupArray []SloIndicatorRequestBasedEvaluationQueryQueryGroupInput

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArray) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArray) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return o
}

// Field of log query output to compare against. To be used only for logs based data
// type when `useRowCount` is false.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The query string to use.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) string { return v.Query }).(pulumi.StringOutput)
}

// The row ID to use.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) string { return v.RowId }).(pulumi.StringOutput)
}

// Whether to use the row count. Defaults to false.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) UseRowCount() pulumi.BoolOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) bool { return v.UseRowCount }).(pulumi.BoolOutput)
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) Index(i pulumi.IntInput) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorRequestBasedEvaluationQueryQueryGroup {
		return vs[0].([]SloIndicatorRequestBasedEvaluationQueryQueryGroup)[vs[1].(int)]
	}).(SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput)
}

type SloIndicatorWindowBasedEvaluation struct {
	// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
	// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
	Aggregation *string `pulumi:"aggregation"`
	// The operator used to define a successful window. Valid values are `LessThan`
	// , `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op string `pulumi:"op"`
	// The queries to use.
	Queries []SloIndicatorWindowBasedEvaluationQuery `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType string `pulumi:"queryType"`
	// The size of the window to use, minimum of `1m` and maximum of `1h`.
	Size string `pulumi:"size"`
	// Threshold for classifying window as successful or unsuccessful, i.e. the minimum value
	// for `(good windows / total windows) * 100`.
	Threshold float64 `pulumi:"threshold"`
}

// SloIndicatorWindowBasedEvaluationInput is an input type that accepts SloIndicatorWindowBasedEvaluationArgs and SloIndicatorWindowBasedEvaluationOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationInput` via:
//
//	SloIndicatorWindowBasedEvaluationArgs{...}
type SloIndicatorWindowBasedEvaluationInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationOutput() SloIndicatorWindowBasedEvaluationOutput
	ToSloIndicatorWindowBasedEvaluationOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationOutput
}

type SloIndicatorWindowBasedEvaluationArgs struct {
	// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
	// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// The operator used to define a successful window. Valid values are `LessThan`
	// , `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op pulumi.StringInput `pulumi:"op"`
	// The queries to use.
	Queries SloIndicatorWindowBasedEvaluationQueryArrayInput `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// The size of the window to use, minimum of `1m` and maximum of `1h`.
	Size pulumi.StringInput `pulumi:"size"`
	// Threshold for classifying window as successful or unsuccessful, i.e. the minimum value
	// for `(good windows / total windows) * 100`.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (SloIndicatorWindowBasedEvaluationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationOutput() SloIndicatorWindowBasedEvaluationOutput {
	return i.ToSloIndicatorWindowBasedEvaluationOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationOutput)
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return i.ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationOutput).ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx)
}

// SloIndicatorWindowBasedEvaluationPtrInput is an input type that accepts SloIndicatorWindowBasedEvaluationArgs, SloIndicatorWindowBasedEvaluationPtr and SloIndicatorWindowBasedEvaluationPtrOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationPtrInput` via:
//
//	        SloIndicatorWindowBasedEvaluationArgs{...}
//
//	or:
//
//	        nil
type SloIndicatorWindowBasedEvaluationPtrInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput
	ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationPtrOutput
}

type sloIndicatorWindowBasedEvaluationPtrType SloIndicatorWindowBasedEvaluationArgs

func SloIndicatorWindowBasedEvaluationPtr(v *SloIndicatorWindowBasedEvaluationArgs) SloIndicatorWindowBasedEvaluationPtrInput {
	return (*sloIndicatorWindowBasedEvaluationPtrType)(v)
}

func (*sloIndicatorWindowBasedEvaluationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (i *sloIndicatorWindowBasedEvaluationPtrType) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return i.ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorWindowBasedEvaluationPtrType) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

type SloIndicatorWindowBasedEvaluationOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationOutput() SloIndicatorWindowBasedEvaluationOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Background())
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicatorWindowBasedEvaluation) *SloIndicatorWindowBasedEvaluation {
		return &v
	}).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
func (o SloIndicatorWindowBasedEvaluationOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// The operator used to define a successful window. Valid values are `LessThan`
// , `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorWindowBasedEvaluationOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) string { return v.Op }).(pulumi.StringOutput)
}

// The queries to use.
func (o SloIndicatorWindowBasedEvaluationOutput) Queries() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) []SloIndicatorWindowBasedEvaluationQuery { return v.Queries }).(SloIndicatorWindowBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorWindowBasedEvaluationOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) string { return v.QueryType }).(pulumi.StringOutput)
}

// The size of the window to use, minimum of `1m` and maximum of `1h`.
func (o SloIndicatorWindowBasedEvaluationOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) string { return v.Size }).(pulumi.StringOutput)
}

// Threshold for classifying window as successful or unsuccessful, i.e. the minimum value
// for `(good windows / total windows) * 100`.
func (o SloIndicatorWindowBasedEvaluationOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type SloIndicatorWindowBasedEvaluationPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationPtrOutput) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationPtrOutput) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationPtrOutput) Elem() SloIndicatorWindowBasedEvaluationOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) SloIndicatorWindowBasedEvaluation {
		if v != nil {
			return *v
		}
		var ret SloIndicatorWindowBasedEvaluation
		return ret
	}).(SloIndicatorWindowBasedEvaluationOutput)
}

// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The operator used to define a successful window. Valid values are `LessThan`
// , `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.Op
	}).(pulumi.StringPtrOutput)
}

// The queries to use.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Queries() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) []SloIndicatorWindowBasedEvaluationQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(SloIndicatorWindowBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.QueryType
	}).(pulumi.StringPtrOutput)
}

// The size of the window to use, minimum of `1m` and maximum of `1h`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.StringPtrOutput)
}

// Threshold for classifying window as successful or unsuccessful, i.e. the minimum value
// for `(good windows / total windows) * 100`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *float64 {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type SloIndicatorWindowBasedEvaluationQuery struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType string `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups []SloIndicatorWindowBasedEvaluationQueryQueryGroup `pulumi:"queryGroups"`
}

// SloIndicatorWindowBasedEvaluationQueryInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryArgs and SloIndicatorWindowBasedEvaluationQueryOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryInput` via:
//
//	SloIndicatorWindowBasedEvaluationQueryArgs{...}
type SloIndicatorWindowBasedEvaluationQueryInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryOutput() SloIndicatorWindowBasedEvaluationQueryOutput
	ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryOutput
}

type SloIndicatorWindowBasedEvaluationQueryArgs struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType pulumi.StringInput `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput `pulumi:"queryGroups"`
}

func (SloIndicatorWindowBasedEvaluationQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryArgs) ToSloIndicatorWindowBasedEvaluationQueryOutput() SloIndicatorWindowBasedEvaluationQueryOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryArgs) ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryOutput)
}

// SloIndicatorWindowBasedEvaluationQueryArrayInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryArray and SloIndicatorWindowBasedEvaluationQueryArrayOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryArrayInput` via:
//
//	SloIndicatorWindowBasedEvaluationQueryArray{ SloIndicatorWindowBasedEvaluationQueryArgs{...} }
type SloIndicatorWindowBasedEvaluationQueryArrayInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryArrayOutput() SloIndicatorWindowBasedEvaluationQueryArrayOutput
	ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryArrayOutput
}

type SloIndicatorWindowBasedEvaluationQueryArray []SloIndicatorWindowBasedEvaluationQueryInput

func (SloIndicatorWindowBasedEvaluationQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryArray) ToSloIndicatorWindowBasedEvaluationQueryArrayOutput() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryArray) ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryArrayOutput)
}

type SloIndicatorWindowBasedEvaluationQueryOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryOutput) ToSloIndicatorWindowBasedEvaluationQueryOutput() SloIndicatorWindowBasedEvaluationQueryOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryOutput) ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryOutput {
	return o
}

// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
// , `Threshold`.
func (o SloIndicatorWindowBasedEvaluationQueryOutput) QueryGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQuery) string { return v.QueryGroupType }).(pulumi.StringOutput)
}

// List of queries to use.
func (o SloIndicatorWindowBasedEvaluationQueryOutput) QueryGroups() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQuery) []SloIndicatorWindowBasedEvaluationQueryQueryGroup {
		return v.QueryGroups
	}).(SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorWindowBasedEvaluationQueryArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryArrayOutput() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryArrayOutput) Index(i pulumi.IntInput) SloIndicatorWindowBasedEvaluationQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorWindowBasedEvaluationQuery {
		return vs[0].([]SloIndicatorWindowBasedEvaluationQuery)[vs[1].(int)]
	}).(SloIndicatorWindowBasedEvaluationQueryOutput)
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroup struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field *string `pulumi:"field"`
	// The query string to use.
	Query string `pulumi:"query"`
	// The row ID to use.
	RowId string `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount bool `pulumi:"useRowCount"`
}

// SloIndicatorWindowBasedEvaluationQueryQueryGroupInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs and SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryQueryGroupInput` via:
//
//	SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs{...}
type SloIndicatorWindowBasedEvaluationQueryQueryGroupInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput
	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The query string to use.
	Query pulumi.StringInput `pulumi:"query"`
	// The row ID to use.
	RowId pulumi.StringInput `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount pulumi.BoolInput `pulumi:"useRowCount"`
}

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput)
}

// SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryQueryGroupArray and SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput` via:
//
//	SloIndicatorWindowBasedEvaluationQueryQueryGroupArray{ SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs{...} }
type SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput
	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupArray []SloIndicatorWindowBasedEvaluationQueryQueryGroupInput

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArray) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArray) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return o
}

// Field of log query output to compare against. To be used only for logs based data
// type when `useRowCount` is false.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The query string to use.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) string { return v.Query }).(pulumi.StringOutput)
}

// The row ID to use.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) string { return v.RowId }).(pulumi.StringOutput)
}

// Whether to use the row count. Defaults to false.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) UseRowCount() pulumi.BoolOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) bool { return v.UseRowCount }).(pulumi.BoolOutput)
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) Index(i pulumi.IntInput) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorWindowBasedEvaluationQueryQueryGroup {
		return vs[0].([]SloIndicatorWindowBasedEvaluationQueryQueryGroup)[vs[1].(int)]
	}).(SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceDefaultDateFormatInput)(nil)).Elem(), HttpSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceDefaultDateFormatArrayInput)(nil)).Elem(), HttpSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceFilterInput)(nil)).Elem(), HttpSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceFilterArrayInput)(nil)).Elem(), HttpSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceAuthenticationInput)(nil)).Elem(), KineisLogSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceAuthenticationPtrInput)(nil)).Elem(), KineisLogSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceDefaultDateFormatInput)(nil)).Elem(), KineisLogSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceDefaultDateFormatArrayInput)(nil)).Elem(), KineisLogSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceFilterInput)(nil)).Elem(), KineisLogSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceFilterArrayInput)(nil)).Elem(), KineisLogSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourcePathInput)(nil)).Elem(), KineisLogSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourcePathPtrInput)(nil)).Elem(), KineisLogSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceAuthenticationInput)(nil)).Elem(), KinesisMetricsSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceAuthenticationPtrInput)(nil)).Elem(), KinesisMetricsSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormatInput)(nil)).Elem(), KinesisMetricsSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormatArrayInput)(nil)).Elem(), KinesisMetricsSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceFilterInput)(nil)).Elem(), KinesisMetricsSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceFilterArrayInput)(nil)).Elem(), KinesisMetricsSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathInput)(nil)).Elem(), KinesisMetricsSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathPtrInput)(nil)).Elem(), KinesisMetricsSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathTagFilterInput)(nil)).Elem(), KinesisMetricsSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathTagFilterArrayInput)(nil)).Elem(), KinesisMetricsSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalFileSourceDefaultDateFormatInput)(nil)).Elem(), LocalFileSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalFileSourceDefaultDateFormatArrayInput)(nil)).Elem(), LocalFileSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalFileSourceFilterInput)(nil)).Elem(), LocalFileSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalFileSourceFilterArrayInput)(nil)).Elem(), LocalFileSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchQueryParameterInput)(nil)).Elem(), LogSearchQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchQueryParameterArrayInput)(nil)).Elem(), LogSearchQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleInput)(nil)).Elem(), LogSearchScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchSchedulePtrInput)(nil)).Elem(), LogSearchScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationAlertSearchNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationAlertSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationAlertSearchNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationAlertSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationCseSignalNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationCseSignalNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationCseSignalNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationCseSignalNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationEmailSearchNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationEmailSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationEmailSearchNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationEmailSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationSaveToLookupNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationSaveToLookupNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationSaveToLookupNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationSaveToLookupNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationSaveToViewNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationSaveToViewNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationSaveToViewNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationSaveToViewNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationServiceNowSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationServiceNowSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotificationFieldsInput)(nil)).Elem(), LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrInput)(nil)).Elem(), LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationWebhookSearchNotificationInput)(nil)).Elem(), LogSearchScheduleNotificationWebhookSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleNotificationWebhookSearchNotificationPtrInput)(nil)).Elem(), LogSearchScheduleNotificationWebhookSearchNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParameterInput)(nil)).Elem(), LogSearchScheduleParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParameterArrayInput)(nil)).Elem(), LogSearchScheduleParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrInput)(nil)).Elem(), LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleThresholdInput)(nil)).Elem(), LogSearchScheduleThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchScheduleThresholdPtrInput)(nil)).Elem(), LogSearchScheduleThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromPtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToPtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeCompleteLiteralTimeRangeInput)(nil)).Elem(), LogSearchTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSearchTimeRangeCompleteLiteralTimeRangePtrInput)(nil)).Elem(), LogSearchTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LookupTableFieldInput)(nil)).Elem(), LookupTableFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LookupTableFieldArrayInput)(nil)).Elem(), LookupTableFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceAuthenticationInput)(nil)).Elem(), MetadataSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceAuthenticationPtrInput)(nil)).Elem(), MetadataSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceDefaultDateFormatInput)(nil)).Elem(), MetadataSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceDefaultDateFormatArrayInput)(nil)).Elem(), MetadataSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceFilterInput)(nil)).Elem(), MetadataSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceFilterArrayInput)(nil)).Elem(), MetadataSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourcePathInput)(nil)).Elem(), MetadataSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourcePathPtrInput)(nil)).Elem(), MetadataSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchMetricsQueryInput)(nil)).Elem(), MetricsSearchMetricsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchMetricsQueryArrayInput)(nil)).Elem(), MetricsSearchMetricsQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeCompleteLiteralTimeRangeInput)(nil)).Elem(), MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricsSearchTimeRangeCompleteLiteralTimeRangePtrInput)(nil)).Elem(), MetricsSearchTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorFolderObjPermissionInput)(nil)).Elem(), MonitorFolderObjPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorFolderObjPermissionArrayInput)(nil)).Elem(), MonitorFolderObjPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorNotificationInput)(nil)).Elem(), MonitorNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorNotificationArrayInput)(nil)).Elem(), MonitorNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorNotificationNotificationInput)(nil)).Elem(), MonitorNotificationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorObjPermissionInput)(nil)).Elem(), MonitorObjPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorObjPermissionArrayInput)(nil)).Elem(), MonitorObjPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorQueryInput)(nil)).Elem(), MonitorQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorQueryArrayInput)(nil)).Elem(), MonitorQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerInput)(nil)).Elem(), MonitorTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerArrayInput)(nil)).Elem(), MonitorTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsInput)(nil)).Elem(), MonitorTriggerConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsPtrInput)(nil)).Elem(), MonitorTriggerConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataConditionInput)(nil)).Elem(), MonitorTriggerConditionsLogsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlertInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataConditionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutingScheduleMonitorInput)(nil)).Elem(), MutingScheduleMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutingScheduleMonitorPtrInput)(nil)).Elem(), MutingScheduleMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutingScheduleScheduleInput)(nil)).Elem(), MutingScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutingScheduleSchedulePtrInput)(nil)).Elem(), MutingScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoliciesUserConcurrentSessionsLimitInput)(nil)).Elem(), PoliciesUserConcurrentSessionsLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoliciesUserConcurrentSessionsLimitPtrInput)(nil)).Elem(), PoliciesUserConcurrentSessionsLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceAuthenticationInput)(nil)).Elem(), PollingSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceAuthenticationPtrInput)(nil)).Elem(), PollingSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceDefaultDateFormatInput)(nil)).Elem(), PollingSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceDefaultDateFormatArrayInput)(nil)).Elem(), PollingSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceFilterInput)(nil)).Elem(), PollingSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceFilterArrayInput)(nil)).Elem(), PollingSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathInput)(nil)).Elem(), PollingSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathPtrInput)(nil)).Elem(), PollingSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathTagFilterInput)(nil)).Elem(), PollingSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathTagFilterArrayInput)(nil)).Elem(), PollingSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumSourceDefaultDateFormatInput)(nil)).Elem(), RumSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumSourceDefaultDateFormatArrayInput)(nil)).Elem(), RumSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumSourceFilterInput)(nil)).Elem(), RumSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumSourceFilterArrayInput)(nil)).Elem(), RumSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumSourcePathInput)(nil)).Elem(), RumSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumSourcePathPtrInput)(nil)).Elem(), RumSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourceAuthenticationInput)(nil)).Elem(), S3ArchiveSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourceAuthenticationPtrInput)(nil)).Elem(), S3ArchiveSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourceDefaultDateFormatInput)(nil)).Elem(), S3ArchiveSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourceDefaultDateFormatArrayInput)(nil)).Elem(), S3ArchiveSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourceFilterInput)(nil)).Elem(), S3ArchiveSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourceFilterArrayInput)(nil)).Elem(), S3ArchiveSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathInput)(nil)).Elem(), S3ArchiveSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathPtrInput)(nil)).Elem(), S3ArchiveSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathCustomServiceInput)(nil)).Elem(), S3ArchiveSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathCustomServiceArrayInput)(nil)).Elem(), S3ArchiveSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), S3ArchiveSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), S3ArchiveSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathTagFilterInput)(nil)).Elem(), S3ArchiveSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3ArchiveSourcePathTagFilterArrayInput)(nil)).Elem(), S3ArchiveSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceAuthenticationInput)(nil)).Elem(), S3AuditSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceAuthenticationPtrInput)(nil)).Elem(), S3AuditSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceDefaultDateFormatInput)(nil)).Elem(), S3AuditSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceDefaultDateFormatArrayInput)(nil)).Elem(), S3AuditSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceFilterInput)(nil)).Elem(), S3AuditSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceFilterArrayInput)(nil)).Elem(), S3AuditSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathInput)(nil)).Elem(), S3AuditSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathPtrInput)(nil)).Elem(), S3AuditSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathCustomServiceInput)(nil)).Elem(), S3AuditSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathCustomServiceArrayInput)(nil)).Elem(), S3AuditSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), S3AuditSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), S3AuditSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathTagFilterInput)(nil)).Elem(), S3AuditSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathTagFilterArrayInput)(nil)).Elem(), S3AuditSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceAuthenticationInput)(nil)).Elem(), S3SourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceAuthenticationPtrInput)(nil)).Elem(), S3SourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceDefaultDateFormatInput)(nil)).Elem(), S3SourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceDefaultDateFormatArrayInput)(nil)).Elem(), S3SourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceFilterInput)(nil)).Elem(), S3SourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceFilterArrayInput)(nil)).Elem(), S3SourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathInput)(nil)).Elem(), S3SourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathPtrInput)(nil)).Elem(), S3SourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathCustomServiceInput)(nil)).Elem(), S3SourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathCustomServiceArrayInput)(nil)).Elem(), S3SourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), S3SourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), S3SourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathTagFilterInput)(nil)).Elem(), S3SourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathTagFilterArrayInput)(nil)).Elem(), S3SourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabledInput)(nil)).Elem(), SamlConfigurationOnDemandProvisioningEnabledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabledPtrInput)(nil)).Elem(), SamlConfigurationOnDemandProvisioningEnabledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloComplianceInput)(nil)).Elem(), SloComplianceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloComplianceArrayInput)(nil)).Elem(), SloComplianceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorInput)(nil)).Elem(), SloIndicatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorPtrInput)(nil)).Elem(), SloIndicatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorMonitorBasedEvaluationInput)(nil)).Elem(), SloIndicatorMonitorBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorMonitorBasedEvaluationPtrInput)(nil)).Elem(), SloIndicatorMonitorBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorMonitorBasedEvaluationMonitorTriggersInput)(nil)).Elem(), SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrInput)(nil)).Elem(), SloIndicatorMonitorBasedEvaluationMonitorTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationPtrInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryArrayInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroupInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryQueryGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationPtrInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryArrayInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroupInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryQueryGroupArray{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HttpSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(HttpSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(HttpSourceFilterOutput{})
	pulumi.RegisterOutputType(HttpSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KineisLogSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(KineisLogSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KineisLogSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(KineisLogSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(KineisLogSourceFilterOutput{})
	pulumi.RegisterOutputType(KineisLogSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KineisLogSourcePathOutput{})
	pulumi.RegisterOutputType(KineisLogSourcePathPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceFilterOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(LocalFileSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(LocalFileSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(LocalFileSourceFilterOutput{})
	pulumi.RegisterOutputType(LocalFileSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(LogSearchQueryParameterOutput{})
	pulumi.RegisterOutputType(LogSearchQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleOutput{})
	pulumi.RegisterOutputType(LogSearchSchedulePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationAlertSearchNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationAlertSearchNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationCseSignalNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationCseSignalNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationEmailSearchNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationEmailSearchNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationSaveToLookupNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationSaveToLookupNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationSaveToViewNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationSaveToViewNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationServiceNowSearchNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationServiceNowSearchNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationWebhookSearchNotificationOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleNotificationWebhookSearchNotificationPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParameterOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParameterArrayOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleParseableTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleThresholdOutput{})
	pulumi.RegisterOutputType(LogSearchScheduleThresholdPtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(LogSearchTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(LookupTableFieldOutput{})
	pulumi.RegisterOutputType(LookupTableFieldArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(MetadataSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(MetadataSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(MetadataSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceFilterOutput{})
	pulumi.RegisterOutputType(MetadataSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourcePathOutput{})
	pulumi.RegisterOutputType(MetadataSourcePathPtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchMetricsQueryOutput{})
	pulumi.RegisterOutputType(MetricsSearchMetricsQueryArrayOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(MetricsSearchTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(MonitorFolderObjPermissionOutput{})
	pulumi.RegisterOutputType(MonitorFolderObjPermissionArrayOutput{})
	pulumi.RegisterOutputType(MonitorNotificationOutput{})
	pulumi.RegisterOutputType(MonitorNotificationArrayOutput{})
	pulumi.RegisterOutputType(MonitorNotificationNotificationOutput{})
	pulumi.RegisterOutputType(MonitorObjPermissionOutput{})
	pulumi.RegisterOutputType(MonitorObjPermissionArrayOutput{})
	pulumi.RegisterOutputType(MonitorQueryOutput{})
	pulumi.RegisterOutputType(MonitorQueryArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerOutput{})
	pulumi.RegisterOutputType(MonitorTriggerArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsMissingDataConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsMissingDataConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionCriticalBurnRateArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRateArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MutingScheduleMonitorOutput{})
	pulumi.RegisterOutputType(MutingScheduleMonitorPtrOutput{})
	pulumi.RegisterOutputType(MutingScheduleScheduleOutput{})
	pulumi.RegisterOutputType(MutingScheduleSchedulePtrOutput{})
	pulumi.RegisterOutputType(PoliciesUserConcurrentSessionsLimitOutput{})
	pulumi.RegisterOutputType(PoliciesUserConcurrentSessionsLimitPtrOutput{})
	pulumi.RegisterOutputType(PollingSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(PollingSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(PollingSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(PollingSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(PollingSourceFilterOutput{})
	pulumi.RegisterOutputType(PollingSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(PollingSourcePathOutput{})
	pulumi.RegisterOutputType(PollingSourcePathPtrOutput{})
	pulumi.RegisterOutputType(PollingSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(PollingSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(RumSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(RumSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(RumSourceFilterOutput{})
	pulumi.RegisterOutputType(RumSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(RumSourcePathOutput{})
	pulumi.RegisterOutputType(RumSourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourceFilterOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3ArchiveSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3AuditSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3AuditSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3AuditSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourceFilterOutput{})
	pulumi.RegisterOutputType(S3AuditSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(S3SourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3SourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3SourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3SourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3SourceFilterOutput{})
	pulumi.RegisterOutputType(S3SourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathOutput{})
	pulumi.RegisterOutputType(S3SourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3SourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(S3SourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3SourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(SamlConfigurationOnDemandProvisioningEnabledOutput{})
	pulumi.RegisterOutputType(SamlConfigurationOnDemandProvisioningEnabledPtrOutput{})
	pulumi.RegisterOutputType(SloComplianceOutput{})
	pulumi.RegisterOutputType(SloComplianceArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorOutput{})
	pulumi.RegisterOutputType(SloIndicatorPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorMonitorBasedEvaluationOutput{})
	pulumi.RegisterOutputType(SloIndicatorMonitorBasedEvaluationPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorMonitorBasedEvaluationMonitorTriggersOutput{})
	pulumi.RegisterOutputType(SloIndicatorMonitorBasedEvaluationMonitorTriggersPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput{})
}
