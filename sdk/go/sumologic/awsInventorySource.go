// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Sumologic AWS Inventory source to collect AWS resource inventory data.
//
// __IMPORTANT:__ The AWS credentials are stored in plain-text in the state. This is a potential security issue.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			collector, err := sumologic.NewCollector(ctx, "collector", &sumologic.CollectorArgs{
//				Description: pulumi.String("Just testing this"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = sumologic.NewAwsInventorySource(ctx, "awsInventorySource", &sumologic.AwsInventorySourceArgs{
//				Authentication: &AwsInventorySourceAuthenticationArgs{
//					RoleArn: pulumi.String("arn:aws:iam::01234567890:role/sumo-role"),
//					Type:    pulumi.String("AWSRoleBasedAuthentication"),
//				},
//				Category:    pulumi.String("aws/aws_inventory"),
//				CollectorId: collector.ID(),
//				ContentType: pulumi.String("AwsInventory"),
//				Description: pulumi.String("My description"),
//				Path: &AwsInventorySourcePathArgs{
//					LimitToNamespaces: pulumi.StringArray{
//						pulumi.String("AWS/RDS"),
//						pulumi.String("AWS/EC2"),
//					},
//					LimitToRegions: pulumi.StringArray{
//						pulumi.String("us-west-2"),
//					},
//					Type: pulumi.String("AwsInventoryPath"),
//				},
//				Paused:       pulumi.Bool(false),
//				ScanInterval: pulumi.Int(300000),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AWS Inventory sources can be imported using the collector and source IDs (`collector/source`), e.g.hcl
//
// ```sh
//
//	$ pulumi import sumologic:index/awsInventorySource:AwsInventorySource test 123/456
//
// ```
//
//	AWS Inventory sources can be imported using the collector name and source name (`collectorName/sourceName`), e.g.hcl
//
// ```sh
//
//	$ pulumi import sumologic:index/awsInventorySource:AwsInventorySource test my-test-collector/my-test-source
//
// ```
type AwsInventorySource struct {
	pulumi.CustomResourceState

	// Authentication details to access AWS `Describe*` APIs.
	Authentication       AwsInventorySourceAuthenticationOutput `pulumi:"authentication"`
	AutomaticDateParsing pulumi.BoolPtrOutput                   `pulumi:"automaticDateParsing"`
	Category             pulumi.StringPtrOutput                 `pulumi:"category"`
	CollectorId          pulumi.IntOutput                       `pulumi:"collectorId"`
	// The content-type of the collected data. This has to be `AwsInventoryPath` for AWS Inventory source.
	ContentType                pulumi.StringOutput                            `pulumi:"contentType"`
	CutoffRelativeTime         pulumi.StringPtrOutput                         `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            pulumi.IntPtrOutput                            `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         AwsInventorySourceDefaultDateFormatArrayOutput `pulumi:"defaultDateFormats"`
	Description                pulumi.StringPtrOutput                         `pulumi:"description"`
	Fields                     pulumi.StringMapOutput                         `pulumi:"fields"`
	Filters                    AwsInventorySourceFilterArrayOutput            `pulumi:"filters"`
	ForceTimezone              pulumi.BoolPtrOutput                           `pulumi:"forceTimezone"`
	HostName                   pulumi.StringPtrOutput                         `pulumi:"hostName"`
	ManualPrefixRegexp         pulumi.StringPtrOutput                         `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled pulumi.BoolPtrOutput                           `pulumi:"multilineProcessingEnabled"`
	Name                       pulumi.StringOutput                            `pulumi:"name"`
	// The location to scan for new data.
	Path AwsInventorySourcePathOutput `pulumi:"path"`
	// When set to true, the scanner is paused. To disable, set to false.
	Paused pulumi.BoolOutput `pulumi:"paused"`
	// Time interval in milliseconds of scans for new data. The minimum value is 1000 milliseconds. Currently this value is not respected.
	ScanInterval        pulumi.IntOutput       `pulumi:"scanInterval"`
	Timezone            pulumi.StringPtrOutput `pulumi:"timezone"`
	Url                 pulumi.StringOutput    `pulumi:"url"`
	UseAutolineMatching pulumi.BoolPtrOutput   `pulumi:"useAutolineMatching"`
}

// NewAwsInventorySource registers a new resource with the given unique name, arguments, and options.
func NewAwsInventorySource(ctx *pulumi.Context,
	name string, args *AwsInventorySourceArgs, opts ...pulumi.ResourceOption) (*AwsInventorySource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.CollectorId == nil {
		return nil, errors.New("invalid value for required argument 'CollectorId'")
	}
	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	if args.Paused == nil {
		return nil, errors.New("invalid value for required argument 'Paused'")
	}
	if args.ScanInterval == nil {
		return nil, errors.New("invalid value for required argument 'ScanInterval'")
	}
	var resource AwsInventorySource
	err := ctx.RegisterResource("sumologic:index/awsInventorySource:AwsInventorySource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsInventorySource gets an existing AwsInventorySource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsInventorySource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsInventorySourceState, opts ...pulumi.ResourceOption) (*AwsInventorySource, error) {
	var resource AwsInventorySource
	err := ctx.ReadResource("sumologic:index/awsInventorySource:AwsInventorySource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsInventorySource resources.
type awsInventorySourceState struct {
	// Authentication details to access AWS `Describe*` APIs.
	Authentication       *AwsInventorySourceAuthentication `pulumi:"authentication"`
	AutomaticDateParsing *bool                             `pulumi:"automaticDateParsing"`
	Category             *string                           `pulumi:"category"`
	CollectorId          *int                              `pulumi:"collectorId"`
	// The content-type of the collected data. This has to be `AwsInventoryPath` for AWS Inventory source.
	ContentType                *string                               `pulumi:"contentType"`
	CutoffRelativeTime         *string                               `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                  `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []AwsInventorySourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                               `pulumi:"description"`
	Fields                     map[string]string                     `pulumi:"fields"`
	Filters                    []AwsInventorySourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                                 `pulumi:"forceTimezone"`
	HostName                   *string                               `pulumi:"hostName"`
	ManualPrefixRegexp         *string                               `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                                 `pulumi:"multilineProcessingEnabled"`
	Name                       *string                               `pulumi:"name"`
	// The location to scan for new data.
	Path *AwsInventorySourcePath `pulumi:"path"`
	// When set to true, the scanner is paused. To disable, set to false.
	Paused *bool `pulumi:"paused"`
	// Time interval in milliseconds of scans for new data. The minimum value is 1000 milliseconds. Currently this value is not respected.
	ScanInterval        *int    `pulumi:"scanInterval"`
	Timezone            *string `pulumi:"timezone"`
	Url                 *string `pulumi:"url"`
	UseAutolineMatching *bool   `pulumi:"useAutolineMatching"`
}

type AwsInventorySourceState struct {
	// Authentication details to access AWS `Describe*` APIs.
	Authentication       AwsInventorySourceAuthenticationPtrInput
	AutomaticDateParsing pulumi.BoolPtrInput
	Category             pulumi.StringPtrInput
	CollectorId          pulumi.IntPtrInput
	// The content-type of the collected data. This has to be `AwsInventoryPath` for AWS Inventory source.
	ContentType                pulumi.StringPtrInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         AwsInventorySourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    AwsInventorySourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	// The location to scan for new data.
	Path AwsInventorySourcePathPtrInput
	// When set to true, the scanner is paused. To disable, set to false.
	Paused pulumi.BoolPtrInput
	// Time interval in milliseconds of scans for new data. The minimum value is 1000 milliseconds. Currently this value is not respected.
	ScanInterval        pulumi.IntPtrInput
	Timezone            pulumi.StringPtrInput
	Url                 pulumi.StringPtrInput
	UseAutolineMatching pulumi.BoolPtrInput
}

func (AwsInventorySourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsInventorySourceState)(nil)).Elem()
}

type awsInventorySourceArgs struct {
	// Authentication details to access AWS `Describe*` APIs.
	Authentication       AwsInventorySourceAuthentication `pulumi:"authentication"`
	AutomaticDateParsing *bool                            `pulumi:"automaticDateParsing"`
	Category             *string                          `pulumi:"category"`
	CollectorId          int                              `pulumi:"collectorId"`
	// The content-type of the collected data. This has to be `AwsInventoryPath` for AWS Inventory source.
	ContentType                string                                `pulumi:"contentType"`
	CutoffRelativeTime         *string                               `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                  `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []AwsInventorySourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                               `pulumi:"description"`
	Fields                     map[string]string                     `pulumi:"fields"`
	Filters                    []AwsInventorySourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                                 `pulumi:"forceTimezone"`
	HostName                   *string                               `pulumi:"hostName"`
	ManualPrefixRegexp         *string                               `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                                 `pulumi:"multilineProcessingEnabled"`
	Name                       *string                               `pulumi:"name"`
	// The location to scan for new data.
	Path AwsInventorySourcePath `pulumi:"path"`
	// When set to true, the scanner is paused. To disable, set to false.
	Paused bool `pulumi:"paused"`
	// Time interval in milliseconds of scans for new data. The minimum value is 1000 milliseconds. Currently this value is not respected.
	ScanInterval        int     `pulumi:"scanInterval"`
	Timezone            *string `pulumi:"timezone"`
	UseAutolineMatching *bool   `pulumi:"useAutolineMatching"`
}

// The set of arguments for constructing a AwsInventorySource resource.
type AwsInventorySourceArgs struct {
	// Authentication details to access AWS `Describe*` APIs.
	Authentication       AwsInventorySourceAuthenticationInput
	AutomaticDateParsing pulumi.BoolPtrInput
	Category             pulumi.StringPtrInput
	CollectorId          pulumi.IntInput
	// The content-type of the collected data. This has to be `AwsInventoryPath` for AWS Inventory source.
	ContentType                pulumi.StringInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         AwsInventorySourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    AwsInventorySourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	// The location to scan for new data.
	Path AwsInventorySourcePathInput
	// When set to true, the scanner is paused. To disable, set to false.
	Paused pulumi.BoolInput
	// Time interval in milliseconds of scans for new data. The minimum value is 1000 milliseconds. Currently this value is not respected.
	ScanInterval        pulumi.IntInput
	Timezone            pulumi.StringPtrInput
	UseAutolineMatching pulumi.BoolPtrInput
}

func (AwsInventorySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsInventorySourceArgs)(nil)).Elem()
}

type AwsInventorySourceInput interface {
	pulumi.Input

	ToAwsInventorySourceOutput() AwsInventorySourceOutput
	ToAwsInventorySourceOutputWithContext(ctx context.Context) AwsInventorySourceOutput
}

func (*AwsInventorySource) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySource)(nil)).Elem()
}

func (i *AwsInventorySource) ToAwsInventorySourceOutput() AwsInventorySourceOutput {
	return i.ToAwsInventorySourceOutputWithContext(context.Background())
}

func (i *AwsInventorySource) ToAwsInventorySourceOutputWithContext(ctx context.Context) AwsInventorySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceOutput)
}

// AwsInventorySourceArrayInput is an input type that accepts AwsInventorySourceArray and AwsInventorySourceArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourceArrayInput` via:
//
//	AwsInventorySourceArray{ AwsInventorySourceArgs{...} }
type AwsInventorySourceArrayInput interface {
	pulumi.Input

	ToAwsInventorySourceArrayOutput() AwsInventorySourceArrayOutput
	ToAwsInventorySourceArrayOutputWithContext(context.Context) AwsInventorySourceArrayOutput
}

type AwsInventorySourceArray []AwsInventorySourceInput

func (AwsInventorySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsInventorySource)(nil)).Elem()
}

func (i AwsInventorySourceArray) ToAwsInventorySourceArrayOutput() AwsInventorySourceArrayOutput {
	return i.ToAwsInventorySourceArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourceArray) ToAwsInventorySourceArrayOutputWithContext(ctx context.Context) AwsInventorySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceArrayOutput)
}

// AwsInventorySourceMapInput is an input type that accepts AwsInventorySourceMap and AwsInventorySourceMapOutput values.
// You can construct a concrete instance of `AwsInventorySourceMapInput` via:
//
//	AwsInventorySourceMap{ "key": AwsInventorySourceArgs{...} }
type AwsInventorySourceMapInput interface {
	pulumi.Input

	ToAwsInventorySourceMapOutput() AwsInventorySourceMapOutput
	ToAwsInventorySourceMapOutputWithContext(context.Context) AwsInventorySourceMapOutput
}

type AwsInventorySourceMap map[string]AwsInventorySourceInput

func (AwsInventorySourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsInventorySource)(nil)).Elem()
}

func (i AwsInventorySourceMap) ToAwsInventorySourceMapOutput() AwsInventorySourceMapOutput {
	return i.ToAwsInventorySourceMapOutputWithContext(context.Background())
}

func (i AwsInventorySourceMap) ToAwsInventorySourceMapOutputWithContext(ctx context.Context) AwsInventorySourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceMapOutput)
}

type AwsInventorySourceOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySource)(nil)).Elem()
}

func (o AwsInventorySourceOutput) ToAwsInventorySourceOutput() AwsInventorySourceOutput {
	return o
}

func (o AwsInventorySourceOutput) ToAwsInventorySourceOutputWithContext(ctx context.Context) AwsInventorySourceOutput {
	return o
}

// Authentication details to access AWS `Describe*` APIs.
func (o AwsInventorySourceOutput) Authentication() AwsInventorySourceAuthenticationOutput {
	return o.ApplyT(func(v *AwsInventorySource) AwsInventorySourceAuthenticationOutput { return v.Authentication }).(AwsInventorySourceAuthenticationOutput)
}

func (o AwsInventorySourceOutput) AutomaticDateParsing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.BoolPtrOutput { return v.AutomaticDateParsing }).(pulumi.BoolPtrOutput)
}

func (o AwsInventorySourceOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringPtrOutput { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceOutput) CollectorId() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.IntOutput { return v.CollectorId }).(pulumi.IntOutput)
}

// The content-type of the collected data. This has to be `AwsInventoryPath` for AWS Inventory source.
func (o AwsInventorySourceOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

func (o AwsInventorySourceOutput) CutoffRelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringPtrOutput { return v.CutoffRelativeTime }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceOutput) CutoffTimestamp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.IntPtrOutput { return v.CutoffTimestamp }).(pulumi.IntPtrOutput)
}

func (o AwsInventorySourceOutput) DefaultDateFormats() AwsInventorySourceDefaultDateFormatArrayOutput {
	return o.ApplyT(func(v *AwsInventorySource) AwsInventorySourceDefaultDateFormatArrayOutput {
		return v.DefaultDateFormats
	}).(AwsInventorySourceDefaultDateFormatArrayOutput)
}

func (o AwsInventorySourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceOutput) Fields() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringMapOutput { return v.Fields }).(pulumi.StringMapOutput)
}

func (o AwsInventorySourceOutput) Filters() AwsInventorySourceFilterArrayOutput {
	return o.ApplyT(func(v *AwsInventorySource) AwsInventorySourceFilterArrayOutput { return v.Filters }).(AwsInventorySourceFilterArrayOutput)
}

func (o AwsInventorySourceOutput) ForceTimezone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.BoolPtrOutput { return v.ForceTimezone }).(pulumi.BoolPtrOutput)
}

func (o AwsInventorySourceOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringPtrOutput { return v.HostName }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceOutput) ManualPrefixRegexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringPtrOutput { return v.ManualPrefixRegexp }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceOutput) MultilineProcessingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.BoolPtrOutput { return v.MultilineProcessingEnabled }).(pulumi.BoolPtrOutput)
}

func (o AwsInventorySourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The location to scan for new data.
func (o AwsInventorySourceOutput) Path() AwsInventorySourcePathOutput {
	return o.ApplyT(func(v *AwsInventorySource) AwsInventorySourcePathOutput { return v.Path }).(AwsInventorySourcePathOutput)
}

// When set to true, the scanner is paused. To disable, set to false.
func (o AwsInventorySourceOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.BoolOutput { return v.Paused }).(pulumi.BoolOutput)
}

// Time interval in milliseconds of scans for new data. The minimum value is 1000 milliseconds. Currently this value is not respected.
func (o AwsInventorySourceOutput) ScanInterval() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.IntOutput { return v.ScanInterval }).(pulumi.IntOutput)
}

func (o AwsInventorySourceOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o AwsInventorySourceOutput) UseAutolineMatching() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsInventorySource) pulumi.BoolPtrOutput { return v.UseAutolineMatching }).(pulumi.BoolPtrOutput)
}

type AwsInventorySourceArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsInventorySource)(nil)).Elem()
}

func (o AwsInventorySourceArrayOutput) ToAwsInventorySourceArrayOutput() AwsInventorySourceArrayOutput {
	return o
}

func (o AwsInventorySourceArrayOutput) ToAwsInventorySourceArrayOutputWithContext(ctx context.Context) AwsInventorySourceArrayOutput {
	return o
}

func (o AwsInventorySourceArrayOutput) Index(i pulumi.IntInput) AwsInventorySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsInventorySource {
		return vs[0].([]*AwsInventorySource)[vs[1].(int)]
	}).(AwsInventorySourceOutput)
}

type AwsInventorySourceMapOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsInventorySource)(nil)).Elem()
}

func (o AwsInventorySourceMapOutput) ToAwsInventorySourceMapOutput() AwsInventorySourceMapOutput {
	return o
}

func (o AwsInventorySourceMapOutput) ToAwsInventorySourceMapOutputWithContext(ctx context.Context) AwsInventorySourceMapOutput {
	return o
}

func (o AwsInventorySourceMapOutput) MapIndex(k pulumi.StringInput) AwsInventorySourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsInventorySource {
		return vs[0].(map[string]*AwsInventorySource)[vs[1].(string)]
	}).(AwsInventorySourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceInput)(nil)).Elem(), &AwsInventorySource{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceArrayInput)(nil)).Elem(), AwsInventorySourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceMapInput)(nil)).Elem(), AwsInventorySourceMap{})
	pulumi.RegisterOutputType(AwsInventorySourceOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceMapOutput{})
}
