// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Sumologic CSE Entity Criticality Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sumologic.NewCseEntityCriticalityConfig(ctx, "entityCriticalityConfig", &sumologic.CseEntityCriticalityConfigArgs{
//				SeverityExpression: pulumi.String("severity + 2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Entity criticality configuration can be imported using the field id, e.g.hcl
//
// ```sh
//
//	$ pulumi import sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig entity_criticality_config id
//
// ```
type CseEntityCriticalityConfig struct {
	pulumi.CustomResourceState

	// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
	Name pulumi.StringOutput `pulumi:"name"`
	// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
	SeverityExpression pulumi.StringOutput `pulumi:"severityExpression"`
}

// NewCseEntityCriticalityConfig registers a new resource with the given unique name, arguments, and options.
func NewCseEntityCriticalityConfig(ctx *pulumi.Context,
	name string, args *CseEntityCriticalityConfigArgs, opts ...pulumi.ResourceOption) (*CseEntityCriticalityConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SeverityExpression == nil {
		return nil, errors.New("invalid value for required argument 'SeverityExpression'")
	}
	var resource CseEntityCriticalityConfig
	err := ctx.RegisterResource("sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCseEntityCriticalityConfig gets an existing CseEntityCriticalityConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCseEntityCriticalityConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CseEntityCriticalityConfigState, opts ...pulumi.ResourceOption) (*CseEntityCriticalityConfig, error) {
	var resource CseEntityCriticalityConfig
	err := ctx.ReadResource("sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CseEntityCriticalityConfig resources.
type cseEntityCriticalityConfigState struct {
	// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
	Name *string `pulumi:"name"`
	// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
	SeverityExpression *string `pulumi:"severityExpression"`
}

type CseEntityCriticalityConfigState struct {
	// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
	Name pulumi.StringPtrInput
	// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
	SeverityExpression pulumi.StringPtrInput
}

func (CseEntityCriticalityConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*cseEntityCriticalityConfigState)(nil)).Elem()
}

type cseEntityCriticalityConfigArgs struct {
	// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
	Name *string `pulumi:"name"`
	// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
	SeverityExpression string `pulumi:"severityExpression"`
}

// The set of arguments for constructing a CseEntityCriticalityConfig resource.
type CseEntityCriticalityConfigArgs struct {
	// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
	Name pulumi.StringPtrInput
	// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
	SeverityExpression pulumi.StringInput
}

func (CseEntityCriticalityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cseEntityCriticalityConfigArgs)(nil)).Elem()
}

type CseEntityCriticalityConfigInput interface {
	pulumi.Input

	ToCseEntityCriticalityConfigOutput() CseEntityCriticalityConfigOutput
	ToCseEntityCriticalityConfigOutputWithContext(ctx context.Context) CseEntityCriticalityConfigOutput
}

func (*CseEntityCriticalityConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**CseEntityCriticalityConfig)(nil)).Elem()
}

func (i *CseEntityCriticalityConfig) ToCseEntityCriticalityConfigOutput() CseEntityCriticalityConfigOutput {
	return i.ToCseEntityCriticalityConfigOutputWithContext(context.Background())
}

func (i *CseEntityCriticalityConfig) ToCseEntityCriticalityConfigOutputWithContext(ctx context.Context) CseEntityCriticalityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseEntityCriticalityConfigOutput)
}

// CseEntityCriticalityConfigArrayInput is an input type that accepts CseEntityCriticalityConfigArray and CseEntityCriticalityConfigArrayOutput values.
// You can construct a concrete instance of `CseEntityCriticalityConfigArrayInput` via:
//
//	CseEntityCriticalityConfigArray{ CseEntityCriticalityConfigArgs{...} }
type CseEntityCriticalityConfigArrayInput interface {
	pulumi.Input

	ToCseEntityCriticalityConfigArrayOutput() CseEntityCriticalityConfigArrayOutput
	ToCseEntityCriticalityConfigArrayOutputWithContext(context.Context) CseEntityCriticalityConfigArrayOutput
}

type CseEntityCriticalityConfigArray []CseEntityCriticalityConfigInput

func (CseEntityCriticalityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseEntityCriticalityConfig)(nil)).Elem()
}

func (i CseEntityCriticalityConfigArray) ToCseEntityCriticalityConfigArrayOutput() CseEntityCriticalityConfigArrayOutput {
	return i.ToCseEntityCriticalityConfigArrayOutputWithContext(context.Background())
}

func (i CseEntityCriticalityConfigArray) ToCseEntityCriticalityConfigArrayOutputWithContext(ctx context.Context) CseEntityCriticalityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseEntityCriticalityConfigArrayOutput)
}

// CseEntityCriticalityConfigMapInput is an input type that accepts CseEntityCriticalityConfigMap and CseEntityCriticalityConfigMapOutput values.
// You can construct a concrete instance of `CseEntityCriticalityConfigMapInput` via:
//
//	CseEntityCriticalityConfigMap{ "key": CseEntityCriticalityConfigArgs{...} }
type CseEntityCriticalityConfigMapInput interface {
	pulumi.Input

	ToCseEntityCriticalityConfigMapOutput() CseEntityCriticalityConfigMapOutput
	ToCseEntityCriticalityConfigMapOutputWithContext(context.Context) CseEntityCriticalityConfigMapOutput
}

type CseEntityCriticalityConfigMap map[string]CseEntityCriticalityConfigInput

func (CseEntityCriticalityConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseEntityCriticalityConfig)(nil)).Elem()
}

func (i CseEntityCriticalityConfigMap) ToCseEntityCriticalityConfigMapOutput() CseEntityCriticalityConfigMapOutput {
	return i.ToCseEntityCriticalityConfigMapOutputWithContext(context.Background())
}

func (i CseEntityCriticalityConfigMap) ToCseEntityCriticalityConfigMapOutputWithContext(ctx context.Context) CseEntityCriticalityConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseEntityCriticalityConfigMapOutput)
}

type CseEntityCriticalityConfigOutput struct{ *pulumi.OutputState }

func (CseEntityCriticalityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseEntityCriticalityConfig)(nil)).Elem()
}

func (o CseEntityCriticalityConfigOutput) ToCseEntityCriticalityConfigOutput() CseEntityCriticalityConfigOutput {
	return o
}

func (o CseEntityCriticalityConfigOutput) ToCseEntityCriticalityConfigOutputWithContext(ctx context.Context) CseEntityCriticalityConfigOutput {
	return o
}

// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
func (o CseEntityCriticalityConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CseEntityCriticalityConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
func (o CseEntityCriticalityConfigOutput) SeverityExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *CseEntityCriticalityConfig) pulumi.StringOutput { return v.SeverityExpression }).(pulumi.StringOutput)
}

type CseEntityCriticalityConfigArrayOutput struct{ *pulumi.OutputState }

func (CseEntityCriticalityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseEntityCriticalityConfig)(nil)).Elem()
}

func (o CseEntityCriticalityConfigArrayOutput) ToCseEntityCriticalityConfigArrayOutput() CseEntityCriticalityConfigArrayOutput {
	return o
}

func (o CseEntityCriticalityConfigArrayOutput) ToCseEntityCriticalityConfigArrayOutputWithContext(ctx context.Context) CseEntityCriticalityConfigArrayOutput {
	return o
}

func (o CseEntityCriticalityConfigArrayOutput) Index(i pulumi.IntInput) CseEntityCriticalityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CseEntityCriticalityConfig {
		return vs[0].([]*CseEntityCriticalityConfig)[vs[1].(int)]
	}).(CseEntityCriticalityConfigOutput)
}

type CseEntityCriticalityConfigMapOutput struct{ *pulumi.OutputState }

func (CseEntityCriticalityConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseEntityCriticalityConfig)(nil)).Elem()
}

func (o CseEntityCriticalityConfigMapOutput) ToCseEntityCriticalityConfigMapOutput() CseEntityCriticalityConfigMapOutput {
	return o
}

func (o CseEntityCriticalityConfigMapOutput) ToCseEntityCriticalityConfigMapOutputWithContext(ctx context.Context) CseEntityCriticalityConfigMapOutput {
	return o
}

func (o CseEntityCriticalityConfigMapOutput) MapIndex(k pulumi.StringInput) CseEntityCriticalityConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CseEntityCriticalityConfig {
		return vs[0].(map[string]*CseEntityCriticalityConfig)[vs[1].(string)]
	}).(CseEntityCriticalityConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CseEntityCriticalityConfigInput)(nil)).Elem(), &CseEntityCriticalityConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseEntityCriticalityConfigArrayInput)(nil)).Elem(), CseEntityCriticalityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseEntityCriticalityConfigMapInput)(nil)).Elem(), CseEntityCriticalityConfigMap{})
	pulumi.RegisterOutputType(CseEntityCriticalityConfigOutput{})
	pulumi.RegisterOutputType(CseEntityCriticalityConfigArrayOutput{})
	pulumi.RegisterOutputType(CseEntityCriticalityConfigMapOutput{})
}
