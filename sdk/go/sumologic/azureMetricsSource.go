// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AzureMetricsSource struct {
	pulumi.CustomResourceState

	Authentication             AzureMetricsSourceAuthenticationOutput         `pulumi:"authentication"`
	AutomaticDateParsing       pulumi.BoolPtrOutput                           `pulumi:"automaticDateParsing"`
	Category                   pulumi.StringPtrOutput                         `pulumi:"category"`
	CollectorId                pulumi.IntOutput                               `pulumi:"collectorId"`
	ContentType                pulumi.StringOutput                            `pulumi:"contentType"`
	CutoffRelativeTime         pulumi.StringPtrOutput                         `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            pulumi.IntPtrOutput                            `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         AzureMetricsSourceDefaultDateFormatArrayOutput `pulumi:"defaultDateFormats"`
	Description                pulumi.StringPtrOutput                         `pulumi:"description"`
	Fields                     pulumi.StringMapOutput                         `pulumi:"fields"`
	Filters                    AzureMetricsSourceFilterArrayOutput            `pulumi:"filters"`
	ForceTimezone              pulumi.BoolPtrOutput                           `pulumi:"forceTimezone"`
	HashAlgorithm              pulumi.StringPtrOutput                         `pulumi:"hashAlgorithm"`
	HostName                   pulumi.StringPtrOutput                         `pulumi:"hostName"`
	ManualPrefixRegexp         pulumi.StringPtrOutput                         `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled pulumi.BoolPtrOutput                           `pulumi:"multilineProcessingEnabled"`
	Name                       pulumi.StringOutput                            `pulumi:"name"`
	Path                       AzureMetricsSourcePathOutput                   `pulumi:"path"`
	Paused                     pulumi.BoolPtrOutput                           `pulumi:"paused"`
	ScanInterval               pulumi.IntPtrOutput                            `pulumi:"scanInterval"`
	Timezone                   pulumi.StringPtrOutput                         `pulumi:"timezone"`
	Url                        pulumi.StringOutput                            `pulumi:"url"`
	UseAutolineMatching        pulumi.BoolPtrOutput                           `pulumi:"useAutolineMatching"`
}

// NewAzureMetricsSource registers a new resource with the given unique name, arguments, and options.
func NewAzureMetricsSource(ctx *pulumi.Context,
	name string, args *AzureMetricsSourceArgs, opts ...pulumi.ResourceOption) (*AzureMetricsSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.CollectorId == nil {
		return nil, errors.New("invalid value for required argument 'CollectorId'")
	}
	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureMetricsSource
	err := ctx.RegisterResource("sumologic:index/azureMetricsSource:AzureMetricsSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureMetricsSource gets an existing AzureMetricsSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureMetricsSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureMetricsSourceState, opts ...pulumi.ResourceOption) (*AzureMetricsSource, error) {
	var resource AzureMetricsSource
	err := ctx.ReadResource("sumologic:index/azureMetricsSource:AzureMetricsSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureMetricsSource resources.
type azureMetricsSourceState struct {
	Authentication             *AzureMetricsSourceAuthentication     `pulumi:"authentication"`
	AutomaticDateParsing       *bool                                 `pulumi:"automaticDateParsing"`
	Category                   *string                               `pulumi:"category"`
	CollectorId                *int                                  `pulumi:"collectorId"`
	ContentType                *string                               `pulumi:"contentType"`
	CutoffRelativeTime         *string                               `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                  `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []AzureMetricsSourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                               `pulumi:"description"`
	Fields                     map[string]string                     `pulumi:"fields"`
	Filters                    []AzureMetricsSourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                                 `pulumi:"forceTimezone"`
	HashAlgorithm              *string                               `pulumi:"hashAlgorithm"`
	HostName                   *string                               `pulumi:"hostName"`
	ManualPrefixRegexp         *string                               `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                                 `pulumi:"multilineProcessingEnabled"`
	Name                       *string                               `pulumi:"name"`
	Path                       *AzureMetricsSourcePath               `pulumi:"path"`
	Paused                     *bool                                 `pulumi:"paused"`
	ScanInterval               *int                                  `pulumi:"scanInterval"`
	Timezone                   *string                               `pulumi:"timezone"`
	Url                        *string                               `pulumi:"url"`
	UseAutolineMatching        *bool                                 `pulumi:"useAutolineMatching"`
}

type AzureMetricsSourceState struct {
	Authentication             AzureMetricsSourceAuthenticationPtrInput
	AutomaticDateParsing       pulumi.BoolPtrInput
	Category                   pulumi.StringPtrInput
	CollectorId                pulumi.IntPtrInput
	ContentType                pulumi.StringPtrInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         AzureMetricsSourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    AzureMetricsSourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HashAlgorithm              pulumi.StringPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	Path                       AzureMetricsSourcePathPtrInput
	Paused                     pulumi.BoolPtrInput
	ScanInterval               pulumi.IntPtrInput
	Timezone                   pulumi.StringPtrInput
	Url                        pulumi.StringPtrInput
	UseAutolineMatching        pulumi.BoolPtrInput
}

func (AzureMetricsSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureMetricsSourceState)(nil)).Elem()
}

type azureMetricsSourceArgs struct {
	Authentication             AzureMetricsSourceAuthentication      `pulumi:"authentication"`
	AutomaticDateParsing       *bool                                 `pulumi:"automaticDateParsing"`
	Category                   *string                               `pulumi:"category"`
	CollectorId                int                                   `pulumi:"collectorId"`
	ContentType                string                                `pulumi:"contentType"`
	CutoffRelativeTime         *string                               `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                  `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []AzureMetricsSourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                               `pulumi:"description"`
	Fields                     map[string]string                     `pulumi:"fields"`
	Filters                    []AzureMetricsSourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                                 `pulumi:"forceTimezone"`
	HashAlgorithm              *string                               `pulumi:"hashAlgorithm"`
	HostName                   *string                               `pulumi:"hostName"`
	ManualPrefixRegexp         *string                               `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                                 `pulumi:"multilineProcessingEnabled"`
	Name                       *string                               `pulumi:"name"`
	Path                       AzureMetricsSourcePath                `pulumi:"path"`
	Paused                     *bool                                 `pulumi:"paused"`
	ScanInterval               *int                                  `pulumi:"scanInterval"`
	Timezone                   *string                               `pulumi:"timezone"`
	UseAutolineMatching        *bool                                 `pulumi:"useAutolineMatching"`
}

// The set of arguments for constructing a AzureMetricsSource resource.
type AzureMetricsSourceArgs struct {
	Authentication             AzureMetricsSourceAuthenticationInput
	AutomaticDateParsing       pulumi.BoolPtrInput
	Category                   pulumi.StringPtrInput
	CollectorId                pulumi.IntInput
	ContentType                pulumi.StringInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         AzureMetricsSourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    AzureMetricsSourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HashAlgorithm              pulumi.StringPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	Path                       AzureMetricsSourcePathInput
	Paused                     pulumi.BoolPtrInput
	ScanInterval               pulumi.IntPtrInput
	Timezone                   pulumi.StringPtrInput
	UseAutolineMatching        pulumi.BoolPtrInput
}

func (AzureMetricsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureMetricsSourceArgs)(nil)).Elem()
}

type AzureMetricsSourceInput interface {
	pulumi.Input

	ToAzureMetricsSourceOutput() AzureMetricsSourceOutput
	ToAzureMetricsSourceOutputWithContext(ctx context.Context) AzureMetricsSourceOutput
}

func (*AzureMetricsSource) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMetricsSource)(nil)).Elem()
}

func (i *AzureMetricsSource) ToAzureMetricsSourceOutput() AzureMetricsSourceOutput {
	return i.ToAzureMetricsSourceOutputWithContext(context.Background())
}

func (i *AzureMetricsSource) ToAzureMetricsSourceOutputWithContext(ctx context.Context) AzureMetricsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMetricsSourceOutput)
}

// AzureMetricsSourceArrayInput is an input type that accepts AzureMetricsSourceArray and AzureMetricsSourceArrayOutput values.
// You can construct a concrete instance of `AzureMetricsSourceArrayInput` via:
//
//	AzureMetricsSourceArray{ AzureMetricsSourceArgs{...} }
type AzureMetricsSourceArrayInput interface {
	pulumi.Input

	ToAzureMetricsSourceArrayOutput() AzureMetricsSourceArrayOutput
	ToAzureMetricsSourceArrayOutputWithContext(context.Context) AzureMetricsSourceArrayOutput
}

type AzureMetricsSourceArray []AzureMetricsSourceInput

func (AzureMetricsSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureMetricsSource)(nil)).Elem()
}

func (i AzureMetricsSourceArray) ToAzureMetricsSourceArrayOutput() AzureMetricsSourceArrayOutput {
	return i.ToAzureMetricsSourceArrayOutputWithContext(context.Background())
}

func (i AzureMetricsSourceArray) ToAzureMetricsSourceArrayOutputWithContext(ctx context.Context) AzureMetricsSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMetricsSourceArrayOutput)
}

// AzureMetricsSourceMapInput is an input type that accepts AzureMetricsSourceMap and AzureMetricsSourceMapOutput values.
// You can construct a concrete instance of `AzureMetricsSourceMapInput` via:
//
//	AzureMetricsSourceMap{ "key": AzureMetricsSourceArgs{...} }
type AzureMetricsSourceMapInput interface {
	pulumi.Input

	ToAzureMetricsSourceMapOutput() AzureMetricsSourceMapOutput
	ToAzureMetricsSourceMapOutputWithContext(context.Context) AzureMetricsSourceMapOutput
}

type AzureMetricsSourceMap map[string]AzureMetricsSourceInput

func (AzureMetricsSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureMetricsSource)(nil)).Elem()
}

func (i AzureMetricsSourceMap) ToAzureMetricsSourceMapOutput() AzureMetricsSourceMapOutput {
	return i.ToAzureMetricsSourceMapOutputWithContext(context.Background())
}

func (i AzureMetricsSourceMap) ToAzureMetricsSourceMapOutputWithContext(ctx context.Context) AzureMetricsSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureMetricsSourceMapOutput)
}

type AzureMetricsSourceOutput struct{ *pulumi.OutputState }

func (AzureMetricsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureMetricsSource)(nil)).Elem()
}

func (o AzureMetricsSourceOutput) ToAzureMetricsSourceOutput() AzureMetricsSourceOutput {
	return o
}

func (o AzureMetricsSourceOutput) ToAzureMetricsSourceOutputWithContext(ctx context.Context) AzureMetricsSourceOutput {
	return o
}

func (o AzureMetricsSourceOutput) Authentication() AzureMetricsSourceAuthenticationOutput {
	return o.ApplyT(func(v *AzureMetricsSource) AzureMetricsSourceAuthenticationOutput { return v.Authentication }).(AzureMetricsSourceAuthenticationOutput)
}

func (o AzureMetricsSourceOutput) AutomaticDateParsing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.BoolPtrOutput { return v.AutomaticDateParsing }).(pulumi.BoolPtrOutput)
}

func (o AzureMetricsSourceOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.Category }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) CollectorId() pulumi.IntOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.IntOutput { return v.CollectorId }).(pulumi.IntOutput)
}

func (o AzureMetricsSourceOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

func (o AzureMetricsSourceOutput) CutoffRelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.CutoffRelativeTime }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) CutoffTimestamp() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.IntPtrOutput { return v.CutoffTimestamp }).(pulumi.IntPtrOutput)
}

func (o AzureMetricsSourceOutput) DefaultDateFormats() AzureMetricsSourceDefaultDateFormatArrayOutput {
	return o.ApplyT(func(v *AzureMetricsSource) AzureMetricsSourceDefaultDateFormatArrayOutput {
		return v.DefaultDateFormats
	}).(AzureMetricsSourceDefaultDateFormatArrayOutput)
}

func (o AzureMetricsSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) Fields() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringMapOutput { return v.Fields }).(pulumi.StringMapOutput)
}

func (o AzureMetricsSourceOutput) Filters() AzureMetricsSourceFilterArrayOutput {
	return o.ApplyT(func(v *AzureMetricsSource) AzureMetricsSourceFilterArrayOutput { return v.Filters }).(AzureMetricsSourceFilterArrayOutput)
}

func (o AzureMetricsSourceOutput) ForceTimezone() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.BoolPtrOutput { return v.ForceTimezone }).(pulumi.BoolPtrOutput)
}

func (o AzureMetricsSourceOutput) HashAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.HashAlgorithm }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.HostName }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) ManualPrefixRegexp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.ManualPrefixRegexp }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) MultilineProcessingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.BoolPtrOutput { return v.MultilineProcessingEnabled }).(pulumi.BoolPtrOutput)
}

func (o AzureMetricsSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AzureMetricsSourceOutput) Path() AzureMetricsSourcePathOutput {
	return o.ApplyT(func(v *AzureMetricsSource) AzureMetricsSourcePathOutput { return v.Path }).(AzureMetricsSourcePathOutput)
}

func (o AzureMetricsSourceOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.BoolPtrOutput { return v.Paused }).(pulumi.BoolPtrOutput)
}

func (o AzureMetricsSourceOutput) ScanInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.IntPtrOutput { return v.ScanInterval }).(pulumi.IntPtrOutput)
}

func (o AzureMetricsSourceOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o AzureMetricsSourceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func (o AzureMetricsSourceOutput) UseAutolineMatching() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureMetricsSource) pulumi.BoolPtrOutput { return v.UseAutolineMatching }).(pulumi.BoolPtrOutput)
}

type AzureMetricsSourceArrayOutput struct{ *pulumi.OutputState }

func (AzureMetricsSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureMetricsSource)(nil)).Elem()
}

func (o AzureMetricsSourceArrayOutput) ToAzureMetricsSourceArrayOutput() AzureMetricsSourceArrayOutput {
	return o
}

func (o AzureMetricsSourceArrayOutput) ToAzureMetricsSourceArrayOutputWithContext(ctx context.Context) AzureMetricsSourceArrayOutput {
	return o
}

func (o AzureMetricsSourceArrayOutput) Index(i pulumi.IntInput) AzureMetricsSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureMetricsSource {
		return vs[0].([]*AzureMetricsSource)[vs[1].(int)]
	}).(AzureMetricsSourceOutput)
}

type AzureMetricsSourceMapOutput struct{ *pulumi.OutputState }

func (AzureMetricsSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureMetricsSource)(nil)).Elem()
}

func (o AzureMetricsSourceMapOutput) ToAzureMetricsSourceMapOutput() AzureMetricsSourceMapOutput {
	return o
}

func (o AzureMetricsSourceMapOutput) ToAzureMetricsSourceMapOutputWithContext(ctx context.Context) AzureMetricsSourceMapOutput {
	return o
}

func (o AzureMetricsSourceMapOutput) MapIndex(k pulumi.StringInput) AzureMetricsSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureMetricsSource {
		return vs[0].(map[string]*AzureMetricsSource)[vs[1].(string)]
	}).(AzureMetricsSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMetricsSourceInput)(nil)).Elem(), &AzureMetricsSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMetricsSourceArrayInput)(nil)).Elem(), AzureMetricsSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureMetricsSourceMapInput)(nil)).Elem(), AzureMetricsSourceMap{})
	pulumi.RegisterOutputType(AzureMetricsSourceOutput{})
	pulumi.RegisterOutputType(AzureMetricsSourceArrayOutput{})
	pulumi.RegisterOutputType(AzureMetricsSourceMapOutput{})
}
