// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AwsInventorySourceAuthentication struct {
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	Region                  *string `pulumi:"region"`
	// Your AWS role ARN. More details [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Grant-Access-to-an-AWS-Product#iam-role).
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
	Type string `pulumi:"type"`
}

// AwsInventorySourceAuthenticationInput is an input type that accepts AwsInventorySourceAuthenticationArgs and AwsInventorySourceAuthenticationOutput values.
// You can construct a concrete instance of `AwsInventorySourceAuthenticationInput` via:
//
//          AwsInventorySourceAuthenticationArgs{...}
type AwsInventorySourceAuthenticationInput interface {
	pulumi.Input

	ToAwsInventorySourceAuthenticationOutput() AwsInventorySourceAuthenticationOutput
	ToAwsInventorySourceAuthenticationOutputWithContext(context.Context) AwsInventorySourceAuthenticationOutput
}

type AwsInventorySourceAuthenticationArgs struct {
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	Region                  pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN. More details [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Grant-Access-to-an-AWS-Product#iam-role).
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AwsInventorySourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceAuthentication)(nil)).Elem()
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationOutput() AwsInventorySourceAuthenticationOutput {
	return i.ToAwsInventorySourceAuthenticationOutputWithContext(context.Background())
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceAuthenticationOutput)
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return i.ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i AwsInventorySourceAuthenticationArgs) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceAuthenticationOutput).ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx)
}

// AwsInventorySourceAuthenticationPtrInput is an input type that accepts AwsInventorySourceAuthenticationArgs, AwsInventorySourceAuthenticationPtr and AwsInventorySourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `AwsInventorySourceAuthenticationPtrInput` via:
//
//          AwsInventorySourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type AwsInventorySourceAuthenticationPtrInput interface {
	pulumi.Input

	ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput
	ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Context) AwsInventorySourceAuthenticationPtrOutput
}

type awsInventorySourceAuthenticationPtrType AwsInventorySourceAuthenticationArgs

func AwsInventorySourceAuthenticationPtr(v *AwsInventorySourceAuthenticationArgs) AwsInventorySourceAuthenticationPtrInput {
	return (*awsInventorySourceAuthenticationPtrType)(v)
}

func (*awsInventorySourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourceAuthentication)(nil)).Elem()
}

func (i *awsInventorySourceAuthenticationPtrType) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return i.ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *awsInventorySourceAuthenticationPtrType) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceAuthenticationPtrOutput)
}

type AwsInventorySourceAuthenticationOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceAuthentication)(nil)).Elem()
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationOutput() AwsInventorySourceAuthenticationOutput {
	return o
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationOutput {
	return o
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return o.ToAwsInventorySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o AwsInventorySourceAuthenticationOutput) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsInventorySourceAuthentication) *AwsInventorySourceAuthentication {
		return &v
	}).(AwsInventorySourceAuthenticationPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN. More details [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Grant-Access-to-an-AWS-Product#iam-role).
func (o AwsInventorySourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
func (o AwsInventorySourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type AwsInventorySourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourceAuthentication)(nil)).Elem()
}

func (o AwsInventorySourceAuthenticationPtrOutput) ToAwsInventorySourceAuthenticationPtrOutput() AwsInventorySourceAuthenticationPtrOutput {
	return o
}

func (o AwsInventorySourceAuthenticationPtrOutput) ToAwsInventorySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsInventorySourceAuthenticationPtrOutput {
	return o
}

func (o AwsInventorySourceAuthenticationPtrOutput) Elem() AwsInventorySourceAuthenticationOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) AwsInventorySourceAuthentication {
		if v != nil {
			return *v
		}
		var ret AwsInventorySourceAuthentication
		return ret
	}).(AwsInventorySourceAuthenticationOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN. More details [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Grant-Access-to-an-AWS-Product#iam-role).
func (o AwsInventorySourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
func (o AwsInventorySourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AwsInventorySourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// AwsInventorySourceDefaultDateFormatInput is an input type that accepts AwsInventorySourceDefaultDateFormatArgs and AwsInventorySourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `AwsInventorySourceDefaultDateFormatInput` via:
//
//          AwsInventorySourceDefaultDateFormatArgs{...}
type AwsInventorySourceDefaultDateFormatInput interface {
	pulumi.Input

	ToAwsInventorySourceDefaultDateFormatOutput() AwsInventorySourceDefaultDateFormatOutput
	ToAwsInventorySourceDefaultDateFormatOutputWithContext(context.Context) AwsInventorySourceDefaultDateFormatOutput
}

type AwsInventorySourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (AwsInventorySourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsInventorySourceDefaultDateFormatArgs) ToAwsInventorySourceDefaultDateFormatOutput() AwsInventorySourceDefaultDateFormatOutput {
	return i.ToAwsInventorySourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i AwsInventorySourceDefaultDateFormatArgs) ToAwsInventorySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceDefaultDateFormatOutput)
}

// AwsInventorySourceDefaultDateFormatArrayInput is an input type that accepts AwsInventorySourceDefaultDateFormatArray and AwsInventorySourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourceDefaultDateFormatArrayInput` via:
//
//          AwsInventorySourceDefaultDateFormatArray{ AwsInventorySourceDefaultDateFormatArgs{...} }
type AwsInventorySourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToAwsInventorySourceDefaultDateFormatArrayOutput() AwsInventorySourceDefaultDateFormatArrayOutput
	ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(context.Context) AwsInventorySourceDefaultDateFormatArrayOutput
}

type AwsInventorySourceDefaultDateFormatArray []AwsInventorySourceDefaultDateFormatInput

func (AwsInventorySourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsInventorySourceDefaultDateFormatArray) ToAwsInventorySourceDefaultDateFormatArrayOutput() AwsInventorySourceDefaultDateFormatArrayOutput {
	return i.ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourceDefaultDateFormatArray) ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceDefaultDateFormatArrayOutput)
}

type AwsInventorySourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsInventorySourceDefaultDateFormatOutput) ToAwsInventorySourceDefaultDateFormatOutput() AwsInventorySourceDefaultDateFormatOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatOutput) ToAwsInventorySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o AwsInventorySourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type AwsInventorySourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsInventorySourceDefaultDateFormatArrayOutput) ToAwsInventorySourceDefaultDateFormatArrayOutput() AwsInventorySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatArrayOutput) ToAwsInventorySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsInventorySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsInventorySourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) AwsInventorySourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourceDefaultDateFormat {
		return vs[0].([]AwsInventorySourceDefaultDateFormat)[vs[1].(int)]
	}).(AwsInventorySourceDefaultDateFormatOutput)
}

type AwsInventorySourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// AwsInventorySourceFilterInput is an input type that accepts AwsInventorySourceFilterArgs and AwsInventorySourceFilterOutput values.
// You can construct a concrete instance of `AwsInventorySourceFilterInput` via:
//
//          AwsInventorySourceFilterArgs{...}
type AwsInventorySourceFilterInput interface {
	pulumi.Input

	ToAwsInventorySourceFilterOutput() AwsInventorySourceFilterOutput
	ToAwsInventorySourceFilterOutputWithContext(context.Context) AwsInventorySourceFilterOutput
}

type AwsInventorySourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (AwsInventorySourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceFilter)(nil)).Elem()
}

func (i AwsInventorySourceFilterArgs) ToAwsInventorySourceFilterOutput() AwsInventorySourceFilterOutput {
	return i.ToAwsInventorySourceFilterOutputWithContext(context.Background())
}

func (i AwsInventorySourceFilterArgs) ToAwsInventorySourceFilterOutputWithContext(ctx context.Context) AwsInventorySourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceFilterOutput)
}

// AwsInventorySourceFilterArrayInput is an input type that accepts AwsInventorySourceFilterArray and AwsInventorySourceFilterArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourceFilterArrayInput` via:
//
//          AwsInventorySourceFilterArray{ AwsInventorySourceFilterArgs{...} }
type AwsInventorySourceFilterArrayInput interface {
	pulumi.Input

	ToAwsInventorySourceFilterArrayOutput() AwsInventorySourceFilterArrayOutput
	ToAwsInventorySourceFilterArrayOutputWithContext(context.Context) AwsInventorySourceFilterArrayOutput
}

type AwsInventorySourceFilterArray []AwsInventorySourceFilterInput

func (AwsInventorySourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceFilter)(nil)).Elem()
}

func (i AwsInventorySourceFilterArray) ToAwsInventorySourceFilterArrayOutput() AwsInventorySourceFilterArrayOutput {
	return i.ToAwsInventorySourceFilterArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourceFilterArray) ToAwsInventorySourceFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourceFilterArrayOutput)
}

type AwsInventorySourceFilterOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourceFilter)(nil)).Elem()
}

func (o AwsInventorySourceFilterOutput) ToAwsInventorySourceFilterOutput() AwsInventorySourceFilterOutput {
	return o
}

func (o AwsInventorySourceFilterOutput) ToAwsInventorySourceFilterOutputWithContext(ctx context.Context) AwsInventorySourceFilterOutput {
	return o
}

func (o AwsInventorySourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o AwsInventorySourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AwsInventorySourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type AwsInventorySourceFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourceFilter)(nil)).Elem()
}

func (o AwsInventorySourceFilterArrayOutput) ToAwsInventorySourceFilterArrayOutput() AwsInventorySourceFilterArrayOutput {
	return o
}

func (o AwsInventorySourceFilterArrayOutput) ToAwsInventorySourceFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourceFilterArrayOutput {
	return o
}

func (o AwsInventorySourceFilterArrayOutput) Index(i pulumi.IntInput) AwsInventorySourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourceFilter {
		return vs[0].([]AwsInventorySourceFilter)[vs[1].(int)]
	}).(AwsInventorySourceFilterOutput)
}

type AwsInventorySourcePath struct {
	BucketName     *string                               `pulumi:"bucketName"`
	CustomServices []AwsInventorySourcePathCustomService `pulumi:"customServices"`
	// List of namespaces. By default all namespaces are selected. You can also choose a subset from
	// + AWS/EC2
	// + AWS/AutoScaling
	// + AWS/EBS
	// + AWS/ELB
	// + AWS/ApplicationELB
	// + AWS/NetworkELB
	// + AWS/Lambda
	// + AWS/RDS
	// + AWS/Dynamodb
	// + AWS/ECS
	// + AWS/Elasticache
	// + AWS/Redshift
	// + AWS/Kinesis
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions             []string                                          `pulumi:"limitToRegions"`
	LimitToServices            []string                                          `pulumi:"limitToServices"`
	PathExpression             *string                                           `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns []AwsInventorySourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []AwsInventorySourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// AwsInventorySourcePathInput is an input type that accepts AwsInventorySourcePathArgs and AwsInventorySourcePathOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathInput` via:
//
//          AwsInventorySourcePathArgs{...}
type AwsInventorySourcePathInput interface {
	pulumi.Input

	ToAwsInventorySourcePathOutput() AwsInventorySourcePathOutput
	ToAwsInventorySourcePathOutputWithContext(context.Context) AwsInventorySourcePathOutput
}

type AwsInventorySourcePathArgs struct {
	BucketName     pulumi.StringPtrInput                         `pulumi:"bucketName"`
	CustomServices AwsInventorySourcePathCustomServiceArrayInput `pulumi:"customServices"`
	// List of namespaces. By default all namespaces are selected. You can also choose a subset from
	// + AWS/EC2
	// + AWS/AutoScaling
	// + AWS/EBS
	// + AWS/ELB
	// + AWS/ApplicationELB
	// + AWS/NetworkELB
	// + AWS/Lambda
	// + AWS/RDS
	// + AWS/Dynamodb
	// + AWS/ECS
	// + AWS/Elasticache
	// + AWS/Redshift
	// + AWS/Kinesis
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions             pulumi.StringArrayInput                                   `pulumi:"limitToRegions"`
	LimitToServices            pulumi.StringArrayInput                                   `pulumi:"limitToServices"`
	PathExpression             pulumi.StringPtrInput                                     `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 AwsInventorySourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (AwsInventorySourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePath)(nil)).Elem()
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathOutput() AwsInventorySourcePathOutput {
	return i.ToAwsInventorySourcePathOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathOutputWithContext(ctx context.Context) AwsInventorySourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathOutput)
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return i.ToAwsInventorySourcePathPtrOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathArgs) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathOutput).ToAwsInventorySourcePathPtrOutputWithContext(ctx)
}

// AwsInventorySourcePathPtrInput is an input type that accepts AwsInventorySourcePathArgs, AwsInventorySourcePathPtr and AwsInventorySourcePathPtrOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathPtrInput` via:
//
//          AwsInventorySourcePathArgs{...}
//
//  or:
//
//          nil
type AwsInventorySourcePathPtrInput interface {
	pulumi.Input

	ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput
	ToAwsInventorySourcePathPtrOutputWithContext(context.Context) AwsInventorySourcePathPtrOutput
}

type awsInventorySourcePathPtrType AwsInventorySourcePathArgs

func AwsInventorySourcePathPtr(v *AwsInventorySourcePathArgs) AwsInventorySourcePathPtrInput {
	return (*awsInventorySourcePathPtrType)(v)
}

func (*awsInventorySourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourcePath)(nil)).Elem()
}

func (i *awsInventorySourcePathPtrType) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return i.ToAwsInventorySourcePathPtrOutputWithContext(context.Background())
}

func (i *awsInventorySourcePathPtrType) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathPtrOutput)
}

type AwsInventorySourcePathOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePath)(nil)).Elem()
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathOutput() AwsInventorySourcePathOutput {
	return o
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathOutputWithContext(ctx context.Context) AwsInventorySourcePathOutput {
	return o
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return o.ToAwsInventorySourcePathPtrOutputWithContext(context.Background())
}

func (o AwsInventorySourcePathOutput) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsInventorySourcePath) *AwsInventorySourcePath {
		return &v
	}).(AwsInventorySourcePathPtrOutput)
}

func (o AwsInventorySourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathOutput) CustomServices() AwsInventorySourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []AwsInventorySourcePathCustomService { return v.CustomServices }).(AwsInventorySourcePathCustomServiceArrayOutput)
}

// List of namespaces. By default all namespaces are selected. You can also choose a subset from
// + AWS/EC2
// + AWS/AutoScaling
// + AWS/EBS
// + AWS/ELB
// + AWS/ApplicationELB
// + AWS/NetworkELB
// + AWS/Lambda
// + AWS/RDS
// + AWS/Dynamodb
// + AWS/ECS
// + AWS/Elasticache
// + AWS/Redshift
// + AWS/Kinesis
func (o AwsInventorySourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o AwsInventorySourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathOutput) SnsTopicOrSubscriptionArns() AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []AwsInventorySourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o AwsInventorySourcePathOutput) TagFilters() AwsInventorySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) []AwsInventorySourcePathTagFilter { return v.TagFilters }).(AwsInventorySourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
func (o AwsInventorySourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o AwsInventorySourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type AwsInventorySourcePathPtrOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInventorySourcePath)(nil)).Elem()
}

func (o AwsInventorySourcePathPtrOutput) ToAwsInventorySourcePathPtrOutput() AwsInventorySourcePathPtrOutput {
	return o
}

func (o AwsInventorySourcePathPtrOutput) ToAwsInventorySourcePathPtrOutputWithContext(ctx context.Context) AwsInventorySourcePathPtrOutput {
	return o
}

func (o AwsInventorySourcePathPtrOutput) Elem() AwsInventorySourcePathOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) AwsInventorySourcePath {
		if v != nil {
			return *v
		}
		var ret AwsInventorySourcePath
		return ret
	}).(AwsInventorySourcePathOutput)
}

func (o AwsInventorySourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathPtrOutput) CustomServices() AwsInventorySourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []AwsInventorySourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(AwsInventorySourcePathCustomServiceArrayOutput)
}

// List of namespaces. By default all namespaces are selected. You can also choose a subset from
// + AWS/EC2
// + AWS/AutoScaling
// + AWS/EBS
// + AWS/ELB
// + AWS/ApplicationELB
// + AWS/NetworkELB
// + AWS/Lambda
// + AWS/RDS
// + AWS/Dynamodb
// + AWS/ECS
// + AWS/Elasticache
// + AWS/Redshift
// + AWS/Kinesis
func (o AwsInventorySourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o AwsInventorySourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathPtrOutput) SnsTopicOrSubscriptionArns() AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []AwsInventorySourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o AwsInventorySourcePathPtrOutput) TagFilters() AwsInventorySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) []AwsInventorySourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(AwsInventorySourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
func (o AwsInventorySourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsInventorySourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type AwsInventorySourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// AwsInventorySourcePathCustomServiceInput is an input type that accepts AwsInventorySourcePathCustomServiceArgs and AwsInventorySourcePathCustomServiceOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathCustomServiceInput` via:
//
//          AwsInventorySourcePathCustomServiceArgs{...}
type AwsInventorySourcePathCustomServiceInput interface {
	pulumi.Input

	ToAwsInventorySourcePathCustomServiceOutput() AwsInventorySourcePathCustomServiceOutput
	ToAwsInventorySourcePathCustomServiceOutputWithContext(context.Context) AwsInventorySourcePathCustomServiceOutput
}

type AwsInventorySourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (AwsInventorySourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathCustomService)(nil)).Elem()
}

func (i AwsInventorySourcePathCustomServiceArgs) ToAwsInventorySourcePathCustomServiceOutput() AwsInventorySourcePathCustomServiceOutput {
	return i.ToAwsInventorySourcePathCustomServiceOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathCustomServiceArgs) ToAwsInventorySourcePathCustomServiceOutputWithContext(ctx context.Context) AwsInventorySourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathCustomServiceOutput)
}

// AwsInventorySourcePathCustomServiceArrayInput is an input type that accepts AwsInventorySourcePathCustomServiceArray and AwsInventorySourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathCustomServiceArrayInput` via:
//
//          AwsInventorySourcePathCustomServiceArray{ AwsInventorySourcePathCustomServiceArgs{...} }
type AwsInventorySourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToAwsInventorySourcePathCustomServiceArrayOutput() AwsInventorySourcePathCustomServiceArrayOutput
	ToAwsInventorySourcePathCustomServiceArrayOutputWithContext(context.Context) AwsInventorySourcePathCustomServiceArrayOutput
}

type AwsInventorySourcePathCustomServiceArray []AwsInventorySourcePathCustomServiceInput

func (AwsInventorySourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathCustomService)(nil)).Elem()
}

func (i AwsInventorySourcePathCustomServiceArray) ToAwsInventorySourcePathCustomServiceArrayOutput() AwsInventorySourcePathCustomServiceArrayOutput {
	return i.ToAwsInventorySourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathCustomServiceArray) ToAwsInventorySourcePathCustomServiceArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathCustomServiceArrayOutput)
}

type AwsInventorySourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathCustomService)(nil)).Elem()
}

func (o AwsInventorySourcePathCustomServiceOutput) ToAwsInventorySourcePathCustomServiceOutput() AwsInventorySourcePathCustomServiceOutput {
	return o
}

func (o AwsInventorySourcePathCustomServiceOutput) ToAwsInventorySourcePathCustomServiceOutputWithContext(ctx context.Context) AwsInventorySourcePathCustomServiceOutput {
	return o
}

func (o AwsInventorySourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o AwsInventorySourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AwsInventorySourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathCustomService)(nil)).Elem()
}

func (o AwsInventorySourcePathCustomServiceArrayOutput) ToAwsInventorySourcePathCustomServiceArrayOutput() AwsInventorySourcePathCustomServiceArrayOutput {
	return o
}

func (o AwsInventorySourcePathCustomServiceArrayOutput) ToAwsInventorySourcePathCustomServiceArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathCustomServiceArrayOutput {
	return o
}

func (o AwsInventorySourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) AwsInventorySourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourcePathCustomService {
		return vs[0].([]AwsInventorySourcePathCustomService)[vs[1].(int)]
	}).(AwsInventorySourcePathCustomServiceOutput)
}

type AwsInventorySourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// AwsInventorySourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs and AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs{...}
type AwsInventorySourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutput() AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput
	ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput
}

type AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutput() AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput)
}

// AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts AwsInventorySourcePathSnsTopicOrSubscriptionArnArray and AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          AwsInventorySourcePathSnsTopicOrSubscriptionArnArray{ AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs{...} }
type AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput() AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type AwsInventorySourcePathSnsTopicOrSubscriptionArnArray []AwsInventorySourcePathSnsTopicOrSubscriptionArnInput

func (AwsInventorySourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i AwsInventorySourcePathSnsTopicOrSubscriptionArnArray) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput() AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathSnsTopicOrSubscriptionArnArray) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutput() AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput() AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput) ToAwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]AwsInventorySourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput)
}

type AwsInventorySourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
	Type *string `pulumi:"type"`
}

// AwsInventorySourcePathTagFilterInput is an input type that accepts AwsInventorySourcePathTagFilterArgs and AwsInventorySourcePathTagFilterOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathTagFilterInput` via:
//
//          AwsInventorySourcePathTagFilterArgs{...}
type AwsInventorySourcePathTagFilterInput interface {
	pulumi.Input

	ToAwsInventorySourcePathTagFilterOutput() AwsInventorySourcePathTagFilterOutput
	ToAwsInventorySourcePathTagFilterOutputWithContext(context.Context) AwsInventorySourcePathTagFilterOutput
}

type AwsInventorySourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AwsInventorySourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (i AwsInventorySourcePathTagFilterArgs) ToAwsInventorySourcePathTagFilterOutput() AwsInventorySourcePathTagFilterOutput {
	return i.ToAwsInventorySourcePathTagFilterOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathTagFilterArgs) ToAwsInventorySourcePathTagFilterOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathTagFilterOutput)
}

// AwsInventorySourcePathTagFilterArrayInput is an input type that accepts AwsInventorySourcePathTagFilterArray and AwsInventorySourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `AwsInventorySourcePathTagFilterArrayInput` via:
//
//          AwsInventorySourcePathTagFilterArray{ AwsInventorySourcePathTagFilterArgs{...} }
type AwsInventorySourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToAwsInventorySourcePathTagFilterArrayOutput() AwsInventorySourcePathTagFilterArrayOutput
	ToAwsInventorySourcePathTagFilterArrayOutputWithContext(context.Context) AwsInventorySourcePathTagFilterArrayOutput
}

type AwsInventorySourcePathTagFilterArray []AwsInventorySourcePathTagFilterInput

func (AwsInventorySourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (i AwsInventorySourcePathTagFilterArray) ToAwsInventorySourcePathTagFilterArrayOutput() AwsInventorySourcePathTagFilterArrayOutput {
	return i.ToAwsInventorySourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i AwsInventorySourcePathTagFilterArray) ToAwsInventorySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInventorySourcePathTagFilterArrayOutput)
}

type AwsInventorySourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (o AwsInventorySourcePathTagFilterOutput) ToAwsInventorySourcePathTagFilterOutput() AwsInventorySourcePathTagFilterOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterOutput) ToAwsInventorySourcePathTagFilterOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AwsInventorySourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInventorySourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
func (o AwsInventorySourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsInventorySourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AwsInventorySourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsInventorySourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsInventorySourcePathTagFilter)(nil)).Elem()
}

func (o AwsInventorySourcePathTagFilterArrayOutput) ToAwsInventorySourcePathTagFilterArrayOutput() AwsInventorySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterArrayOutput) ToAwsInventorySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsInventorySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsInventorySourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) AwsInventorySourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsInventorySourcePathTagFilter {
		return vs[0].([]AwsInventorySourcePathTagFilter)[vs[1].(int)]
	}).(AwsInventorySourcePathTagFilterOutput)
}

type AwsXraySourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	Region                  *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
	Type string `pulumi:"type"`
}

// AwsXraySourceAuthenticationInput is an input type that accepts AwsXraySourceAuthenticationArgs and AwsXraySourceAuthenticationOutput values.
// You can construct a concrete instance of `AwsXraySourceAuthenticationInput` via:
//
//          AwsXraySourceAuthenticationArgs{...}
type AwsXraySourceAuthenticationInput interface {
	pulumi.Input

	ToAwsXraySourceAuthenticationOutput() AwsXraySourceAuthenticationOutput
	ToAwsXraySourceAuthenticationOutputWithContext(context.Context) AwsXraySourceAuthenticationOutput
}

type AwsXraySourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	Region                  pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AwsXraySourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceAuthentication)(nil)).Elem()
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationOutput() AwsXraySourceAuthenticationOutput {
	return i.ToAwsXraySourceAuthenticationOutputWithContext(context.Background())
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceAuthenticationOutput)
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return i.ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i AwsXraySourceAuthenticationArgs) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceAuthenticationOutput).ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx)
}

// AwsXraySourceAuthenticationPtrInput is an input type that accepts AwsXraySourceAuthenticationArgs, AwsXraySourceAuthenticationPtr and AwsXraySourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `AwsXraySourceAuthenticationPtrInput` via:
//
//          AwsXraySourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type AwsXraySourceAuthenticationPtrInput interface {
	pulumi.Input

	ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput
	ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Context) AwsXraySourceAuthenticationPtrOutput
}

type awsXraySourceAuthenticationPtrType AwsXraySourceAuthenticationArgs

func AwsXraySourceAuthenticationPtr(v *AwsXraySourceAuthenticationArgs) AwsXraySourceAuthenticationPtrInput {
	return (*awsXraySourceAuthenticationPtrType)(v)
}

func (*awsXraySourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourceAuthentication)(nil)).Elem()
}

func (i *awsXraySourceAuthenticationPtrType) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return i.ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *awsXraySourceAuthenticationPtrType) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceAuthenticationPtrOutput)
}

type AwsXraySourceAuthenticationOutput struct{ *pulumi.OutputState }

func (AwsXraySourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceAuthentication)(nil)).Elem()
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationOutput() AwsXraySourceAuthenticationOutput {
	return o
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationOutput {
	return o
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return o.ToAwsXraySourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o AwsXraySourceAuthenticationOutput) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsXraySourceAuthentication) *AwsXraySourceAuthentication {
		return &v
	}).(AwsXraySourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o AwsXraySourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o AwsXraySourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o AwsXraySourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
func (o AwsXraySourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type AwsXraySourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (AwsXraySourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourceAuthentication)(nil)).Elem()
}

func (o AwsXraySourceAuthenticationPtrOutput) ToAwsXraySourceAuthenticationPtrOutput() AwsXraySourceAuthenticationPtrOutput {
	return o
}

func (o AwsXraySourceAuthenticationPtrOutput) ToAwsXraySourceAuthenticationPtrOutputWithContext(ctx context.Context) AwsXraySourceAuthenticationPtrOutput {
	return o
}

func (o AwsXraySourceAuthenticationPtrOutput) Elem() AwsXraySourceAuthenticationOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) AwsXraySourceAuthentication {
		if v != nil {
			return *v
		}
		var ret AwsXraySourceAuthentication
		return ret
	}).(AwsXraySourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o AwsXraySourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o AwsXraySourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o AwsXraySourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
func (o AwsXraySourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AwsXraySourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// AwsXraySourceDefaultDateFormatInput is an input type that accepts AwsXraySourceDefaultDateFormatArgs and AwsXraySourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `AwsXraySourceDefaultDateFormatInput` via:
//
//          AwsXraySourceDefaultDateFormatArgs{...}
type AwsXraySourceDefaultDateFormatInput interface {
	pulumi.Input

	ToAwsXraySourceDefaultDateFormatOutput() AwsXraySourceDefaultDateFormatOutput
	ToAwsXraySourceDefaultDateFormatOutputWithContext(context.Context) AwsXraySourceDefaultDateFormatOutput
}

type AwsXraySourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (AwsXraySourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsXraySourceDefaultDateFormatArgs) ToAwsXraySourceDefaultDateFormatOutput() AwsXraySourceDefaultDateFormatOutput {
	return i.ToAwsXraySourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i AwsXraySourceDefaultDateFormatArgs) ToAwsXraySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceDefaultDateFormatOutput)
}

// AwsXraySourceDefaultDateFormatArrayInput is an input type that accepts AwsXraySourceDefaultDateFormatArray and AwsXraySourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `AwsXraySourceDefaultDateFormatArrayInput` via:
//
//          AwsXraySourceDefaultDateFormatArray{ AwsXraySourceDefaultDateFormatArgs{...} }
type AwsXraySourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToAwsXraySourceDefaultDateFormatArrayOutput() AwsXraySourceDefaultDateFormatArrayOutput
	ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(context.Context) AwsXraySourceDefaultDateFormatArrayOutput
}

type AwsXraySourceDefaultDateFormatArray []AwsXraySourceDefaultDateFormatInput

func (AwsXraySourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (i AwsXraySourceDefaultDateFormatArray) ToAwsXraySourceDefaultDateFormatArrayOutput() AwsXraySourceDefaultDateFormatArrayOutput {
	return i.ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i AwsXraySourceDefaultDateFormatArray) ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceDefaultDateFormatArrayOutput)
}

type AwsXraySourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (AwsXraySourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsXraySourceDefaultDateFormatOutput) ToAwsXraySourceDefaultDateFormatOutput() AwsXraySourceDefaultDateFormatOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatOutput) ToAwsXraySourceDefaultDateFormatOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o AwsXraySourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type AwsXraySourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceDefaultDateFormat)(nil)).Elem()
}

func (o AwsXraySourceDefaultDateFormatArrayOutput) ToAwsXraySourceDefaultDateFormatArrayOutput() AwsXraySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatArrayOutput) ToAwsXraySourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) AwsXraySourceDefaultDateFormatArrayOutput {
	return o
}

func (o AwsXraySourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) AwsXraySourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourceDefaultDateFormat {
		return vs[0].([]AwsXraySourceDefaultDateFormat)[vs[1].(int)]
	}).(AwsXraySourceDefaultDateFormatOutput)
}

type AwsXraySourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// AwsXraySourceFilterInput is an input type that accepts AwsXraySourceFilterArgs and AwsXraySourceFilterOutput values.
// You can construct a concrete instance of `AwsXraySourceFilterInput` via:
//
//          AwsXraySourceFilterArgs{...}
type AwsXraySourceFilterInput interface {
	pulumi.Input

	ToAwsXraySourceFilterOutput() AwsXraySourceFilterOutput
	ToAwsXraySourceFilterOutputWithContext(context.Context) AwsXraySourceFilterOutput
}

type AwsXraySourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (AwsXraySourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceFilter)(nil)).Elem()
}

func (i AwsXraySourceFilterArgs) ToAwsXraySourceFilterOutput() AwsXraySourceFilterOutput {
	return i.ToAwsXraySourceFilterOutputWithContext(context.Background())
}

func (i AwsXraySourceFilterArgs) ToAwsXraySourceFilterOutputWithContext(ctx context.Context) AwsXraySourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceFilterOutput)
}

// AwsXraySourceFilterArrayInput is an input type that accepts AwsXraySourceFilterArray and AwsXraySourceFilterArrayOutput values.
// You can construct a concrete instance of `AwsXraySourceFilterArrayInput` via:
//
//          AwsXraySourceFilterArray{ AwsXraySourceFilterArgs{...} }
type AwsXraySourceFilterArrayInput interface {
	pulumi.Input

	ToAwsXraySourceFilterArrayOutput() AwsXraySourceFilterArrayOutput
	ToAwsXraySourceFilterArrayOutputWithContext(context.Context) AwsXraySourceFilterArrayOutput
}

type AwsXraySourceFilterArray []AwsXraySourceFilterInput

func (AwsXraySourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceFilter)(nil)).Elem()
}

func (i AwsXraySourceFilterArray) ToAwsXraySourceFilterArrayOutput() AwsXraySourceFilterArrayOutput {
	return i.ToAwsXraySourceFilterArrayOutputWithContext(context.Background())
}

func (i AwsXraySourceFilterArray) ToAwsXraySourceFilterArrayOutputWithContext(ctx context.Context) AwsXraySourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourceFilterArrayOutput)
}

type AwsXraySourceFilterOutput struct{ *pulumi.OutputState }

func (AwsXraySourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourceFilter)(nil)).Elem()
}

func (o AwsXraySourceFilterOutput) ToAwsXraySourceFilterOutput() AwsXraySourceFilterOutput {
	return o
}

func (o AwsXraySourceFilterOutput) ToAwsXraySourceFilterOutputWithContext(ctx context.Context) AwsXraySourceFilterOutput {
	return o
}

func (o AwsXraySourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o AwsXraySourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o AwsXraySourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type AwsXraySourceFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourceFilter)(nil)).Elem()
}

func (o AwsXraySourceFilterArrayOutput) ToAwsXraySourceFilterArrayOutput() AwsXraySourceFilterArrayOutput {
	return o
}

func (o AwsXraySourceFilterArrayOutput) ToAwsXraySourceFilterArrayOutputWithContext(ctx context.Context) AwsXraySourceFilterArrayOutput {
	return o
}

func (o AwsXraySourceFilterArrayOutput) Index(i pulumi.IntInput) AwsXraySourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourceFilter {
		return vs[0].([]AwsXraySourceFilter)[vs[1].(int)]
	}).(AwsXraySourceFilterOutput)
}

type AwsXraySourcePath struct {
	BucketName        *string                          `pulumi:"bucketName"`
	CustomServices    []AwsXraySourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                         `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions             []string                                     `pulumi:"limitToRegions"`
	LimitToServices            []string                                     `pulumi:"limitToServices"`
	PathExpression             *string                                      `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns []AwsXraySourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []AwsXraySourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// AwsXraySourcePathInput is an input type that accepts AwsXraySourcePathArgs and AwsXraySourcePathOutput values.
// You can construct a concrete instance of `AwsXraySourcePathInput` via:
//
//          AwsXraySourcePathArgs{...}
type AwsXraySourcePathInput interface {
	pulumi.Input

	ToAwsXraySourcePathOutput() AwsXraySourcePathOutput
	ToAwsXraySourcePathOutputWithContext(context.Context) AwsXraySourcePathOutput
}

type AwsXraySourcePathArgs struct {
	BucketName        pulumi.StringPtrInput                    `pulumi:"bucketName"`
	CustomServices    AwsXraySourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                  `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions             pulumi.StringArrayInput                              `pulumi:"limitToRegions"`
	LimitToServices            pulumi.StringArrayInput                              `pulumi:"limitToServices"`
	PathExpression             pulumi.StringPtrInput                                `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns AwsXraySourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 AwsXraySourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (AwsXraySourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePath)(nil)).Elem()
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathOutput() AwsXraySourcePathOutput {
	return i.ToAwsXraySourcePathOutputWithContext(context.Background())
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathOutputWithContext(ctx context.Context) AwsXraySourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathOutput)
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return i.ToAwsXraySourcePathPtrOutputWithContext(context.Background())
}

func (i AwsXraySourcePathArgs) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathOutput).ToAwsXraySourcePathPtrOutputWithContext(ctx)
}

// AwsXraySourcePathPtrInput is an input type that accepts AwsXraySourcePathArgs, AwsXraySourcePathPtr and AwsXraySourcePathPtrOutput values.
// You can construct a concrete instance of `AwsXraySourcePathPtrInput` via:
//
//          AwsXraySourcePathArgs{...}
//
//  or:
//
//          nil
type AwsXraySourcePathPtrInput interface {
	pulumi.Input

	ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput
	ToAwsXraySourcePathPtrOutputWithContext(context.Context) AwsXraySourcePathPtrOutput
}

type awsXraySourcePathPtrType AwsXraySourcePathArgs

func AwsXraySourcePathPtr(v *AwsXraySourcePathArgs) AwsXraySourcePathPtrInput {
	return (*awsXraySourcePathPtrType)(v)
}

func (*awsXraySourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourcePath)(nil)).Elem()
}

func (i *awsXraySourcePathPtrType) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return i.ToAwsXraySourcePathPtrOutputWithContext(context.Background())
}

func (i *awsXraySourcePathPtrType) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathPtrOutput)
}

type AwsXraySourcePathOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePath)(nil)).Elem()
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathOutput() AwsXraySourcePathOutput {
	return o
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathOutputWithContext(ctx context.Context) AwsXraySourcePathOutput {
	return o
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return o.ToAwsXraySourcePathPtrOutputWithContext(context.Background())
}

func (o AwsXraySourcePathOutput) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsXraySourcePath) *AwsXraySourcePath {
		return &v
	}).(AwsXraySourcePathPtrOutput)
}

func (o AwsXraySourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathOutput) CustomServices() AwsXraySourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []AwsXraySourcePathCustomService { return v.CustomServices }).(AwsXraySourcePathCustomServiceArrayOutput)
}

func (o AwsXraySourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o AwsXraySourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathOutput) SnsTopicOrSubscriptionArns() AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []AwsXraySourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o AwsXraySourcePathOutput) TagFilters() AwsXraySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePath) []AwsXraySourcePathTagFilter { return v.TagFilters }).(AwsXraySourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
func (o AwsXraySourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AwsXraySourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o AwsXraySourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type AwsXraySourcePathPtrOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsXraySourcePath)(nil)).Elem()
}

func (o AwsXraySourcePathPtrOutput) ToAwsXraySourcePathPtrOutput() AwsXraySourcePathPtrOutput {
	return o
}

func (o AwsXraySourcePathPtrOutput) ToAwsXraySourcePathPtrOutputWithContext(ctx context.Context) AwsXraySourcePathPtrOutput {
	return o
}

func (o AwsXraySourcePathPtrOutput) Elem() AwsXraySourcePathOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) AwsXraySourcePath {
		if v != nil {
			return *v
		}
		var ret AwsXraySourcePath
		return ret
	}).(AwsXraySourcePathOutput)
}

func (o AwsXraySourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathPtrOutput) CustomServices() AwsXraySourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []AwsXraySourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(AwsXraySourcePathCustomServiceArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o AwsXraySourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathPtrOutput) SnsTopicOrSubscriptionArns() AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []AwsXraySourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o AwsXraySourcePathPtrOutput) TagFilters() AwsXraySourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) []AwsXraySourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(AwsXraySourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
func (o AwsXraySourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsXraySourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type AwsXraySourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// AwsXraySourcePathCustomServiceInput is an input type that accepts AwsXraySourcePathCustomServiceArgs and AwsXraySourcePathCustomServiceOutput values.
// You can construct a concrete instance of `AwsXraySourcePathCustomServiceInput` via:
//
//          AwsXraySourcePathCustomServiceArgs{...}
type AwsXraySourcePathCustomServiceInput interface {
	pulumi.Input

	ToAwsXraySourcePathCustomServiceOutput() AwsXraySourcePathCustomServiceOutput
	ToAwsXraySourcePathCustomServiceOutputWithContext(context.Context) AwsXraySourcePathCustomServiceOutput
}

type AwsXraySourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (AwsXraySourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathCustomService)(nil)).Elem()
}

func (i AwsXraySourcePathCustomServiceArgs) ToAwsXraySourcePathCustomServiceOutput() AwsXraySourcePathCustomServiceOutput {
	return i.ToAwsXraySourcePathCustomServiceOutputWithContext(context.Background())
}

func (i AwsXraySourcePathCustomServiceArgs) ToAwsXraySourcePathCustomServiceOutputWithContext(ctx context.Context) AwsXraySourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathCustomServiceOutput)
}

// AwsXraySourcePathCustomServiceArrayInput is an input type that accepts AwsXraySourcePathCustomServiceArray and AwsXraySourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `AwsXraySourcePathCustomServiceArrayInput` via:
//
//          AwsXraySourcePathCustomServiceArray{ AwsXraySourcePathCustomServiceArgs{...} }
type AwsXraySourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToAwsXraySourcePathCustomServiceArrayOutput() AwsXraySourcePathCustomServiceArrayOutput
	ToAwsXraySourcePathCustomServiceArrayOutputWithContext(context.Context) AwsXraySourcePathCustomServiceArrayOutput
}

type AwsXraySourcePathCustomServiceArray []AwsXraySourcePathCustomServiceInput

func (AwsXraySourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathCustomService)(nil)).Elem()
}

func (i AwsXraySourcePathCustomServiceArray) ToAwsXraySourcePathCustomServiceArrayOutput() AwsXraySourcePathCustomServiceArrayOutput {
	return i.ToAwsXraySourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i AwsXraySourcePathCustomServiceArray) ToAwsXraySourcePathCustomServiceArrayOutputWithContext(ctx context.Context) AwsXraySourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathCustomServiceArrayOutput)
}

type AwsXraySourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathCustomService)(nil)).Elem()
}

func (o AwsXraySourcePathCustomServiceOutput) ToAwsXraySourcePathCustomServiceOutput() AwsXraySourcePathCustomServiceOutput {
	return o
}

func (o AwsXraySourcePathCustomServiceOutput) ToAwsXraySourcePathCustomServiceOutputWithContext(ctx context.Context) AwsXraySourcePathCustomServiceOutput {
	return o
}

func (o AwsXraySourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o AwsXraySourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type AwsXraySourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathCustomService)(nil)).Elem()
}

func (o AwsXraySourcePathCustomServiceArrayOutput) ToAwsXraySourcePathCustomServiceArrayOutput() AwsXraySourcePathCustomServiceArrayOutput {
	return o
}

func (o AwsXraySourcePathCustomServiceArrayOutput) ToAwsXraySourcePathCustomServiceArrayOutputWithContext(ctx context.Context) AwsXraySourcePathCustomServiceArrayOutput {
	return o
}

func (o AwsXraySourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) AwsXraySourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourcePathCustomService {
		return vs[0].([]AwsXraySourcePathCustomService)[vs[1].(int)]
	}).(AwsXraySourcePathCustomServiceOutput)
}

type AwsXraySourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// AwsXraySourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts AwsXraySourcePathSnsTopicOrSubscriptionArnArgs and AwsXraySourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `AwsXraySourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          AwsXraySourcePathSnsTopicOrSubscriptionArnArgs{...}
type AwsXraySourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutput() AwsXraySourcePathSnsTopicOrSubscriptionArnOutput
	ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) AwsXraySourcePathSnsTopicOrSubscriptionArnOutput
}

type AwsXraySourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (AwsXraySourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i AwsXraySourcePathSnsTopicOrSubscriptionArnArgs) ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutput() AwsXraySourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i AwsXraySourcePathSnsTopicOrSubscriptionArnArgs) ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) AwsXraySourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathSnsTopicOrSubscriptionArnOutput)
}

// AwsXraySourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts AwsXraySourcePathSnsTopicOrSubscriptionArnArray and AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `AwsXraySourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          AwsXraySourcePathSnsTopicOrSubscriptionArnArray{ AwsXraySourcePathSnsTopicOrSubscriptionArnArgs{...} }
type AwsXraySourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput() AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type AwsXraySourcePathSnsTopicOrSubscriptionArnArray []AwsXraySourcePathSnsTopicOrSubscriptionArnInput

func (AwsXraySourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i AwsXraySourcePathSnsTopicOrSubscriptionArnArray) ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput() AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i AwsXraySourcePathSnsTopicOrSubscriptionArnArray) ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type AwsXraySourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnOutput) ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutput() AwsXraySourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnOutput) ToAwsXraySourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) AwsXraySourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput) ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput() AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput) ToAwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) AwsXraySourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]AwsXraySourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(AwsXraySourcePathSnsTopicOrSubscriptionArnOutput)
}

type AwsXraySourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
	Type *string `pulumi:"type"`
}

// AwsXraySourcePathTagFilterInput is an input type that accepts AwsXraySourcePathTagFilterArgs and AwsXraySourcePathTagFilterOutput values.
// You can construct a concrete instance of `AwsXraySourcePathTagFilterInput` via:
//
//          AwsXraySourcePathTagFilterArgs{...}
type AwsXraySourcePathTagFilterInput interface {
	pulumi.Input

	ToAwsXraySourcePathTagFilterOutput() AwsXraySourcePathTagFilterOutput
	ToAwsXraySourcePathTagFilterOutputWithContext(context.Context) AwsXraySourcePathTagFilterOutput
}

type AwsXraySourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AwsXraySourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (i AwsXraySourcePathTagFilterArgs) ToAwsXraySourcePathTagFilterOutput() AwsXraySourcePathTagFilterOutput {
	return i.ToAwsXraySourcePathTagFilterOutputWithContext(context.Background())
}

func (i AwsXraySourcePathTagFilterArgs) ToAwsXraySourcePathTagFilterOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathTagFilterOutput)
}

// AwsXraySourcePathTagFilterArrayInput is an input type that accepts AwsXraySourcePathTagFilterArray and AwsXraySourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `AwsXraySourcePathTagFilterArrayInput` via:
//
//          AwsXraySourcePathTagFilterArray{ AwsXraySourcePathTagFilterArgs{...} }
type AwsXraySourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToAwsXraySourcePathTagFilterArrayOutput() AwsXraySourcePathTagFilterArrayOutput
	ToAwsXraySourcePathTagFilterArrayOutputWithContext(context.Context) AwsXraySourcePathTagFilterArrayOutput
}

type AwsXraySourcePathTagFilterArray []AwsXraySourcePathTagFilterInput

func (AwsXraySourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (i AwsXraySourcePathTagFilterArray) ToAwsXraySourcePathTagFilterArrayOutput() AwsXraySourcePathTagFilterArrayOutput {
	return i.ToAwsXraySourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i AwsXraySourcePathTagFilterArray) ToAwsXraySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsXraySourcePathTagFilterArrayOutput)
}

type AwsXraySourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (o AwsXraySourcePathTagFilterOutput) ToAwsXraySourcePathTagFilterOutput() AwsXraySourcePathTagFilterOutput {
	return o
}

func (o AwsXraySourcePathTagFilterOutput) ToAwsXraySourcePathTagFilterOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterOutput {
	return o
}

func (o AwsXraySourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o AwsXraySourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsXraySourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
func (o AwsXraySourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsXraySourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AwsXraySourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (AwsXraySourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AwsXraySourcePathTagFilter)(nil)).Elem()
}

func (o AwsXraySourcePathTagFilterArrayOutput) ToAwsXraySourcePathTagFilterArrayOutput() AwsXraySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsXraySourcePathTagFilterArrayOutput) ToAwsXraySourcePathTagFilterArrayOutputWithContext(ctx context.Context) AwsXraySourcePathTagFilterArrayOutput {
	return o
}

func (o AwsXraySourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) AwsXraySourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AwsXraySourcePathTagFilter {
		return vs[0].([]AwsXraySourcePathTagFilter)[vs[1].(int)]
	}).(AwsXraySourcePathTagFilterOutput)
}

type CloudSyslogSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudSyslogSourceDefaultDateFormatInput is an input type that accepts CloudSyslogSourceDefaultDateFormatArgs and CloudSyslogSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudSyslogSourceDefaultDateFormatInput` via:
//
//          CloudSyslogSourceDefaultDateFormatArgs{...}
type CloudSyslogSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudSyslogSourceDefaultDateFormatOutput() CloudSyslogSourceDefaultDateFormatOutput
	ToCloudSyslogSourceDefaultDateFormatOutputWithContext(context.Context) CloudSyslogSourceDefaultDateFormatOutput
}

type CloudSyslogSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudSyslogSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudSyslogSourceDefaultDateFormatArgs) ToCloudSyslogSourceDefaultDateFormatOutput() CloudSyslogSourceDefaultDateFormatOutput {
	return i.ToCloudSyslogSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudSyslogSourceDefaultDateFormatArgs) ToCloudSyslogSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceDefaultDateFormatOutput)
}

// CloudSyslogSourceDefaultDateFormatArrayInput is an input type that accepts CloudSyslogSourceDefaultDateFormatArray and CloudSyslogSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudSyslogSourceDefaultDateFormatArrayInput` via:
//
//          CloudSyslogSourceDefaultDateFormatArray{ CloudSyslogSourceDefaultDateFormatArgs{...} }
type CloudSyslogSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudSyslogSourceDefaultDateFormatArrayOutput() CloudSyslogSourceDefaultDateFormatArrayOutput
	ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudSyslogSourceDefaultDateFormatArrayOutput
}

type CloudSyslogSourceDefaultDateFormatArray []CloudSyslogSourceDefaultDateFormatInput

func (CloudSyslogSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudSyslogSourceDefaultDateFormatArray) ToCloudSyslogSourceDefaultDateFormatArrayOutput() CloudSyslogSourceDefaultDateFormatArrayOutput {
	return i.ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudSyslogSourceDefaultDateFormatArray) ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceDefaultDateFormatArrayOutput)
}

type CloudSyslogSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudSyslogSourceDefaultDateFormatOutput) ToCloudSyslogSourceDefaultDateFormatOutput() CloudSyslogSourceDefaultDateFormatOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatOutput) ToCloudSyslogSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudSyslogSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudSyslogSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudSyslogSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudSyslogSourceDefaultDateFormatArrayOutput) ToCloudSyslogSourceDefaultDateFormatArrayOutput() CloudSyslogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatArrayOutput) ToCloudSyslogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudSyslogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudSyslogSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudSyslogSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudSyslogSourceDefaultDateFormat {
		return vs[0].([]CloudSyslogSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudSyslogSourceDefaultDateFormatOutput)
}

type CloudSyslogSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudSyslogSourceFilterInput is an input type that accepts CloudSyslogSourceFilterArgs and CloudSyslogSourceFilterOutput values.
// You can construct a concrete instance of `CloudSyslogSourceFilterInput` via:
//
//          CloudSyslogSourceFilterArgs{...}
type CloudSyslogSourceFilterInput interface {
	pulumi.Input

	ToCloudSyslogSourceFilterOutput() CloudSyslogSourceFilterOutput
	ToCloudSyslogSourceFilterOutputWithContext(context.Context) CloudSyslogSourceFilterOutput
}

type CloudSyslogSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudSyslogSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceFilter)(nil)).Elem()
}

func (i CloudSyslogSourceFilterArgs) ToCloudSyslogSourceFilterOutput() CloudSyslogSourceFilterOutput {
	return i.ToCloudSyslogSourceFilterOutputWithContext(context.Background())
}

func (i CloudSyslogSourceFilterArgs) ToCloudSyslogSourceFilterOutputWithContext(ctx context.Context) CloudSyslogSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceFilterOutput)
}

// CloudSyslogSourceFilterArrayInput is an input type that accepts CloudSyslogSourceFilterArray and CloudSyslogSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudSyslogSourceFilterArrayInput` via:
//
//          CloudSyslogSourceFilterArray{ CloudSyslogSourceFilterArgs{...} }
type CloudSyslogSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudSyslogSourceFilterArrayOutput() CloudSyslogSourceFilterArrayOutput
	ToCloudSyslogSourceFilterArrayOutputWithContext(context.Context) CloudSyslogSourceFilterArrayOutput
}

type CloudSyslogSourceFilterArray []CloudSyslogSourceFilterInput

func (CloudSyslogSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceFilter)(nil)).Elem()
}

func (i CloudSyslogSourceFilterArray) ToCloudSyslogSourceFilterArrayOutput() CloudSyslogSourceFilterArrayOutput {
	return i.ToCloudSyslogSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudSyslogSourceFilterArray) ToCloudSyslogSourceFilterArrayOutputWithContext(ctx context.Context) CloudSyslogSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceFilterArrayOutput)
}

type CloudSyslogSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudSyslogSourceFilter)(nil)).Elem()
}

func (o CloudSyslogSourceFilterOutput) ToCloudSyslogSourceFilterOutput() CloudSyslogSourceFilterOutput {
	return o
}

func (o CloudSyslogSourceFilterOutput) ToCloudSyslogSourceFilterOutputWithContext(ctx context.Context) CloudSyslogSourceFilterOutput {
	return o
}

func (o CloudSyslogSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudSyslogSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudSyslogSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudSyslogSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudSyslogSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudSyslogSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudSyslogSourceFilter)(nil)).Elem()
}

func (o CloudSyslogSourceFilterArrayOutput) ToCloudSyslogSourceFilterArrayOutput() CloudSyslogSourceFilterArrayOutput {
	return o
}

func (o CloudSyslogSourceFilterArrayOutput) ToCloudSyslogSourceFilterArrayOutputWithContext(ctx context.Context) CloudSyslogSourceFilterArrayOutput {
	return o
}

func (o CloudSyslogSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudSyslogSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudSyslogSourceFilter {
		return vs[0].([]CloudSyslogSourceFilter)[vs[1].(int)]
	}).(CloudSyslogSourceFilterOutput)
}

type CloudfrontSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
	Type string `pulumi:"type"`
}

// CloudfrontSourceAuthenticationInput is an input type that accepts CloudfrontSourceAuthenticationArgs and CloudfrontSourceAuthenticationOutput values.
// You can construct a concrete instance of `CloudfrontSourceAuthenticationInput` via:
//
//          CloudfrontSourceAuthenticationArgs{...}
type CloudfrontSourceAuthenticationInput interface {
	pulumi.Input

	ToCloudfrontSourceAuthenticationOutput() CloudfrontSourceAuthenticationOutput
	ToCloudfrontSourceAuthenticationOutputWithContext(context.Context) CloudfrontSourceAuthenticationOutput
}

type CloudfrontSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CloudfrontSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceAuthentication)(nil)).Elem()
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationOutput() CloudfrontSourceAuthenticationOutput {
	return i.ToCloudfrontSourceAuthenticationOutputWithContext(context.Background())
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceAuthenticationOutput)
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return i.ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i CloudfrontSourceAuthenticationArgs) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceAuthenticationOutput).ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx)
}

// CloudfrontSourceAuthenticationPtrInput is an input type that accepts CloudfrontSourceAuthenticationArgs, CloudfrontSourceAuthenticationPtr and CloudfrontSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `CloudfrontSourceAuthenticationPtrInput` via:
//
//          CloudfrontSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type CloudfrontSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput
	ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Context) CloudfrontSourceAuthenticationPtrOutput
}

type cloudfrontSourceAuthenticationPtrType CloudfrontSourceAuthenticationArgs

func CloudfrontSourceAuthenticationPtr(v *CloudfrontSourceAuthenticationArgs) CloudfrontSourceAuthenticationPtrInput {
	return (*cloudfrontSourceAuthenticationPtrType)(v)
}

func (*cloudfrontSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourceAuthentication)(nil)).Elem()
}

func (i *cloudfrontSourceAuthenticationPtrType) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return i.ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cloudfrontSourceAuthenticationPtrType) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceAuthenticationPtrOutput)
}

type CloudfrontSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceAuthentication)(nil)).Elem()
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationOutput() CloudfrontSourceAuthenticationOutput {
	return o
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationOutput {
	return o
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return o.ToCloudfrontSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o CloudfrontSourceAuthenticationOutput) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudfrontSourceAuthentication) *CloudfrontSourceAuthentication {
		return &v
	}).(CloudfrontSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o CloudfrontSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o CloudfrontSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o CloudfrontSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o CloudfrontSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
func (o CloudfrontSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type CloudfrontSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourceAuthentication)(nil)).Elem()
}

func (o CloudfrontSourceAuthenticationPtrOutput) ToCloudfrontSourceAuthenticationPtrOutput() CloudfrontSourceAuthenticationPtrOutput {
	return o
}

func (o CloudfrontSourceAuthenticationPtrOutput) ToCloudfrontSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudfrontSourceAuthenticationPtrOutput {
	return o
}

func (o CloudfrontSourceAuthenticationPtrOutput) Elem() CloudfrontSourceAuthenticationOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) CloudfrontSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret CloudfrontSourceAuthentication
		return ret
	}).(CloudfrontSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o CloudfrontSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o CloudfrontSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o CloudfrontSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o CloudfrontSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
func (o CloudfrontSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudfrontSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudfrontSourceDefaultDateFormatInput is an input type that accepts CloudfrontSourceDefaultDateFormatArgs and CloudfrontSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudfrontSourceDefaultDateFormatInput` via:
//
//          CloudfrontSourceDefaultDateFormatArgs{...}
type CloudfrontSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudfrontSourceDefaultDateFormatOutput() CloudfrontSourceDefaultDateFormatOutput
	ToCloudfrontSourceDefaultDateFormatOutputWithContext(context.Context) CloudfrontSourceDefaultDateFormatOutput
}

type CloudfrontSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudfrontSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudfrontSourceDefaultDateFormatArgs) ToCloudfrontSourceDefaultDateFormatOutput() CloudfrontSourceDefaultDateFormatOutput {
	return i.ToCloudfrontSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudfrontSourceDefaultDateFormatArgs) ToCloudfrontSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceDefaultDateFormatOutput)
}

// CloudfrontSourceDefaultDateFormatArrayInput is an input type that accepts CloudfrontSourceDefaultDateFormatArray and CloudfrontSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourceDefaultDateFormatArrayInput` via:
//
//          CloudfrontSourceDefaultDateFormatArray{ CloudfrontSourceDefaultDateFormatArgs{...} }
type CloudfrontSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudfrontSourceDefaultDateFormatArrayOutput() CloudfrontSourceDefaultDateFormatArrayOutput
	ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudfrontSourceDefaultDateFormatArrayOutput
}

type CloudfrontSourceDefaultDateFormatArray []CloudfrontSourceDefaultDateFormatInput

func (CloudfrontSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudfrontSourceDefaultDateFormatArray) ToCloudfrontSourceDefaultDateFormatArrayOutput() CloudfrontSourceDefaultDateFormatArrayOutput {
	return i.ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourceDefaultDateFormatArray) ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceDefaultDateFormatArrayOutput)
}

type CloudfrontSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudfrontSourceDefaultDateFormatOutput) ToCloudfrontSourceDefaultDateFormatOutput() CloudfrontSourceDefaultDateFormatOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatOutput) ToCloudfrontSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudfrontSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudfrontSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudfrontSourceDefaultDateFormatArrayOutput) ToCloudfrontSourceDefaultDateFormatArrayOutput() CloudfrontSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatArrayOutput) ToCloudfrontSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudfrontSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudfrontSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudfrontSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourceDefaultDateFormat {
		return vs[0].([]CloudfrontSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudfrontSourceDefaultDateFormatOutput)
}

type CloudfrontSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudfrontSourceFilterInput is an input type that accepts CloudfrontSourceFilterArgs and CloudfrontSourceFilterOutput values.
// You can construct a concrete instance of `CloudfrontSourceFilterInput` via:
//
//          CloudfrontSourceFilterArgs{...}
type CloudfrontSourceFilterInput interface {
	pulumi.Input

	ToCloudfrontSourceFilterOutput() CloudfrontSourceFilterOutput
	ToCloudfrontSourceFilterOutputWithContext(context.Context) CloudfrontSourceFilterOutput
}

type CloudfrontSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudfrontSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceFilter)(nil)).Elem()
}

func (i CloudfrontSourceFilterArgs) ToCloudfrontSourceFilterOutput() CloudfrontSourceFilterOutput {
	return i.ToCloudfrontSourceFilterOutputWithContext(context.Background())
}

func (i CloudfrontSourceFilterArgs) ToCloudfrontSourceFilterOutputWithContext(ctx context.Context) CloudfrontSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceFilterOutput)
}

// CloudfrontSourceFilterArrayInput is an input type that accepts CloudfrontSourceFilterArray and CloudfrontSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourceFilterArrayInput` via:
//
//          CloudfrontSourceFilterArray{ CloudfrontSourceFilterArgs{...} }
type CloudfrontSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudfrontSourceFilterArrayOutput() CloudfrontSourceFilterArrayOutput
	ToCloudfrontSourceFilterArrayOutputWithContext(context.Context) CloudfrontSourceFilterArrayOutput
}

type CloudfrontSourceFilterArray []CloudfrontSourceFilterInput

func (CloudfrontSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceFilter)(nil)).Elem()
}

func (i CloudfrontSourceFilterArray) ToCloudfrontSourceFilterArrayOutput() CloudfrontSourceFilterArrayOutput {
	return i.ToCloudfrontSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourceFilterArray) ToCloudfrontSourceFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourceFilterArrayOutput)
}

type CloudfrontSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourceFilter)(nil)).Elem()
}

func (o CloudfrontSourceFilterOutput) ToCloudfrontSourceFilterOutput() CloudfrontSourceFilterOutput {
	return o
}

func (o CloudfrontSourceFilterOutput) ToCloudfrontSourceFilterOutputWithContext(ctx context.Context) CloudfrontSourceFilterOutput {
	return o
}

func (o CloudfrontSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudfrontSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudfrontSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudfrontSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourceFilter)(nil)).Elem()
}

func (o CloudfrontSourceFilterArrayOutput) ToCloudfrontSourceFilterArrayOutput() CloudfrontSourceFilterArrayOutput {
	return o
}

func (o CloudfrontSourceFilterArrayOutput) ToCloudfrontSourceFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourceFilterArrayOutput {
	return o
}

func (o CloudfrontSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudfrontSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourceFilter {
		return vs[0].([]CloudfrontSourceFilter)[vs[1].(int)]
	}).(CloudfrontSourceFilterOutput)
}

type CloudfrontSourcePath struct {
	// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
	BucketName        *string                             `pulumi:"bucketName"`
	CustomServices    []CloudfrontSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                            `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                            `pulumi:"limitToRegions"`
	LimitToServices   []string                            `pulumi:"limitToServices"`
	// The path to the data. This is needed if using type `S3BucketPathExpression`.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []CloudfrontSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []CloudfrontSourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// CloudfrontSourcePathInput is an input type that accepts CloudfrontSourcePathArgs and CloudfrontSourcePathOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathInput` via:
//
//          CloudfrontSourcePathArgs{...}
type CloudfrontSourcePathInput interface {
	pulumi.Input

	ToCloudfrontSourcePathOutput() CloudfrontSourcePathOutput
	ToCloudfrontSourcePathOutputWithContext(context.Context) CloudfrontSourcePathOutput
}

type CloudfrontSourcePathArgs struct {
	// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
	BucketName        pulumi.StringPtrInput                       `pulumi:"bucketName"`
	CustomServices    CloudfrontSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                     `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                     `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput                     `pulumi:"limitToServices"`
	// The path to the data. This is needed if using type `S3BucketPathExpression`.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 CloudfrontSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (CloudfrontSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePath)(nil)).Elem()
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathOutput() CloudfrontSourcePathOutput {
	return i.ToCloudfrontSourcePathOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathOutputWithContext(ctx context.Context) CloudfrontSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathOutput)
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return i.ToCloudfrontSourcePathPtrOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathArgs) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathOutput).ToCloudfrontSourcePathPtrOutputWithContext(ctx)
}

// CloudfrontSourcePathPtrInput is an input type that accepts CloudfrontSourcePathArgs, CloudfrontSourcePathPtr and CloudfrontSourcePathPtrOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathPtrInput` via:
//
//          CloudfrontSourcePathArgs{...}
//
//  or:
//
//          nil
type CloudfrontSourcePathPtrInput interface {
	pulumi.Input

	ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput
	ToCloudfrontSourcePathPtrOutputWithContext(context.Context) CloudfrontSourcePathPtrOutput
}

type cloudfrontSourcePathPtrType CloudfrontSourcePathArgs

func CloudfrontSourcePathPtr(v *CloudfrontSourcePathArgs) CloudfrontSourcePathPtrInput {
	return (*cloudfrontSourcePathPtrType)(v)
}

func (*cloudfrontSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourcePath)(nil)).Elem()
}

func (i *cloudfrontSourcePathPtrType) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return i.ToCloudfrontSourcePathPtrOutputWithContext(context.Background())
}

func (i *cloudfrontSourcePathPtrType) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathPtrOutput)
}

type CloudfrontSourcePathOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePath)(nil)).Elem()
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathOutput() CloudfrontSourcePathOutput {
	return o
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathOutputWithContext(ctx context.Context) CloudfrontSourcePathOutput {
	return o
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return o.ToCloudfrontSourcePathPtrOutputWithContext(context.Background())
}

func (o CloudfrontSourcePathOutput) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudfrontSourcePath) *CloudfrontSourcePath {
		return &v
	}).(CloudfrontSourcePathPtrOutput)
}

// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
func (o CloudfrontSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathOutput) CustomServices() CloudfrontSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []CloudfrontSourcePathCustomService { return v.CustomServices }).(CloudfrontSourcePathCustomServiceArrayOutput)
}

func (o CloudfrontSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data. This is needed if using type `S3BucketPathExpression`.
func (o CloudfrontSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o CloudfrontSourcePathOutput) SnsTopicOrSubscriptionArns() CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []CloudfrontSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o CloudfrontSourcePathOutput) TagFilters() CloudfrontSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) []CloudfrontSourcePathTagFilter { return v.TagFilters }).(CloudfrontSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
func (o CloudfrontSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o CloudfrontSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type CloudfrontSourcePathPtrOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfrontSourcePath)(nil)).Elem()
}

func (o CloudfrontSourcePathPtrOutput) ToCloudfrontSourcePathPtrOutput() CloudfrontSourcePathPtrOutput {
	return o
}

func (o CloudfrontSourcePathPtrOutput) ToCloudfrontSourcePathPtrOutputWithContext(ctx context.Context) CloudfrontSourcePathPtrOutput {
	return o
}

func (o CloudfrontSourcePathPtrOutput) Elem() CloudfrontSourcePathOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) CloudfrontSourcePath {
		if v != nil {
			return *v
		}
		var ret CloudfrontSourcePath
		return ret
	}).(CloudfrontSourcePathOutput)
}

// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
func (o CloudfrontSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathPtrOutput) CustomServices() CloudfrontSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []CloudfrontSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(CloudfrontSourcePathCustomServiceArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data. This is needed if using type `S3BucketPathExpression`.
func (o CloudfrontSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o CloudfrontSourcePathPtrOutput) SnsTopicOrSubscriptionArns() CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []CloudfrontSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o CloudfrontSourcePathPtrOutput) TagFilters() CloudfrontSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) []CloudfrontSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(CloudfrontSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
func (o CloudfrontSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudfrontSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type CloudfrontSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// CloudfrontSourcePathCustomServiceInput is an input type that accepts CloudfrontSourcePathCustomServiceArgs and CloudfrontSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathCustomServiceInput` via:
//
//          CloudfrontSourcePathCustomServiceArgs{...}
type CloudfrontSourcePathCustomServiceInput interface {
	pulumi.Input

	ToCloudfrontSourcePathCustomServiceOutput() CloudfrontSourcePathCustomServiceOutput
	ToCloudfrontSourcePathCustomServiceOutputWithContext(context.Context) CloudfrontSourcePathCustomServiceOutput
}

type CloudfrontSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (CloudfrontSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathCustomService)(nil)).Elem()
}

func (i CloudfrontSourcePathCustomServiceArgs) ToCloudfrontSourcePathCustomServiceOutput() CloudfrontSourcePathCustomServiceOutput {
	return i.ToCloudfrontSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathCustomServiceArgs) ToCloudfrontSourcePathCustomServiceOutputWithContext(ctx context.Context) CloudfrontSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathCustomServiceOutput)
}

// CloudfrontSourcePathCustomServiceArrayInput is an input type that accepts CloudfrontSourcePathCustomServiceArray and CloudfrontSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathCustomServiceArrayInput` via:
//
//          CloudfrontSourcePathCustomServiceArray{ CloudfrontSourcePathCustomServiceArgs{...} }
type CloudfrontSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToCloudfrontSourcePathCustomServiceArrayOutput() CloudfrontSourcePathCustomServiceArrayOutput
	ToCloudfrontSourcePathCustomServiceArrayOutputWithContext(context.Context) CloudfrontSourcePathCustomServiceArrayOutput
}

type CloudfrontSourcePathCustomServiceArray []CloudfrontSourcePathCustomServiceInput

func (CloudfrontSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathCustomService)(nil)).Elem()
}

func (i CloudfrontSourcePathCustomServiceArray) ToCloudfrontSourcePathCustomServiceArrayOutput() CloudfrontSourcePathCustomServiceArrayOutput {
	return i.ToCloudfrontSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathCustomServiceArray) ToCloudfrontSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathCustomServiceArrayOutput)
}

type CloudfrontSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathCustomService)(nil)).Elem()
}

func (o CloudfrontSourcePathCustomServiceOutput) ToCloudfrontSourcePathCustomServiceOutput() CloudfrontSourcePathCustomServiceOutput {
	return o
}

func (o CloudfrontSourcePathCustomServiceOutput) ToCloudfrontSourcePathCustomServiceOutputWithContext(ctx context.Context) CloudfrontSourcePathCustomServiceOutput {
	return o
}

func (o CloudfrontSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o CloudfrontSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type CloudfrontSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathCustomService)(nil)).Elem()
}

func (o CloudfrontSourcePathCustomServiceArrayOutput) ToCloudfrontSourcePathCustomServiceArrayOutput() CloudfrontSourcePathCustomServiceArrayOutput {
	return o
}

func (o CloudfrontSourcePathCustomServiceArrayOutput) ToCloudfrontSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathCustomServiceArrayOutput {
	return o
}

func (o CloudfrontSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) CloudfrontSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourcePathCustomService {
		return vs[0].([]CloudfrontSourcePathCustomService)[vs[1].(int)]
	}).(CloudfrontSourcePathCustomServiceOutput)
}

type CloudfrontSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// CloudfrontSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs and CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs{...}
type CloudfrontSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutput() CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput
	ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput
}

type CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutput() CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput)
}

// CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts CloudfrontSourcePathSnsTopicOrSubscriptionArnArray and CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          CloudfrontSourcePathSnsTopicOrSubscriptionArnArray{ CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type CloudfrontSourcePathSnsTopicOrSubscriptionArnArray []CloudfrontSourcePathSnsTopicOrSubscriptionArnInput

func (CloudfrontSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i CloudfrontSourcePathSnsTopicOrSubscriptionArnArray) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathSnsTopicOrSubscriptionArnArray) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutput() CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToCloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]CloudfrontSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput)
}

type CloudfrontSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
	Type *string `pulumi:"type"`
}

// CloudfrontSourcePathTagFilterInput is an input type that accepts CloudfrontSourcePathTagFilterArgs and CloudfrontSourcePathTagFilterOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathTagFilterInput` via:
//
//          CloudfrontSourcePathTagFilterArgs{...}
type CloudfrontSourcePathTagFilterInput interface {
	pulumi.Input

	ToCloudfrontSourcePathTagFilterOutput() CloudfrontSourcePathTagFilterOutput
	ToCloudfrontSourcePathTagFilterOutputWithContext(context.Context) CloudfrontSourcePathTagFilterOutput
}

type CloudfrontSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CloudfrontSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (i CloudfrontSourcePathTagFilterArgs) ToCloudfrontSourcePathTagFilterOutput() CloudfrontSourcePathTagFilterOutput {
	return i.ToCloudfrontSourcePathTagFilterOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathTagFilterArgs) ToCloudfrontSourcePathTagFilterOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathTagFilterOutput)
}

// CloudfrontSourcePathTagFilterArrayInput is an input type that accepts CloudfrontSourcePathTagFilterArray and CloudfrontSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `CloudfrontSourcePathTagFilterArrayInput` via:
//
//          CloudfrontSourcePathTagFilterArray{ CloudfrontSourcePathTagFilterArgs{...} }
type CloudfrontSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToCloudfrontSourcePathTagFilterArrayOutput() CloudfrontSourcePathTagFilterArrayOutput
	ToCloudfrontSourcePathTagFilterArrayOutputWithContext(context.Context) CloudfrontSourcePathTagFilterArrayOutput
}

type CloudfrontSourcePathTagFilterArray []CloudfrontSourcePathTagFilterInput

func (CloudfrontSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (i CloudfrontSourcePathTagFilterArray) ToCloudfrontSourcePathTagFilterArrayOutput() CloudfrontSourcePathTagFilterArrayOutput {
	return i.ToCloudfrontSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i CloudfrontSourcePathTagFilterArray) ToCloudfrontSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfrontSourcePathTagFilterArrayOutput)
}

type CloudfrontSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (o CloudfrontSourcePathTagFilterOutput) ToCloudfrontSourcePathTagFilterOutput() CloudfrontSourcePathTagFilterOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterOutput) ToCloudfrontSourcePathTagFilterOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o CloudfrontSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudfrontSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
func (o CloudfrontSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudfrontSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CloudfrontSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudfrontSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudfrontSourcePathTagFilter)(nil)).Elem()
}

func (o CloudfrontSourcePathTagFilterArrayOutput) ToCloudfrontSourcePathTagFilterArrayOutput() CloudfrontSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterArrayOutput) ToCloudfrontSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudfrontSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudfrontSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) CloudfrontSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudfrontSourcePathTagFilter {
		return vs[0].([]CloudfrontSourcePathTagFilter)[vs[1].(int)]
	}).(CloudfrontSourcePathTagFilterOutput)
}

type CloudtrailSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
	Type string `pulumi:"type"`
}

// CloudtrailSourceAuthenticationInput is an input type that accepts CloudtrailSourceAuthenticationArgs and CloudtrailSourceAuthenticationOutput values.
// You can construct a concrete instance of `CloudtrailSourceAuthenticationInput` via:
//
//          CloudtrailSourceAuthenticationArgs{...}
type CloudtrailSourceAuthenticationInput interface {
	pulumi.Input

	ToCloudtrailSourceAuthenticationOutput() CloudtrailSourceAuthenticationOutput
	ToCloudtrailSourceAuthenticationOutputWithContext(context.Context) CloudtrailSourceAuthenticationOutput
}

type CloudtrailSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CloudtrailSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceAuthentication)(nil)).Elem()
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationOutput() CloudtrailSourceAuthenticationOutput {
	return i.ToCloudtrailSourceAuthenticationOutputWithContext(context.Background())
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceAuthenticationOutput)
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return i.ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i CloudtrailSourceAuthenticationArgs) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceAuthenticationOutput).ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx)
}

// CloudtrailSourceAuthenticationPtrInput is an input type that accepts CloudtrailSourceAuthenticationArgs, CloudtrailSourceAuthenticationPtr and CloudtrailSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `CloudtrailSourceAuthenticationPtrInput` via:
//
//          CloudtrailSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type CloudtrailSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput
	ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Context) CloudtrailSourceAuthenticationPtrOutput
}

type cloudtrailSourceAuthenticationPtrType CloudtrailSourceAuthenticationArgs

func CloudtrailSourceAuthenticationPtr(v *CloudtrailSourceAuthenticationArgs) CloudtrailSourceAuthenticationPtrInput {
	return (*cloudtrailSourceAuthenticationPtrType)(v)
}

func (*cloudtrailSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourceAuthentication)(nil)).Elem()
}

func (i *cloudtrailSourceAuthenticationPtrType) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return i.ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cloudtrailSourceAuthenticationPtrType) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceAuthenticationPtrOutput)
}

type CloudtrailSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceAuthentication)(nil)).Elem()
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationOutput() CloudtrailSourceAuthenticationOutput {
	return o
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationOutput {
	return o
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return o.ToCloudtrailSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o CloudtrailSourceAuthenticationOutput) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudtrailSourceAuthentication) *CloudtrailSourceAuthentication {
		return &v
	}).(CloudtrailSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o CloudtrailSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o CloudtrailSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o CloudtrailSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o CloudtrailSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
func (o CloudtrailSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type CloudtrailSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourceAuthentication)(nil)).Elem()
}

func (o CloudtrailSourceAuthenticationPtrOutput) ToCloudtrailSourceAuthenticationPtrOutput() CloudtrailSourceAuthenticationPtrOutput {
	return o
}

func (o CloudtrailSourceAuthenticationPtrOutput) ToCloudtrailSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudtrailSourceAuthenticationPtrOutput {
	return o
}

func (o CloudtrailSourceAuthenticationPtrOutput) Elem() CloudtrailSourceAuthenticationOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) CloudtrailSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret CloudtrailSourceAuthentication
		return ret
	}).(CloudtrailSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o CloudtrailSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o CloudtrailSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o CloudtrailSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o CloudtrailSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
func (o CloudtrailSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudtrailSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudtrailSourceDefaultDateFormatInput is an input type that accepts CloudtrailSourceDefaultDateFormatArgs and CloudtrailSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudtrailSourceDefaultDateFormatInput` via:
//
//          CloudtrailSourceDefaultDateFormatArgs{...}
type CloudtrailSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudtrailSourceDefaultDateFormatOutput() CloudtrailSourceDefaultDateFormatOutput
	ToCloudtrailSourceDefaultDateFormatOutputWithContext(context.Context) CloudtrailSourceDefaultDateFormatOutput
}

type CloudtrailSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudtrailSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudtrailSourceDefaultDateFormatArgs) ToCloudtrailSourceDefaultDateFormatOutput() CloudtrailSourceDefaultDateFormatOutput {
	return i.ToCloudtrailSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudtrailSourceDefaultDateFormatArgs) ToCloudtrailSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceDefaultDateFormatOutput)
}

// CloudtrailSourceDefaultDateFormatArrayInput is an input type that accepts CloudtrailSourceDefaultDateFormatArray and CloudtrailSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourceDefaultDateFormatArrayInput` via:
//
//          CloudtrailSourceDefaultDateFormatArray{ CloudtrailSourceDefaultDateFormatArgs{...} }
type CloudtrailSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudtrailSourceDefaultDateFormatArrayOutput() CloudtrailSourceDefaultDateFormatArrayOutput
	ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudtrailSourceDefaultDateFormatArrayOutput
}

type CloudtrailSourceDefaultDateFormatArray []CloudtrailSourceDefaultDateFormatInput

func (CloudtrailSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudtrailSourceDefaultDateFormatArray) ToCloudtrailSourceDefaultDateFormatArrayOutput() CloudtrailSourceDefaultDateFormatArrayOutput {
	return i.ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourceDefaultDateFormatArray) ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceDefaultDateFormatArrayOutput)
}

type CloudtrailSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudtrailSourceDefaultDateFormatOutput) ToCloudtrailSourceDefaultDateFormatOutput() CloudtrailSourceDefaultDateFormatOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatOutput) ToCloudtrailSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudtrailSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudtrailSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudtrailSourceDefaultDateFormatArrayOutput) ToCloudtrailSourceDefaultDateFormatArrayOutput() CloudtrailSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatArrayOutput) ToCloudtrailSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudtrailSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudtrailSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudtrailSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourceDefaultDateFormat {
		return vs[0].([]CloudtrailSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudtrailSourceDefaultDateFormatOutput)
}

type CloudtrailSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudtrailSourceFilterInput is an input type that accepts CloudtrailSourceFilterArgs and CloudtrailSourceFilterOutput values.
// You can construct a concrete instance of `CloudtrailSourceFilterInput` via:
//
//          CloudtrailSourceFilterArgs{...}
type CloudtrailSourceFilterInput interface {
	pulumi.Input

	ToCloudtrailSourceFilterOutput() CloudtrailSourceFilterOutput
	ToCloudtrailSourceFilterOutputWithContext(context.Context) CloudtrailSourceFilterOutput
}

type CloudtrailSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudtrailSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceFilter)(nil)).Elem()
}

func (i CloudtrailSourceFilterArgs) ToCloudtrailSourceFilterOutput() CloudtrailSourceFilterOutput {
	return i.ToCloudtrailSourceFilterOutputWithContext(context.Background())
}

func (i CloudtrailSourceFilterArgs) ToCloudtrailSourceFilterOutputWithContext(ctx context.Context) CloudtrailSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceFilterOutput)
}

// CloudtrailSourceFilterArrayInput is an input type that accepts CloudtrailSourceFilterArray and CloudtrailSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourceFilterArrayInput` via:
//
//          CloudtrailSourceFilterArray{ CloudtrailSourceFilterArgs{...} }
type CloudtrailSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudtrailSourceFilterArrayOutput() CloudtrailSourceFilterArrayOutput
	ToCloudtrailSourceFilterArrayOutputWithContext(context.Context) CloudtrailSourceFilterArrayOutput
}

type CloudtrailSourceFilterArray []CloudtrailSourceFilterInput

func (CloudtrailSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceFilter)(nil)).Elem()
}

func (i CloudtrailSourceFilterArray) ToCloudtrailSourceFilterArrayOutput() CloudtrailSourceFilterArrayOutput {
	return i.ToCloudtrailSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourceFilterArray) ToCloudtrailSourceFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourceFilterArrayOutput)
}

type CloudtrailSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourceFilter)(nil)).Elem()
}

func (o CloudtrailSourceFilterOutput) ToCloudtrailSourceFilterOutput() CloudtrailSourceFilterOutput {
	return o
}

func (o CloudtrailSourceFilterOutput) ToCloudtrailSourceFilterOutputWithContext(ctx context.Context) CloudtrailSourceFilterOutput {
	return o
}

func (o CloudtrailSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudtrailSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudtrailSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudtrailSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourceFilter)(nil)).Elem()
}

func (o CloudtrailSourceFilterArrayOutput) ToCloudtrailSourceFilterArrayOutput() CloudtrailSourceFilterArrayOutput {
	return o
}

func (o CloudtrailSourceFilterArrayOutput) ToCloudtrailSourceFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourceFilterArrayOutput {
	return o
}

func (o CloudtrailSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudtrailSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourceFilter {
		return vs[0].([]CloudtrailSourceFilter)[vs[1].(int)]
	}).(CloudtrailSourceFilterOutput)
}

type CloudtrailSourcePath struct {
	// The name of the bucket.
	BucketName        *string                             `pulumi:"bucketName"`
	CustomServices    []CloudtrailSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                            `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                            `pulumi:"limitToRegions"`
	LimitToServices   []string                            `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []CloudtrailSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []CloudtrailSourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// CloudtrailSourcePathInput is an input type that accepts CloudtrailSourcePathArgs and CloudtrailSourcePathOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathInput` via:
//
//          CloudtrailSourcePathArgs{...}
type CloudtrailSourcePathInput interface {
	pulumi.Input

	ToCloudtrailSourcePathOutput() CloudtrailSourcePathOutput
	ToCloudtrailSourcePathOutputWithContext(context.Context) CloudtrailSourcePathOutput
}

type CloudtrailSourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput                       `pulumi:"bucketName"`
	CustomServices    CloudtrailSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                     `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                     `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput                     `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 CloudtrailSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (CloudtrailSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePath)(nil)).Elem()
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathOutput() CloudtrailSourcePathOutput {
	return i.ToCloudtrailSourcePathOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathOutputWithContext(ctx context.Context) CloudtrailSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathOutput)
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return i.ToCloudtrailSourcePathPtrOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathArgs) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathOutput).ToCloudtrailSourcePathPtrOutputWithContext(ctx)
}

// CloudtrailSourcePathPtrInput is an input type that accepts CloudtrailSourcePathArgs, CloudtrailSourcePathPtr and CloudtrailSourcePathPtrOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathPtrInput` via:
//
//          CloudtrailSourcePathArgs{...}
//
//  or:
//
//          nil
type CloudtrailSourcePathPtrInput interface {
	pulumi.Input

	ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput
	ToCloudtrailSourcePathPtrOutputWithContext(context.Context) CloudtrailSourcePathPtrOutput
}

type cloudtrailSourcePathPtrType CloudtrailSourcePathArgs

func CloudtrailSourcePathPtr(v *CloudtrailSourcePathArgs) CloudtrailSourcePathPtrInput {
	return (*cloudtrailSourcePathPtrType)(v)
}

func (*cloudtrailSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourcePath)(nil)).Elem()
}

func (i *cloudtrailSourcePathPtrType) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return i.ToCloudtrailSourcePathPtrOutputWithContext(context.Background())
}

func (i *cloudtrailSourcePathPtrType) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathPtrOutput)
}

type CloudtrailSourcePathOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePath)(nil)).Elem()
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathOutput() CloudtrailSourcePathOutput {
	return o
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathOutputWithContext(ctx context.Context) CloudtrailSourcePathOutput {
	return o
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return o.ToCloudtrailSourcePathPtrOutputWithContext(context.Background())
}

func (o CloudtrailSourcePathOutput) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudtrailSourcePath) *CloudtrailSourcePath {
		return &v
	}).(CloudtrailSourcePathPtrOutput)
}

// The name of the bucket.
func (o CloudtrailSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathOutput) CustomServices() CloudtrailSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []CloudtrailSourcePathCustomService { return v.CustomServices }).(CloudtrailSourcePathCustomServiceArrayOutput)
}

func (o CloudtrailSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o CloudtrailSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o CloudtrailSourcePathOutput) SnsTopicOrSubscriptionArns() CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []CloudtrailSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o CloudtrailSourcePathOutput) TagFilters() CloudtrailSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) []CloudtrailSourcePathTagFilter { return v.TagFilters }).(CloudtrailSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
func (o CloudtrailSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o CloudtrailSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type CloudtrailSourcePathPtrOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudtrailSourcePath)(nil)).Elem()
}

func (o CloudtrailSourcePathPtrOutput) ToCloudtrailSourcePathPtrOutput() CloudtrailSourcePathPtrOutput {
	return o
}

func (o CloudtrailSourcePathPtrOutput) ToCloudtrailSourcePathPtrOutputWithContext(ctx context.Context) CloudtrailSourcePathPtrOutput {
	return o
}

func (o CloudtrailSourcePathPtrOutput) Elem() CloudtrailSourcePathOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) CloudtrailSourcePath {
		if v != nil {
			return *v
		}
		var ret CloudtrailSourcePath
		return ret
	}).(CloudtrailSourcePathOutput)
}

// The name of the bucket.
func (o CloudtrailSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathPtrOutput) CustomServices() CloudtrailSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []CloudtrailSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(CloudtrailSourcePathCustomServiceArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o CloudtrailSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o CloudtrailSourcePathPtrOutput) SnsTopicOrSubscriptionArns() CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []CloudtrailSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o CloudtrailSourcePathPtrOutput) TagFilters() CloudtrailSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) []CloudtrailSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(CloudtrailSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
func (o CloudtrailSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudtrailSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type CloudtrailSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// CloudtrailSourcePathCustomServiceInput is an input type that accepts CloudtrailSourcePathCustomServiceArgs and CloudtrailSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathCustomServiceInput` via:
//
//          CloudtrailSourcePathCustomServiceArgs{...}
type CloudtrailSourcePathCustomServiceInput interface {
	pulumi.Input

	ToCloudtrailSourcePathCustomServiceOutput() CloudtrailSourcePathCustomServiceOutput
	ToCloudtrailSourcePathCustomServiceOutputWithContext(context.Context) CloudtrailSourcePathCustomServiceOutput
}

type CloudtrailSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (CloudtrailSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathCustomService)(nil)).Elem()
}

func (i CloudtrailSourcePathCustomServiceArgs) ToCloudtrailSourcePathCustomServiceOutput() CloudtrailSourcePathCustomServiceOutput {
	return i.ToCloudtrailSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathCustomServiceArgs) ToCloudtrailSourcePathCustomServiceOutputWithContext(ctx context.Context) CloudtrailSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathCustomServiceOutput)
}

// CloudtrailSourcePathCustomServiceArrayInput is an input type that accepts CloudtrailSourcePathCustomServiceArray and CloudtrailSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathCustomServiceArrayInput` via:
//
//          CloudtrailSourcePathCustomServiceArray{ CloudtrailSourcePathCustomServiceArgs{...} }
type CloudtrailSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToCloudtrailSourcePathCustomServiceArrayOutput() CloudtrailSourcePathCustomServiceArrayOutput
	ToCloudtrailSourcePathCustomServiceArrayOutputWithContext(context.Context) CloudtrailSourcePathCustomServiceArrayOutput
}

type CloudtrailSourcePathCustomServiceArray []CloudtrailSourcePathCustomServiceInput

func (CloudtrailSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathCustomService)(nil)).Elem()
}

func (i CloudtrailSourcePathCustomServiceArray) ToCloudtrailSourcePathCustomServiceArrayOutput() CloudtrailSourcePathCustomServiceArrayOutput {
	return i.ToCloudtrailSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathCustomServiceArray) ToCloudtrailSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathCustomServiceArrayOutput)
}

type CloudtrailSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathCustomService)(nil)).Elem()
}

func (o CloudtrailSourcePathCustomServiceOutput) ToCloudtrailSourcePathCustomServiceOutput() CloudtrailSourcePathCustomServiceOutput {
	return o
}

func (o CloudtrailSourcePathCustomServiceOutput) ToCloudtrailSourcePathCustomServiceOutputWithContext(ctx context.Context) CloudtrailSourcePathCustomServiceOutput {
	return o
}

func (o CloudtrailSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o CloudtrailSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type CloudtrailSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathCustomService)(nil)).Elem()
}

func (o CloudtrailSourcePathCustomServiceArrayOutput) ToCloudtrailSourcePathCustomServiceArrayOutput() CloudtrailSourcePathCustomServiceArrayOutput {
	return o
}

func (o CloudtrailSourcePathCustomServiceArrayOutput) ToCloudtrailSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathCustomServiceArrayOutput {
	return o
}

func (o CloudtrailSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) CloudtrailSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourcePathCustomService {
		return vs[0].([]CloudtrailSourcePathCustomService)[vs[1].(int)]
	}).(CloudtrailSourcePathCustomServiceOutput)
}

type CloudtrailSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// CloudtrailSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs and CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs{...}
type CloudtrailSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutput() CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput
	ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput
}

type CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutput() CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput)
}

// CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts CloudtrailSourcePathSnsTopicOrSubscriptionArnArray and CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          CloudtrailSourcePathSnsTopicOrSubscriptionArnArray{ CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type CloudtrailSourcePathSnsTopicOrSubscriptionArnArray []CloudtrailSourcePathSnsTopicOrSubscriptionArnInput

func (CloudtrailSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i CloudtrailSourcePathSnsTopicOrSubscriptionArnArray) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathSnsTopicOrSubscriptionArnArray) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutput() CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToCloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]CloudtrailSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput)
}

type CloudtrailSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
	Type *string `pulumi:"type"`
}

// CloudtrailSourcePathTagFilterInput is an input type that accepts CloudtrailSourcePathTagFilterArgs and CloudtrailSourcePathTagFilterOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathTagFilterInput` via:
//
//          CloudtrailSourcePathTagFilterArgs{...}
type CloudtrailSourcePathTagFilterInput interface {
	pulumi.Input

	ToCloudtrailSourcePathTagFilterOutput() CloudtrailSourcePathTagFilterOutput
	ToCloudtrailSourcePathTagFilterOutputWithContext(context.Context) CloudtrailSourcePathTagFilterOutput
}

type CloudtrailSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CloudtrailSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (i CloudtrailSourcePathTagFilterArgs) ToCloudtrailSourcePathTagFilterOutput() CloudtrailSourcePathTagFilterOutput {
	return i.ToCloudtrailSourcePathTagFilterOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathTagFilterArgs) ToCloudtrailSourcePathTagFilterOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathTagFilterOutput)
}

// CloudtrailSourcePathTagFilterArrayInput is an input type that accepts CloudtrailSourcePathTagFilterArray and CloudtrailSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `CloudtrailSourcePathTagFilterArrayInput` via:
//
//          CloudtrailSourcePathTagFilterArray{ CloudtrailSourcePathTagFilterArgs{...} }
type CloudtrailSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToCloudtrailSourcePathTagFilterArrayOutput() CloudtrailSourcePathTagFilterArrayOutput
	ToCloudtrailSourcePathTagFilterArrayOutputWithContext(context.Context) CloudtrailSourcePathTagFilterArrayOutput
}

type CloudtrailSourcePathTagFilterArray []CloudtrailSourcePathTagFilterInput

func (CloudtrailSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (i CloudtrailSourcePathTagFilterArray) ToCloudtrailSourcePathTagFilterArrayOutput() CloudtrailSourcePathTagFilterArrayOutput {
	return i.ToCloudtrailSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i CloudtrailSourcePathTagFilterArray) ToCloudtrailSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudtrailSourcePathTagFilterArrayOutput)
}

type CloudtrailSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (o CloudtrailSourcePathTagFilterOutput) ToCloudtrailSourcePathTagFilterOutput() CloudtrailSourcePathTagFilterOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterOutput) ToCloudtrailSourcePathTagFilterOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o CloudtrailSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudtrailSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
func (o CloudtrailSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudtrailSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CloudtrailSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudtrailSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudtrailSourcePathTagFilter)(nil)).Elem()
}

func (o CloudtrailSourcePathTagFilterArrayOutput) ToCloudtrailSourcePathTagFilterArrayOutput() CloudtrailSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterArrayOutput) ToCloudtrailSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudtrailSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudtrailSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) CloudtrailSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudtrailSourcePathTagFilter {
		return vs[0].([]CloudtrailSourcePathTagFilter)[vs[1].(int)]
	}).(CloudtrailSourcePathTagFilterOutput)
}

type CloudwatchSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// This value has to be set to `TagFilters`
	Type string `pulumi:"type"`
}

// CloudwatchSourceAuthenticationInput is an input type that accepts CloudwatchSourceAuthenticationArgs and CloudwatchSourceAuthenticationOutput values.
// You can construct a concrete instance of `CloudwatchSourceAuthenticationInput` via:
//
//          CloudwatchSourceAuthenticationArgs{...}
type CloudwatchSourceAuthenticationInput interface {
	pulumi.Input

	ToCloudwatchSourceAuthenticationOutput() CloudwatchSourceAuthenticationOutput
	ToCloudwatchSourceAuthenticationOutputWithContext(context.Context) CloudwatchSourceAuthenticationOutput
}

type CloudwatchSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringInput `pulumi:"type"`
}

func (CloudwatchSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceAuthentication)(nil)).Elem()
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationOutput() CloudwatchSourceAuthenticationOutput {
	return i.ToCloudwatchSourceAuthenticationOutputWithContext(context.Background())
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceAuthenticationOutput)
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return i.ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i CloudwatchSourceAuthenticationArgs) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceAuthenticationOutput).ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx)
}

// CloudwatchSourceAuthenticationPtrInput is an input type that accepts CloudwatchSourceAuthenticationArgs, CloudwatchSourceAuthenticationPtr and CloudwatchSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `CloudwatchSourceAuthenticationPtrInput` via:
//
//          CloudwatchSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type CloudwatchSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput
	ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Context) CloudwatchSourceAuthenticationPtrOutput
}

type cloudwatchSourceAuthenticationPtrType CloudwatchSourceAuthenticationArgs

func CloudwatchSourceAuthenticationPtr(v *CloudwatchSourceAuthenticationArgs) CloudwatchSourceAuthenticationPtrInput {
	return (*cloudwatchSourceAuthenticationPtrType)(v)
}

func (*cloudwatchSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourceAuthentication)(nil)).Elem()
}

func (i *cloudwatchSourceAuthenticationPtrType) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return i.ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *cloudwatchSourceAuthenticationPtrType) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceAuthenticationPtrOutput)
}

type CloudwatchSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceAuthentication)(nil)).Elem()
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationOutput() CloudwatchSourceAuthenticationOutput {
	return o
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationOutput {
	return o
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return o.ToCloudwatchSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o CloudwatchSourceAuthenticationOutput) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudwatchSourceAuthentication) *CloudwatchSourceAuthentication {
		return &v
	}).(CloudwatchSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o CloudwatchSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o CloudwatchSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o CloudwatchSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o CloudwatchSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// This value has to be set to `TagFilters`
func (o CloudwatchSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type CloudwatchSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourceAuthentication)(nil)).Elem()
}

func (o CloudwatchSourceAuthenticationPtrOutput) ToCloudwatchSourceAuthenticationPtrOutput() CloudwatchSourceAuthenticationPtrOutput {
	return o
}

func (o CloudwatchSourceAuthenticationPtrOutput) ToCloudwatchSourceAuthenticationPtrOutputWithContext(ctx context.Context) CloudwatchSourceAuthenticationPtrOutput {
	return o
}

func (o CloudwatchSourceAuthenticationPtrOutput) Elem() CloudwatchSourceAuthenticationOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) CloudwatchSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret CloudwatchSourceAuthentication
		return ret
	}).(CloudwatchSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o CloudwatchSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o CloudwatchSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o CloudwatchSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o CloudwatchSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// This value has to be set to `TagFilters`
func (o CloudwatchSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CloudwatchSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// CloudwatchSourceDefaultDateFormatInput is an input type that accepts CloudwatchSourceDefaultDateFormatArgs and CloudwatchSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `CloudwatchSourceDefaultDateFormatInput` via:
//
//          CloudwatchSourceDefaultDateFormatArgs{...}
type CloudwatchSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToCloudwatchSourceDefaultDateFormatOutput() CloudwatchSourceDefaultDateFormatOutput
	ToCloudwatchSourceDefaultDateFormatOutputWithContext(context.Context) CloudwatchSourceDefaultDateFormatOutput
}

type CloudwatchSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (CloudwatchSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudwatchSourceDefaultDateFormatArgs) ToCloudwatchSourceDefaultDateFormatOutput() CloudwatchSourceDefaultDateFormatOutput {
	return i.ToCloudwatchSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i CloudwatchSourceDefaultDateFormatArgs) ToCloudwatchSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceDefaultDateFormatOutput)
}

// CloudwatchSourceDefaultDateFormatArrayInput is an input type that accepts CloudwatchSourceDefaultDateFormatArray and CloudwatchSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourceDefaultDateFormatArrayInput` via:
//
//          CloudwatchSourceDefaultDateFormatArray{ CloudwatchSourceDefaultDateFormatArgs{...} }
type CloudwatchSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToCloudwatchSourceDefaultDateFormatArrayOutput() CloudwatchSourceDefaultDateFormatArrayOutput
	ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(context.Context) CloudwatchSourceDefaultDateFormatArrayOutput
}

type CloudwatchSourceDefaultDateFormatArray []CloudwatchSourceDefaultDateFormatInput

func (CloudwatchSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (i CloudwatchSourceDefaultDateFormatArray) ToCloudwatchSourceDefaultDateFormatArrayOutput() CloudwatchSourceDefaultDateFormatArrayOutput {
	return i.ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourceDefaultDateFormatArray) ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceDefaultDateFormatArrayOutput)
}

type CloudwatchSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudwatchSourceDefaultDateFormatOutput) ToCloudwatchSourceDefaultDateFormatOutput() CloudwatchSourceDefaultDateFormatOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatOutput) ToCloudwatchSourceDefaultDateFormatOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o CloudwatchSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type CloudwatchSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceDefaultDateFormat)(nil)).Elem()
}

func (o CloudwatchSourceDefaultDateFormatArrayOutput) ToCloudwatchSourceDefaultDateFormatArrayOutput() CloudwatchSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatArrayOutput) ToCloudwatchSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) CloudwatchSourceDefaultDateFormatArrayOutput {
	return o
}

func (o CloudwatchSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) CloudwatchSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourceDefaultDateFormat {
		return vs[0].([]CloudwatchSourceDefaultDateFormat)[vs[1].(int)]
	}).(CloudwatchSourceDefaultDateFormatOutput)
}

type CloudwatchSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// CloudwatchSourceFilterInput is an input type that accepts CloudwatchSourceFilterArgs and CloudwatchSourceFilterOutput values.
// You can construct a concrete instance of `CloudwatchSourceFilterInput` via:
//
//          CloudwatchSourceFilterArgs{...}
type CloudwatchSourceFilterInput interface {
	pulumi.Input

	ToCloudwatchSourceFilterOutput() CloudwatchSourceFilterOutput
	ToCloudwatchSourceFilterOutputWithContext(context.Context) CloudwatchSourceFilterOutput
}

type CloudwatchSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (CloudwatchSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceFilter)(nil)).Elem()
}

func (i CloudwatchSourceFilterArgs) ToCloudwatchSourceFilterOutput() CloudwatchSourceFilterOutput {
	return i.ToCloudwatchSourceFilterOutputWithContext(context.Background())
}

func (i CloudwatchSourceFilterArgs) ToCloudwatchSourceFilterOutputWithContext(ctx context.Context) CloudwatchSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceFilterOutput)
}

// CloudwatchSourceFilterArrayInput is an input type that accepts CloudwatchSourceFilterArray and CloudwatchSourceFilterArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourceFilterArrayInput` via:
//
//          CloudwatchSourceFilterArray{ CloudwatchSourceFilterArgs{...} }
type CloudwatchSourceFilterArrayInput interface {
	pulumi.Input

	ToCloudwatchSourceFilterArrayOutput() CloudwatchSourceFilterArrayOutput
	ToCloudwatchSourceFilterArrayOutputWithContext(context.Context) CloudwatchSourceFilterArrayOutput
}

type CloudwatchSourceFilterArray []CloudwatchSourceFilterInput

func (CloudwatchSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceFilter)(nil)).Elem()
}

func (i CloudwatchSourceFilterArray) ToCloudwatchSourceFilterArrayOutput() CloudwatchSourceFilterArrayOutput {
	return i.ToCloudwatchSourceFilterArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourceFilterArray) ToCloudwatchSourceFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourceFilterArrayOutput)
}

type CloudwatchSourceFilterOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourceFilter)(nil)).Elem()
}

func (o CloudwatchSourceFilterOutput) ToCloudwatchSourceFilterOutput() CloudwatchSourceFilterOutput {
	return o
}

func (o CloudwatchSourceFilterOutput) ToCloudwatchSourceFilterOutputWithContext(ctx context.Context) CloudwatchSourceFilterOutput {
	return o
}

func (o CloudwatchSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o CloudwatchSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o CloudwatchSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type CloudwatchSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourceFilter)(nil)).Elem()
}

func (o CloudwatchSourceFilterArrayOutput) ToCloudwatchSourceFilterArrayOutput() CloudwatchSourceFilterArrayOutput {
	return o
}

func (o CloudwatchSourceFilterArrayOutput) ToCloudwatchSourceFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourceFilterArrayOutput {
	return o
}

func (o CloudwatchSourceFilterArrayOutput) Index(i pulumi.IntInput) CloudwatchSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourceFilter {
		return vs[0].([]CloudwatchSourceFilter)[vs[1].(int)]
	}).(CloudwatchSourceFilterOutput)
}

type CloudwatchSourcePath struct {
	BucketName     *string                             `pulumi:"bucketName"`
	CustomServices []CloudwatchSourcePathCustomService `pulumi:"customServices"`
	// List of namespaces. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace.
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions             []string                                        `pulumi:"limitToRegions"`
	LimitToServices            []string                                        `pulumi:"limitToServices"`
	PathExpression             *string                                         `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns []CloudwatchSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters []CloudwatchSourcePathTagFilter `pulumi:"tagFilters"`
	// This value has to be set to `TagFilters`
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// CloudwatchSourcePathInput is an input type that accepts CloudwatchSourcePathArgs and CloudwatchSourcePathOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathInput` via:
//
//          CloudwatchSourcePathArgs{...}
type CloudwatchSourcePathInput interface {
	pulumi.Input

	ToCloudwatchSourcePathOutput() CloudwatchSourcePathOutput
	ToCloudwatchSourcePathOutputWithContext(context.Context) CloudwatchSourcePathOutput
}

type CloudwatchSourcePathArgs struct {
	BucketName     pulumi.StringPtrInput                       `pulumi:"bucketName"`
	CustomServices CloudwatchSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	// List of namespaces. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace.
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions             pulumi.StringArrayInput                                 `pulumi:"limitToRegions"`
	LimitToServices            pulumi.StringArrayInput                                 `pulumi:"limitToServices"`
	PathExpression             pulumi.StringPtrInput                                   `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters CloudwatchSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	// This value has to be set to `TagFilters`
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (CloudwatchSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePath)(nil)).Elem()
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathOutput() CloudwatchSourcePathOutput {
	return i.ToCloudwatchSourcePathOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathOutputWithContext(ctx context.Context) CloudwatchSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathOutput)
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return i.ToCloudwatchSourcePathPtrOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathArgs) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathOutput).ToCloudwatchSourcePathPtrOutputWithContext(ctx)
}

// CloudwatchSourcePathPtrInput is an input type that accepts CloudwatchSourcePathArgs, CloudwatchSourcePathPtr and CloudwatchSourcePathPtrOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathPtrInput` via:
//
//          CloudwatchSourcePathArgs{...}
//
//  or:
//
//          nil
type CloudwatchSourcePathPtrInput interface {
	pulumi.Input

	ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput
	ToCloudwatchSourcePathPtrOutputWithContext(context.Context) CloudwatchSourcePathPtrOutput
}

type cloudwatchSourcePathPtrType CloudwatchSourcePathArgs

func CloudwatchSourcePathPtr(v *CloudwatchSourcePathArgs) CloudwatchSourcePathPtrInput {
	return (*cloudwatchSourcePathPtrType)(v)
}

func (*cloudwatchSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourcePath)(nil)).Elem()
}

func (i *cloudwatchSourcePathPtrType) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return i.ToCloudwatchSourcePathPtrOutputWithContext(context.Background())
}

func (i *cloudwatchSourcePathPtrType) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathPtrOutput)
}

type CloudwatchSourcePathOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePath)(nil)).Elem()
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathOutput() CloudwatchSourcePathOutput {
	return o
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathOutputWithContext(ctx context.Context) CloudwatchSourcePathOutput {
	return o
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return o.ToCloudwatchSourcePathPtrOutputWithContext(context.Background())
}

func (o CloudwatchSourcePathOutput) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudwatchSourcePath) *CloudwatchSourcePath {
		return &v
	}).(CloudwatchSourcePathPtrOutput)
}

func (o CloudwatchSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathOutput) CustomServices() CloudwatchSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []CloudwatchSourcePathCustomService { return v.CustomServices }).(CloudwatchSourcePathCustomServiceArrayOutput)
}

// List of namespaces. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace.
func (o CloudwatchSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o CloudwatchSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathOutput) SnsTopicOrSubscriptionArns() CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []CloudwatchSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o CloudwatchSourcePathOutput) TagFilters() CloudwatchSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) []CloudwatchSourcePathTagFilter { return v.TagFilters }).(CloudwatchSourcePathTagFilterArrayOutput)
}

// This value has to be set to `TagFilters`
func (o CloudwatchSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o CloudwatchSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type CloudwatchSourcePathPtrOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudwatchSourcePath)(nil)).Elem()
}

func (o CloudwatchSourcePathPtrOutput) ToCloudwatchSourcePathPtrOutput() CloudwatchSourcePathPtrOutput {
	return o
}

func (o CloudwatchSourcePathPtrOutput) ToCloudwatchSourcePathPtrOutputWithContext(ctx context.Context) CloudwatchSourcePathPtrOutput {
	return o
}

func (o CloudwatchSourcePathPtrOutput) Elem() CloudwatchSourcePathOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) CloudwatchSourcePath {
		if v != nil {
			return *v
		}
		var ret CloudwatchSourcePath
		return ret
	}).(CloudwatchSourcePathOutput)
}

func (o CloudwatchSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathPtrOutput) CustomServices() CloudwatchSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []CloudwatchSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(CloudwatchSourcePathCustomServiceArrayOutput)
}

// List of namespaces. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace.
func (o CloudwatchSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o CloudwatchSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathPtrOutput) SnsTopicOrSubscriptionArns() CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []CloudwatchSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o CloudwatchSourcePathPtrOutput) TagFilters() CloudwatchSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) []CloudwatchSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(CloudwatchSourcePathTagFilterArrayOutput)
}

// This value has to be set to `TagFilters`
func (o CloudwatchSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudwatchSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type CloudwatchSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// CloudwatchSourcePathCustomServiceInput is an input type that accepts CloudwatchSourcePathCustomServiceArgs and CloudwatchSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathCustomServiceInput` via:
//
//          CloudwatchSourcePathCustomServiceArgs{...}
type CloudwatchSourcePathCustomServiceInput interface {
	pulumi.Input

	ToCloudwatchSourcePathCustomServiceOutput() CloudwatchSourcePathCustomServiceOutput
	ToCloudwatchSourcePathCustomServiceOutputWithContext(context.Context) CloudwatchSourcePathCustomServiceOutput
}

type CloudwatchSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (CloudwatchSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathCustomService)(nil)).Elem()
}

func (i CloudwatchSourcePathCustomServiceArgs) ToCloudwatchSourcePathCustomServiceOutput() CloudwatchSourcePathCustomServiceOutput {
	return i.ToCloudwatchSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathCustomServiceArgs) ToCloudwatchSourcePathCustomServiceOutputWithContext(ctx context.Context) CloudwatchSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathCustomServiceOutput)
}

// CloudwatchSourcePathCustomServiceArrayInput is an input type that accepts CloudwatchSourcePathCustomServiceArray and CloudwatchSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathCustomServiceArrayInput` via:
//
//          CloudwatchSourcePathCustomServiceArray{ CloudwatchSourcePathCustomServiceArgs{...} }
type CloudwatchSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToCloudwatchSourcePathCustomServiceArrayOutput() CloudwatchSourcePathCustomServiceArrayOutput
	ToCloudwatchSourcePathCustomServiceArrayOutputWithContext(context.Context) CloudwatchSourcePathCustomServiceArrayOutput
}

type CloudwatchSourcePathCustomServiceArray []CloudwatchSourcePathCustomServiceInput

func (CloudwatchSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathCustomService)(nil)).Elem()
}

func (i CloudwatchSourcePathCustomServiceArray) ToCloudwatchSourcePathCustomServiceArrayOutput() CloudwatchSourcePathCustomServiceArrayOutput {
	return i.ToCloudwatchSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathCustomServiceArray) ToCloudwatchSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathCustomServiceArrayOutput)
}

type CloudwatchSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathCustomService)(nil)).Elem()
}

func (o CloudwatchSourcePathCustomServiceOutput) ToCloudwatchSourcePathCustomServiceOutput() CloudwatchSourcePathCustomServiceOutput {
	return o
}

func (o CloudwatchSourcePathCustomServiceOutput) ToCloudwatchSourcePathCustomServiceOutputWithContext(ctx context.Context) CloudwatchSourcePathCustomServiceOutput {
	return o
}

func (o CloudwatchSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o CloudwatchSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type CloudwatchSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathCustomService)(nil)).Elem()
}

func (o CloudwatchSourcePathCustomServiceArrayOutput) ToCloudwatchSourcePathCustomServiceArrayOutput() CloudwatchSourcePathCustomServiceArrayOutput {
	return o
}

func (o CloudwatchSourcePathCustomServiceArrayOutput) ToCloudwatchSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathCustomServiceArrayOutput {
	return o
}

func (o CloudwatchSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) CloudwatchSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourcePathCustomService {
		return vs[0].([]CloudwatchSourcePathCustomService)[vs[1].(int)]
	}).(CloudwatchSourcePathCustomServiceOutput)
}

type CloudwatchSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// CloudwatchSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs and CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs{...}
type CloudwatchSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutput() CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput
	ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput
}

type CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutput() CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput)
}

// CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts CloudwatchSourcePathSnsTopicOrSubscriptionArnArray and CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          CloudwatchSourcePathSnsTopicOrSubscriptionArnArray{ CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type CloudwatchSourcePathSnsTopicOrSubscriptionArnArray []CloudwatchSourcePathSnsTopicOrSubscriptionArnInput

func (CloudwatchSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i CloudwatchSourcePathSnsTopicOrSubscriptionArnArray) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathSnsTopicOrSubscriptionArnArray) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutput() CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput() CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToCloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]CloudwatchSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput)
}

type CloudwatchSourcePathTagFilter struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace *string `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags []string `pulumi:"tags"`
	// This value has to be set to `TagFilters`
	Type *string `pulumi:"type"`
}

// CloudwatchSourcePathTagFilterInput is an input type that accepts CloudwatchSourcePathTagFilterArgs and CloudwatchSourcePathTagFilterOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathTagFilterInput` via:
//
//          CloudwatchSourcePathTagFilterArgs{...}
type CloudwatchSourcePathTagFilterInput interface {
	pulumi.Input

	ToCloudwatchSourcePathTagFilterOutput() CloudwatchSourcePathTagFilterOutput
	ToCloudwatchSourcePathTagFilterOutputWithContext(context.Context) CloudwatchSourcePathTagFilterOutput
}

type CloudwatchSourcePathTagFilterArgs struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CloudwatchSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (i CloudwatchSourcePathTagFilterArgs) ToCloudwatchSourcePathTagFilterOutput() CloudwatchSourcePathTagFilterOutput {
	return i.ToCloudwatchSourcePathTagFilterOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathTagFilterArgs) ToCloudwatchSourcePathTagFilterOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathTagFilterOutput)
}

// CloudwatchSourcePathTagFilterArrayInput is an input type that accepts CloudwatchSourcePathTagFilterArray and CloudwatchSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `CloudwatchSourcePathTagFilterArrayInput` via:
//
//          CloudwatchSourcePathTagFilterArray{ CloudwatchSourcePathTagFilterArgs{...} }
type CloudwatchSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToCloudwatchSourcePathTagFilterArrayOutput() CloudwatchSourcePathTagFilterArrayOutput
	ToCloudwatchSourcePathTagFilterArrayOutputWithContext(context.Context) CloudwatchSourcePathTagFilterArrayOutput
}

type CloudwatchSourcePathTagFilterArray []CloudwatchSourcePathTagFilterInput

func (CloudwatchSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (i CloudwatchSourcePathTagFilterArray) ToCloudwatchSourcePathTagFilterArrayOutput() CloudwatchSourcePathTagFilterArrayOutput {
	return i.ToCloudwatchSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i CloudwatchSourcePathTagFilterArray) ToCloudwatchSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudwatchSourcePathTagFilterArrayOutput)
}

type CloudwatchSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (o CloudwatchSourcePathTagFilterOutput) ToCloudwatchSourcePathTagFilterOutput() CloudwatchSourcePathTagFilterOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterOutput) ToCloudwatchSourcePathTagFilterOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterOutput {
	return o
}

// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
func (o CloudwatchSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
func (o CloudwatchSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CloudwatchSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// This value has to be set to `TagFilters`
func (o CloudwatchSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CloudwatchSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CloudwatchSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (CloudwatchSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CloudwatchSourcePathTagFilter)(nil)).Elem()
}

func (o CloudwatchSourcePathTagFilterArrayOutput) ToCloudwatchSourcePathTagFilterArrayOutput() CloudwatchSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterArrayOutput) ToCloudwatchSourcePathTagFilterArrayOutputWithContext(ctx context.Context) CloudwatchSourcePathTagFilterArrayOutput {
	return o
}

func (o CloudwatchSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) CloudwatchSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CloudwatchSourcePathTagFilter {
		return vs[0].([]CloudwatchSourcePathTagFilter)[vs[1].(int)]
	}).(CloudwatchSourcePathTagFilterOutput)
}

type ContentPermissionPermission struct {
	// Content permission name. Valid values are `View`, `GrantView`,
	// `Edit`, `GrantEdit`, `Manage`, and `GrantManage`. You can read more about permission levels
	// [here](https://help.sumologic.com/Manage/Content_Sharing/Share-Content#available-permission-levels).
	PermissionName string `pulumi:"permissionName"`
	// An identifier that belongs to the source type chosen above. For example,
	// if the `sourceType` is set to `user`, `sourceId` should be identifier of the user you want to share
	// content with (same goes for role and org source type).
	SourceId string `pulumi:"sourceId"`
	// Type of source for the permission. Valid values are `user`, `role`,
	// and `org`.
	SourceType string `pulumi:"sourceType"`
}

// ContentPermissionPermissionInput is an input type that accepts ContentPermissionPermissionArgs and ContentPermissionPermissionOutput values.
// You can construct a concrete instance of `ContentPermissionPermissionInput` via:
//
//          ContentPermissionPermissionArgs{...}
type ContentPermissionPermissionInput interface {
	pulumi.Input

	ToContentPermissionPermissionOutput() ContentPermissionPermissionOutput
	ToContentPermissionPermissionOutputWithContext(context.Context) ContentPermissionPermissionOutput
}

type ContentPermissionPermissionArgs struct {
	// Content permission name. Valid values are `View`, `GrantView`,
	// `Edit`, `GrantEdit`, `Manage`, and `GrantManage`. You can read more about permission levels
	// [here](https://help.sumologic.com/Manage/Content_Sharing/Share-Content#available-permission-levels).
	PermissionName pulumi.StringInput `pulumi:"permissionName"`
	// An identifier that belongs to the source type chosen above. For example,
	// if the `sourceType` is set to `user`, `sourceId` should be identifier of the user you want to share
	// content with (same goes for role and org source type).
	SourceId pulumi.StringInput `pulumi:"sourceId"`
	// Type of source for the permission. Valid values are `user`, `role`,
	// and `org`.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (ContentPermissionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentPermissionPermission)(nil)).Elem()
}

func (i ContentPermissionPermissionArgs) ToContentPermissionPermissionOutput() ContentPermissionPermissionOutput {
	return i.ToContentPermissionPermissionOutputWithContext(context.Background())
}

func (i ContentPermissionPermissionArgs) ToContentPermissionPermissionOutputWithContext(ctx context.Context) ContentPermissionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentPermissionPermissionOutput)
}

// ContentPermissionPermissionArrayInput is an input type that accepts ContentPermissionPermissionArray and ContentPermissionPermissionArrayOutput values.
// You can construct a concrete instance of `ContentPermissionPermissionArrayInput` via:
//
//          ContentPermissionPermissionArray{ ContentPermissionPermissionArgs{...} }
type ContentPermissionPermissionArrayInput interface {
	pulumi.Input

	ToContentPermissionPermissionArrayOutput() ContentPermissionPermissionArrayOutput
	ToContentPermissionPermissionArrayOutputWithContext(context.Context) ContentPermissionPermissionArrayOutput
}

type ContentPermissionPermissionArray []ContentPermissionPermissionInput

func (ContentPermissionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentPermissionPermission)(nil)).Elem()
}

func (i ContentPermissionPermissionArray) ToContentPermissionPermissionArrayOutput() ContentPermissionPermissionArrayOutput {
	return i.ToContentPermissionPermissionArrayOutputWithContext(context.Background())
}

func (i ContentPermissionPermissionArray) ToContentPermissionPermissionArrayOutputWithContext(ctx context.Context) ContentPermissionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContentPermissionPermissionArrayOutput)
}

type ContentPermissionPermissionOutput struct{ *pulumi.OutputState }

func (ContentPermissionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContentPermissionPermission)(nil)).Elem()
}

func (o ContentPermissionPermissionOutput) ToContentPermissionPermissionOutput() ContentPermissionPermissionOutput {
	return o
}

func (o ContentPermissionPermissionOutput) ToContentPermissionPermissionOutputWithContext(ctx context.Context) ContentPermissionPermissionOutput {
	return o
}

// Content permission name. Valid values are `View`, `GrantView`,
// `Edit`, `GrantEdit`, `Manage`, and `GrantManage`. You can read more about permission levels
// [here](https://help.sumologic.com/Manage/Content_Sharing/Share-Content#available-permission-levels).
func (o ContentPermissionPermissionOutput) PermissionName() pulumi.StringOutput {
	return o.ApplyT(func(v ContentPermissionPermission) string { return v.PermissionName }).(pulumi.StringOutput)
}

// An identifier that belongs to the source type chosen above. For example,
// if the `sourceType` is set to `user`, `sourceId` should be identifier of the user you want to share
// content with (same goes for role and org source type).
func (o ContentPermissionPermissionOutput) SourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ContentPermissionPermission) string { return v.SourceId }).(pulumi.StringOutput)
}

// Type of source for the permission. Valid values are `user`, `role`,
// and `org`.
func (o ContentPermissionPermissionOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ContentPermissionPermission) string { return v.SourceType }).(pulumi.StringOutput)
}

type ContentPermissionPermissionArrayOutput struct{ *pulumi.OutputState }

func (ContentPermissionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContentPermissionPermission)(nil)).Elem()
}

func (o ContentPermissionPermissionArrayOutput) ToContentPermissionPermissionArrayOutput() ContentPermissionPermissionArrayOutput {
	return o
}

func (o ContentPermissionPermissionArrayOutput) ToContentPermissionPermissionArrayOutputWithContext(ctx context.Context) ContentPermissionPermissionArrayOutput {
	return o
}

func (o ContentPermissionPermissionArrayOutput) Index(i pulumi.IntInput) ContentPermissionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContentPermissionPermission {
		return vs[0].([]ContentPermissionPermission)[vs[1].(int)]
	}).(ContentPermissionPermissionOutput)
}

type CseAggregationRuleAggregationFunction struct {
	// One or more expressions to pass as arguments to the function
	Arguments []string `pulumi:"arguments"`
	// The function to aggregate with
	Function string `pulumi:"function"`
	// The name of the Rule
	Name string `pulumi:"name"`
}

// CseAggregationRuleAggregationFunctionInput is an input type that accepts CseAggregationRuleAggregationFunctionArgs and CseAggregationRuleAggregationFunctionOutput values.
// You can construct a concrete instance of `CseAggregationRuleAggregationFunctionInput` via:
//
//          CseAggregationRuleAggregationFunctionArgs{...}
type CseAggregationRuleAggregationFunctionInput interface {
	pulumi.Input

	ToCseAggregationRuleAggregationFunctionOutput() CseAggregationRuleAggregationFunctionOutput
	ToCseAggregationRuleAggregationFunctionOutputWithContext(context.Context) CseAggregationRuleAggregationFunctionOutput
}

type CseAggregationRuleAggregationFunctionArgs struct {
	// One or more expressions to pass as arguments to the function
	Arguments pulumi.StringArrayInput `pulumi:"arguments"`
	// The function to aggregate with
	Function pulumi.StringInput `pulumi:"function"`
	// The name of the Rule
	Name pulumi.StringInput `pulumi:"name"`
}

func (CseAggregationRuleAggregationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleAggregationFunction)(nil)).Elem()
}

func (i CseAggregationRuleAggregationFunctionArgs) ToCseAggregationRuleAggregationFunctionOutput() CseAggregationRuleAggregationFunctionOutput {
	return i.ToCseAggregationRuleAggregationFunctionOutputWithContext(context.Background())
}

func (i CseAggregationRuleAggregationFunctionArgs) ToCseAggregationRuleAggregationFunctionOutputWithContext(ctx context.Context) CseAggregationRuleAggregationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleAggregationFunctionOutput)
}

// CseAggregationRuleAggregationFunctionArrayInput is an input type that accepts CseAggregationRuleAggregationFunctionArray and CseAggregationRuleAggregationFunctionArrayOutput values.
// You can construct a concrete instance of `CseAggregationRuleAggregationFunctionArrayInput` via:
//
//          CseAggregationRuleAggregationFunctionArray{ CseAggregationRuleAggregationFunctionArgs{...} }
type CseAggregationRuleAggregationFunctionArrayInput interface {
	pulumi.Input

	ToCseAggregationRuleAggregationFunctionArrayOutput() CseAggregationRuleAggregationFunctionArrayOutput
	ToCseAggregationRuleAggregationFunctionArrayOutputWithContext(context.Context) CseAggregationRuleAggregationFunctionArrayOutput
}

type CseAggregationRuleAggregationFunctionArray []CseAggregationRuleAggregationFunctionInput

func (CseAggregationRuleAggregationFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseAggregationRuleAggregationFunction)(nil)).Elem()
}

func (i CseAggregationRuleAggregationFunctionArray) ToCseAggregationRuleAggregationFunctionArrayOutput() CseAggregationRuleAggregationFunctionArrayOutput {
	return i.ToCseAggregationRuleAggregationFunctionArrayOutputWithContext(context.Background())
}

func (i CseAggregationRuleAggregationFunctionArray) ToCseAggregationRuleAggregationFunctionArrayOutputWithContext(ctx context.Context) CseAggregationRuleAggregationFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleAggregationFunctionArrayOutput)
}

type CseAggregationRuleAggregationFunctionOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleAggregationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleAggregationFunction)(nil)).Elem()
}

func (o CseAggregationRuleAggregationFunctionOutput) ToCseAggregationRuleAggregationFunctionOutput() CseAggregationRuleAggregationFunctionOutput {
	return o
}

func (o CseAggregationRuleAggregationFunctionOutput) ToCseAggregationRuleAggregationFunctionOutputWithContext(ctx context.Context) CseAggregationRuleAggregationFunctionOutput {
	return o
}

// One or more expressions to pass as arguments to the function
func (o CseAggregationRuleAggregationFunctionOutput) Arguments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CseAggregationRuleAggregationFunction) []string { return v.Arguments }).(pulumi.StringArrayOutput)
}

// The function to aggregate with
func (o CseAggregationRuleAggregationFunctionOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleAggregationFunction) string { return v.Function }).(pulumi.StringOutput)
}

// The name of the Rule
func (o CseAggregationRuleAggregationFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleAggregationFunction) string { return v.Name }).(pulumi.StringOutput)
}

type CseAggregationRuleAggregationFunctionArrayOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleAggregationFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseAggregationRuleAggregationFunction)(nil)).Elem()
}

func (o CseAggregationRuleAggregationFunctionArrayOutput) ToCseAggregationRuleAggregationFunctionArrayOutput() CseAggregationRuleAggregationFunctionArrayOutput {
	return o
}

func (o CseAggregationRuleAggregationFunctionArrayOutput) ToCseAggregationRuleAggregationFunctionArrayOutputWithContext(ctx context.Context) CseAggregationRuleAggregationFunctionArrayOutput {
	return o
}

func (o CseAggregationRuleAggregationFunctionArrayOutput) Index(i pulumi.IntInput) CseAggregationRuleAggregationFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseAggregationRuleAggregationFunction {
		return vs[0].([]CseAggregationRuleAggregationFunction)[vs[1].(int)]
	}).(CseAggregationRuleAggregationFunctionOutput)
}

type CseAggregationRuleEntitySelector struct {
	EntityType string `pulumi:"entityType"`
	// The expression or field name to generate the Signal on.
	Expression string `pulumi:"expression"`
}

// CseAggregationRuleEntitySelectorInput is an input type that accepts CseAggregationRuleEntitySelectorArgs and CseAggregationRuleEntitySelectorOutput values.
// You can construct a concrete instance of `CseAggregationRuleEntitySelectorInput` via:
//
//          CseAggregationRuleEntitySelectorArgs{...}
type CseAggregationRuleEntitySelectorInput interface {
	pulumi.Input

	ToCseAggregationRuleEntitySelectorOutput() CseAggregationRuleEntitySelectorOutput
	ToCseAggregationRuleEntitySelectorOutputWithContext(context.Context) CseAggregationRuleEntitySelectorOutput
}

type CseAggregationRuleEntitySelectorArgs struct {
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The expression or field name to generate the Signal on.
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (CseAggregationRuleEntitySelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleEntitySelector)(nil)).Elem()
}

func (i CseAggregationRuleEntitySelectorArgs) ToCseAggregationRuleEntitySelectorOutput() CseAggregationRuleEntitySelectorOutput {
	return i.ToCseAggregationRuleEntitySelectorOutputWithContext(context.Background())
}

func (i CseAggregationRuleEntitySelectorArgs) ToCseAggregationRuleEntitySelectorOutputWithContext(ctx context.Context) CseAggregationRuleEntitySelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleEntitySelectorOutput)
}

// CseAggregationRuleEntitySelectorArrayInput is an input type that accepts CseAggregationRuleEntitySelectorArray and CseAggregationRuleEntitySelectorArrayOutput values.
// You can construct a concrete instance of `CseAggregationRuleEntitySelectorArrayInput` via:
//
//          CseAggregationRuleEntitySelectorArray{ CseAggregationRuleEntitySelectorArgs{...} }
type CseAggregationRuleEntitySelectorArrayInput interface {
	pulumi.Input

	ToCseAggregationRuleEntitySelectorArrayOutput() CseAggregationRuleEntitySelectorArrayOutput
	ToCseAggregationRuleEntitySelectorArrayOutputWithContext(context.Context) CseAggregationRuleEntitySelectorArrayOutput
}

type CseAggregationRuleEntitySelectorArray []CseAggregationRuleEntitySelectorInput

func (CseAggregationRuleEntitySelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseAggregationRuleEntitySelector)(nil)).Elem()
}

func (i CseAggregationRuleEntitySelectorArray) ToCseAggregationRuleEntitySelectorArrayOutput() CseAggregationRuleEntitySelectorArrayOutput {
	return i.ToCseAggregationRuleEntitySelectorArrayOutputWithContext(context.Background())
}

func (i CseAggregationRuleEntitySelectorArray) ToCseAggregationRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseAggregationRuleEntitySelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleEntitySelectorArrayOutput)
}

type CseAggregationRuleEntitySelectorOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleEntitySelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleEntitySelector)(nil)).Elem()
}

func (o CseAggregationRuleEntitySelectorOutput) ToCseAggregationRuleEntitySelectorOutput() CseAggregationRuleEntitySelectorOutput {
	return o
}

func (o CseAggregationRuleEntitySelectorOutput) ToCseAggregationRuleEntitySelectorOutputWithContext(ctx context.Context) CseAggregationRuleEntitySelectorOutput {
	return o
}

func (o CseAggregationRuleEntitySelectorOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleEntitySelector) string { return v.EntityType }).(pulumi.StringOutput)
}

// The expression or field name to generate the Signal on.
func (o CseAggregationRuleEntitySelectorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleEntitySelector) string { return v.Expression }).(pulumi.StringOutput)
}

type CseAggregationRuleEntitySelectorArrayOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleEntitySelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseAggregationRuleEntitySelector)(nil)).Elem()
}

func (o CseAggregationRuleEntitySelectorArrayOutput) ToCseAggregationRuleEntitySelectorArrayOutput() CseAggregationRuleEntitySelectorArrayOutput {
	return o
}

func (o CseAggregationRuleEntitySelectorArrayOutput) ToCseAggregationRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseAggregationRuleEntitySelectorArrayOutput {
	return o
}

func (o CseAggregationRuleEntitySelectorArrayOutput) Index(i pulumi.IntInput) CseAggregationRuleEntitySelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseAggregationRuleEntitySelector {
		return vs[0].([]CseAggregationRuleEntitySelector)[vs[1].(int)]
	}).(CseAggregationRuleEntitySelectorOutput)
}

type CseAggregationRuleSeverityMapping struct {
	// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
	Default *int `pulumi:"default"`
	// The field to use in the "fieldValue"/"fieldValueMapping" cases.
	Field *string `pulumi:"field"`
	// The map of record values to severities to use in the "fieldValueMapping" case
	Mappings []CseAggregationRuleSeverityMappingMapping `pulumi:"mappings"`
	// Must be set to "eq" currently
	Type string `pulumi:"type"`
}

// CseAggregationRuleSeverityMappingInput is an input type that accepts CseAggregationRuleSeverityMappingArgs and CseAggregationRuleSeverityMappingOutput values.
// You can construct a concrete instance of `CseAggregationRuleSeverityMappingInput` via:
//
//          CseAggregationRuleSeverityMappingArgs{...}
type CseAggregationRuleSeverityMappingInput interface {
	pulumi.Input

	ToCseAggregationRuleSeverityMappingOutput() CseAggregationRuleSeverityMappingOutput
	ToCseAggregationRuleSeverityMappingOutputWithContext(context.Context) CseAggregationRuleSeverityMappingOutput
}

type CseAggregationRuleSeverityMappingArgs struct {
	// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// The field to use in the "fieldValue"/"fieldValueMapping" cases.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The map of record values to severities to use in the "fieldValueMapping" case
	Mappings CseAggregationRuleSeverityMappingMappingArrayInput `pulumi:"mappings"`
	// Must be set to "eq" currently
	Type pulumi.StringInput `pulumi:"type"`
}

func (CseAggregationRuleSeverityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleSeverityMapping)(nil)).Elem()
}

func (i CseAggregationRuleSeverityMappingArgs) ToCseAggregationRuleSeverityMappingOutput() CseAggregationRuleSeverityMappingOutput {
	return i.ToCseAggregationRuleSeverityMappingOutputWithContext(context.Background())
}

func (i CseAggregationRuleSeverityMappingArgs) ToCseAggregationRuleSeverityMappingOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleSeverityMappingOutput)
}

func (i CseAggregationRuleSeverityMappingArgs) ToCseAggregationRuleSeverityMappingPtrOutput() CseAggregationRuleSeverityMappingPtrOutput {
	return i.ToCseAggregationRuleSeverityMappingPtrOutputWithContext(context.Background())
}

func (i CseAggregationRuleSeverityMappingArgs) ToCseAggregationRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleSeverityMappingOutput).ToCseAggregationRuleSeverityMappingPtrOutputWithContext(ctx)
}

// CseAggregationRuleSeverityMappingPtrInput is an input type that accepts CseAggregationRuleSeverityMappingArgs, CseAggregationRuleSeverityMappingPtr and CseAggregationRuleSeverityMappingPtrOutput values.
// You can construct a concrete instance of `CseAggregationRuleSeverityMappingPtrInput` via:
//
//          CseAggregationRuleSeverityMappingArgs{...}
//
//  or:
//
//          nil
type CseAggregationRuleSeverityMappingPtrInput interface {
	pulumi.Input

	ToCseAggregationRuleSeverityMappingPtrOutput() CseAggregationRuleSeverityMappingPtrOutput
	ToCseAggregationRuleSeverityMappingPtrOutputWithContext(context.Context) CseAggregationRuleSeverityMappingPtrOutput
}

type cseAggregationRuleSeverityMappingPtrType CseAggregationRuleSeverityMappingArgs

func CseAggregationRuleSeverityMappingPtr(v *CseAggregationRuleSeverityMappingArgs) CseAggregationRuleSeverityMappingPtrInput {
	return (*cseAggregationRuleSeverityMappingPtrType)(v)
}

func (*cseAggregationRuleSeverityMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CseAggregationRuleSeverityMapping)(nil)).Elem()
}

func (i *cseAggregationRuleSeverityMappingPtrType) ToCseAggregationRuleSeverityMappingPtrOutput() CseAggregationRuleSeverityMappingPtrOutput {
	return i.ToCseAggregationRuleSeverityMappingPtrOutputWithContext(context.Background())
}

func (i *cseAggregationRuleSeverityMappingPtrType) ToCseAggregationRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleSeverityMappingPtrOutput)
}

type CseAggregationRuleSeverityMappingOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleSeverityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleSeverityMapping)(nil)).Elem()
}

func (o CseAggregationRuleSeverityMappingOutput) ToCseAggregationRuleSeverityMappingOutput() CseAggregationRuleSeverityMappingOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingOutput) ToCseAggregationRuleSeverityMappingOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingOutput) ToCseAggregationRuleSeverityMappingPtrOutput() CseAggregationRuleSeverityMappingPtrOutput {
	return o.ToCseAggregationRuleSeverityMappingPtrOutputWithContext(context.Background())
}

func (o CseAggregationRuleSeverityMappingOutput) ToCseAggregationRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CseAggregationRuleSeverityMapping) *CseAggregationRuleSeverityMapping {
		return &v
	}).(CseAggregationRuleSeverityMappingPtrOutput)
}

// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
func (o CseAggregationRuleSeverityMappingOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMapping) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// The field to use in the "fieldValue"/"fieldValueMapping" cases.
func (o CseAggregationRuleSeverityMappingOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMapping) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The map of record values to severities to use in the "fieldValueMapping" case
func (o CseAggregationRuleSeverityMappingOutput) Mappings() CseAggregationRuleSeverityMappingMappingArrayOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMapping) []CseAggregationRuleSeverityMappingMapping {
		return v.Mappings
	}).(CseAggregationRuleSeverityMappingMappingArrayOutput)
}

// Must be set to "eq" currently
func (o CseAggregationRuleSeverityMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMapping) string { return v.Type }).(pulumi.StringOutput)
}

type CseAggregationRuleSeverityMappingPtrOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleSeverityMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseAggregationRuleSeverityMapping)(nil)).Elem()
}

func (o CseAggregationRuleSeverityMappingPtrOutput) ToCseAggregationRuleSeverityMappingPtrOutput() CseAggregationRuleSeverityMappingPtrOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingPtrOutput) ToCseAggregationRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingPtrOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingPtrOutput) Elem() CseAggregationRuleSeverityMappingOutput {
	return o.ApplyT(func(v *CseAggregationRuleSeverityMapping) CseAggregationRuleSeverityMapping {
		if v != nil {
			return *v
		}
		var ret CseAggregationRuleSeverityMapping
		return ret
	}).(CseAggregationRuleSeverityMappingOutput)
}

// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
func (o CseAggregationRuleSeverityMappingPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CseAggregationRuleSeverityMapping) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// The field to use in the "fieldValue"/"fieldValueMapping" cases.
func (o CseAggregationRuleSeverityMappingPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseAggregationRuleSeverityMapping) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

// The map of record values to severities to use in the "fieldValueMapping" case
func (o CseAggregationRuleSeverityMappingPtrOutput) Mappings() CseAggregationRuleSeverityMappingMappingArrayOutput {
	return o.ApplyT(func(v *CseAggregationRuleSeverityMapping) []CseAggregationRuleSeverityMappingMapping {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(CseAggregationRuleSeverityMappingMappingArrayOutput)
}

// Must be set to "eq" currently
func (o CseAggregationRuleSeverityMappingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseAggregationRuleSeverityMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CseAggregationRuleSeverityMappingMapping struct {
	// The record value to map from
	From string `pulumi:"from"`
	// The severity value to map to
	To int `pulumi:"to"`
	// Must be set to "eq" currently
	Type string `pulumi:"type"`
}

// CseAggregationRuleSeverityMappingMappingInput is an input type that accepts CseAggregationRuleSeverityMappingMappingArgs and CseAggregationRuleSeverityMappingMappingOutput values.
// You can construct a concrete instance of `CseAggregationRuleSeverityMappingMappingInput` via:
//
//          CseAggregationRuleSeverityMappingMappingArgs{...}
type CseAggregationRuleSeverityMappingMappingInput interface {
	pulumi.Input

	ToCseAggregationRuleSeverityMappingMappingOutput() CseAggregationRuleSeverityMappingMappingOutput
	ToCseAggregationRuleSeverityMappingMappingOutputWithContext(context.Context) CseAggregationRuleSeverityMappingMappingOutput
}

type CseAggregationRuleSeverityMappingMappingArgs struct {
	// The record value to map from
	From pulumi.StringInput `pulumi:"from"`
	// The severity value to map to
	To pulumi.IntInput `pulumi:"to"`
	// Must be set to "eq" currently
	Type pulumi.StringInput `pulumi:"type"`
}

func (CseAggregationRuleSeverityMappingMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleSeverityMappingMapping)(nil)).Elem()
}

func (i CseAggregationRuleSeverityMappingMappingArgs) ToCseAggregationRuleSeverityMappingMappingOutput() CseAggregationRuleSeverityMappingMappingOutput {
	return i.ToCseAggregationRuleSeverityMappingMappingOutputWithContext(context.Background())
}

func (i CseAggregationRuleSeverityMappingMappingArgs) ToCseAggregationRuleSeverityMappingMappingOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleSeverityMappingMappingOutput)
}

// CseAggregationRuleSeverityMappingMappingArrayInput is an input type that accepts CseAggregationRuleSeverityMappingMappingArray and CseAggregationRuleSeverityMappingMappingArrayOutput values.
// You can construct a concrete instance of `CseAggregationRuleSeverityMappingMappingArrayInput` via:
//
//          CseAggregationRuleSeverityMappingMappingArray{ CseAggregationRuleSeverityMappingMappingArgs{...} }
type CseAggregationRuleSeverityMappingMappingArrayInput interface {
	pulumi.Input

	ToCseAggregationRuleSeverityMappingMappingArrayOutput() CseAggregationRuleSeverityMappingMappingArrayOutput
	ToCseAggregationRuleSeverityMappingMappingArrayOutputWithContext(context.Context) CseAggregationRuleSeverityMappingMappingArrayOutput
}

type CseAggregationRuleSeverityMappingMappingArray []CseAggregationRuleSeverityMappingMappingInput

func (CseAggregationRuleSeverityMappingMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseAggregationRuleSeverityMappingMapping)(nil)).Elem()
}

func (i CseAggregationRuleSeverityMappingMappingArray) ToCseAggregationRuleSeverityMappingMappingArrayOutput() CseAggregationRuleSeverityMappingMappingArrayOutput {
	return i.ToCseAggregationRuleSeverityMappingMappingArrayOutputWithContext(context.Background())
}

func (i CseAggregationRuleSeverityMappingMappingArray) ToCseAggregationRuleSeverityMappingMappingArrayOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseAggregationRuleSeverityMappingMappingArrayOutput)
}

type CseAggregationRuleSeverityMappingMappingOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleSeverityMappingMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseAggregationRuleSeverityMappingMapping)(nil)).Elem()
}

func (o CseAggregationRuleSeverityMappingMappingOutput) ToCseAggregationRuleSeverityMappingMappingOutput() CseAggregationRuleSeverityMappingMappingOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingMappingOutput) ToCseAggregationRuleSeverityMappingMappingOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingMappingOutput {
	return o
}

// The record value to map from
func (o CseAggregationRuleSeverityMappingMappingOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMappingMapping) string { return v.From }).(pulumi.StringOutput)
}

// The severity value to map to
func (o CseAggregationRuleSeverityMappingMappingOutput) To() pulumi.IntOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMappingMapping) int { return v.To }).(pulumi.IntOutput)
}

// Must be set to "eq" currently
func (o CseAggregationRuleSeverityMappingMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CseAggregationRuleSeverityMappingMapping) string { return v.Type }).(pulumi.StringOutput)
}

type CseAggregationRuleSeverityMappingMappingArrayOutput struct{ *pulumi.OutputState }

func (CseAggregationRuleSeverityMappingMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseAggregationRuleSeverityMappingMapping)(nil)).Elem()
}

func (o CseAggregationRuleSeverityMappingMappingArrayOutput) ToCseAggregationRuleSeverityMappingMappingArrayOutput() CseAggregationRuleSeverityMappingMappingArrayOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingMappingArrayOutput) ToCseAggregationRuleSeverityMappingMappingArrayOutputWithContext(ctx context.Context) CseAggregationRuleSeverityMappingMappingArrayOutput {
	return o
}

func (o CseAggregationRuleSeverityMappingMappingArrayOutput) Index(i pulumi.IntInput) CseAggregationRuleSeverityMappingMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseAggregationRuleSeverityMappingMapping {
		return vs[0].([]CseAggregationRuleSeverityMappingMapping)[vs[1].(int)]
	}).(CseAggregationRuleSeverityMappingMappingOutput)
}

type CseChainRuleEntitySelector struct {
	EntityType string `pulumi:"entityType"`
	// The expression for which records to match on
	Expression string `pulumi:"expression"`
}

// CseChainRuleEntitySelectorInput is an input type that accepts CseChainRuleEntitySelectorArgs and CseChainRuleEntitySelectorOutput values.
// You can construct a concrete instance of `CseChainRuleEntitySelectorInput` via:
//
//          CseChainRuleEntitySelectorArgs{...}
type CseChainRuleEntitySelectorInput interface {
	pulumi.Input

	ToCseChainRuleEntitySelectorOutput() CseChainRuleEntitySelectorOutput
	ToCseChainRuleEntitySelectorOutputWithContext(context.Context) CseChainRuleEntitySelectorOutput
}

type CseChainRuleEntitySelectorArgs struct {
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The expression for which records to match on
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (CseChainRuleEntitySelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseChainRuleEntitySelector)(nil)).Elem()
}

func (i CseChainRuleEntitySelectorArgs) ToCseChainRuleEntitySelectorOutput() CseChainRuleEntitySelectorOutput {
	return i.ToCseChainRuleEntitySelectorOutputWithContext(context.Background())
}

func (i CseChainRuleEntitySelectorArgs) ToCseChainRuleEntitySelectorOutputWithContext(ctx context.Context) CseChainRuleEntitySelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseChainRuleEntitySelectorOutput)
}

// CseChainRuleEntitySelectorArrayInput is an input type that accepts CseChainRuleEntitySelectorArray and CseChainRuleEntitySelectorArrayOutput values.
// You can construct a concrete instance of `CseChainRuleEntitySelectorArrayInput` via:
//
//          CseChainRuleEntitySelectorArray{ CseChainRuleEntitySelectorArgs{...} }
type CseChainRuleEntitySelectorArrayInput interface {
	pulumi.Input

	ToCseChainRuleEntitySelectorArrayOutput() CseChainRuleEntitySelectorArrayOutput
	ToCseChainRuleEntitySelectorArrayOutputWithContext(context.Context) CseChainRuleEntitySelectorArrayOutput
}

type CseChainRuleEntitySelectorArray []CseChainRuleEntitySelectorInput

func (CseChainRuleEntitySelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseChainRuleEntitySelector)(nil)).Elem()
}

func (i CseChainRuleEntitySelectorArray) ToCseChainRuleEntitySelectorArrayOutput() CseChainRuleEntitySelectorArrayOutput {
	return i.ToCseChainRuleEntitySelectorArrayOutputWithContext(context.Background())
}

func (i CseChainRuleEntitySelectorArray) ToCseChainRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseChainRuleEntitySelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseChainRuleEntitySelectorArrayOutput)
}

type CseChainRuleEntitySelectorOutput struct{ *pulumi.OutputState }

func (CseChainRuleEntitySelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseChainRuleEntitySelector)(nil)).Elem()
}

func (o CseChainRuleEntitySelectorOutput) ToCseChainRuleEntitySelectorOutput() CseChainRuleEntitySelectorOutput {
	return o
}

func (o CseChainRuleEntitySelectorOutput) ToCseChainRuleEntitySelectorOutputWithContext(ctx context.Context) CseChainRuleEntitySelectorOutput {
	return o
}

func (o CseChainRuleEntitySelectorOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v CseChainRuleEntitySelector) string { return v.EntityType }).(pulumi.StringOutput)
}

// The expression for which records to match on
func (o CseChainRuleEntitySelectorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CseChainRuleEntitySelector) string { return v.Expression }).(pulumi.StringOutput)
}

type CseChainRuleEntitySelectorArrayOutput struct{ *pulumi.OutputState }

func (CseChainRuleEntitySelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseChainRuleEntitySelector)(nil)).Elem()
}

func (o CseChainRuleEntitySelectorArrayOutput) ToCseChainRuleEntitySelectorArrayOutput() CseChainRuleEntitySelectorArrayOutput {
	return o
}

func (o CseChainRuleEntitySelectorArrayOutput) ToCseChainRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseChainRuleEntitySelectorArrayOutput {
	return o
}

func (o CseChainRuleEntitySelectorArrayOutput) Index(i pulumi.IntInput) CseChainRuleEntitySelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseChainRuleEntitySelector {
		return vs[0].([]CseChainRuleEntitySelector)[vs[1].(int)]
	}).(CseChainRuleEntitySelectorOutput)
}

type CseChainRuleExpressionsAndLimit struct {
	// The expression for which records to match on
	Expression string `pulumi:"expression"`
	// How many times this expression must match for the Signal to fire
	Limit int `pulumi:"limit"`
}

// CseChainRuleExpressionsAndLimitInput is an input type that accepts CseChainRuleExpressionsAndLimitArgs and CseChainRuleExpressionsAndLimitOutput values.
// You can construct a concrete instance of `CseChainRuleExpressionsAndLimitInput` via:
//
//          CseChainRuleExpressionsAndLimitArgs{...}
type CseChainRuleExpressionsAndLimitInput interface {
	pulumi.Input

	ToCseChainRuleExpressionsAndLimitOutput() CseChainRuleExpressionsAndLimitOutput
	ToCseChainRuleExpressionsAndLimitOutputWithContext(context.Context) CseChainRuleExpressionsAndLimitOutput
}

type CseChainRuleExpressionsAndLimitArgs struct {
	// The expression for which records to match on
	Expression pulumi.StringInput `pulumi:"expression"`
	// How many times this expression must match for the Signal to fire
	Limit pulumi.IntInput `pulumi:"limit"`
}

func (CseChainRuleExpressionsAndLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseChainRuleExpressionsAndLimit)(nil)).Elem()
}

func (i CseChainRuleExpressionsAndLimitArgs) ToCseChainRuleExpressionsAndLimitOutput() CseChainRuleExpressionsAndLimitOutput {
	return i.ToCseChainRuleExpressionsAndLimitOutputWithContext(context.Background())
}

func (i CseChainRuleExpressionsAndLimitArgs) ToCseChainRuleExpressionsAndLimitOutputWithContext(ctx context.Context) CseChainRuleExpressionsAndLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseChainRuleExpressionsAndLimitOutput)
}

// CseChainRuleExpressionsAndLimitArrayInput is an input type that accepts CseChainRuleExpressionsAndLimitArray and CseChainRuleExpressionsAndLimitArrayOutput values.
// You can construct a concrete instance of `CseChainRuleExpressionsAndLimitArrayInput` via:
//
//          CseChainRuleExpressionsAndLimitArray{ CseChainRuleExpressionsAndLimitArgs{...} }
type CseChainRuleExpressionsAndLimitArrayInput interface {
	pulumi.Input

	ToCseChainRuleExpressionsAndLimitArrayOutput() CseChainRuleExpressionsAndLimitArrayOutput
	ToCseChainRuleExpressionsAndLimitArrayOutputWithContext(context.Context) CseChainRuleExpressionsAndLimitArrayOutput
}

type CseChainRuleExpressionsAndLimitArray []CseChainRuleExpressionsAndLimitInput

func (CseChainRuleExpressionsAndLimitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseChainRuleExpressionsAndLimit)(nil)).Elem()
}

func (i CseChainRuleExpressionsAndLimitArray) ToCseChainRuleExpressionsAndLimitArrayOutput() CseChainRuleExpressionsAndLimitArrayOutput {
	return i.ToCseChainRuleExpressionsAndLimitArrayOutputWithContext(context.Background())
}

func (i CseChainRuleExpressionsAndLimitArray) ToCseChainRuleExpressionsAndLimitArrayOutputWithContext(ctx context.Context) CseChainRuleExpressionsAndLimitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseChainRuleExpressionsAndLimitArrayOutput)
}

type CseChainRuleExpressionsAndLimitOutput struct{ *pulumi.OutputState }

func (CseChainRuleExpressionsAndLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseChainRuleExpressionsAndLimit)(nil)).Elem()
}

func (o CseChainRuleExpressionsAndLimitOutput) ToCseChainRuleExpressionsAndLimitOutput() CseChainRuleExpressionsAndLimitOutput {
	return o
}

func (o CseChainRuleExpressionsAndLimitOutput) ToCseChainRuleExpressionsAndLimitOutputWithContext(ctx context.Context) CseChainRuleExpressionsAndLimitOutput {
	return o
}

// The expression for which records to match on
func (o CseChainRuleExpressionsAndLimitOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CseChainRuleExpressionsAndLimit) string { return v.Expression }).(pulumi.StringOutput)
}

// How many times this expression must match for the Signal to fire
func (o CseChainRuleExpressionsAndLimitOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v CseChainRuleExpressionsAndLimit) int { return v.Limit }).(pulumi.IntOutput)
}

type CseChainRuleExpressionsAndLimitArrayOutput struct{ *pulumi.OutputState }

func (CseChainRuleExpressionsAndLimitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseChainRuleExpressionsAndLimit)(nil)).Elem()
}

func (o CseChainRuleExpressionsAndLimitArrayOutput) ToCseChainRuleExpressionsAndLimitArrayOutput() CseChainRuleExpressionsAndLimitArrayOutput {
	return o
}

func (o CseChainRuleExpressionsAndLimitArrayOutput) ToCseChainRuleExpressionsAndLimitArrayOutputWithContext(ctx context.Context) CseChainRuleExpressionsAndLimitArrayOutput {
	return o
}

func (o CseChainRuleExpressionsAndLimitArrayOutput) Index(i pulumi.IntInput) CseChainRuleExpressionsAndLimitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseChainRuleExpressionsAndLimit {
		return vs[0].([]CseChainRuleExpressionsAndLimit)[vs[1].(int)]
	}).(CseChainRuleExpressionsAndLimitOutput)
}

type CseLogMappingField struct {
	// List of alternate values.
	AlternateValues []string `pulumi:"alternateValues"`
	// Case insensitive flag.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// Default value of the field.
	DefaultValue *string `pulumi:"defaultValue"`
	// List of field join values.
	FieldJoins []string `pulumi:"fieldJoins"`
	// Format of the field. (JSON, Windows, Syslog, CEF, LEEF )
	Format *string `pulumi:"format"`
	// List of format parameters.
	FormatParameters []string `pulumi:"formatParameters"`
	// Join delimiter.
	JoinDelimiter *string `pulumi:"joinDelimiter"`
	// List of lookup key value pair for field. See lookupSchema for details.
	Lookups []CseLogMappingFieldLookup `pulumi:"lookups"`
	// Name of the field.
	Name string `pulumi:"name"`
	// List of skipped values.
	SkippedValues []string `pulumi:"skippedValues"`
	// Split delimiter to be used. (some example: ",", "-", "|")
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// The index value to select (starting at zero)
	SplitIndex *int `pulumi:"splitIndex"`
	// Time zone.
	TimeZone *string `pulumi:"timeZone"`
	// Lookup value.
	Value *string `pulumi:"value"`
	// The value type.
	ValueType *string `pulumi:"valueType"`
}

// CseLogMappingFieldInput is an input type that accepts CseLogMappingFieldArgs and CseLogMappingFieldOutput values.
// You can construct a concrete instance of `CseLogMappingFieldInput` via:
//
//          CseLogMappingFieldArgs{...}
type CseLogMappingFieldInput interface {
	pulumi.Input

	ToCseLogMappingFieldOutput() CseLogMappingFieldOutput
	ToCseLogMappingFieldOutputWithContext(context.Context) CseLogMappingFieldOutput
}

type CseLogMappingFieldArgs struct {
	// List of alternate values.
	AlternateValues pulumi.StringArrayInput `pulumi:"alternateValues"`
	// Case insensitive flag.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// Default value of the field.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// List of field join values.
	FieldJoins pulumi.StringArrayInput `pulumi:"fieldJoins"`
	// Format of the field. (JSON, Windows, Syslog, CEF, LEEF )
	Format pulumi.StringPtrInput `pulumi:"format"`
	// List of format parameters.
	FormatParameters pulumi.StringArrayInput `pulumi:"formatParameters"`
	// Join delimiter.
	JoinDelimiter pulumi.StringPtrInput `pulumi:"joinDelimiter"`
	// List of lookup key value pair for field. See lookupSchema for details.
	Lookups CseLogMappingFieldLookupArrayInput `pulumi:"lookups"`
	// Name of the field.
	Name pulumi.StringInput `pulumi:"name"`
	// List of skipped values.
	SkippedValues pulumi.StringArrayInput `pulumi:"skippedValues"`
	// Split delimiter to be used. (some example: ",", "-", "|")
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// The index value to select (starting at zero)
	SplitIndex pulumi.IntPtrInput `pulumi:"splitIndex"`
	// Time zone.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
	// Lookup value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// The value type.
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (CseLogMappingFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingField)(nil)).Elem()
}

func (i CseLogMappingFieldArgs) ToCseLogMappingFieldOutput() CseLogMappingFieldOutput {
	return i.ToCseLogMappingFieldOutputWithContext(context.Background())
}

func (i CseLogMappingFieldArgs) ToCseLogMappingFieldOutputWithContext(ctx context.Context) CseLogMappingFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingFieldOutput)
}

// CseLogMappingFieldArrayInput is an input type that accepts CseLogMappingFieldArray and CseLogMappingFieldArrayOutput values.
// You can construct a concrete instance of `CseLogMappingFieldArrayInput` via:
//
//          CseLogMappingFieldArray{ CseLogMappingFieldArgs{...} }
type CseLogMappingFieldArrayInput interface {
	pulumi.Input

	ToCseLogMappingFieldArrayOutput() CseLogMappingFieldArrayOutput
	ToCseLogMappingFieldArrayOutputWithContext(context.Context) CseLogMappingFieldArrayOutput
}

type CseLogMappingFieldArray []CseLogMappingFieldInput

func (CseLogMappingFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseLogMappingField)(nil)).Elem()
}

func (i CseLogMappingFieldArray) ToCseLogMappingFieldArrayOutput() CseLogMappingFieldArrayOutput {
	return i.ToCseLogMappingFieldArrayOutputWithContext(context.Background())
}

func (i CseLogMappingFieldArray) ToCseLogMappingFieldArrayOutputWithContext(ctx context.Context) CseLogMappingFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingFieldArrayOutput)
}

type CseLogMappingFieldOutput struct{ *pulumi.OutputState }

func (CseLogMappingFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingField)(nil)).Elem()
}

func (o CseLogMappingFieldOutput) ToCseLogMappingFieldOutput() CseLogMappingFieldOutput {
	return o
}

func (o CseLogMappingFieldOutput) ToCseLogMappingFieldOutputWithContext(ctx context.Context) CseLogMappingFieldOutput {
	return o
}

// List of alternate values.
func (o CseLogMappingFieldOutput) AlternateValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CseLogMappingField) []string { return v.AlternateValues }).(pulumi.StringArrayOutput)
}

// Case insensitive flag.
func (o CseLogMappingFieldOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *bool { return v.CaseInsensitive }).(pulumi.BoolPtrOutput)
}

// Default value of the field.
func (o CseLogMappingFieldOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// List of field join values.
func (o CseLogMappingFieldOutput) FieldJoins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CseLogMappingField) []string { return v.FieldJoins }).(pulumi.StringArrayOutput)
}

// Format of the field. (JSON, Windows, Syslog, CEF, LEEF )
func (o CseLogMappingFieldOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// List of format parameters.
func (o CseLogMappingFieldOutput) FormatParameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CseLogMappingField) []string { return v.FormatParameters }).(pulumi.StringArrayOutput)
}

// Join delimiter.
func (o CseLogMappingFieldOutput) JoinDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.JoinDelimiter }).(pulumi.StringPtrOutput)
}

// List of lookup key value pair for field. See lookupSchema for details.
func (o CseLogMappingFieldOutput) Lookups() CseLogMappingFieldLookupArrayOutput {
	return o.ApplyT(func(v CseLogMappingField) []CseLogMappingFieldLookup { return v.Lookups }).(CseLogMappingFieldLookupArrayOutput)
}

// Name of the field.
func (o CseLogMappingFieldOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingField) string { return v.Name }).(pulumi.StringOutput)
}

// List of skipped values.
func (o CseLogMappingFieldOutput) SkippedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CseLogMappingField) []string { return v.SkippedValues }).(pulumi.StringArrayOutput)
}

// Split delimiter to be used. (some example: ",", "-", "|")
func (o CseLogMappingFieldOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.SplitDelimiter }).(pulumi.StringPtrOutput)
}

// The index value to select (starting at zero)
func (o CseLogMappingFieldOutput) SplitIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *int { return v.SplitIndex }).(pulumi.IntPtrOutput)
}

// Time zone.
func (o CseLogMappingFieldOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// Lookup value.
func (o CseLogMappingFieldOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The value type.
func (o CseLogMappingFieldOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseLogMappingField) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type CseLogMappingFieldArrayOutput struct{ *pulumi.OutputState }

func (CseLogMappingFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseLogMappingField)(nil)).Elem()
}

func (o CseLogMappingFieldArrayOutput) ToCseLogMappingFieldArrayOutput() CseLogMappingFieldArrayOutput {
	return o
}

func (o CseLogMappingFieldArrayOutput) ToCseLogMappingFieldArrayOutputWithContext(ctx context.Context) CseLogMappingFieldArrayOutput {
	return o
}

func (o CseLogMappingFieldArrayOutput) Index(i pulumi.IntInput) CseLogMappingFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseLogMappingField {
		return vs[0].([]CseLogMappingField)[vs[1].(int)]
	}).(CseLogMappingFieldOutput)
}

type CseLogMappingFieldLookup struct {
	// Lookup key.
	Key string `pulumi:"key"`
	// Lookup value.
	Value string `pulumi:"value"`
}

// CseLogMappingFieldLookupInput is an input type that accepts CseLogMappingFieldLookupArgs and CseLogMappingFieldLookupOutput values.
// You can construct a concrete instance of `CseLogMappingFieldLookupInput` via:
//
//          CseLogMappingFieldLookupArgs{...}
type CseLogMappingFieldLookupInput interface {
	pulumi.Input

	ToCseLogMappingFieldLookupOutput() CseLogMappingFieldLookupOutput
	ToCseLogMappingFieldLookupOutputWithContext(context.Context) CseLogMappingFieldLookupOutput
}

type CseLogMappingFieldLookupArgs struct {
	// Lookup key.
	Key pulumi.StringInput `pulumi:"key"`
	// Lookup value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CseLogMappingFieldLookupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingFieldLookup)(nil)).Elem()
}

func (i CseLogMappingFieldLookupArgs) ToCseLogMappingFieldLookupOutput() CseLogMappingFieldLookupOutput {
	return i.ToCseLogMappingFieldLookupOutputWithContext(context.Background())
}

func (i CseLogMappingFieldLookupArgs) ToCseLogMappingFieldLookupOutputWithContext(ctx context.Context) CseLogMappingFieldLookupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingFieldLookupOutput)
}

// CseLogMappingFieldLookupArrayInput is an input type that accepts CseLogMappingFieldLookupArray and CseLogMappingFieldLookupArrayOutput values.
// You can construct a concrete instance of `CseLogMappingFieldLookupArrayInput` via:
//
//          CseLogMappingFieldLookupArray{ CseLogMappingFieldLookupArgs{...} }
type CseLogMappingFieldLookupArrayInput interface {
	pulumi.Input

	ToCseLogMappingFieldLookupArrayOutput() CseLogMappingFieldLookupArrayOutput
	ToCseLogMappingFieldLookupArrayOutputWithContext(context.Context) CseLogMappingFieldLookupArrayOutput
}

type CseLogMappingFieldLookupArray []CseLogMappingFieldLookupInput

func (CseLogMappingFieldLookupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseLogMappingFieldLookup)(nil)).Elem()
}

func (i CseLogMappingFieldLookupArray) ToCseLogMappingFieldLookupArrayOutput() CseLogMappingFieldLookupArrayOutput {
	return i.ToCseLogMappingFieldLookupArrayOutputWithContext(context.Background())
}

func (i CseLogMappingFieldLookupArray) ToCseLogMappingFieldLookupArrayOutputWithContext(ctx context.Context) CseLogMappingFieldLookupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingFieldLookupArrayOutput)
}

type CseLogMappingFieldLookupOutput struct{ *pulumi.OutputState }

func (CseLogMappingFieldLookupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingFieldLookup)(nil)).Elem()
}

func (o CseLogMappingFieldLookupOutput) ToCseLogMappingFieldLookupOutput() CseLogMappingFieldLookupOutput {
	return o
}

func (o CseLogMappingFieldLookupOutput) ToCseLogMappingFieldLookupOutputWithContext(ctx context.Context) CseLogMappingFieldLookupOutput {
	return o
}

// Lookup key.
func (o CseLogMappingFieldLookupOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingFieldLookup) string { return v.Key }).(pulumi.StringOutput)
}

// Lookup value.
func (o CseLogMappingFieldLookupOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingFieldLookup) string { return v.Value }).(pulumi.StringOutput)
}

type CseLogMappingFieldLookupArrayOutput struct{ *pulumi.OutputState }

func (CseLogMappingFieldLookupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseLogMappingFieldLookup)(nil)).Elem()
}

func (o CseLogMappingFieldLookupArrayOutput) ToCseLogMappingFieldLookupArrayOutput() CseLogMappingFieldLookupArrayOutput {
	return o
}

func (o CseLogMappingFieldLookupArrayOutput) ToCseLogMappingFieldLookupArrayOutputWithContext(ctx context.Context) CseLogMappingFieldLookupArrayOutput {
	return o
}

func (o CseLogMappingFieldLookupArrayOutput) Index(i pulumi.IntInput) CseLogMappingFieldLookupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseLogMappingFieldLookup {
		return vs[0].([]CseLogMappingFieldLookup)[vs[1].(int)]
	}).(CseLogMappingFieldLookupOutput)
}

type CseLogMappingStructuredInput struct {
	// Event id pattern.
	EventIdPattern string `pulumi:"eventIdPattern"`
	// Log format. (JSON, Windows, Syslog, CEF, LEEF )
	LogFormat string `pulumi:"logFormat"`
	// Product name.
	Product string `pulumi:"product"`
	// Vendor name.
	Vendor string `pulumi:"vendor"`
}

// CseLogMappingStructuredInputInput is an input type that accepts CseLogMappingStructuredInputArgs and CseLogMappingStructuredInputOutput values.
// You can construct a concrete instance of `CseLogMappingStructuredInputInput` via:
//
//          CseLogMappingStructuredInputArgs{...}
type CseLogMappingStructuredInputInput interface {
	pulumi.Input

	ToCseLogMappingStructuredInputOutput() CseLogMappingStructuredInputOutput
	ToCseLogMappingStructuredInputOutputWithContext(context.Context) CseLogMappingStructuredInputOutput
}

type CseLogMappingStructuredInputArgs struct {
	// Event id pattern.
	EventIdPattern pulumi.StringInput `pulumi:"eventIdPattern"`
	// Log format. (JSON, Windows, Syslog, CEF, LEEF )
	LogFormat pulumi.StringInput `pulumi:"logFormat"`
	// Product name.
	Product pulumi.StringInput `pulumi:"product"`
	// Vendor name.
	Vendor pulumi.StringInput `pulumi:"vendor"`
}

func (CseLogMappingStructuredInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingStructuredInput)(nil)).Elem()
}

func (i CseLogMappingStructuredInputArgs) ToCseLogMappingStructuredInputOutput() CseLogMappingStructuredInputOutput {
	return i.ToCseLogMappingStructuredInputOutputWithContext(context.Background())
}

func (i CseLogMappingStructuredInputArgs) ToCseLogMappingStructuredInputOutputWithContext(ctx context.Context) CseLogMappingStructuredInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingStructuredInputOutput)
}

// CseLogMappingStructuredInputArrayInput is an input type that accepts CseLogMappingStructuredInputArray and CseLogMappingStructuredInputArrayOutput values.
// You can construct a concrete instance of `CseLogMappingStructuredInputArrayInput` via:
//
//          CseLogMappingStructuredInputArray{ CseLogMappingStructuredInputArgs{...} }
type CseLogMappingStructuredInputArrayInput interface {
	pulumi.Input

	ToCseLogMappingStructuredInputArrayOutput() CseLogMappingStructuredInputArrayOutput
	ToCseLogMappingStructuredInputArrayOutputWithContext(context.Context) CseLogMappingStructuredInputArrayOutput
}

type CseLogMappingStructuredInputArray []CseLogMappingStructuredInputInput

func (CseLogMappingStructuredInputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseLogMappingStructuredInput)(nil)).Elem()
}

func (i CseLogMappingStructuredInputArray) ToCseLogMappingStructuredInputArrayOutput() CseLogMappingStructuredInputArrayOutput {
	return i.ToCseLogMappingStructuredInputArrayOutputWithContext(context.Background())
}

func (i CseLogMappingStructuredInputArray) ToCseLogMappingStructuredInputArrayOutputWithContext(ctx context.Context) CseLogMappingStructuredInputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingStructuredInputArrayOutput)
}

type CseLogMappingStructuredInputOutput struct{ *pulumi.OutputState }

func (CseLogMappingStructuredInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingStructuredInput)(nil)).Elem()
}

func (o CseLogMappingStructuredInputOutput) ToCseLogMappingStructuredInputOutput() CseLogMappingStructuredInputOutput {
	return o
}

func (o CseLogMappingStructuredInputOutput) ToCseLogMappingStructuredInputOutputWithContext(ctx context.Context) CseLogMappingStructuredInputOutput {
	return o
}

// Event id pattern.
func (o CseLogMappingStructuredInputOutput) EventIdPattern() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingStructuredInput) string { return v.EventIdPattern }).(pulumi.StringOutput)
}

// Log format. (JSON, Windows, Syslog, CEF, LEEF )
func (o CseLogMappingStructuredInputOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingStructuredInput) string { return v.LogFormat }).(pulumi.StringOutput)
}

// Product name.
func (o CseLogMappingStructuredInputOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingStructuredInput) string { return v.Product }).(pulumi.StringOutput)
}

// Vendor name.
func (o CseLogMappingStructuredInputOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v CseLogMappingStructuredInput) string { return v.Vendor }).(pulumi.StringOutput)
}

type CseLogMappingStructuredInputArrayOutput struct{ *pulumi.OutputState }

func (CseLogMappingStructuredInputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseLogMappingStructuredInput)(nil)).Elem()
}

func (o CseLogMappingStructuredInputArrayOutput) ToCseLogMappingStructuredInputArrayOutput() CseLogMappingStructuredInputArrayOutput {
	return o
}

func (o CseLogMappingStructuredInputArrayOutput) ToCseLogMappingStructuredInputArrayOutputWithContext(ctx context.Context) CseLogMappingStructuredInputArrayOutput {
	return o
}

func (o CseLogMappingStructuredInputArrayOutput) Index(i pulumi.IntInput) CseLogMappingStructuredInputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseLogMappingStructuredInput {
		return vs[0].([]CseLogMappingStructuredInput)[vs[1].(int)]
	}).(CseLogMappingStructuredInputOutput)
}

type CseLogMappingUnstructuredFields struct {
	// List of grok pattern names.
	PatternNames []string `pulumi:"patternNames"`
}

// CseLogMappingUnstructuredFieldsInput is an input type that accepts CseLogMappingUnstructuredFieldsArgs and CseLogMappingUnstructuredFieldsOutput values.
// You can construct a concrete instance of `CseLogMappingUnstructuredFieldsInput` via:
//
//          CseLogMappingUnstructuredFieldsArgs{...}
type CseLogMappingUnstructuredFieldsInput interface {
	pulumi.Input

	ToCseLogMappingUnstructuredFieldsOutput() CseLogMappingUnstructuredFieldsOutput
	ToCseLogMappingUnstructuredFieldsOutputWithContext(context.Context) CseLogMappingUnstructuredFieldsOutput
}

type CseLogMappingUnstructuredFieldsArgs struct {
	// List of grok pattern names.
	PatternNames pulumi.StringArrayInput `pulumi:"patternNames"`
}

func (CseLogMappingUnstructuredFieldsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingUnstructuredFields)(nil)).Elem()
}

func (i CseLogMappingUnstructuredFieldsArgs) ToCseLogMappingUnstructuredFieldsOutput() CseLogMappingUnstructuredFieldsOutput {
	return i.ToCseLogMappingUnstructuredFieldsOutputWithContext(context.Background())
}

func (i CseLogMappingUnstructuredFieldsArgs) ToCseLogMappingUnstructuredFieldsOutputWithContext(ctx context.Context) CseLogMappingUnstructuredFieldsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingUnstructuredFieldsOutput)
}

func (i CseLogMappingUnstructuredFieldsArgs) ToCseLogMappingUnstructuredFieldsPtrOutput() CseLogMappingUnstructuredFieldsPtrOutput {
	return i.ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(context.Background())
}

func (i CseLogMappingUnstructuredFieldsArgs) ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(ctx context.Context) CseLogMappingUnstructuredFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingUnstructuredFieldsOutput).ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(ctx)
}

// CseLogMappingUnstructuredFieldsPtrInput is an input type that accepts CseLogMappingUnstructuredFieldsArgs, CseLogMappingUnstructuredFieldsPtr and CseLogMappingUnstructuredFieldsPtrOutput values.
// You can construct a concrete instance of `CseLogMappingUnstructuredFieldsPtrInput` via:
//
//          CseLogMappingUnstructuredFieldsArgs{...}
//
//  or:
//
//          nil
type CseLogMappingUnstructuredFieldsPtrInput interface {
	pulumi.Input

	ToCseLogMappingUnstructuredFieldsPtrOutput() CseLogMappingUnstructuredFieldsPtrOutput
	ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(context.Context) CseLogMappingUnstructuredFieldsPtrOutput
}

type cseLogMappingUnstructuredFieldsPtrType CseLogMappingUnstructuredFieldsArgs

func CseLogMappingUnstructuredFieldsPtr(v *CseLogMappingUnstructuredFieldsArgs) CseLogMappingUnstructuredFieldsPtrInput {
	return (*cseLogMappingUnstructuredFieldsPtrType)(v)
}

func (*cseLogMappingUnstructuredFieldsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CseLogMappingUnstructuredFields)(nil)).Elem()
}

func (i *cseLogMappingUnstructuredFieldsPtrType) ToCseLogMappingUnstructuredFieldsPtrOutput() CseLogMappingUnstructuredFieldsPtrOutput {
	return i.ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(context.Background())
}

func (i *cseLogMappingUnstructuredFieldsPtrType) ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(ctx context.Context) CseLogMappingUnstructuredFieldsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseLogMappingUnstructuredFieldsPtrOutput)
}

type CseLogMappingUnstructuredFieldsOutput struct{ *pulumi.OutputState }

func (CseLogMappingUnstructuredFieldsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseLogMappingUnstructuredFields)(nil)).Elem()
}

func (o CseLogMappingUnstructuredFieldsOutput) ToCseLogMappingUnstructuredFieldsOutput() CseLogMappingUnstructuredFieldsOutput {
	return o
}

func (o CseLogMappingUnstructuredFieldsOutput) ToCseLogMappingUnstructuredFieldsOutputWithContext(ctx context.Context) CseLogMappingUnstructuredFieldsOutput {
	return o
}

func (o CseLogMappingUnstructuredFieldsOutput) ToCseLogMappingUnstructuredFieldsPtrOutput() CseLogMappingUnstructuredFieldsPtrOutput {
	return o.ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(context.Background())
}

func (o CseLogMappingUnstructuredFieldsOutput) ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(ctx context.Context) CseLogMappingUnstructuredFieldsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CseLogMappingUnstructuredFields) *CseLogMappingUnstructuredFields {
		return &v
	}).(CseLogMappingUnstructuredFieldsPtrOutput)
}

// List of grok pattern names.
func (o CseLogMappingUnstructuredFieldsOutput) PatternNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CseLogMappingUnstructuredFields) []string { return v.PatternNames }).(pulumi.StringArrayOutput)
}

type CseLogMappingUnstructuredFieldsPtrOutput struct{ *pulumi.OutputState }

func (CseLogMappingUnstructuredFieldsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseLogMappingUnstructuredFields)(nil)).Elem()
}

func (o CseLogMappingUnstructuredFieldsPtrOutput) ToCseLogMappingUnstructuredFieldsPtrOutput() CseLogMappingUnstructuredFieldsPtrOutput {
	return o
}

func (o CseLogMappingUnstructuredFieldsPtrOutput) ToCseLogMappingUnstructuredFieldsPtrOutputWithContext(ctx context.Context) CseLogMappingUnstructuredFieldsPtrOutput {
	return o
}

func (o CseLogMappingUnstructuredFieldsPtrOutput) Elem() CseLogMappingUnstructuredFieldsOutput {
	return o.ApplyT(func(v *CseLogMappingUnstructuredFields) CseLogMappingUnstructuredFields {
		if v != nil {
			return *v
		}
		var ret CseLogMappingUnstructuredFields
		return ret
	}).(CseLogMappingUnstructuredFieldsOutput)
}

// List of grok pattern names.
func (o CseLogMappingUnstructuredFieldsPtrOutput) PatternNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CseLogMappingUnstructuredFields) []string {
		if v == nil {
			return nil
		}
		return v.PatternNames
	}).(pulumi.StringArrayOutput)
}

type CseMatchListItem struct {
	// Match list item description.
	Description string `pulumi:"description"`
	// Match list item expiration. (Format: YYYY-MM-DDTHH:mm:ss)
	Expiration *string `pulumi:"expiration"`
	// The internal ID of the match list.
	Id *string `pulumi:"id"`
	// Match list item value.
	Value string `pulumi:"value"`
}

// CseMatchListItemInput is an input type that accepts CseMatchListItemArgs and CseMatchListItemOutput values.
// You can construct a concrete instance of `CseMatchListItemInput` via:
//
//          CseMatchListItemArgs{...}
type CseMatchListItemInput interface {
	pulumi.Input

	ToCseMatchListItemOutput() CseMatchListItemOutput
	ToCseMatchListItemOutputWithContext(context.Context) CseMatchListItemOutput
}

type CseMatchListItemArgs struct {
	// Match list item description.
	Description pulumi.StringInput `pulumi:"description"`
	// Match list item expiration. (Format: YYYY-MM-DDTHH:mm:ss)
	Expiration pulumi.StringPtrInput `pulumi:"expiration"`
	// The internal ID of the match list.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Match list item value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CseMatchListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchListItem)(nil)).Elem()
}

func (i CseMatchListItemArgs) ToCseMatchListItemOutput() CseMatchListItemOutput {
	return i.ToCseMatchListItemOutputWithContext(context.Background())
}

func (i CseMatchListItemArgs) ToCseMatchListItemOutputWithContext(ctx context.Context) CseMatchListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchListItemOutput)
}

// CseMatchListItemArrayInput is an input type that accepts CseMatchListItemArray and CseMatchListItemArrayOutput values.
// You can construct a concrete instance of `CseMatchListItemArrayInput` via:
//
//          CseMatchListItemArray{ CseMatchListItemArgs{...} }
type CseMatchListItemArrayInput interface {
	pulumi.Input

	ToCseMatchListItemArrayOutput() CseMatchListItemArrayOutput
	ToCseMatchListItemArrayOutputWithContext(context.Context) CseMatchListItemArrayOutput
}

type CseMatchListItemArray []CseMatchListItemInput

func (CseMatchListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseMatchListItem)(nil)).Elem()
}

func (i CseMatchListItemArray) ToCseMatchListItemArrayOutput() CseMatchListItemArrayOutput {
	return i.ToCseMatchListItemArrayOutputWithContext(context.Background())
}

func (i CseMatchListItemArray) ToCseMatchListItemArrayOutputWithContext(ctx context.Context) CseMatchListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchListItemArrayOutput)
}

type CseMatchListItemOutput struct{ *pulumi.OutputState }

func (CseMatchListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchListItem)(nil)).Elem()
}

func (o CseMatchListItemOutput) ToCseMatchListItemOutput() CseMatchListItemOutput {
	return o
}

func (o CseMatchListItemOutput) ToCseMatchListItemOutputWithContext(ctx context.Context) CseMatchListItemOutput {
	return o
}

// Match list item description.
func (o CseMatchListItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchListItem) string { return v.Description }).(pulumi.StringOutput)
}

// Match list item expiration. (Format: YYYY-MM-DDTHH:mm:ss)
func (o CseMatchListItemOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseMatchListItem) *string { return v.Expiration }).(pulumi.StringPtrOutput)
}

// The internal ID of the match list.
func (o CseMatchListItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseMatchListItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Match list item value.
func (o CseMatchListItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchListItem) string { return v.Value }).(pulumi.StringOutput)
}

type CseMatchListItemArrayOutput struct{ *pulumi.OutputState }

func (CseMatchListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseMatchListItem)(nil)).Elem()
}

func (o CseMatchListItemArrayOutput) ToCseMatchListItemArrayOutput() CseMatchListItemArrayOutput {
	return o
}

func (o CseMatchListItemArrayOutput) ToCseMatchListItemArrayOutputWithContext(ctx context.Context) CseMatchListItemArrayOutput {
	return o
}

func (o CseMatchListItemArrayOutput) Index(i pulumi.IntInput) CseMatchListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseMatchListItem {
		return vs[0].([]CseMatchListItem)[vs[1].(int)]
	}).(CseMatchListItemOutput)
}

type CseMatchRuleEntitySelector struct {
	EntityType string `pulumi:"entityType"`
	// The expression for which records to match on
	Expression string `pulumi:"expression"`
}

// CseMatchRuleEntitySelectorInput is an input type that accepts CseMatchRuleEntitySelectorArgs and CseMatchRuleEntitySelectorOutput values.
// You can construct a concrete instance of `CseMatchRuleEntitySelectorInput` via:
//
//          CseMatchRuleEntitySelectorArgs{...}
type CseMatchRuleEntitySelectorInput interface {
	pulumi.Input

	ToCseMatchRuleEntitySelectorOutput() CseMatchRuleEntitySelectorOutput
	ToCseMatchRuleEntitySelectorOutputWithContext(context.Context) CseMatchRuleEntitySelectorOutput
}

type CseMatchRuleEntitySelectorArgs struct {
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The expression for which records to match on
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (CseMatchRuleEntitySelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchRuleEntitySelector)(nil)).Elem()
}

func (i CseMatchRuleEntitySelectorArgs) ToCseMatchRuleEntitySelectorOutput() CseMatchRuleEntitySelectorOutput {
	return i.ToCseMatchRuleEntitySelectorOutputWithContext(context.Background())
}

func (i CseMatchRuleEntitySelectorArgs) ToCseMatchRuleEntitySelectorOutputWithContext(ctx context.Context) CseMatchRuleEntitySelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleEntitySelectorOutput)
}

// CseMatchRuleEntitySelectorArrayInput is an input type that accepts CseMatchRuleEntitySelectorArray and CseMatchRuleEntitySelectorArrayOutput values.
// You can construct a concrete instance of `CseMatchRuleEntitySelectorArrayInput` via:
//
//          CseMatchRuleEntitySelectorArray{ CseMatchRuleEntitySelectorArgs{...} }
type CseMatchRuleEntitySelectorArrayInput interface {
	pulumi.Input

	ToCseMatchRuleEntitySelectorArrayOutput() CseMatchRuleEntitySelectorArrayOutput
	ToCseMatchRuleEntitySelectorArrayOutputWithContext(context.Context) CseMatchRuleEntitySelectorArrayOutput
}

type CseMatchRuleEntitySelectorArray []CseMatchRuleEntitySelectorInput

func (CseMatchRuleEntitySelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseMatchRuleEntitySelector)(nil)).Elem()
}

func (i CseMatchRuleEntitySelectorArray) ToCseMatchRuleEntitySelectorArrayOutput() CseMatchRuleEntitySelectorArrayOutput {
	return i.ToCseMatchRuleEntitySelectorArrayOutputWithContext(context.Background())
}

func (i CseMatchRuleEntitySelectorArray) ToCseMatchRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseMatchRuleEntitySelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleEntitySelectorArrayOutput)
}

type CseMatchRuleEntitySelectorOutput struct{ *pulumi.OutputState }

func (CseMatchRuleEntitySelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchRuleEntitySelector)(nil)).Elem()
}

func (o CseMatchRuleEntitySelectorOutput) ToCseMatchRuleEntitySelectorOutput() CseMatchRuleEntitySelectorOutput {
	return o
}

func (o CseMatchRuleEntitySelectorOutput) ToCseMatchRuleEntitySelectorOutputWithContext(ctx context.Context) CseMatchRuleEntitySelectorOutput {
	return o
}

func (o CseMatchRuleEntitySelectorOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchRuleEntitySelector) string { return v.EntityType }).(pulumi.StringOutput)
}

// The expression for which records to match on
func (o CseMatchRuleEntitySelectorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchRuleEntitySelector) string { return v.Expression }).(pulumi.StringOutput)
}

type CseMatchRuleEntitySelectorArrayOutput struct{ *pulumi.OutputState }

func (CseMatchRuleEntitySelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseMatchRuleEntitySelector)(nil)).Elem()
}

func (o CseMatchRuleEntitySelectorArrayOutput) ToCseMatchRuleEntitySelectorArrayOutput() CseMatchRuleEntitySelectorArrayOutput {
	return o
}

func (o CseMatchRuleEntitySelectorArrayOutput) ToCseMatchRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseMatchRuleEntitySelectorArrayOutput {
	return o
}

func (o CseMatchRuleEntitySelectorArrayOutput) Index(i pulumi.IntInput) CseMatchRuleEntitySelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseMatchRuleEntitySelector {
		return vs[0].([]CseMatchRuleEntitySelector)[vs[1].(int)]
	}).(CseMatchRuleEntitySelectorOutput)
}

type CseMatchRuleSeverityMapping struct {
	// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
	Default *int `pulumi:"default"`
	// The field to use in the "fieldValue"/"fieldValueMapping" cases.
	Field *string `pulumi:"field"`
	// The map of record values to severities to use in the "fieldValueMapping" case
	Mappings []CseMatchRuleSeverityMappingMapping `pulumi:"mappings"`
	// Must be set to "eq" currently
	Type string `pulumi:"type"`
}

// CseMatchRuleSeverityMappingInput is an input type that accepts CseMatchRuleSeverityMappingArgs and CseMatchRuleSeverityMappingOutput values.
// You can construct a concrete instance of `CseMatchRuleSeverityMappingInput` via:
//
//          CseMatchRuleSeverityMappingArgs{...}
type CseMatchRuleSeverityMappingInput interface {
	pulumi.Input

	ToCseMatchRuleSeverityMappingOutput() CseMatchRuleSeverityMappingOutput
	ToCseMatchRuleSeverityMappingOutputWithContext(context.Context) CseMatchRuleSeverityMappingOutput
}

type CseMatchRuleSeverityMappingArgs struct {
	// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
	Default pulumi.IntPtrInput `pulumi:"default"`
	// The field to use in the "fieldValue"/"fieldValueMapping" cases.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The map of record values to severities to use in the "fieldValueMapping" case
	Mappings CseMatchRuleSeverityMappingMappingArrayInput `pulumi:"mappings"`
	// Must be set to "eq" currently
	Type pulumi.StringInput `pulumi:"type"`
}

func (CseMatchRuleSeverityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchRuleSeverityMapping)(nil)).Elem()
}

func (i CseMatchRuleSeverityMappingArgs) ToCseMatchRuleSeverityMappingOutput() CseMatchRuleSeverityMappingOutput {
	return i.ToCseMatchRuleSeverityMappingOutputWithContext(context.Background())
}

func (i CseMatchRuleSeverityMappingArgs) ToCseMatchRuleSeverityMappingOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleSeverityMappingOutput)
}

func (i CseMatchRuleSeverityMappingArgs) ToCseMatchRuleSeverityMappingPtrOutput() CseMatchRuleSeverityMappingPtrOutput {
	return i.ToCseMatchRuleSeverityMappingPtrOutputWithContext(context.Background())
}

func (i CseMatchRuleSeverityMappingArgs) ToCseMatchRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleSeverityMappingOutput).ToCseMatchRuleSeverityMappingPtrOutputWithContext(ctx)
}

// CseMatchRuleSeverityMappingPtrInput is an input type that accepts CseMatchRuleSeverityMappingArgs, CseMatchRuleSeverityMappingPtr and CseMatchRuleSeverityMappingPtrOutput values.
// You can construct a concrete instance of `CseMatchRuleSeverityMappingPtrInput` via:
//
//          CseMatchRuleSeverityMappingArgs{...}
//
//  or:
//
//          nil
type CseMatchRuleSeverityMappingPtrInput interface {
	pulumi.Input

	ToCseMatchRuleSeverityMappingPtrOutput() CseMatchRuleSeverityMappingPtrOutput
	ToCseMatchRuleSeverityMappingPtrOutputWithContext(context.Context) CseMatchRuleSeverityMappingPtrOutput
}

type cseMatchRuleSeverityMappingPtrType CseMatchRuleSeverityMappingArgs

func CseMatchRuleSeverityMappingPtr(v *CseMatchRuleSeverityMappingArgs) CseMatchRuleSeverityMappingPtrInput {
	return (*cseMatchRuleSeverityMappingPtrType)(v)
}

func (*cseMatchRuleSeverityMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CseMatchRuleSeverityMapping)(nil)).Elem()
}

func (i *cseMatchRuleSeverityMappingPtrType) ToCseMatchRuleSeverityMappingPtrOutput() CseMatchRuleSeverityMappingPtrOutput {
	return i.ToCseMatchRuleSeverityMappingPtrOutputWithContext(context.Background())
}

func (i *cseMatchRuleSeverityMappingPtrType) ToCseMatchRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleSeverityMappingPtrOutput)
}

type CseMatchRuleSeverityMappingOutput struct{ *pulumi.OutputState }

func (CseMatchRuleSeverityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchRuleSeverityMapping)(nil)).Elem()
}

func (o CseMatchRuleSeverityMappingOutput) ToCseMatchRuleSeverityMappingOutput() CseMatchRuleSeverityMappingOutput {
	return o
}

func (o CseMatchRuleSeverityMappingOutput) ToCseMatchRuleSeverityMappingOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingOutput {
	return o
}

func (o CseMatchRuleSeverityMappingOutput) ToCseMatchRuleSeverityMappingPtrOutput() CseMatchRuleSeverityMappingPtrOutput {
	return o.ToCseMatchRuleSeverityMappingPtrOutputWithContext(context.Background())
}

func (o CseMatchRuleSeverityMappingOutput) ToCseMatchRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CseMatchRuleSeverityMapping) *CseMatchRuleSeverityMapping {
		return &v
	}).(CseMatchRuleSeverityMappingPtrOutput)
}

// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
func (o CseMatchRuleSeverityMappingOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMapping) *int { return v.Default }).(pulumi.IntPtrOutput)
}

// The field to use in the "fieldValue"/"fieldValueMapping" cases.
func (o CseMatchRuleSeverityMappingOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMapping) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The map of record values to severities to use in the "fieldValueMapping" case
func (o CseMatchRuleSeverityMappingOutput) Mappings() CseMatchRuleSeverityMappingMappingArrayOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMapping) []CseMatchRuleSeverityMappingMapping { return v.Mappings }).(CseMatchRuleSeverityMappingMappingArrayOutput)
}

// Must be set to "eq" currently
func (o CseMatchRuleSeverityMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMapping) string { return v.Type }).(pulumi.StringOutput)
}

type CseMatchRuleSeverityMappingPtrOutput struct{ *pulumi.OutputState }

func (CseMatchRuleSeverityMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseMatchRuleSeverityMapping)(nil)).Elem()
}

func (o CseMatchRuleSeverityMappingPtrOutput) ToCseMatchRuleSeverityMappingPtrOutput() CseMatchRuleSeverityMappingPtrOutput {
	return o
}

func (o CseMatchRuleSeverityMappingPtrOutput) ToCseMatchRuleSeverityMappingPtrOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingPtrOutput {
	return o
}

func (o CseMatchRuleSeverityMappingPtrOutput) Elem() CseMatchRuleSeverityMappingOutput {
	return o.ApplyT(func(v *CseMatchRuleSeverityMapping) CseMatchRuleSeverityMapping {
		if v != nil {
			return *v
		}
		var ret CseMatchRuleSeverityMapping
		return ret
	}).(CseMatchRuleSeverityMappingOutput)
}

// The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
func (o CseMatchRuleSeverityMappingPtrOutput) Default() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CseMatchRuleSeverityMapping) *int {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.IntPtrOutput)
}

// The field to use in the "fieldValue"/"fieldValueMapping" cases.
func (o CseMatchRuleSeverityMappingPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseMatchRuleSeverityMapping) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

// The map of record values to severities to use in the "fieldValueMapping" case
func (o CseMatchRuleSeverityMappingPtrOutput) Mappings() CseMatchRuleSeverityMappingMappingArrayOutput {
	return o.ApplyT(func(v *CseMatchRuleSeverityMapping) []CseMatchRuleSeverityMappingMapping {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(CseMatchRuleSeverityMappingMappingArrayOutput)
}

// Must be set to "eq" currently
func (o CseMatchRuleSeverityMappingPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseMatchRuleSeverityMapping) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CseMatchRuleSeverityMappingMapping struct {
	// The record value to map from
	From string `pulumi:"from"`
	// The severity value to map to
	To int `pulumi:"to"`
	// Must be set to "eq" currently
	Type string `pulumi:"type"`
}

// CseMatchRuleSeverityMappingMappingInput is an input type that accepts CseMatchRuleSeverityMappingMappingArgs and CseMatchRuleSeverityMappingMappingOutput values.
// You can construct a concrete instance of `CseMatchRuleSeverityMappingMappingInput` via:
//
//          CseMatchRuleSeverityMappingMappingArgs{...}
type CseMatchRuleSeverityMappingMappingInput interface {
	pulumi.Input

	ToCseMatchRuleSeverityMappingMappingOutput() CseMatchRuleSeverityMappingMappingOutput
	ToCseMatchRuleSeverityMappingMappingOutputWithContext(context.Context) CseMatchRuleSeverityMappingMappingOutput
}

type CseMatchRuleSeverityMappingMappingArgs struct {
	// The record value to map from
	From pulumi.StringInput `pulumi:"from"`
	// The severity value to map to
	To pulumi.IntInput `pulumi:"to"`
	// Must be set to "eq" currently
	Type pulumi.StringInput `pulumi:"type"`
}

func (CseMatchRuleSeverityMappingMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchRuleSeverityMappingMapping)(nil)).Elem()
}

func (i CseMatchRuleSeverityMappingMappingArgs) ToCseMatchRuleSeverityMappingMappingOutput() CseMatchRuleSeverityMappingMappingOutput {
	return i.ToCseMatchRuleSeverityMappingMappingOutputWithContext(context.Background())
}

func (i CseMatchRuleSeverityMappingMappingArgs) ToCseMatchRuleSeverityMappingMappingOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleSeverityMappingMappingOutput)
}

// CseMatchRuleSeverityMappingMappingArrayInput is an input type that accepts CseMatchRuleSeverityMappingMappingArray and CseMatchRuleSeverityMappingMappingArrayOutput values.
// You can construct a concrete instance of `CseMatchRuleSeverityMappingMappingArrayInput` via:
//
//          CseMatchRuleSeverityMappingMappingArray{ CseMatchRuleSeverityMappingMappingArgs{...} }
type CseMatchRuleSeverityMappingMappingArrayInput interface {
	pulumi.Input

	ToCseMatchRuleSeverityMappingMappingArrayOutput() CseMatchRuleSeverityMappingMappingArrayOutput
	ToCseMatchRuleSeverityMappingMappingArrayOutputWithContext(context.Context) CseMatchRuleSeverityMappingMappingArrayOutput
}

type CseMatchRuleSeverityMappingMappingArray []CseMatchRuleSeverityMappingMappingInput

func (CseMatchRuleSeverityMappingMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseMatchRuleSeverityMappingMapping)(nil)).Elem()
}

func (i CseMatchRuleSeverityMappingMappingArray) ToCseMatchRuleSeverityMappingMappingArrayOutput() CseMatchRuleSeverityMappingMappingArrayOutput {
	return i.ToCseMatchRuleSeverityMappingMappingArrayOutputWithContext(context.Background())
}

func (i CseMatchRuleSeverityMappingMappingArray) ToCseMatchRuleSeverityMappingMappingArrayOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseMatchRuleSeverityMappingMappingArrayOutput)
}

type CseMatchRuleSeverityMappingMappingOutput struct{ *pulumi.OutputState }

func (CseMatchRuleSeverityMappingMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseMatchRuleSeverityMappingMapping)(nil)).Elem()
}

func (o CseMatchRuleSeverityMappingMappingOutput) ToCseMatchRuleSeverityMappingMappingOutput() CseMatchRuleSeverityMappingMappingOutput {
	return o
}

func (o CseMatchRuleSeverityMappingMappingOutput) ToCseMatchRuleSeverityMappingMappingOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingMappingOutput {
	return o
}

// The record value to map from
func (o CseMatchRuleSeverityMappingMappingOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMappingMapping) string { return v.From }).(pulumi.StringOutput)
}

// The severity value to map to
func (o CseMatchRuleSeverityMappingMappingOutput) To() pulumi.IntOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMappingMapping) int { return v.To }).(pulumi.IntOutput)
}

// Must be set to "eq" currently
func (o CseMatchRuleSeverityMappingMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CseMatchRuleSeverityMappingMapping) string { return v.Type }).(pulumi.StringOutput)
}

type CseMatchRuleSeverityMappingMappingArrayOutput struct{ *pulumi.OutputState }

func (CseMatchRuleSeverityMappingMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseMatchRuleSeverityMappingMapping)(nil)).Elem()
}

func (o CseMatchRuleSeverityMappingMappingArrayOutput) ToCseMatchRuleSeverityMappingMappingArrayOutput() CseMatchRuleSeverityMappingMappingArrayOutput {
	return o
}

func (o CseMatchRuleSeverityMappingMappingArrayOutput) ToCseMatchRuleSeverityMappingMappingArrayOutputWithContext(ctx context.Context) CseMatchRuleSeverityMappingMappingArrayOutput {
	return o
}

func (o CseMatchRuleSeverityMappingMappingArrayOutput) Index(i pulumi.IntInput) CseMatchRuleSeverityMappingMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseMatchRuleSeverityMappingMapping {
		return vs[0].([]CseMatchRuleSeverityMappingMapping)[vs[1].(int)]
	}).(CseMatchRuleSeverityMappingMappingOutput)
}

type CseThresholdRuleEntitySelector struct {
	EntityType string `pulumi:"entityType"`
	// The expression for which records to match on
	Expression string `pulumi:"expression"`
}

// CseThresholdRuleEntitySelectorInput is an input type that accepts CseThresholdRuleEntitySelectorArgs and CseThresholdRuleEntitySelectorOutput values.
// You can construct a concrete instance of `CseThresholdRuleEntitySelectorInput` via:
//
//          CseThresholdRuleEntitySelectorArgs{...}
type CseThresholdRuleEntitySelectorInput interface {
	pulumi.Input

	ToCseThresholdRuleEntitySelectorOutput() CseThresholdRuleEntitySelectorOutput
	ToCseThresholdRuleEntitySelectorOutputWithContext(context.Context) CseThresholdRuleEntitySelectorOutput
}

type CseThresholdRuleEntitySelectorArgs struct {
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// The expression for which records to match on
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (CseThresholdRuleEntitySelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CseThresholdRuleEntitySelector)(nil)).Elem()
}

func (i CseThresholdRuleEntitySelectorArgs) ToCseThresholdRuleEntitySelectorOutput() CseThresholdRuleEntitySelectorOutput {
	return i.ToCseThresholdRuleEntitySelectorOutputWithContext(context.Background())
}

func (i CseThresholdRuleEntitySelectorArgs) ToCseThresholdRuleEntitySelectorOutputWithContext(ctx context.Context) CseThresholdRuleEntitySelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseThresholdRuleEntitySelectorOutput)
}

// CseThresholdRuleEntitySelectorArrayInput is an input type that accepts CseThresholdRuleEntitySelectorArray and CseThresholdRuleEntitySelectorArrayOutput values.
// You can construct a concrete instance of `CseThresholdRuleEntitySelectorArrayInput` via:
//
//          CseThresholdRuleEntitySelectorArray{ CseThresholdRuleEntitySelectorArgs{...} }
type CseThresholdRuleEntitySelectorArrayInput interface {
	pulumi.Input

	ToCseThresholdRuleEntitySelectorArrayOutput() CseThresholdRuleEntitySelectorArrayOutput
	ToCseThresholdRuleEntitySelectorArrayOutputWithContext(context.Context) CseThresholdRuleEntitySelectorArrayOutput
}

type CseThresholdRuleEntitySelectorArray []CseThresholdRuleEntitySelectorInput

func (CseThresholdRuleEntitySelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseThresholdRuleEntitySelector)(nil)).Elem()
}

func (i CseThresholdRuleEntitySelectorArray) ToCseThresholdRuleEntitySelectorArrayOutput() CseThresholdRuleEntitySelectorArrayOutput {
	return i.ToCseThresholdRuleEntitySelectorArrayOutputWithContext(context.Background())
}

func (i CseThresholdRuleEntitySelectorArray) ToCseThresholdRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseThresholdRuleEntitySelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseThresholdRuleEntitySelectorArrayOutput)
}

type CseThresholdRuleEntitySelectorOutput struct{ *pulumi.OutputState }

func (CseThresholdRuleEntitySelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CseThresholdRuleEntitySelector)(nil)).Elem()
}

func (o CseThresholdRuleEntitySelectorOutput) ToCseThresholdRuleEntitySelectorOutput() CseThresholdRuleEntitySelectorOutput {
	return o
}

func (o CseThresholdRuleEntitySelectorOutput) ToCseThresholdRuleEntitySelectorOutputWithContext(ctx context.Context) CseThresholdRuleEntitySelectorOutput {
	return o
}

func (o CseThresholdRuleEntitySelectorOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v CseThresholdRuleEntitySelector) string { return v.EntityType }).(pulumi.StringOutput)
}

// The expression for which records to match on
func (o CseThresholdRuleEntitySelectorOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v CseThresholdRuleEntitySelector) string { return v.Expression }).(pulumi.StringOutput)
}

type CseThresholdRuleEntitySelectorArrayOutput struct{ *pulumi.OutputState }

func (CseThresholdRuleEntitySelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CseThresholdRuleEntitySelector)(nil)).Elem()
}

func (o CseThresholdRuleEntitySelectorArrayOutput) ToCseThresholdRuleEntitySelectorArrayOutput() CseThresholdRuleEntitySelectorArrayOutput {
	return o
}

func (o CseThresholdRuleEntitySelectorArrayOutput) ToCseThresholdRuleEntitySelectorArrayOutputWithContext(ctx context.Context) CseThresholdRuleEntitySelectorArrayOutput {
	return o
}

func (o CseThresholdRuleEntitySelectorArrayOutput) Index(i pulumi.IntInput) CseThresholdRuleEntitySelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CseThresholdRuleEntitySelector {
		return vs[0].([]CseThresholdRuleEntitySelector)[vs[1].(int)]
	}).(CseThresholdRuleEntitySelectorOutput)
}

type DashboardColoringRule struct {
	ColorThresholds                 []DashboardColoringRuleColorThreshold `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction string                                `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           string                                `pulumi:"scope"`
	SingleSeriesAggregateFunction   string                                `pulumi:"singleSeriesAggregateFunction"`
}

// DashboardColoringRuleInput is an input type that accepts DashboardColoringRuleArgs and DashboardColoringRuleOutput values.
// You can construct a concrete instance of `DashboardColoringRuleInput` via:
//
//          DashboardColoringRuleArgs{...}
type DashboardColoringRuleInput interface {
	pulumi.Input

	ToDashboardColoringRuleOutput() DashboardColoringRuleOutput
	ToDashboardColoringRuleOutputWithContext(context.Context) DashboardColoringRuleOutput
}

type DashboardColoringRuleArgs struct {
	ColorThresholds                 DashboardColoringRuleColorThresholdArrayInput `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction pulumi.StringInput                            `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           pulumi.StringInput                            `pulumi:"scope"`
	SingleSeriesAggregateFunction   pulumi.StringInput                            `pulumi:"singleSeriesAggregateFunction"`
}

func (DashboardColoringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRule)(nil)).Elem()
}

func (i DashboardColoringRuleArgs) ToDashboardColoringRuleOutput() DashboardColoringRuleOutput {
	return i.ToDashboardColoringRuleOutputWithContext(context.Background())
}

func (i DashboardColoringRuleArgs) ToDashboardColoringRuleOutputWithContext(ctx context.Context) DashboardColoringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleOutput)
}

// DashboardColoringRuleArrayInput is an input type that accepts DashboardColoringRuleArray and DashboardColoringRuleArrayOutput values.
// You can construct a concrete instance of `DashboardColoringRuleArrayInput` via:
//
//          DashboardColoringRuleArray{ DashboardColoringRuleArgs{...} }
type DashboardColoringRuleArrayInput interface {
	pulumi.Input

	ToDashboardColoringRuleArrayOutput() DashboardColoringRuleArrayOutput
	ToDashboardColoringRuleArrayOutputWithContext(context.Context) DashboardColoringRuleArrayOutput
}

type DashboardColoringRuleArray []DashboardColoringRuleInput

func (DashboardColoringRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRule)(nil)).Elem()
}

func (i DashboardColoringRuleArray) ToDashboardColoringRuleArrayOutput() DashboardColoringRuleArrayOutput {
	return i.ToDashboardColoringRuleArrayOutputWithContext(context.Background())
}

func (i DashboardColoringRuleArray) ToDashboardColoringRuleArrayOutputWithContext(ctx context.Context) DashboardColoringRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleArrayOutput)
}

type DashboardColoringRuleOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRule)(nil)).Elem()
}

func (o DashboardColoringRuleOutput) ToDashboardColoringRuleOutput() DashboardColoringRuleOutput {
	return o
}

func (o DashboardColoringRuleOutput) ToDashboardColoringRuleOutputWithContext(ctx context.Context) DashboardColoringRuleOutput {
	return o
}

func (o DashboardColoringRuleOutput) ColorThresholds() DashboardColoringRuleColorThresholdArrayOutput {
	return o.ApplyT(func(v DashboardColoringRule) []DashboardColoringRuleColorThreshold { return v.ColorThresholds }).(DashboardColoringRuleColorThresholdArrayOutput)
}

func (o DashboardColoringRuleOutput) MultipleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRule) string { return v.MultipleSeriesAggregateFunction }).(pulumi.StringOutput)
}

func (o DashboardColoringRuleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRule) string { return v.Scope }).(pulumi.StringOutput)
}

func (o DashboardColoringRuleOutput) SingleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRule) string { return v.SingleSeriesAggregateFunction }).(pulumi.StringOutput)
}

type DashboardColoringRuleArrayOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRule)(nil)).Elem()
}

func (o DashboardColoringRuleArrayOutput) ToDashboardColoringRuleArrayOutput() DashboardColoringRuleArrayOutput {
	return o
}

func (o DashboardColoringRuleArrayOutput) ToDashboardColoringRuleArrayOutputWithContext(ctx context.Context) DashboardColoringRuleArrayOutput {
	return o
}

func (o DashboardColoringRuleArrayOutput) Index(i pulumi.IntInput) DashboardColoringRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColoringRule {
		return vs[0].([]DashboardColoringRule)[vs[1].(int)]
	}).(DashboardColoringRuleOutput)
}

type DashboardColoringRuleColorThreshold struct {
	Color string   `pulumi:"color"`
	Max   *float64 `pulumi:"max"`
	Min   *float64 `pulumi:"min"`
}

// DashboardColoringRuleColorThresholdInput is an input type that accepts DashboardColoringRuleColorThresholdArgs and DashboardColoringRuleColorThresholdOutput values.
// You can construct a concrete instance of `DashboardColoringRuleColorThresholdInput` via:
//
//          DashboardColoringRuleColorThresholdArgs{...}
type DashboardColoringRuleColorThresholdInput interface {
	pulumi.Input

	ToDashboardColoringRuleColorThresholdOutput() DashboardColoringRuleColorThresholdOutput
	ToDashboardColoringRuleColorThresholdOutputWithContext(context.Context) DashboardColoringRuleColorThresholdOutput
}

type DashboardColoringRuleColorThresholdArgs struct {
	Color pulumi.StringInput     `pulumi:"color"`
	Max   pulumi.Float64PtrInput `pulumi:"max"`
	Min   pulumi.Float64PtrInput `pulumi:"min"`
}

func (DashboardColoringRuleColorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardColoringRuleColorThresholdArgs) ToDashboardColoringRuleColorThresholdOutput() DashboardColoringRuleColorThresholdOutput {
	return i.ToDashboardColoringRuleColorThresholdOutputWithContext(context.Background())
}

func (i DashboardColoringRuleColorThresholdArgs) ToDashboardColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleColorThresholdOutput)
}

// DashboardColoringRuleColorThresholdArrayInput is an input type that accepts DashboardColoringRuleColorThresholdArray and DashboardColoringRuleColorThresholdArrayOutput values.
// You can construct a concrete instance of `DashboardColoringRuleColorThresholdArrayInput` via:
//
//          DashboardColoringRuleColorThresholdArray{ DashboardColoringRuleColorThresholdArgs{...} }
type DashboardColoringRuleColorThresholdArrayInput interface {
	pulumi.Input

	ToDashboardColoringRuleColorThresholdArrayOutput() DashboardColoringRuleColorThresholdArrayOutput
	ToDashboardColoringRuleColorThresholdArrayOutputWithContext(context.Context) DashboardColoringRuleColorThresholdArrayOutput
}

type DashboardColoringRuleColorThresholdArray []DashboardColoringRuleColorThresholdInput

func (DashboardColoringRuleColorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardColoringRuleColorThresholdArray) ToDashboardColoringRuleColorThresholdArrayOutput() DashboardColoringRuleColorThresholdArrayOutput {
	return i.ToDashboardColoringRuleColorThresholdArrayOutputWithContext(context.Background())
}

func (i DashboardColoringRuleColorThresholdArray) ToDashboardColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardColoringRuleColorThresholdArrayOutput)
}

type DashboardColoringRuleColorThresholdOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleColorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardColoringRuleColorThresholdOutput) ToDashboardColoringRuleColorThresholdOutput() DashboardColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdOutput) ToDashboardColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardColoringRuleColorThreshold) string { return v.Color }).(pulumi.StringOutput)
}

func (o DashboardColoringRuleColorThresholdOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardColoringRuleColorThreshold) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o DashboardColoringRuleColorThresholdOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardColoringRuleColorThreshold) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type DashboardColoringRuleColorThresholdArrayOutput struct{ *pulumi.OutputState }

func (DashboardColoringRuleColorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardColoringRuleColorThresholdArrayOutput) ToDashboardColoringRuleColorThresholdArrayOutput() DashboardColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdArrayOutput) ToDashboardColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardColoringRuleColorThresholdArrayOutput) Index(i pulumi.IntInput) DashboardColoringRuleColorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardColoringRuleColorThreshold {
		return vs[0].([]DashboardColoringRuleColorThreshold)[vs[1].(int)]
	}).(DashboardColoringRuleColorThresholdOutput)
}

type DashboardLayout struct {
	Grid *DashboardLayoutGrid `pulumi:"grid"`
}

// DashboardLayoutInput is an input type that accepts DashboardLayoutArgs and DashboardLayoutOutput values.
// You can construct a concrete instance of `DashboardLayoutInput` via:
//
//          DashboardLayoutArgs{...}
type DashboardLayoutInput interface {
	pulumi.Input

	ToDashboardLayoutOutput() DashboardLayoutOutput
	ToDashboardLayoutOutputWithContext(context.Context) DashboardLayoutOutput
}

type DashboardLayoutArgs struct {
	Grid DashboardLayoutGridPtrInput `pulumi:"grid"`
}

func (DashboardLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayout)(nil)).Elem()
}

func (i DashboardLayoutArgs) ToDashboardLayoutOutput() DashboardLayoutOutput {
	return i.ToDashboardLayoutOutputWithContext(context.Background())
}

func (i DashboardLayoutArgs) ToDashboardLayoutOutputWithContext(ctx context.Context) DashboardLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutOutput)
}

func (i DashboardLayoutArgs) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return i.ToDashboardLayoutPtrOutputWithContext(context.Background())
}

func (i DashboardLayoutArgs) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutOutput).ToDashboardLayoutPtrOutputWithContext(ctx)
}

// DashboardLayoutPtrInput is an input type that accepts DashboardLayoutArgs, DashboardLayoutPtr and DashboardLayoutPtrOutput values.
// You can construct a concrete instance of `DashboardLayoutPtrInput` via:
//
//          DashboardLayoutArgs{...}
//
//  or:
//
//          nil
type DashboardLayoutPtrInput interface {
	pulumi.Input

	ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput
	ToDashboardLayoutPtrOutputWithContext(context.Context) DashboardLayoutPtrOutput
}

type dashboardLayoutPtrType DashboardLayoutArgs

func DashboardLayoutPtr(v *DashboardLayoutArgs) DashboardLayoutPtrInput {
	return (*dashboardLayoutPtrType)(v)
}

func (*dashboardLayoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayout)(nil)).Elem()
}

func (i *dashboardLayoutPtrType) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return i.ToDashboardLayoutPtrOutputWithContext(context.Background())
}

func (i *dashboardLayoutPtrType) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutPtrOutput)
}

type DashboardLayoutOutput struct{ *pulumi.OutputState }

func (DashboardLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayout)(nil)).Elem()
}

func (o DashboardLayoutOutput) ToDashboardLayoutOutput() DashboardLayoutOutput {
	return o
}

func (o DashboardLayoutOutput) ToDashboardLayoutOutputWithContext(ctx context.Context) DashboardLayoutOutput {
	return o
}

func (o DashboardLayoutOutput) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return o.ToDashboardLayoutPtrOutputWithContext(context.Background())
}

func (o DashboardLayoutOutput) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLayout) *DashboardLayout {
		return &v
	}).(DashboardLayoutPtrOutput)
}

func (o DashboardLayoutOutput) Grid() DashboardLayoutGridPtrOutput {
	return o.ApplyT(func(v DashboardLayout) *DashboardLayoutGrid { return v.Grid }).(DashboardLayoutGridPtrOutput)
}

type DashboardLayoutPtrOutput struct{ *pulumi.OutputState }

func (DashboardLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayout)(nil)).Elem()
}

func (o DashboardLayoutPtrOutput) ToDashboardLayoutPtrOutput() DashboardLayoutPtrOutput {
	return o
}

func (o DashboardLayoutPtrOutput) ToDashboardLayoutPtrOutputWithContext(ctx context.Context) DashboardLayoutPtrOutput {
	return o
}

func (o DashboardLayoutPtrOutput) Elem() DashboardLayoutOutput {
	return o.ApplyT(func(v *DashboardLayout) DashboardLayout {
		if v != nil {
			return *v
		}
		var ret DashboardLayout
		return ret
	}).(DashboardLayoutOutput)
}

func (o DashboardLayoutPtrOutput) Grid() DashboardLayoutGridPtrOutput {
	return o.ApplyT(func(v *DashboardLayout) *DashboardLayoutGrid {
		if v == nil {
			return nil
		}
		return v.Grid
	}).(DashboardLayoutGridPtrOutput)
}

type DashboardLayoutGrid struct {
	LayoutStructures []DashboardLayoutGridLayoutStructure `pulumi:"layoutStructures"`
}

// DashboardLayoutGridInput is an input type that accepts DashboardLayoutGridArgs and DashboardLayoutGridOutput values.
// You can construct a concrete instance of `DashboardLayoutGridInput` via:
//
//          DashboardLayoutGridArgs{...}
type DashboardLayoutGridInput interface {
	pulumi.Input

	ToDashboardLayoutGridOutput() DashboardLayoutGridOutput
	ToDashboardLayoutGridOutputWithContext(context.Context) DashboardLayoutGridOutput
}

type DashboardLayoutGridArgs struct {
	LayoutStructures DashboardLayoutGridLayoutStructureArrayInput `pulumi:"layoutStructures"`
}

func (DashboardLayoutGridArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGrid)(nil)).Elem()
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridOutput() DashboardLayoutGridOutput {
	return i.ToDashboardLayoutGridOutputWithContext(context.Background())
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridOutputWithContext(ctx context.Context) DashboardLayoutGridOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridOutput)
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return i.ToDashboardLayoutGridPtrOutputWithContext(context.Background())
}

func (i DashboardLayoutGridArgs) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridOutput).ToDashboardLayoutGridPtrOutputWithContext(ctx)
}

// DashboardLayoutGridPtrInput is an input type that accepts DashboardLayoutGridArgs, DashboardLayoutGridPtr and DashboardLayoutGridPtrOutput values.
// You can construct a concrete instance of `DashboardLayoutGridPtrInput` via:
//
//          DashboardLayoutGridArgs{...}
//
//  or:
//
//          nil
type DashboardLayoutGridPtrInput interface {
	pulumi.Input

	ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput
	ToDashboardLayoutGridPtrOutputWithContext(context.Context) DashboardLayoutGridPtrOutput
}

type dashboardLayoutGridPtrType DashboardLayoutGridArgs

func DashboardLayoutGridPtr(v *DashboardLayoutGridArgs) DashboardLayoutGridPtrInput {
	return (*dashboardLayoutGridPtrType)(v)
}

func (*dashboardLayoutGridPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayoutGrid)(nil)).Elem()
}

func (i *dashboardLayoutGridPtrType) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return i.ToDashboardLayoutGridPtrOutputWithContext(context.Background())
}

func (i *dashboardLayoutGridPtrType) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridPtrOutput)
}

type DashboardLayoutGridOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGrid)(nil)).Elem()
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridOutput() DashboardLayoutGridOutput {
	return o
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridOutputWithContext(ctx context.Context) DashboardLayoutGridOutput {
	return o
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return o.ToDashboardLayoutGridPtrOutputWithContext(context.Background())
}

func (o DashboardLayoutGridOutput) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardLayoutGrid) *DashboardLayoutGrid {
		return &v
	}).(DashboardLayoutGridPtrOutput)
}

func (o DashboardLayoutGridOutput) LayoutStructures() DashboardLayoutGridLayoutStructureArrayOutput {
	return o.ApplyT(func(v DashboardLayoutGrid) []DashboardLayoutGridLayoutStructure { return v.LayoutStructures }).(DashboardLayoutGridLayoutStructureArrayOutput)
}

type DashboardLayoutGridPtrOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardLayoutGrid)(nil)).Elem()
}

func (o DashboardLayoutGridPtrOutput) ToDashboardLayoutGridPtrOutput() DashboardLayoutGridPtrOutput {
	return o
}

func (o DashboardLayoutGridPtrOutput) ToDashboardLayoutGridPtrOutputWithContext(ctx context.Context) DashboardLayoutGridPtrOutput {
	return o
}

func (o DashboardLayoutGridPtrOutput) Elem() DashboardLayoutGridOutput {
	return o.ApplyT(func(v *DashboardLayoutGrid) DashboardLayoutGrid {
		if v != nil {
			return *v
		}
		var ret DashboardLayoutGrid
		return ret
	}).(DashboardLayoutGridOutput)
}

func (o DashboardLayoutGridPtrOutput) LayoutStructures() DashboardLayoutGridLayoutStructureArrayOutput {
	return o.ApplyT(func(v *DashboardLayoutGrid) []DashboardLayoutGridLayoutStructure {
		if v == nil {
			return nil
		}
		return v.LayoutStructures
	}).(DashboardLayoutGridLayoutStructureArrayOutput)
}

type DashboardLayoutGridLayoutStructure struct {
	Key       string `pulumi:"key"`
	Structure string `pulumi:"structure"`
}

// DashboardLayoutGridLayoutStructureInput is an input type that accepts DashboardLayoutGridLayoutStructureArgs and DashboardLayoutGridLayoutStructureOutput values.
// You can construct a concrete instance of `DashboardLayoutGridLayoutStructureInput` via:
//
//          DashboardLayoutGridLayoutStructureArgs{...}
type DashboardLayoutGridLayoutStructureInput interface {
	pulumi.Input

	ToDashboardLayoutGridLayoutStructureOutput() DashboardLayoutGridLayoutStructureOutput
	ToDashboardLayoutGridLayoutStructureOutputWithContext(context.Context) DashboardLayoutGridLayoutStructureOutput
}

type DashboardLayoutGridLayoutStructureArgs struct {
	Key       pulumi.StringInput `pulumi:"key"`
	Structure pulumi.StringInput `pulumi:"structure"`
}

func (DashboardLayoutGridLayoutStructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (i DashboardLayoutGridLayoutStructureArgs) ToDashboardLayoutGridLayoutStructureOutput() DashboardLayoutGridLayoutStructureOutput {
	return i.ToDashboardLayoutGridLayoutStructureOutputWithContext(context.Background())
}

func (i DashboardLayoutGridLayoutStructureArgs) ToDashboardLayoutGridLayoutStructureOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridLayoutStructureOutput)
}

// DashboardLayoutGridLayoutStructureArrayInput is an input type that accepts DashboardLayoutGridLayoutStructureArray and DashboardLayoutGridLayoutStructureArrayOutput values.
// You can construct a concrete instance of `DashboardLayoutGridLayoutStructureArrayInput` via:
//
//          DashboardLayoutGridLayoutStructureArray{ DashboardLayoutGridLayoutStructureArgs{...} }
type DashboardLayoutGridLayoutStructureArrayInput interface {
	pulumi.Input

	ToDashboardLayoutGridLayoutStructureArrayOutput() DashboardLayoutGridLayoutStructureArrayOutput
	ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(context.Context) DashboardLayoutGridLayoutStructureArrayOutput
}

type DashboardLayoutGridLayoutStructureArray []DashboardLayoutGridLayoutStructureInput

func (DashboardLayoutGridLayoutStructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (i DashboardLayoutGridLayoutStructureArray) ToDashboardLayoutGridLayoutStructureArrayOutput() DashboardLayoutGridLayoutStructureArrayOutput {
	return i.ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(context.Background())
}

func (i DashboardLayoutGridLayoutStructureArray) ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardLayoutGridLayoutStructureArrayOutput)
}

type DashboardLayoutGridLayoutStructureOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridLayoutStructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (o DashboardLayoutGridLayoutStructureOutput) ToDashboardLayoutGridLayoutStructureOutput() DashboardLayoutGridLayoutStructureOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureOutput) ToDashboardLayoutGridLayoutStructureOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardLayoutGridLayoutStructure) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardLayoutGridLayoutStructureOutput) Structure() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardLayoutGridLayoutStructure) string { return v.Structure }).(pulumi.StringOutput)
}

type DashboardLayoutGridLayoutStructureArrayOutput struct{ *pulumi.OutputState }

func (DashboardLayoutGridLayoutStructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardLayoutGridLayoutStructure)(nil)).Elem()
}

func (o DashboardLayoutGridLayoutStructureArrayOutput) ToDashboardLayoutGridLayoutStructureArrayOutput() DashboardLayoutGridLayoutStructureArrayOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureArrayOutput) ToDashboardLayoutGridLayoutStructureArrayOutputWithContext(ctx context.Context) DashboardLayoutGridLayoutStructureArrayOutput {
	return o
}

func (o DashboardLayoutGridLayoutStructureArrayOutput) Index(i pulumi.IntInput) DashboardLayoutGridLayoutStructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardLayoutGridLayoutStructure {
		return vs[0].([]DashboardLayoutGridLayoutStructure)[vs[1].(int)]
	}).(DashboardLayoutGridLayoutStructureOutput)
}

type DashboardPanel struct {
	SumoSearchPanel *DashboardPanelSumoSearchPanel `pulumi:"sumoSearchPanel"`
	TextPanel       *DashboardPanelTextPanel       `pulumi:"textPanel"`
}

// DashboardPanelInput is an input type that accepts DashboardPanelArgs and DashboardPanelOutput values.
// You can construct a concrete instance of `DashboardPanelInput` via:
//
//          DashboardPanelArgs{...}
type DashboardPanelInput interface {
	pulumi.Input

	ToDashboardPanelOutput() DashboardPanelOutput
	ToDashboardPanelOutputWithContext(context.Context) DashboardPanelOutput
}

type DashboardPanelArgs struct {
	SumoSearchPanel DashboardPanelSumoSearchPanelPtrInput `pulumi:"sumoSearchPanel"`
	TextPanel       DashboardPanelTextPanelPtrInput       `pulumi:"textPanel"`
}

func (DashboardPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanel)(nil)).Elem()
}

func (i DashboardPanelArgs) ToDashboardPanelOutput() DashboardPanelOutput {
	return i.ToDashboardPanelOutputWithContext(context.Background())
}

func (i DashboardPanelArgs) ToDashboardPanelOutputWithContext(ctx context.Context) DashboardPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelOutput)
}

// DashboardPanelArrayInput is an input type that accepts DashboardPanelArray and DashboardPanelArrayOutput values.
// You can construct a concrete instance of `DashboardPanelArrayInput` via:
//
//          DashboardPanelArray{ DashboardPanelArgs{...} }
type DashboardPanelArrayInput interface {
	pulumi.Input

	ToDashboardPanelArrayOutput() DashboardPanelArrayOutput
	ToDashboardPanelArrayOutputWithContext(context.Context) DashboardPanelArrayOutput
}

type DashboardPanelArray []DashboardPanelInput

func (DashboardPanelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanel)(nil)).Elem()
}

func (i DashboardPanelArray) ToDashboardPanelArrayOutput() DashboardPanelArrayOutput {
	return i.ToDashboardPanelArrayOutputWithContext(context.Background())
}

func (i DashboardPanelArray) ToDashboardPanelArrayOutputWithContext(ctx context.Context) DashboardPanelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelArrayOutput)
}

type DashboardPanelOutput struct{ *pulumi.OutputState }

func (DashboardPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanel)(nil)).Elem()
}

func (o DashboardPanelOutput) ToDashboardPanelOutput() DashboardPanelOutput {
	return o
}

func (o DashboardPanelOutput) ToDashboardPanelOutputWithContext(ctx context.Context) DashboardPanelOutput {
	return o
}

func (o DashboardPanelOutput) SumoSearchPanel() DashboardPanelSumoSearchPanelPtrOutput {
	return o.ApplyT(func(v DashboardPanel) *DashboardPanelSumoSearchPanel { return v.SumoSearchPanel }).(DashboardPanelSumoSearchPanelPtrOutput)
}

func (o DashboardPanelOutput) TextPanel() DashboardPanelTextPanelPtrOutput {
	return o.ApplyT(func(v DashboardPanel) *DashboardPanelTextPanel { return v.TextPanel }).(DashboardPanelTextPanelPtrOutput)
}

type DashboardPanelArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanel)(nil)).Elem()
}

func (o DashboardPanelArrayOutput) ToDashboardPanelArrayOutput() DashboardPanelArrayOutput {
	return o
}

func (o DashboardPanelArrayOutput) ToDashboardPanelArrayOutputWithContext(ctx context.Context) DashboardPanelArrayOutput {
	return o
}

func (o DashboardPanelArrayOutput) Index(i pulumi.IntInput) DashboardPanelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanel {
		return vs[0].([]DashboardPanel)[vs[1].(int)]
	}).(DashboardPanelOutput)
}

type DashboardPanelSumoSearchPanel struct {
	ColoringRule *DashboardPanelSumoSearchPanelColoringRule `pulumi:"coloringRule"`
	// Description of the dashboard.
	Description                            *string                                       `pulumi:"description"`
	Id                                     *string                                       `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent *bool                                         `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    string                                        `pulumi:"key"`
	LinkedDashboard                        *DashboardPanelSumoSearchPanelLinkedDashboard `pulumi:"linkedDashboard"`
	Queries                                []DashboardPanelSumoSearchPanelQuery          `pulumi:"queries"`
	// Time range of the dashboard. See time range schema
	// for details.
	TimeRange *DashboardPanelSumoSearchPanelTimeRange `pulumi:"timeRange"`
	// Title of the dashboard.
	Title          *string `pulumi:"title"`
	VisualSettings *string `pulumi:"visualSettings"`
}

// DashboardPanelSumoSearchPanelInput is an input type that accepts DashboardPanelSumoSearchPanelArgs and DashboardPanelSumoSearchPanelOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelInput` via:
//
//          DashboardPanelSumoSearchPanelArgs{...}
type DashboardPanelSumoSearchPanelInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelOutput() DashboardPanelSumoSearchPanelOutput
	ToDashboardPanelSumoSearchPanelOutputWithContext(context.Context) DashboardPanelSumoSearchPanelOutput
}

type DashboardPanelSumoSearchPanelArgs struct {
	ColoringRule DashboardPanelSumoSearchPanelColoringRulePtrInput `pulumi:"coloringRule"`
	// Description of the dashboard.
	Description                            pulumi.StringPtrInput                                `pulumi:"description"`
	Id                                     pulumi.StringPtrInput                                `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent pulumi.BoolPtrInput                                  `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    pulumi.StringInput                                   `pulumi:"key"`
	LinkedDashboard                        DashboardPanelSumoSearchPanelLinkedDashboardPtrInput `pulumi:"linkedDashboard"`
	Queries                                DashboardPanelSumoSearchPanelQueryArrayInput         `pulumi:"queries"`
	// Time range of the dashboard. See time range schema
	// for details.
	TimeRange DashboardPanelSumoSearchPanelTimeRangePtrInput `pulumi:"timeRange"`
	// Title of the dashboard.
	Title          pulumi.StringPtrInput `pulumi:"title"`
	VisualSettings pulumi.StringPtrInput `pulumi:"visualSettings"`
}

func (DashboardPanelSumoSearchPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelOutput() DashboardPanelSumoSearchPanelOutput {
	return i.ToDashboardPanelSumoSearchPanelOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelOutput)
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelArgs) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelOutput).ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelPtrInput is an input type that accepts DashboardPanelSumoSearchPanelArgs, DashboardPanelSumoSearchPanelPtr and DashboardPanelSumoSearchPanelPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelPtrInput` via:
//
//          DashboardPanelSumoSearchPanelArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput
	ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelPtrOutput
}

type dashboardPanelSumoSearchPanelPtrType DashboardPanelSumoSearchPanelArgs

func DashboardPanelSumoSearchPanelPtr(v *DashboardPanelSumoSearchPanelArgs) DashboardPanelSumoSearchPanelPtrInput {
	return (*dashboardPanelSumoSearchPanelPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelPtrType) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelPtrType) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelPtrOutput)
}

type DashboardPanelSumoSearchPanelOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelOutput() DashboardPanelSumoSearchPanelOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelOutput) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanel {
		return &v
	}).(DashboardPanelSumoSearchPanelPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) ColoringRule() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelColoringRule {
		return v.ColoringRule
	}).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

// Description of the dashboard.
func (o DashboardPanelSumoSearchPanelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *bool { return v.KeepVisualSettingsConsistentWithParent }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) LinkedDashboard() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelLinkedDashboard {
		return v.LinkedDashboard
	}).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) Queries() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) []DashboardPanelSumoSearchPanelQuery { return v.Queries }).(DashboardPanelSumoSearchPanelQueryArrayOutput)
}

// Time range of the dashboard. See time range schema
// for details.
func (o DashboardPanelSumoSearchPanelOutput) TimeRange() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelTimeRange { return v.TimeRange }).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

// Title of the dashboard.
func (o DashboardPanelSumoSearchPanelOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanel) *string { return v.VisualSettings }).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanel)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelPtrOutput) ToDashboardPanelSumoSearchPanelPtrOutput() DashboardPanelSumoSearchPanelPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelPtrOutput) ToDashboardPanelSumoSearchPanelPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Elem() DashboardPanelSumoSearchPanelOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) DashboardPanelSumoSearchPanel {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanel
		return ret
	}).(DashboardPanelSumoSearchPanelOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) ColoringRule() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelColoringRule {
		if v == nil {
			return nil
		}
		return v.ColoringRule
	}).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

// Description of the dashboard.
func (o DashboardPanelSumoSearchPanelPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *bool {
		if v == nil {
			return nil
		}
		return v.KeepVisualSettingsConsistentWithParent
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) LinkedDashboard() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelLinkedDashboard {
		if v == nil {
			return nil
		}
		return v.LinkedDashboard
	}).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) Queries() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) []DashboardPanelSumoSearchPanelQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(DashboardPanelSumoSearchPanelQueryArrayOutput)
}

// Time range of the dashboard. See time range schema
// for details.
func (o DashboardPanelSumoSearchPanelPtrOutput) TimeRange() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *DashboardPanelSumoSearchPanelTimeRange {
		if v == nil {
			return nil
		}
		return v.TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

// Title of the dashboard.
func (o DashboardPanelSumoSearchPanelPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelPtrOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanel) *string {
		if v == nil {
			return nil
		}
		return v.VisualSettings
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRule struct {
	ColorThresholds                 []DashboardPanelSumoSearchPanelColoringRuleColorThreshold `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction string                                                    `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           string                                                    `pulumi:"scope"`
	SingleSeriesAggregateFunction   string                                                    `pulumi:"singleSeriesAggregateFunction"`
}

// DashboardPanelSumoSearchPanelColoringRuleInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleArgs and DashboardPanelSumoSearchPanelColoringRuleOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRuleInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleArgs{...}
type DashboardPanelSumoSearchPanelColoringRuleInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRuleOutput() DashboardPanelSumoSearchPanelColoringRuleOutput
	ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRuleOutput
}

type DashboardPanelSumoSearchPanelColoringRuleArgs struct {
	ColorThresholds                 DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput `pulumi:"colorThresholds"`
	MultipleSeriesAggregateFunction pulumi.StringInput                                                `pulumi:"multipleSeriesAggregateFunction"`
	Scope                           pulumi.StringInput                                                `pulumi:"scope"`
	SingleSeriesAggregateFunction   pulumi.StringInput                                                `pulumi:"singleSeriesAggregateFunction"`
}

func (DashboardPanelSumoSearchPanelColoringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRuleOutput() DashboardPanelSumoSearchPanelColoringRuleOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleOutput)
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleArgs) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleOutput).ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelColoringRulePtrInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleArgs, DashboardPanelSumoSearchPanelColoringRulePtr and DashboardPanelSumoSearchPanelColoringRulePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRulePtrInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelColoringRulePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput
	ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput
}

type dashboardPanelSumoSearchPanelColoringRulePtrType DashboardPanelSumoSearchPanelColoringRuleArgs

func DashboardPanelSumoSearchPanelColoringRulePtr(v *DashboardPanelSumoSearchPanelColoringRuleArgs) DashboardPanelSumoSearchPanelColoringRulePtrInput {
	return (*dashboardPanelSumoSearchPanelColoringRulePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelColoringRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelColoringRulePtrType) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelColoringRulePtrType) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRuleOutput() DashboardPanelSumoSearchPanelColoringRuleOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRuleOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelColoringRule) *DashboardPanelSumoSearchPanelColoringRule {
		return &v
	}).(DashboardPanelSumoSearchPanelColoringRulePtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) ColorThresholds() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) []DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
		return v.ColorThresholds
	}).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) MultipleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) string { return v.MultipleSeriesAggregateFunction }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) string { return v.Scope }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleOutput) SingleSeriesAggregateFunction() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRule) string { return v.SingleSeriesAggregateFunction }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelColoringRulePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelColoringRule)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutput() DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) ToDashboardPanelSumoSearchPanelColoringRulePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRulePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) Elem() DashboardPanelSumoSearchPanelColoringRuleOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) DashboardPanelSumoSearchPanelColoringRule {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelColoringRule
		return ret
	}).(DashboardPanelSumoSearchPanelColoringRuleOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) ColorThresholds() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) []DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
		if v == nil {
			return nil
		}
		return v.ColorThresholds
	}).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) MultipleSeriesAggregateFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) *string {
		if v == nil {
			return nil
		}
		return &v.MultipleSeriesAggregateFunction
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRulePtrOutput) SingleSeriesAggregateFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelColoringRule) *string {
		if v == nil {
			return nil
		}
		return &v.SingleSeriesAggregateFunction
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleColorThreshold struct {
	Color string   `pulumi:"color"`
	Max   *float64 `pulumi:"max"`
	Min   *float64 `pulumi:"min"`
}

// DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs and DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs{...}
type DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput
	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs struct {
	Color pulumi.StringInput     `pulumi:"color"`
	Max   pulumi.Float64PtrInput `pulumi:"max"`
	Min   pulumi.Float64PtrInput `pulumi:"min"`
}

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput)
}

// DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput is an input type that accepts DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray and DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput` via:
//
//          DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray{ DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs{...} }
type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput
	ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray []DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRuleColorThreshold) string { return v.Color }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRuleColorThreshold) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelColoringRuleColorThreshold) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

type DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelColoringRuleColorThreshold)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput() DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) ToDashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
		return vs[0].([]DashboardPanelSumoSearchPanelColoringRuleColorThreshold)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput)
}

type DashboardPanelSumoSearchPanelLinkedDashboard struct {
	Id               string  `pulumi:"id"`
	IncludeTimeRange *bool   `pulumi:"includeTimeRange"`
	IncludeVariables *bool   `pulumi:"includeVariables"`
	RelativePath     *string `pulumi:"relativePath"`
}

// DashboardPanelSumoSearchPanelLinkedDashboardInput is an input type that accepts DashboardPanelSumoSearchPanelLinkedDashboardArgs and DashboardPanelSumoSearchPanelLinkedDashboardOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelLinkedDashboardInput` via:
//
//          DashboardPanelSumoSearchPanelLinkedDashboardArgs{...}
type DashboardPanelSumoSearchPanelLinkedDashboardInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelLinkedDashboardOutput() DashboardPanelSumoSearchPanelLinkedDashboardOutput
	ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(context.Context) DashboardPanelSumoSearchPanelLinkedDashboardOutput
}

type DashboardPanelSumoSearchPanelLinkedDashboardArgs struct {
	Id               pulumi.StringInput    `pulumi:"id"`
	IncludeTimeRange pulumi.BoolPtrInput   `pulumi:"includeTimeRange"`
	IncludeVariables pulumi.BoolPtrInput   `pulumi:"includeVariables"`
	RelativePath     pulumi.StringPtrInput `pulumi:"relativePath"`
}

func (DashboardPanelSumoSearchPanelLinkedDashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardOutput() DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return i.ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelLinkedDashboardOutput)
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelLinkedDashboardArgs) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelLinkedDashboardOutput).ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelLinkedDashboardPtrInput is an input type that accepts DashboardPanelSumoSearchPanelLinkedDashboardArgs, DashboardPanelSumoSearchPanelLinkedDashboardPtr and DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelLinkedDashboardPtrInput` via:
//
//          DashboardPanelSumoSearchPanelLinkedDashboardArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelLinkedDashboardPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput
	ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput
}

type dashboardPanelSumoSearchPanelLinkedDashboardPtrType DashboardPanelSumoSearchPanelLinkedDashboardArgs

func DashboardPanelSumoSearchPanelLinkedDashboardPtr(v *DashboardPanelSumoSearchPanelLinkedDashboardArgs) DashboardPanelSumoSearchPanelLinkedDashboardPtrInput {
	return (*dashboardPanelSumoSearchPanelLinkedDashboardPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelLinkedDashboardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelLinkedDashboardPtrType) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelLinkedDashboardPtrType) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

type DashboardPanelSumoSearchPanelLinkedDashboardOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelLinkedDashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardOutput() DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelLinkedDashboard) *DashboardPanelSumoSearchPanelLinkedDashboard {
		return &v
	}).(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) string { return v.Id }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) IncludeTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *bool { return v.IncludeTimeRange }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) IncludeVariables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *bool { return v.IncludeVariables }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelLinkedDashboard) *string { return v.RelativePath }).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelLinkedDashboard)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutput() DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) ToDashboardPanelSumoSearchPanelLinkedDashboardPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) Elem() DashboardPanelSumoSearchPanelLinkedDashboardOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) DashboardPanelSumoSearchPanelLinkedDashboard {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelLinkedDashboard
		return ret
	}).(DashboardPanelSumoSearchPanelLinkedDashboardOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) IncludeTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTimeRange
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) IncludeVariables() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeVariables
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput) RelativePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelLinkedDashboard) *string {
		if v == nil {
			return nil
		}
		return v.RelativePath
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelQuery struct {
	MetricsQueryData *DashboardPanelSumoSearchPanelQueryMetricsQueryData `pulumi:"metricsQueryData"`
	MetricsQueryMode *string                                             `pulumi:"metricsQueryMode"`
	QueryKey         string                                              `pulumi:"queryKey"`
	QueryString      string                                              `pulumi:"queryString"`
	QueryType        string                                              `pulumi:"queryType"`
}

// DashboardPanelSumoSearchPanelQueryInput is an input type that accepts DashboardPanelSumoSearchPanelQueryArgs and DashboardPanelSumoSearchPanelQueryOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryInput` via:
//
//          DashboardPanelSumoSearchPanelQueryArgs{...}
type DashboardPanelSumoSearchPanelQueryInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryOutput() DashboardPanelSumoSearchPanelQueryOutput
	ToDashboardPanelSumoSearchPanelQueryOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryOutput
}

type DashboardPanelSumoSearchPanelQueryArgs struct {
	MetricsQueryData DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput `pulumi:"metricsQueryData"`
	MetricsQueryMode pulumi.StringPtrInput                                      `pulumi:"metricsQueryMode"`
	QueryKey         pulumi.StringInput                                         `pulumi:"queryKey"`
	QueryString      pulumi.StringInput                                         `pulumi:"queryString"`
	QueryType        pulumi.StringInput                                         `pulumi:"queryType"`
}

func (DashboardPanelSumoSearchPanelQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryArgs) ToDashboardPanelSumoSearchPanelQueryOutput() DashboardPanelSumoSearchPanelQueryOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryArgs) ToDashboardPanelSumoSearchPanelQueryOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryOutput)
}

// DashboardPanelSumoSearchPanelQueryArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryArray and DashboardPanelSumoSearchPanelQueryArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryArray{ DashboardPanelSumoSearchPanelQueryArgs{...} }
type DashboardPanelSumoSearchPanelQueryArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryArrayOutput() DashboardPanelSumoSearchPanelQueryArrayOutput
	ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryArrayOutput
}

type DashboardPanelSumoSearchPanelQueryArray []DashboardPanelSumoSearchPanelQueryInput

func (DashboardPanelSumoSearchPanelQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryArray) ToDashboardPanelSumoSearchPanelQueryArrayOutput() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryArray) ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryOutput) ToDashboardPanelSumoSearchPanelQueryOutput() DashboardPanelSumoSearchPanelQueryOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryOutput) ToDashboardPanelSumoSearchPanelQueryOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryOutput) MetricsQueryData() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) *DashboardPanelSumoSearchPanelQueryMetricsQueryData {
		return v.MetricsQueryData
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) MetricsQueryMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) *string { return v.MetricsQueryMode }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) QueryKey() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) string { return v.QueryKey }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) QueryString() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) string { return v.QueryString }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQuery) string { return v.QueryType }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelQueryArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQuery)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryArrayOutput) ToDashboardPanelSumoSearchPanelQueryArrayOutput() DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryArrayOutput) ToDashboardPanelSumoSearchPanelQueryArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQuery {
		return vs[0].([]DashboardPanelSumoSearchPanelQuery)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryData struct {
	AggregationType *string                                                      `pulumi:"aggregationType"`
	Filters         []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter   `pulumi:"filters"`
	GroupBy         *string                                                      `pulumi:"groupBy"`
	Metric          string                                                       `pulumi:"metric"`
	Operators       []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator `pulumi:"operators"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs struct {
	AggregationType pulumi.StringPtrInput                                                `pulumi:"aggregationType"`
	Filters         DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput   `pulumi:"filters"`
	GroupBy         pulumi.StringPtrInput                                                `pulumi:"groupBy"`
	Metric          pulumi.StringInput                                                   `pulumi:"metric"`
	Operators       DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput `pulumi:"operators"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput)
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput).ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs, DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtr and DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput
}

type dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs

func DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtr(v *DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput {
	return (*dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrType) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelQueryMetricsQueryData) *DashboardPanelSumoSearchPanelQueryMetricsQueryData {
		return &v
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string { return v.AggregationType }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) Filters() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
		return v.Filters
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) string { return v.Metric }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput) Operators() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
		return v.Operators
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelQueryMetricsQueryData)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Elem() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) DashboardPanelSumoSearchPanelQueryMetricsQueryData {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelQueryMetricsQueryData
		return ret
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string {
		if v == nil {
			return nil
		}
		return v.AggregationType
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Filters() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string {
		if v == nil {
			return nil
		}
		return v.GroupBy
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput) Operators() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelQueryMetricsQueryData) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
		if v == nil {
			return nil
		}
		return v.Operators
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter struct {
	Key      string `pulumi:"key"`
	Negation *bool  `pulumi:"negation"`
	Value    string `pulumi:"value"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs struct {
	Key      pulumi.StringInput  `pulumi:"key"`
	Negation pulumi.BoolPtrInput `pulumi:"negation"`
	Value    pulumi.StringInput  `pulumi:"value"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray and DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray{ DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs{...} }
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray []DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) Negation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter) *bool { return v.Negation }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter) string { return v.Value }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
		return vs[0].([]DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator struct {
	OperatorName string                                                                `pulumi:"operatorName"`
	Parameters   []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter `pulumi:"parameters"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs struct {
	OperatorName pulumi.StringInput                                                            `pulumi:"operatorName"`
	Parameters   DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput `pulumi:"parameters"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray{ DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs{...} }
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) OperatorName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator) string { return v.OperatorName }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput) Parameters() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator) []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter {
		return v.Parameters
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
		return vs[0].([]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs{...}
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput)
}

// DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput is an input type that accepts DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray and DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput` via:
//
//          DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray{ DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs{...} }
type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput
	ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray []DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return i.ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter) string { return v.Value }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput() DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) ToDashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput) Index(i pulumi.IntInput) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter {
		return vs[0].([]DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter)[vs[1].(int)]
	}).(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput)
}

type DashboardPanelSumoSearchPanelTimeRange struct {
	BeginBoundedTimeRange    *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// DashboardPanelSumoSearchPanelTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeArgs struct {
	BeginBoundedTimeRange    DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (DashboardPanelSumoSearchPanelTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) BeginBoundedTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		return v.BeginBoundedTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeOutput) CompleteLiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRange) DashboardPanelSumoSearchPanelTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) BeginBoundedTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangePtrOutput) CompleteLiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRange) *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange struct {
	From DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	To   *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo  `pulumi:"to"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs struct {
	From DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput  `pulumi:"from"`
	To   DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) From() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput) To() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) From() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput) To() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom struct {
	EpochTimeRange    *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs struct {
	EpochTimeRange    DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int {
		return v.EpochMillis
	}).(pulumi.IntOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string {
		return v.Iso8601Time
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string {
		return v.RangeName
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string {
		return v.RelativeTime
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo struct {
	EpochTimeRange    *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs struct {
	EpochTimeRange    DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int {
		return v.EpochMillis
	}).(pulumi.IntOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string {
		return v.Iso8601Time
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string {
		return v.RangeName
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string {
		return v.RelativeTime
	}).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs and DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs{...}
type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput
	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput).ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs, DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtr and DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//          DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput
	ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput
}

type dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs

func DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtr(v *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange
		return ret
	}).(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput)
}

func (o DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardPanelTextPanel struct {
	Id                                     *string `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent *bool   `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    string  `pulumi:"key"`
	Text                                   *string `pulumi:"text"`
	// Title of the dashboard.
	Title          *string `pulumi:"title"`
	VisualSettings *string `pulumi:"visualSettings"`
}

// DashboardPanelTextPanelInput is an input type that accepts DashboardPanelTextPanelArgs and DashboardPanelTextPanelOutput values.
// You can construct a concrete instance of `DashboardPanelTextPanelInput` via:
//
//          DashboardPanelTextPanelArgs{...}
type DashboardPanelTextPanelInput interface {
	pulumi.Input

	ToDashboardPanelTextPanelOutput() DashboardPanelTextPanelOutput
	ToDashboardPanelTextPanelOutputWithContext(context.Context) DashboardPanelTextPanelOutput
}

type DashboardPanelTextPanelArgs struct {
	Id                                     pulumi.StringPtrInput `pulumi:"id"`
	KeepVisualSettingsConsistentWithParent pulumi.BoolPtrInput   `pulumi:"keepVisualSettingsConsistentWithParent"`
	Key                                    pulumi.StringInput    `pulumi:"key"`
	Text                                   pulumi.StringPtrInput `pulumi:"text"`
	// Title of the dashboard.
	Title          pulumi.StringPtrInput `pulumi:"title"`
	VisualSettings pulumi.StringPtrInput `pulumi:"visualSettings"`
}

func (DashboardPanelTextPanelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelTextPanel)(nil)).Elem()
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelOutput() DashboardPanelTextPanelOutput {
	return i.ToDashboardPanelTextPanelOutputWithContext(context.Background())
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelOutputWithContext(ctx context.Context) DashboardPanelTextPanelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTextPanelOutput)
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return i.ToDashboardPanelTextPanelPtrOutputWithContext(context.Background())
}

func (i DashboardPanelTextPanelArgs) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTextPanelOutput).ToDashboardPanelTextPanelPtrOutputWithContext(ctx)
}

// DashboardPanelTextPanelPtrInput is an input type that accepts DashboardPanelTextPanelArgs, DashboardPanelTextPanelPtr and DashboardPanelTextPanelPtrOutput values.
// You can construct a concrete instance of `DashboardPanelTextPanelPtrInput` via:
//
//          DashboardPanelTextPanelArgs{...}
//
//  or:
//
//          nil
type DashboardPanelTextPanelPtrInput interface {
	pulumi.Input

	ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput
	ToDashboardPanelTextPanelPtrOutputWithContext(context.Context) DashboardPanelTextPanelPtrOutput
}

type dashboardPanelTextPanelPtrType DashboardPanelTextPanelArgs

func DashboardPanelTextPanelPtr(v *DashboardPanelTextPanelArgs) DashboardPanelTextPanelPtrInput {
	return (*dashboardPanelTextPanelPtrType)(v)
}

func (*dashboardPanelTextPanelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelTextPanel)(nil)).Elem()
}

func (i *dashboardPanelTextPanelPtrType) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return i.ToDashboardPanelTextPanelPtrOutputWithContext(context.Background())
}

func (i *dashboardPanelTextPanelPtrType) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardPanelTextPanelPtrOutput)
}

type DashboardPanelTextPanelOutput struct{ *pulumi.OutputState }

func (DashboardPanelTextPanelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardPanelTextPanel)(nil)).Elem()
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelOutput() DashboardPanelTextPanelOutput {
	return o
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelOutputWithContext(ctx context.Context) DashboardPanelTextPanelOutput {
	return o
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return o.ToDashboardPanelTextPanelPtrOutputWithContext(context.Background())
}

func (o DashboardPanelTextPanelOutput) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardPanelTextPanel) *DashboardPanelTextPanel {
		return &v
	}).(DashboardPanelTextPanelPtrOutput)
}

func (o DashboardPanelTextPanelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *bool { return v.KeepVisualSettingsConsistentWithParent }).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelTextPanelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) string { return v.Key }).(pulumi.StringOutput)
}

func (o DashboardPanelTextPanelOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.Text }).(pulumi.StringPtrOutput)
}

// Title of the dashboard.
func (o DashboardPanelTextPanelOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardPanelTextPanel) *string { return v.VisualSettings }).(pulumi.StringPtrOutput)
}

type DashboardPanelTextPanelPtrOutput struct{ *pulumi.OutputState }

func (DashboardPanelTextPanelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardPanelTextPanel)(nil)).Elem()
}

func (o DashboardPanelTextPanelPtrOutput) ToDashboardPanelTextPanelPtrOutput() DashboardPanelTextPanelPtrOutput {
	return o
}

func (o DashboardPanelTextPanelPtrOutput) ToDashboardPanelTextPanelPtrOutputWithContext(ctx context.Context) DashboardPanelTextPanelPtrOutput {
	return o
}

func (o DashboardPanelTextPanelPtrOutput) Elem() DashboardPanelTextPanelOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) DashboardPanelTextPanel {
		if v != nil {
			return *v
		}
		var ret DashboardPanelTextPanel
		return ret
	}).(DashboardPanelTextPanelOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) KeepVisualSettingsConsistentWithParent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *bool {
		if v == nil {
			return nil
		}
		return v.KeepVisualSettingsConsistentWithParent
	}).(pulumi.BoolPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

// Title of the dashboard.
func (o DashboardPanelTextPanelPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o DashboardPanelTextPanelPtrOutput) VisualSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardPanelTextPanel) *string {
		if v == nil {
			return nil
		}
		return v.VisualSettings
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRange struct {
	BeginBoundedTimeRange    *DashboardTimeRangeBeginBoundedTimeRange    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange *DashboardTimeRangeCompleteLiteralTimeRange `pulumi:"completeLiteralTimeRange"`
}

// DashboardTimeRangeInput is an input type that accepts DashboardTimeRangeArgs and DashboardTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeInput` via:
//
//          DashboardTimeRangeArgs{...}
type DashboardTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeOutput() DashboardTimeRangeOutput
	ToDashboardTimeRangeOutputWithContext(context.Context) DashboardTimeRangeOutput
}

type DashboardTimeRangeArgs struct {
	BeginBoundedTimeRange    DashboardTimeRangeBeginBoundedTimeRangePtrInput    `pulumi:"beginBoundedTimeRange"`
	CompleteLiteralTimeRange DashboardTimeRangeCompleteLiteralTimeRangePtrInput `pulumi:"completeLiteralTimeRange"`
}

func (DashboardTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangeOutput() DashboardTimeRangeOutput {
	return i.ToDashboardTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeOutput)
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return i.ToDashboardTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeArgs) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeOutput).ToDashboardTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangePtrInput is an input type that accepts DashboardTimeRangeArgs, DashboardTimeRangePtr and DashboardTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangePtrInput` via:
//
//          DashboardTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput
	ToDashboardTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangePtrOutput
}

type dashboardTimeRangePtrType DashboardTimeRangeArgs

func DashboardTimeRangePtr(v *DashboardTimeRangeArgs) DashboardTimeRangePtrInput {
	return (*dashboardTimeRangePtrType)(v)
}

func (*dashboardTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangePtrType) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return i.ToDashboardTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangePtrType) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangePtrOutput)
}

type DashboardTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangeOutput() DashboardTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return o.ToDashboardTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeOutput) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRange) *DashboardTimeRange {
		return &v
	}).(DashboardTimeRangePtrOutput)
}

func (o DashboardTimeRangeOutput) BeginBoundedTimeRange() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRange) *DashboardTimeRangeBeginBoundedTimeRange { return v.BeginBoundedTimeRange }).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardTimeRangeOutput) CompleteLiteralTimeRange() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRange) *DashboardTimeRangeCompleteLiteralTimeRange {
		return v.CompleteLiteralTimeRange
	}).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangePtrOutput) ToDashboardTimeRangePtrOutput() DashboardTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangePtrOutput) ToDashboardTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangePtrOutput) Elem() DashboardTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRange) DashboardTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRange
		return ret
	}).(DashboardTimeRangeOutput)
}

func (o DashboardTimeRangePtrOutput) BeginBoundedTimeRange() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRange) *DashboardTimeRangeBeginBoundedTimeRange {
		if v == nil {
			return nil
		}
		return v.BeginBoundedTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardTimeRangePtrOutput) CompleteLiteralTimeRange() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRange) *DashboardTimeRangeCompleteLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.CompleteLiteralTimeRange
	}).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRange struct {
	From DashboardTimeRangeBeginBoundedTimeRangeFrom `pulumi:"from"`
	To   *DashboardTimeRangeBeginBoundedTimeRangeTo  `pulumi:"to"`
}

// DashboardTimeRangeBeginBoundedTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeArgs struct {
	From DashboardTimeRangeBeginBoundedTimeRangeFromInput  `pulumi:"from"`
	To   DashboardTimeRangeBeginBoundedTimeRangeToPtrInput `pulumi:"to"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) From() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFrom {
		return v.From
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeOutput) To() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeTo {
		return v.To
	}).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRange) DashboardTimeRangeBeginBoundedTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) From() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFrom {
		if v == nil {
			return nil
		}
		return &v.From
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangePtrOutput) To() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeTo {
		if v == nil {
			return nil
		}
		return v.To
	}).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFrom struct {
	EpochTimeRange    *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromArgs and DashboardTimeRangeBeginBoundedTimeRangeFromOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromOutput() DashboardTimeRangeBeginBoundedTimeRangeFromOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromArgs struct {
	EpochTimeRange    DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutput() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromArgs, DashboardTimeRangeBeginBoundedTimeRangeFromPtr and DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromPtrType DashboardTimeRangeBeginBoundedTimeRangeFromArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromPtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromArgs) DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromPtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutput() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFrom {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFrom)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) DashboardTimeRangeBeginBoundedTimeRangeFrom {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeFrom
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFrom) *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeTo struct {
	EpochTimeRange    *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange  `pulumi:"literalTimeRange"`
	RelativeTimeRange *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange `pulumi:"relativeTimeRange"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToArgs and DashboardTimeRangeBeginBoundedTimeRangeToOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToOutput() DashboardTimeRangeBeginBoundedTimeRangeToOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToArgs struct {
	EpochTimeRange    DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput    `pulumi:"epochTimeRange"`
	Iso8601TimeRange  DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput  `pulumi:"iso8601TimeRange"`
	LiteralTimeRange  DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput  `pulumi:"literalTimeRange"`
	RelativeTimeRange DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput `pulumi:"relativeTimeRange"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToOutput() DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToPtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToArgs, DashboardTimeRangeBeginBoundedTimeRangeToPtr and DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToPtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToPtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToPtrType DashboardTimeRangeBeginBoundedTimeRangeToArgs

func DashboardTimeRangeBeginBoundedTimeRangeToPtr(v *DashboardTimeRangeBeginBoundedTimeRangeToArgs) DashboardTimeRangeBeginBoundedTimeRangeToPtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToPtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToPtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToOutput() DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeTo {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeTo)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToPtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) DashboardTimeRangeBeginBoundedTimeRangeTo {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeTo
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeToOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) EpochTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v == nil {
			return nil
		}
		return v.EpochTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) Iso8601TimeRange() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v == nil {
			return nil
		}
		return v.Iso8601TimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) LiteralTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v == nil {
			return nil
		}
		return v.LiteralTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput) RelativeTimeRange() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeTo) *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v == nil {
			return nil
		}
		return v.RelativeTimeRange
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange struct {
	EpochMillis int `pulumi:"epochMillis"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs struct {
	EpochMillis pulumi.IntInput `pulumi:"epochMillis"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput) EpochMillis() pulumi.IntOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) int { return v.EpochMillis }).(pulumi.IntOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput) EpochMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange) *int {
		if v == nil {
			return nil
		}
		return &v.EpochMillis
	}).(pulumi.IntPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange struct {
	Iso8601Time string `pulumi:"iso8601Time"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs struct {
	Iso8601Time pulumi.StringInput `pulumi:"iso8601Time"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput) Iso8601Time() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) string { return v.Iso8601Time }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput) Iso8601Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.Iso8601Time
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange struct {
	RelativeTime string `pulumi:"relativeTime"`
}

// DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs and DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs struct {
	RelativeTime pulumi.StringInput `pulumi:"relativeTime"`
}

func (DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput).ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput is an input type that accepts DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs, DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr and DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput` via:
//
//          DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
	ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput
}

type dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs

func DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtr(v *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput {
	return (*dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType)(v)
}

func (*dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return i.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrType) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		return &v
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput) RelativeTime() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) string { return v.RelativeTime }).(pulumi.StringOutput)
}

type DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) ToDashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) Elem() DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange
		return ret
	}).(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput)
}

func (o DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput) RelativeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeTime
	}).(pulumi.StringPtrOutput)
}

type DashboardTimeRangeCompleteLiteralTimeRange struct {
	RangeName string `pulumi:"rangeName"`
}

// DashboardTimeRangeCompleteLiteralTimeRangeInput is an input type that accepts DashboardTimeRangeCompleteLiteralTimeRangeArgs and DashboardTimeRangeCompleteLiteralTimeRangeOutput values.
// You can construct a concrete instance of `DashboardTimeRangeCompleteLiteralTimeRangeInput` via:
//
//          DashboardTimeRangeCompleteLiteralTimeRangeArgs{...}
type DashboardTimeRangeCompleteLiteralTimeRangeInput interface {
	pulumi.Input

	ToDashboardTimeRangeCompleteLiteralTimeRangeOutput() DashboardTimeRangeCompleteLiteralTimeRangeOutput
	ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Context) DashboardTimeRangeCompleteLiteralTimeRangeOutput
}

type DashboardTimeRangeCompleteLiteralTimeRangeArgs struct {
	RangeName pulumi.StringInput `pulumi:"rangeName"`
}

func (DashboardTimeRangeCompleteLiteralTimeRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangeOutput() DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return i.ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(context.Background())
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeCompleteLiteralTimeRangeOutput)
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i DashboardTimeRangeCompleteLiteralTimeRangeArgs) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeCompleteLiteralTimeRangeOutput).ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx)
}

// DashboardTimeRangeCompleteLiteralTimeRangePtrInput is an input type that accepts DashboardTimeRangeCompleteLiteralTimeRangeArgs, DashboardTimeRangeCompleteLiteralTimeRangePtr and DashboardTimeRangeCompleteLiteralTimeRangePtrOutput values.
// You can construct a concrete instance of `DashboardTimeRangeCompleteLiteralTimeRangePtrInput` via:
//
//          DashboardTimeRangeCompleteLiteralTimeRangeArgs{...}
//
//  or:
//
//          nil
type DashboardTimeRangeCompleteLiteralTimeRangePtrInput interface {
	pulumi.Input

	ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput
	ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput
}

type dashboardTimeRangeCompleteLiteralTimeRangePtrType DashboardTimeRangeCompleteLiteralTimeRangeArgs

func DashboardTimeRangeCompleteLiteralTimeRangePtr(v *DashboardTimeRangeCompleteLiteralTimeRangeArgs) DashboardTimeRangeCompleteLiteralTimeRangePtrInput {
	return (*dashboardTimeRangeCompleteLiteralTimeRangePtrType)(v)
}

func (*dashboardTimeRangeCompleteLiteralTimeRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (i *dashboardTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return i.ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (i *dashboardTimeRangeCompleteLiteralTimeRangePtrType) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

type DashboardTimeRangeCompleteLiteralTimeRangeOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeCompleteLiteralTimeRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangeOutput() DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangeOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(context.Background())
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTimeRangeCompleteLiteralTimeRange) *DashboardTimeRangeCompleteLiteralTimeRange {
		return &v
	}).(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput)
}

func (o DashboardTimeRangeCompleteLiteralTimeRangeOutput) RangeName() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTimeRangeCompleteLiteralTimeRange) string { return v.RangeName }).(pulumi.StringOutput)
}

type DashboardTimeRangeCompleteLiteralTimeRangePtrOutput struct{ *pulumi.OutputState }

func (DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTimeRangeCompleteLiteralTimeRange)(nil)).Elem()
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutput() DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) ToDashboardTimeRangeCompleteLiteralTimeRangePtrOutputWithContext(ctx context.Context) DashboardTimeRangeCompleteLiteralTimeRangePtrOutput {
	return o
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) Elem() DashboardTimeRangeCompleteLiteralTimeRangeOutput {
	return o.ApplyT(func(v *DashboardTimeRangeCompleteLiteralTimeRange) DashboardTimeRangeCompleteLiteralTimeRange {
		if v != nil {
			return *v
		}
		var ret DashboardTimeRangeCompleteLiteralTimeRange
		return ret
	}).(DashboardTimeRangeCompleteLiteralTimeRangeOutput)
}

func (o DashboardTimeRangeCompleteLiteralTimeRangePtrOutput) RangeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardTimeRangeCompleteLiteralTimeRange) *string {
		if v == nil {
			return nil
		}
		return &v.RangeName
	}).(pulumi.StringPtrOutput)
}

type DashboardTopologyLabelMap struct {
	Datas []DashboardTopologyLabelMapData `pulumi:"datas"`
}

// DashboardTopologyLabelMapInput is an input type that accepts DashboardTopologyLabelMap and DashboardTopologyLabelMapOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapInput` via:
//
//          DashboardTopologyLabelMap{ "key": DashboardTopologyLabelArgs{...} }
type DashboardTopologyLabelMapInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapOutput() DashboardTopologyLabelMapOutput
	ToDashboardTopologyLabelMapOutputWithContext(context.Context) DashboardTopologyLabelMapOutput
}

type DashboardTopologyLabelMapArgs struct {
	Datas DashboardTopologyLabelMapDataArrayInput `pulumi:"datas"`
}

func (DashboardTopologyLabelMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMap)(nil)).Elem()
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapOutput() DashboardTopologyLabelMapOutput {
	return i.ToDashboardTopologyLabelMapOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapOutputWithContext(ctx context.Context) DashboardTopologyLabelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapOutput)
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return i.ToDashboardTopologyLabelMapPtrOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapArgs) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapOutput).ToDashboardTopologyLabelMapPtrOutputWithContext(ctx)
}

// DashboardTopologyLabelMapPtrInput is an input type that accepts DashboardTopologyLabelMapArgs, DashboardTopologyLabelMapPtr and DashboardTopologyLabelMapPtrOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapPtrInput` via:
//
//          DashboardTopologyLabelMapArgs{...}
//
//  or:
//
//          nil
type DashboardTopologyLabelMapPtrInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput
	ToDashboardTopologyLabelMapPtrOutputWithContext(context.Context) DashboardTopologyLabelMapPtrOutput
}

type dashboardTopologyLabelMapPtrType DashboardTopologyLabelMapArgs

func DashboardTopologyLabelMapPtr(v *DashboardTopologyLabelMapArgs) DashboardTopologyLabelMapPtrInput {
	return (*dashboardTopologyLabelMapPtrType)(v)
}

func (*dashboardTopologyLabelMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopologyLabelMap)(nil)).Elem()
}

func (i *dashboardTopologyLabelMapPtrType) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return i.ToDashboardTopologyLabelMapPtrOutputWithContext(context.Background())
}

func (i *dashboardTopologyLabelMapPtrType) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapPtrOutput)
}

type DashboardTopologyLabelMapOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMap)(nil)).Elem()
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapOutput() DashboardTopologyLabelMapOutput {
	return o
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapOutputWithContext(ctx context.Context) DashboardTopologyLabelMapOutput {
	return o
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return o.ToDashboardTopologyLabelMapPtrOutputWithContext(context.Background())
}

func (o DashboardTopologyLabelMapOutput) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardTopologyLabelMap) *DashboardTopologyLabelMap {
		return &v
	}).(DashboardTopologyLabelMapPtrOutput)
}

func (o DashboardTopologyLabelMapOutput) Datas() DashboardTopologyLabelMapDataArrayOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMap) []DashboardTopologyLabelMapData { return v.Datas }).(DashboardTopologyLabelMapDataArrayOutput)
}

type DashboardTopologyLabelMapPtrOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardTopologyLabelMap)(nil)).Elem()
}

func (o DashboardTopologyLabelMapPtrOutput) ToDashboardTopologyLabelMapPtrOutput() DashboardTopologyLabelMapPtrOutput {
	return o
}

func (o DashboardTopologyLabelMapPtrOutput) ToDashboardTopologyLabelMapPtrOutputWithContext(ctx context.Context) DashboardTopologyLabelMapPtrOutput {
	return o
}

func (o DashboardTopologyLabelMapPtrOutput) Elem() DashboardTopologyLabelMapOutput {
	return o.ApplyT(func(v *DashboardTopologyLabelMap) DashboardTopologyLabelMap {
		if v != nil {
			return *v
		}
		var ret DashboardTopologyLabelMap
		return ret
	}).(DashboardTopologyLabelMapOutput)
}

func (o DashboardTopologyLabelMapPtrOutput) Datas() DashboardTopologyLabelMapDataArrayOutput {
	return o.ApplyT(func(v *DashboardTopologyLabelMap) []DashboardTopologyLabelMapData {
		if v == nil {
			return nil
		}
		return v.Datas
	}).(DashboardTopologyLabelMapDataArrayOutput)
}

type DashboardTopologyLabelMapData struct {
	Label  string   `pulumi:"label"`
	Values []string `pulumi:"values"`
}

// DashboardTopologyLabelMapDataInput is an input type that accepts DashboardTopologyLabelMapDataArgs and DashboardTopologyLabelMapDataOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapDataInput` via:
//
//          DashboardTopologyLabelMapDataArgs{...}
type DashboardTopologyLabelMapDataInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapDataOutput() DashboardTopologyLabelMapDataOutput
	ToDashboardTopologyLabelMapDataOutputWithContext(context.Context) DashboardTopologyLabelMapDataOutput
}

type DashboardTopologyLabelMapDataArgs struct {
	Label  pulumi.StringInput      `pulumi:"label"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (DashboardTopologyLabelMapDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMapData)(nil)).Elem()
}

func (i DashboardTopologyLabelMapDataArgs) ToDashboardTopologyLabelMapDataOutput() DashboardTopologyLabelMapDataOutput {
	return i.ToDashboardTopologyLabelMapDataOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapDataArgs) ToDashboardTopologyLabelMapDataOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapDataOutput)
}

// DashboardTopologyLabelMapDataArrayInput is an input type that accepts DashboardTopologyLabelMapDataArray and DashboardTopologyLabelMapDataArrayOutput values.
// You can construct a concrete instance of `DashboardTopologyLabelMapDataArrayInput` via:
//
//          DashboardTopologyLabelMapDataArray{ DashboardTopologyLabelMapDataArgs{...} }
type DashboardTopologyLabelMapDataArrayInput interface {
	pulumi.Input

	ToDashboardTopologyLabelMapDataArrayOutput() DashboardTopologyLabelMapDataArrayOutput
	ToDashboardTopologyLabelMapDataArrayOutputWithContext(context.Context) DashboardTopologyLabelMapDataArrayOutput
}

type DashboardTopologyLabelMapDataArray []DashboardTopologyLabelMapDataInput

func (DashboardTopologyLabelMapDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTopologyLabelMapData)(nil)).Elem()
}

func (i DashboardTopologyLabelMapDataArray) ToDashboardTopologyLabelMapDataArrayOutput() DashboardTopologyLabelMapDataArrayOutput {
	return i.ToDashboardTopologyLabelMapDataArrayOutputWithContext(context.Background())
}

func (i DashboardTopologyLabelMapDataArray) ToDashboardTopologyLabelMapDataArrayOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardTopologyLabelMapDataArrayOutput)
}

type DashboardTopologyLabelMapDataOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardTopologyLabelMapData)(nil)).Elem()
}

func (o DashboardTopologyLabelMapDataOutput) ToDashboardTopologyLabelMapDataOutput() DashboardTopologyLabelMapDataOutput {
	return o
}

func (o DashboardTopologyLabelMapDataOutput) ToDashboardTopologyLabelMapDataOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataOutput {
	return o
}

func (o DashboardTopologyLabelMapDataOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMapData) string { return v.Label }).(pulumi.StringOutput)
}

func (o DashboardTopologyLabelMapDataOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DashboardTopologyLabelMapData) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type DashboardTopologyLabelMapDataArrayOutput struct{ *pulumi.OutputState }

func (DashboardTopologyLabelMapDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardTopologyLabelMapData)(nil)).Elem()
}

func (o DashboardTopologyLabelMapDataArrayOutput) ToDashboardTopologyLabelMapDataArrayOutput() DashboardTopologyLabelMapDataArrayOutput {
	return o
}

func (o DashboardTopologyLabelMapDataArrayOutput) ToDashboardTopologyLabelMapDataArrayOutputWithContext(ctx context.Context) DashboardTopologyLabelMapDataArrayOutput {
	return o
}

func (o DashboardTopologyLabelMapDataArrayOutput) Index(i pulumi.IntInput) DashboardTopologyLabelMapDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardTopologyLabelMapData {
		return vs[0].([]DashboardTopologyLabelMapData)[vs[1].(int)]
	}).(DashboardTopologyLabelMapDataOutput)
}

type DashboardVariable struct {
	AllowMultiSelect *bool                             `pulumi:"allowMultiSelect"`
	DefaultValue     *string                           `pulumi:"defaultValue"`
	DisplayName      *string                           `pulumi:"displayName"`
	HideFromUi       *bool                             `pulumi:"hideFromUi"`
	Id               *string                           `pulumi:"id"`
	IncludeAllOption *bool                             `pulumi:"includeAllOption"`
	Name             string                            `pulumi:"name"`
	SourceDefinition DashboardVariableSourceDefinition `pulumi:"sourceDefinition"`
}

// DashboardVariableInput is an input type that accepts DashboardVariableArgs and DashboardVariableOutput values.
// You can construct a concrete instance of `DashboardVariableInput` via:
//
//          DashboardVariableArgs{...}
type DashboardVariableInput interface {
	pulumi.Input

	ToDashboardVariableOutput() DashboardVariableOutput
	ToDashboardVariableOutputWithContext(context.Context) DashboardVariableOutput
}

type DashboardVariableArgs struct {
	AllowMultiSelect pulumi.BoolPtrInput                    `pulumi:"allowMultiSelect"`
	DefaultValue     pulumi.StringPtrInput                  `pulumi:"defaultValue"`
	DisplayName      pulumi.StringPtrInput                  `pulumi:"displayName"`
	HideFromUi       pulumi.BoolPtrInput                    `pulumi:"hideFromUi"`
	Id               pulumi.StringPtrInput                  `pulumi:"id"`
	IncludeAllOption pulumi.BoolPtrInput                    `pulumi:"includeAllOption"`
	Name             pulumi.StringInput                     `pulumi:"name"`
	SourceDefinition DashboardVariableSourceDefinitionInput `pulumi:"sourceDefinition"`
}

func (DashboardVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariable)(nil)).Elem()
}

func (i DashboardVariableArgs) ToDashboardVariableOutput() DashboardVariableOutput {
	return i.ToDashboardVariableOutputWithContext(context.Background())
}

func (i DashboardVariableArgs) ToDashboardVariableOutputWithContext(ctx context.Context) DashboardVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableOutput)
}

// DashboardVariableArrayInput is an input type that accepts DashboardVariableArray and DashboardVariableArrayOutput values.
// You can construct a concrete instance of `DashboardVariableArrayInput` via:
//
//          DashboardVariableArray{ DashboardVariableArgs{...} }
type DashboardVariableArrayInput interface {
	pulumi.Input

	ToDashboardVariableArrayOutput() DashboardVariableArrayOutput
	ToDashboardVariableArrayOutputWithContext(context.Context) DashboardVariableArrayOutput
}

type DashboardVariableArray []DashboardVariableInput

func (DashboardVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVariable)(nil)).Elem()
}

func (i DashboardVariableArray) ToDashboardVariableArrayOutput() DashboardVariableArrayOutput {
	return i.ToDashboardVariableArrayOutputWithContext(context.Background())
}

func (i DashboardVariableArray) ToDashboardVariableArrayOutputWithContext(ctx context.Context) DashboardVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableArrayOutput)
}

type DashboardVariableOutput struct{ *pulumi.OutputState }

func (DashboardVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariable)(nil)).Elem()
}

func (o DashboardVariableOutput) ToDashboardVariableOutput() DashboardVariableOutput {
	return o
}

func (o DashboardVariableOutput) ToDashboardVariableOutputWithContext(ctx context.Context) DashboardVariableOutput {
	return o
}

func (o DashboardVariableOutput) AllowMultiSelect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *bool { return v.AllowMultiSelect }).(pulumi.BoolPtrOutput)
}

func (o DashboardVariableOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

func (o DashboardVariableOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DashboardVariableOutput) HideFromUi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *bool { return v.HideFromUi }).(pulumi.BoolPtrOutput)
}

func (o DashboardVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DashboardVariableOutput) IncludeAllOption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DashboardVariable) *bool { return v.IncludeAllOption }).(pulumi.BoolPtrOutput)
}

func (o DashboardVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o DashboardVariableOutput) SourceDefinition() DashboardVariableSourceDefinitionOutput {
	return o.ApplyT(func(v DashboardVariable) DashboardVariableSourceDefinition { return v.SourceDefinition }).(DashboardVariableSourceDefinitionOutput)
}

type DashboardVariableArrayOutput struct{ *pulumi.OutputState }

func (DashboardVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DashboardVariable)(nil)).Elem()
}

func (o DashboardVariableArrayOutput) ToDashboardVariableArrayOutput() DashboardVariableArrayOutput {
	return o
}

func (o DashboardVariableArrayOutput) ToDashboardVariableArrayOutputWithContext(ctx context.Context) DashboardVariableArrayOutput {
	return o
}

func (o DashboardVariableArrayOutput) Index(i pulumi.IntInput) DashboardVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DashboardVariable {
		return vs[0].([]DashboardVariable)[vs[1].(int)]
	}).(DashboardVariableOutput)
}

type DashboardVariableSourceDefinition struct {
	CsvVariableSourceDefinition      *DashboardVariableSourceDefinitionCsvVariableSourceDefinition      `pulumi:"csvVariableSourceDefinition"`
	LogQueryVariableSourceDefinition *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition `pulumi:"logQueryVariableSourceDefinition"`
	MetadataVariableSourceDefinition *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition `pulumi:"metadataVariableSourceDefinition"`
}

// DashboardVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionArgs struct {
	CsvVariableSourceDefinition      DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput      `pulumi:"csvVariableSourceDefinition"`
	LogQueryVariableSourceDefinition DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput `pulumi:"logQueryVariableSourceDefinition"`
	MetadataVariableSourceDefinition DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput `pulumi:"metadataVariableSourceDefinition"`
}

func (DashboardVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionOutput)
}

type DashboardVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionOutput) CsvVariableSourceDefinition() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinition) *DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
		return v.CsvVariableSourceDefinition
	}).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionOutput) LogQueryVariableSourceDefinition() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinition) *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
		return v.LogQueryVariableSourceDefinition
	}).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionOutput) MetadataVariableSourceDefinition() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinition) *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
		return v.MetadataVariableSourceDefinition
	}).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinition struct {
	Values string `pulumi:"values"`
}

// DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs struct {
	Values pulumi.StringInput `pulumi:"values"`
}

func (DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput)
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput).ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx)
}

// DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput is an input type that accepts DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs, DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtr and DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput` via:
//
//          DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs{...}
//
//  or:
//
//          nil
type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput
	ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput
}

type dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs

func DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtr(v *DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput {
	return (*dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType)(v)
}

func (*dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (i *dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o.ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVariableSourceDefinitionCsvVariableSourceDefinition) *DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
		return &v
	}).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionCsvVariableSourceDefinition) string { return v.Values }).(pulumi.StringOutput)
}

type DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionCsvVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) Elem() DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionCsvVariableSourceDefinition) DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
		if v != nil {
			return *v
		}
		var ret DashboardVariableSourceDefinitionCsvVariableSourceDefinition
		return ret
	}).(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput)
}

func (o DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionCsvVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Values
	}).(pulumi.StringPtrOutput)
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition struct {
	Field string `pulumi:"field"`
	Query string `pulumi:"query"`
}

// DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs struct {
	Field pulumi.StringInput `pulumi:"field"`
	Query pulumi.StringInput `pulumi:"query"`
}

func (DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput)
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput).ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx)
}

// DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput is an input type that accepts DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs, DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtr and DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput` via:
//
//          DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs{...}
//
//  or:
//
//          nil
type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput
	ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput
}

type dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs

func DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtr(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput {
	return (*dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType)(v)
}

func (*dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (i *dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o.ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
		return &v
	}).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) string { return v.Field }).(pulumi.StringOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) string { return v.Query }).(pulumi.StringOutput)
}

type DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) Elem() DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
		if v != nil {
			return *v
		}
		var ret DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition
		return ret
	}).(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Field
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinition struct {
	Filter string `pulumi:"filter"`
	Key    string `pulumi:"key"`
}

// DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput is an input type that accepts DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs and DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput` via:
//
//          DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs{...}
type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput
	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs struct {
	Filter pulumi.StringInput `pulumi:"filter"`
	Key    pulumi.StringInput `pulumi:"key"`
}

func (DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return i.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput)
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput).ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx)
}

// DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput is an input type that accepts DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs, DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtr and DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput values.
// You can construct a concrete instance of `DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput` via:
//
//          DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs{...}
//
//  or:
//
//          nil
type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput interface {
	pulumi.Input

	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput
	ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput
}

type dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs

func DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtr(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput {
	return (*dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType)(v)
}

func (*dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (i *dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return i.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (i *dashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrType) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput)
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o.ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(context.Background())
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
		return &v
	}).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) string { return v.Filter }).(pulumi.StringOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) string { return v.Key }).(pulumi.StringOutput)
}

type DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DashboardVariableSourceDefinitionMetadataVariableSourceDefinition)(nil)).Elem()
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) ToDashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutputWithContext(ctx context.Context) DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput {
	return o
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) Elem() DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
		if v != nil {
			return *v
		}
		var ret DashboardVariableSourceDefinitionMetadataVariableSourceDefinition
		return ret
	}).(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

func (o DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DashboardVariableSourceDefinitionMetadataVariableSourceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type ElbSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
	Type string `pulumi:"type"`
}

// ElbSourceAuthenticationInput is an input type that accepts ElbSourceAuthenticationArgs and ElbSourceAuthenticationOutput values.
// You can construct a concrete instance of `ElbSourceAuthenticationInput` via:
//
//          ElbSourceAuthenticationArgs{...}
type ElbSourceAuthenticationInput interface {
	pulumi.Input

	ToElbSourceAuthenticationOutput() ElbSourceAuthenticationOutput
	ToElbSourceAuthenticationOutputWithContext(context.Context) ElbSourceAuthenticationOutput
}

type ElbSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ElbSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceAuthentication)(nil)).Elem()
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationOutput() ElbSourceAuthenticationOutput {
	return i.ToElbSourceAuthenticationOutputWithContext(context.Background())
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationOutputWithContext(ctx context.Context) ElbSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceAuthenticationOutput)
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return i.ToElbSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i ElbSourceAuthenticationArgs) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceAuthenticationOutput).ToElbSourceAuthenticationPtrOutputWithContext(ctx)
}

// ElbSourceAuthenticationPtrInput is an input type that accepts ElbSourceAuthenticationArgs, ElbSourceAuthenticationPtr and ElbSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `ElbSourceAuthenticationPtrInput` via:
//
//          ElbSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type ElbSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput
	ToElbSourceAuthenticationPtrOutputWithContext(context.Context) ElbSourceAuthenticationPtrOutput
}

type elbSourceAuthenticationPtrType ElbSourceAuthenticationArgs

func ElbSourceAuthenticationPtr(v *ElbSourceAuthenticationArgs) ElbSourceAuthenticationPtrInput {
	return (*elbSourceAuthenticationPtrType)(v)
}

func (*elbSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourceAuthentication)(nil)).Elem()
}

func (i *elbSourceAuthenticationPtrType) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return i.ToElbSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *elbSourceAuthenticationPtrType) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceAuthenticationPtrOutput)
}

type ElbSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (ElbSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceAuthentication)(nil)).Elem()
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationOutput() ElbSourceAuthenticationOutput {
	return o
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationOutputWithContext(ctx context.Context) ElbSourceAuthenticationOutput {
	return o
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return o.ToElbSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o ElbSourceAuthenticationOutput) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbSourceAuthentication) *ElbSourceAuthentication {
		return &v
	}).(ElbSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o ElbSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o ElbSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
func (o ElbSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o ElbSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
func (o ElbSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type ElbSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ElbSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourceAuthentication)(nil)).Elem()
}

func (o ElbSourceAuthenticationPtrOutput) ToElbSourceAuthenticationPtrOutput() ElbSourceAuthenticationPtrOutput {
	return o
}

func (o ElbSourceAuthenticationPtrOutput) ToElbSourceAuthenticationPtrOutputWithContext(ctx context.Context) ElbSourceAuthenticationPtrOutput {
	return o
}

func (o ElbSourceAuthenticationPtrOutput) Elem() ElbSourceAuthenticationOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) ElbSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret ElbSourceAuthentication
		return ret
	}).(ElbSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o ElbSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o ElbSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
func (o ElbSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o ElbSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
func (o ElbSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ElbSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// ElbSourceDefaultDateFormatInput is an input type that accepts ElbSourceDefaultDateFormatArgs and ElbSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `ElbSourceDefaultDateFormatInput` via:
//
//          ElbSourceDefaultDateFormatArgs{...}
type ElbSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToElbSourceDefaultDateFormatOutput() ElbSourceDefaultDateFormatOutput
	ToElbSourceDefaultDateFormatOutputWithContext(context.Context) ElbSourceDefaultDateFormatOutput
}

type ElbSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (ElbSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (i ElbSourceDefaultDateFormatArgs) ToElbSourceDefaultDateFormatOutput() ElbSourceDefaultDateFormatOutput {
	return i.ToElbSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i ElbSourceDefaultDateFormatArgs) ToElbSourceDefaultDateFormatOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceDefaultDateFormatOutput)
}

// ElbSourceDefaultDateFormatArrayInput is an input type that accepts ElbSourceDefaultDateFormatArray and ElbSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `ElbSourceDefaultDateFormatArrayInput` via:
//
//          ElbSourceDefaultDateFormatArray{ ElbSourceDefaultDateFormatArgs{...} }
type ElbSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToElbSourceDefaultDateFormatArrayOutput() ElbSourceDefaultDateFormatArrayOutput
	ToElbSourceDefaultDateFormatArrayOutputWithContext(context.Context) ElbSourceDefaultDateFormatArrayOutput
}

type ElbSourceDefaultDateFormatArray []ElbSourceDefaultDateFormatInput

func (ElbSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (i ElbSourceDefaultDateFormatArray) ToElbSourceDefaultDateFormatArrayOutput() ElbSourceDefaultDateFormatArrayOutput {
	return i.ToElbSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i ElbSourceDefaultDateFormatArray) ToElbSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceDefaultDateFormatArrayOutput)
}

type ElbSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (ElbSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (o ElbSourceDefaultDateFormatOutput) ToElbSourceDefaultDateFormatOutput() ElbSourceDefaultDateFormatOutput {
	return o
}

func (o ElbSourceDefaultDateFormatOutput) ToElbSourceDefaultDateFormatOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatOutput {
	return o
}

func (o ElbSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o ElbSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type ElbSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (ElbSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceDefaultDateFormat)(nil)).Elem()
}

func (o ElbSourceDefaultDateFormatArrayOutput) ToElbSourceDefaultDateFormatArrayOutput() ElbSourceDefaultDateFormatArrayOutput {
	return o
}

func (o ElbSourceDefaultDateFormatArrayOutput) ToElbSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) ElbSourceDefaultDateFormatArrayOutput {
	return o
}

func (o ElbSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) ElbSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourceDefaultDateFormat {
		return vs[0].([]ElbSourceDefaultDateFormat)[vs[1].(int)]
	}).(ElbSourceDefaultDateFormatOutput)
}

type ElbSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// ElbSourceFilterInput is an input type that accepts ElbSourceFilterArgs and ElbSourceFilterOutput values.
// You can construct a concrete instance of `ElbSourceFilterInput` via:
//
//          ElbSourceFilterArgs{...}
type ElbSourceFilterInput interface {
	pulumi.Input

	ToElbSourceFilterOutput() ElbSourceFilterOutput
	ToElbSourceFilterOutputWithContext(context.Context) ElbSourceFilterOutput
}

type ElbSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (ElbSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceFilter)(nil)).Elem()
}

func (i ElbSourceFilterArgs) ToElbSourceFilterOutput() ElbSourceFilterOutput {
	return i.ToElbSourceFilterOutputWithContext(context.Background())
}

func (i ElbSourceFilterArgs) ToElbSourceFilterOutputWithContext(ctx context.Context) ElbSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceFilterOutput)
}

// ElbSourceFilterArrayInput is an input type that accepts ElbSourceFilterArray and ElbSourceFilterArrayOutput values.
// You can construct a concrete instance of `ElbSourceFilterArrayInput` via:
//
//          ElbSourceFilterArray{ ElbSourceFilterArgs{...} }
type ElbSourceFilterArrayInput interface {
	pulumi.Input

	ToElbSourceFilterArrayOutput() ElbSourceFilterArrayOutput
	ToElbSourceFilterArrayOutputWithContext(context.Context) ElbSourceFilterArrayOutput
}

type ElbSourceFilterArray []ElbSourceFilterInput

func (ElbSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceFilter)(nil)).Elem()
}

func (i ElbSourceFilterArray) ToElbSourceFilterArrayOutput() ElbSourceFilterArrayOutput {
	return i.ToElbSourceFilterArrayOutputWithContext(context.Background())
}

func (i ElbSourceFilterArray) ToElbSourceFilterArrayOutputWithContext(ctx context.Context) ElbSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourceFilterArrayOutput)
}

type ElbSourceFilterOutput struct{ *pulumi.OutputState }

func (ElbSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourceFilter)(nil)).Elem()
}

func (o ElbSourceFilterOutput) ToElbSourceFilterOutput() ElbSourceFilterOutput {
	return o
}

func (o ElbSourceFilterOutput) ToElbSourceFilterOutputWithContext(ctx context.Context) ElbSourceFilterOutput {
	return o
}

func (o ElbSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o ElbSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o ElbSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElbSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type ElbSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (ElbSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourceFilter)(nil)).Elem()
}

func (o ElbSourceFilterArrayOutput) ToElbSourceFilterArrayOutput() ElbSourceFilterArrayOutput {
	return o
}

func (o ElbSourceFilterArrayOutput) ToElbSourceFilterArrayOutputWithContext(ctx context.Context) ElbSourceFilterArrayOutput {
	return o
}

func (o ElbSourceFilterArrayOutput) Index(i pulumi.IntInput) ElbSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourceFilter {
		return vs[0].([]ElbSourceFilter)[vs[1].(int)]
	}).(ElbSourceFilterOutput)
}

type ElbSourcePath struct {
	// The name of the bucket.
	BucketName        *string                      `pulumi:"bucketName"`
	CustomServices    []ElbSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                     `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                     `pulumi:"limitToRegions"`
	LimitToServices   []string                     `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []ElbSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []ElbSourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// ElbSourcePathInput is an input type that accepts ElbSourcePathArgs and ElbSourcePathOutput values.
// You can construct a concrete instance of `ElbSourcePathInput` via:
//
//          ElbSourcePathArgs{...}
type ElbSourcePathInput interface {
	pulumi.Input

	ToElbSourcePathOutput() ElbSourcePathOutput
	ToElbSourcePathOutputWithContext(context.Context) ElbSourcePathOutput
}

type ElbSourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput                `pulumi:"bucketName"`
	CustomServices    ElbSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput              `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput              `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput              `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns ElbSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 ElbSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (ElbSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePath)(nil)).Elem()
}

func (i ElbSourcePathArgs) ToElbSourcePathOutput() ElbSourcePathOutput {
	return i.ToElbSourcePathOutputWithContext(context.Background())
}

func (i ElbSourcePathArgs) ToElbSourcePathOutputWithContext(ctx context.Context) ElbSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathOutput)
}

func (i ElbSourcePathArgs) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return i.ToElbSourcePathPtrOutputWithContext(context.Background())
}

func (i ElbSourcePathArgs) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathOutput).ToElbSourcePathPtrOutputWithContext(ctx)
}

// ElbSourcePathPtrInput is an input type that accepts ElbSourcePathArgs, ElbSourcePathPtr and ElbSourcePathPtrOutput values.
// You can construct a concrete instance of `ElbSourcePathPtrInput` via:
//
//          ElbSourcePathArgs{...}
//
//  or:
//
//          nil
type ElbSourcePathPtrInput interface {
	pulumi.Input

	ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput
	ToElbSourcePathPtrOutputWithContext(context.Context) ElbSourcePathPtrOutput
}

type elbSourcePathPtrType ElbSourcePathArgs

func ElbSourcePathPtr(v *ElbSourcePathArgs) ElbSourcePathPtrInput {
	return (*elbSourcePathPtrType)(v)
}

func (*elbSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourcePath)(nil)).Elem()
}

func (i *elbSourcePathPtrType) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return i.ToElbSourcePathPtrOutputWithContext(context.Background())
}

func (i *elbSourcePathPtrType) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathPtrOutput)
}

type ElbSourcePathOutput struct{ *pulumi.OutputState }

func (ElbSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePath)(nil)).Elem()
}

func (o ElbSourcePathOutput) ToElbSourcePathOutput() ElbSourcePathOutput {
	return o
}

func (o ElbSourcePathOutput) ToElbSourcePathOutputWithContext(ctx context.Context) ElbSourcePathOutput {
	return o
}

func (o ElbSourcePathOutput) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return o.ToElbSourcePathPtrOutputWithContext(context.Background())
}

func (o ElbSourcePathOutput) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElbSourcePath) *ElbSourcePath {
		return &v
	}).(ElbSourcePathPtrOutput)
}

// The name of the bucket.
func (o ElbSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathOutput) CustomServices() ElbSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []ElbSourcePathCustomService { return v.CustomServices }).(ElbSourcePathCustomServiceArrayOutput)
}

func (o ElbSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o ElbSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o ElbSourcePathOutput) SnsTopicOrSubscriptionArns() ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []ElbSourcePathSnsTopicOrSubscriptionArn { return v.SnsTopicOrSubscriptionArns }).(ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o ElbSourcePathOutput) TagFilters() ElbSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v ElbSourcePath) []ElbSourcePathTagFilter { return v.TagFilters }).(ElbSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
func (o ElbSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ElbSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o ElbSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElbSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type ElbSourcePathPtrOutput struct{ *pulumi.OutputState }

func (ElbSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElbSourcePath)(nil)).Elem()
}

func (o ElbSourcePathPtrOutput) ToElbSourcePathPtrOutput() ElbSourcePathPtrOutput {
	return o
}

func (o ElbSourcePathPtrOutput) ToElbSourcePathPtrOutputWithContext(ctx context.Context) ElbSourcePathPtrOutput {
	return o
}

func (o ElbSourcePathPtrOutput) Elem() ElbSourcePathOutput {
	return o.ApplyT(func(v *ElbSourcePath) ElbSourcePath {
		if v != nil {
			return *v
		}
		var ret ElbSourcePath
		return ret
	}).(ElbSourcePathOutput)
}

// The name of the bucket.
func (o ElbSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathPtrOutput) CustomServices() ElbSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []ElbSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(ElbSourcePathCustomServiceArrayOutput)
}

func (o ElbSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o ElbSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o ElbSourcePathPtrOutput) SnsTopicOrSubscriptionArns() ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []ElbSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o ElbSourcePathPtrOutput) TagFilters() ElbSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *ElbSourcePath) []ElbSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(ElbSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
func (o ElbSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElbSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type ElbSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// ElbSourcePathCustomServiceInput is an input type that accepts ElbSourcePathCustomServiceArgs and ElbSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `ElbSourcePathCustomServiceInput` via:
//
//          ElbSourcePathCustomServiceArgs{...}
type ElbSourcePathCustomServiceInput interface {
	pulumi.Input

	ToElbSourcePathCustomServiceOutput() ElbSourcePathCustomServiceOutput
	ToElbSourcePathCustomServiceOutputWithContext(context.Context) ElbSourcePathCustomServiceOutput
}

type ElbSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (ElbSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathCustomService)(nil)).Elem()
}

func (i ElbSourcePathCustomServiceArgs) ToElbSourcePathCustomServiceOutput() ElbSourcePathCustomServiceOutput {
	return i.ToElbSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i ElbSourcePathCustomServiceArgs) ToElbSourcePathCustomServiceOutputWithContext(ctx context.Context) ElbSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathCustomServiceOutput)
}

// ElbSourcePathCustomServiceArrayInput is an input type that accepts ElbSourcePathCustomServiceArray and ElbSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `ElbSourcePathCustomServiceArrayInput` via:
//
//          ElbSourcePathCustomServiceArray{ ElbSourcePathCustomServiceArgs{...} }
type ElbSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToElbSourcePathCustomServiceArrayOutput() ElbSourcePathCustomServiceArrayOutput
	ToElbSourcePathCustomServiceArrayOutputWithContext(context.Context) ElbSourcePathCustomServiceArrayOutput
}

type ElbSourcePathCustomServiceArray []ElbSourcePathCustomServiceInput

func (ElbSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathCustomService)(nil)).Elem()
}

func (i ElbSourcePathCustomServiceArray) ToElbSourcePathCustomServiceArrayOutput() ElbSourcePathCustomServiceArrayOutput {
	return i.ToElbSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i ElbSourcePathCustomServiceArray) ToElbSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) ElbSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathCustomServiceArrayOutput)
}

type ElbSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (ElbSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathCustomService)(nil)).Elem()
}

func (o ElbSourcePathCustomServiceOutput) ToElbSourcePathCustomServiceOutput() ElbSourcePathCustomServiceOutput {
	return o
}

func (o ElbSourcePathCustomServiceOutput) ToElbSourcePathCustomServiceOutputWithContext(ctx context.Context) ElbSourcePathCustomServiceOutput {
	return o
}

func (o ElbSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o ElbSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type ElbSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (ElbSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathCustomService)(nil)).Elem()
}

func (o ElbSourcePathCustomServiceArrayOutput) ToElbSourcePathCustomServiceArrayOutput() ElbSourcePathCustomServiceArrayOutput {
	return o
}

func (o ElbSourcePathCustomServiceArrayOutput) ToElbSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) ElbSourcePathCustomServiceArrayOutput {
	return o
}

func (o ElbSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) ElbSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourcePathCustomService {
		return vs[0].([]ElbSourcePathCustomService)[vs[1].(int)]
	}).(ElbSourcePathCustomServiceOutput)
}

type ElbSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// ElbSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts ElbSourcePathSnsTopicOrSubscriptionArnArgs and ElbSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `ElbSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          ElbSourcePathSnsTopicOrSubscriptionArnArgs{...}
type ElbSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToElbSourcePathSnsTopicOrSubscriptionArnOutput() ElbSourcePathSnsTopicOrSubscriptionArnOutput
	ToElbSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) ElbSourcePathSnsTopicOrSubscriptionArnOutput
}

type ElbSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (ElbSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i ElbSourcePathSnsTopicOrSubscriptionArnArgs) ToElbSourcePathSnsTopicOrSubscriptionArnOutput() ElbSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToElbSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i ElbSourcePathSnsTopicOrSubscriptionArnArgs) ToElbSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) ElbSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathSnsTopicOrSubscriptionArnOutput)
}

// ElbSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts ElbSourcePathSnsTopicOrSubscriptionArnArray and ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `ElbSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          ElbSourcePathSnsTopicOrSubscriptionArnArray{ ElbSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type ElbSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutput() ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type ElbSourcePathSnsTopicOrSubscriptionArnArray []ElbSourcePathSnsTopicOrSubscriptionArnInput

func (ElbSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i ElbSourcePathSnsTopicOrSubscriptionArnArray) ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutput() ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i ElbSourcePathSnsTopicOrSubscriptionArnArray) ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type ElbSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (ElbSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnOutput) ToElbSourcePathSnsTopicOrSubscriptionArnOutput() ElbSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnOutput) ToElbSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) ElbSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElbSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutput() ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToElbSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) ElbSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]ElbSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(ElbSourcePathSnsTopicOrSubscriptionArnOutput)
}

type ElbSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
	Type *string `pulumi:"type"`
}

// ElbSourcePathTagFilterInput is an input type that accepts ElbSourcePathTagFilterArgs and ElbSourcePathTagFilterOutput values.
// You can construct a concrete instance of `ElbSourcePathTagFilterInput` via:
//
//          ElbSourcePathTagFilterArgs{...}
type ElbSourcePathTagFilterInput interface {
	pulumi.Input

	ToElbSourcePathTagFilterOutput() ElbSourcePathTagFilterOutput
	ToElbSourcePathTagFilterOutputWithContext(context.Context) ElbSourcePathTagFilterOutput
}

type ElbSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ElbSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathTagFilter)(nil)).Elem()
}

func (i ElbSourcePathTagFilterArgs) ToElbSourcePathTagFilterOutput() ElbSourcePathTagFilterOutput {
	return i.ToElbSourcePathTagFilterOutputWithContext(context.Background())
}

func (i ElbSourcePathTagFilterArgs) ToElbSourcePathTagFilterOutputWithContext(ctx context.Context) ElbSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathTagFilterOutput)
}

// ElbSourcePathTagFilterArrayInput is an input type that accepts ElbSourcePathTagFilterArray and ElbSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `ElbSourcePathTagFilterArrayInput` via:
//
//          ElbSourcePathTagFilterArray{ ElbSourcePathTagFilterArgs{...} }
type ElbSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToElbSourcePathTagFilterArrayOutput() ElbSourcePathTagFilterArrayOutput
	ToElbSourcePathTagFilterArrayOutputWithContext(context.Context) ElbSourcePathTagFilterArrayOutput
}

type ElbSourcePathTagFilterArray []ElbSourcePathTagFilterInput

func (ElbSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathTagFilter)(nil)).Elem()
}

func (i ElbSourcePathTagFilterArray) ToElbSourcePathTagFilterArrayOutput() ElbSourcePathTagFilterArrayOutput {
	return i.ToElbSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i ElbSourcePathTagFilterArray) ToElbSourcePathTagFilterArrayOutputWithContext(ctx context.Context) ElbSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElbSourcePathTagFilterArrayOutput)
}

type ElbSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (ElbSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElbSourcePathTagFilter)(nil)).Elem()
}

func (o ElbSourcePathTagFilterOutput) ToElbSourcePathTagFilterOutput() ElbSourcePathTagFilterOutput {
	return o
}

func (o ElbSourcePathTagFilterOutput) ToElbSourcePathTagFilterOutputWithContext(ctx context.Context) ElbSourcePathTagFilterOutput {
	return o
}

func (o ElbSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ElbSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElbSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
func (o ElbSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElbSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ElbSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (ElbSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElbSourcePathTagFilter)(nil)).Elem()
}

func (o ElbSourcePathTagFilterArrayOutput) ToElbSourcePathTagFilterArrayOutput() ElbSourcePathTagFilterArrayOutput {
	return o
}

func (o ElbSourcePathTagFilterArrayOutput) ToElbSourcePathTagFilterArrayOutputWithContext(ctx context.Context) ElbSourcePathTagFilterArrayOutput {
	return o
}

func (o ElbSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) ElbSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElbSourcePathTagFilter {
		return vs[0].([]ElbSourcePathTagFilter)[vs[1].(int)]
	}).(ElbSourcePathTagFilterOutput)
}

type GcpMetricsSourceAuthentication struct {
	AccessKey *string `pulumi:"accessKey"`
	// As per the service_account.json downloaded from GCP
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	// As per the service_account.json downloaded from GCP
	AuthUri *string `pulumi:"authUri"`
	// As per the service_account.json downloaded from GCP
	ClientEmail *string `pulumi:"clientEmail"`
	// As per the service_account.json downloaded from GCP
	ClientId *string `pulumi:"clientId"`
	// As per the service_account.json downloaded from GCP
	ClientX509CertUrl *string `pulumi:"clientX509CertUrl"`
	// As per the service_account.json downloaded from GCP
	PrivateKey *string `pulumi:"privateKey"`
	// As per the service_account.json downloaded from GCP
	PrivateKeyId *string `pulumi:"privateKeyId"`
	// As per the service_account.json downloaded from GCP
	ProjectId *string `pulumi:"projectId"`
	Region    *string `pulumi:"region"`
	RoleArn   *string `pulumi:"roleArn"`
	SecretKey *string `pulumi:"secretKey"`
	// As per the service_account.json downloaded from GCP
	TokenUri *string `pulumi:"tokenUri"`
	// Type of polling source. This has to be `GcpMetricsPath`.
	Type string `pulumi:"type"`
}

// GcpMetricsSourceAuthenticationInput is an input type that accepts GcpMetricsSourceAuthenticationArgs and GcpMetricsSourceAuthenticationOutput values.
// You can construct a concrete instance of `GcpMetricsSourceAuthenticationInput` via:
//
//          GcpMetricsSourceAuthenticationArgs{...}
type GcpMetricsSourceAuthenticationInput interface {
	pulumi.Input

	ToGcpMetricsSourceAuthenticationOutput() GcpMetricsSourceAuthenticationOutput
	ToGcpMetricsSourceAuthenticationOutputWithContext(context.Context) GcpMetricsSourceAuthenticationOutput
}

type GcpMetricsSourceAuthenticationArgs struct {
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// As per the service_account.json downloaded from GCP
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	// As per the service_account.json downloaded from GCP
	AuthUri pulumi.StringPtrInput `pulumi:"authUri"`
	// As per the service_account.json downloaded from GCP
	ClientEmail pulumi.StringPtrInput `pulumi:"clientEmail"`
	// As per the service_account.json downloaded from GCP
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// As per the service_account.json downloaded from GCP
	ClientX509CertUrl pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	// As per the service_account.json downloaded from GCP
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	// As per the service_account.json downloaded from GCP
	PrivateKeyId pulumi.StringPtrInput `pulumi:"privateKeyId"`
	// As per the service_account.json downloaded from GCP
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	Region    pulumi.StringPtrInput `pulumi:"region"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// As per the service_account.json downloaded from GCP
	TokenUri pulumi.StringPtrInput `pulumi:"tokenUri"`
	// Type of polling source. This has to be `GcpMetricsPath`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GcpMetricsSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourceAuthentication)(nil)).Elem()
}

func (i GcpMetricsSourceAuthenticationArgs) ToGcpMetricsSourceAuthenticationOutput() GcpMetricsSourceAuthenticationOutput {
	return i.ToGcpMetricsSourceAuthenticationOutputWithContext(context.Background())
}

func (i GcpMetricsSourceAuthenticationArgs) ToGcpMetricsSourceAuthenticationOutputWithContext(ctx context.Context) GcpMetricsSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceAuthenticationOutput)
}

func (i GcpMetricsSourceAuthenticationArgs) ToGcpMetricsSourceAuthenticationPtrOutput() GcpMetricsSourceAuthenticationPtrOutput {
	return i.ToGcpMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i GcpMetricsSourceAuthenticationArgs) ToGcpMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceAuthenticationOutput).ToGcpMetricsSourceAuthenticationPtrOutputWithContext(ctx)
}

// GcpMetricsSourceAuthenticationPtrInput is an input type that accepts GcpMetricsSourceAuthenticationArgs, GcpMetricsSourceAuthenticationPtr and GcpMetricsSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `GcpMetricsSourceAuthenticationPtrInput` via:
//
//          GcpMetricsSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type GcpMetricsSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToGcpMetricsSourceAuthenticationPtrOutput() GcpMetricsSourceAuthenticationPtrOutput
	ToGcpMetricsSourceAuthenticationPtrOutputWithContext(context.Context) GcpMetricsSourceAuthenticationPtrOutput
}

type gcpMetricsSourceAuthenticationPtrType GcpMetricsSourceAuthenticationArgs

func GcpMetricsSourceAuthenticationPtr(v *GcpMetricsSourceAuthenticationArgs) GcpMetricsSourceAuthenticationPtrInput {
	return (*gcpMetricsSourceAuthenticationPtrType)(v)
}

func (*gcpMetricsSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpMetricsSourceAuthentication)(nil)).Elem()
}

func (i *gcpMetricsSourceAuthenticationPtrType) ToGcpMetricsSourceAuthenticationPtrOutput() GcpMetricsSourceAuthenticationPtrOutput {
	return i.ToGcpMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *gcpMetricsSourceAuthenticationPtrType) ToGcpMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceAuthenticationPtrOutput)
}

type GcpMetricsSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourceAuthentication)(nil)).Elem()
}

func (o GcpMetricsSourceAuthenticationOutput) ToGcpMetricsSourceAuthenticationOutput() GcpMetricsSourceAuthenticationOutput {
	return o
}

func (o GcpMetricsSourceAuthenticationOutput) ToGcpMetricsSourceAuthenticationOutputWithContext(ctx context.Context) GcpMetricsSourceAuthenticationOutput {
	return o
}

func (o GcpMetricsSourceAuthenticationOutput) ToGcpMetricsSourceAuthenticationPtrOutput() GcpMetricsSourceAuthenticationPtrOutput {
	return o.ToGcpMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o GcpMetricsSourceAuthenticationOutput) ToGcpMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpMetricsSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcpMetricsSourceAuthentication) *GcpMetricsSourceAuthentication {
		return &v
	}).(GcpMetricsSourceAuthenticationPtrOutput)
}

func (o GcpMetricsSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// Type of polling source. This has to be `GcpMetricsPath`.
func (o GcpMetricsSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GcpMetricsSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type GcpMetricsSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpMetricsSourceAuthentication)(nil)).Elem()
}

func (o GcpMetricsSourceAuthenticationPtrOutput) ToGcpMetricsSourceAuthenticationPtrOutput() GcpMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o GcpMetricsSourceAuthenticationPtrOutput) ToGcpMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o GcpMetricsSourceAuthenticationPtrOutput) Elem() GcpMetricsSourceAuthenticationOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) GcpMetricsSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret GcpMetricsSourceAuthentication
		return ret
	}).(GcpMetricsSourceAuthenticationOutput)
}

func (o GcpMetricsSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// As per the service_account.json downloaded from GCP
func (o GcpMetricsSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// Type of polling source. This has to be `GcpMetricsPath`.
func (o GcpMetricsSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GcpMetricsSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// GcpMetricsSourceDefaultDateFormatInput is an input type that accepts GcpMetricsSourceDefaultDateFormatArgs and GcpMetricsSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `GcpMetricsSourceDefaultDateFormatInput` via:
//
//          GcpMetricsSourceDefaultDateFormatArgs{...}
type GcpMetricsSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToGcpMetricsSourceDefaultDateFormatOutput() GcpMetricsSourceDefaultDateFormatOutput
	ToGcpMetricsSourceDefaultDateFormatOutputWithContext(context.Context) GcpMetricsSourceDefaultDateFormatOutput
}

type GcpMetricsSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (GcpMetricsSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i GcpMetricsSourceDefaultDateFormatArgs) ToGcpMetricsSourceDefaultDateFormatOutput() GcpMetricsSourceDefaultDateFormatOutput {
	return i.ToGcpMetricsSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i GcpMetricsSourceDefaultDateFormatArgs) ToGcpMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) GcpMetricsSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceDefaultDateFormatOutput)
}

// GcpMetricsSourceDefaultDateFormatArrayInput is an input type that accepts GcpMetricsSourceDefaultDateFormatArray and GcpMetricsSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `GcpMetricsSourceDefaultDateFormatArrayInput` via:
//
//          GcpMetricsSourceDefaultDateFormatArray{ GcpMetricsSourceDefaultDateFormatArgs{...} }
type GcpMetricsSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToGcpMetricsSourceDefaultDateFormatArrayOutput() GcpMetricsSourceDefaultDateFormatArrayOutput
	ToGcpMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Context) GcpMetricsSourceDefaultDateFormatArrayOutput
}

type GcpMetricsSourceDefaultDateFormatArray []GcpMetricsSourceDefaultDateFormatInput

func (GcpMetricsSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i GcpMetricsSourceDefaultDateFormatArray) ToGcpMetricsSourceDefaultDateFormatArrayOutput() GcpMetricsSourceDefaultDateFormatArrayOutput {
	return i.ToGcpMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i GcpMetricsSourceDefaultDateFormatArray) ToGcpMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) GcpMetricsSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceDefaultDateFormatArrayOutput)
}

type GcpMetricsSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o GcpMetricsSourceDefaultDateFormatOutput) ToGcpMetricsSourceDefaultDateFormatOutput() GcpMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o GcpMetricsSourceDefaultDateFormatOutput) ToGcpMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) GcpMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o GcpMetricsSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GcpMetricsSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o GcpMetricsSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type GcpMetricsSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o GcpMetricsSourceDefaultDateFormatArrayOutput) ToGcpMetricsSourceDefaultDateFormatArrayOutput() GcpMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o GcpMetricsSourceDefaultDateFormatArrayOutput) ToGcpMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) GcpMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o GcpMetricsSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) GcpMetricsSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpMetricsSourceDefaultDateFormat {
		return vs[0].([]GcpMetricsSourceDefaultDateFormat)[vs[1].(int)]
	}).(GcpMetricsSourceDefaultDateFormatOutput)
}

type GcpMetricsSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// GcpMetricsSourceFilterInput is an input type that accepts GcpMetricsSourceFilterArgs and GcpMetricsSourceFilterOutput values.
// You can construct a concrete instance of `GcpMetricsSourceFilterInput` via:
//
//          GcpMetricsSourceFilterArgs{...}
type GcpMetricsSourceFilterInput interface {
	pulumi.Input

	ToGcpMetricsSourceFilterOutput() GcpMetricsSourceFilterOutput
	ToGcpMetricsSourceFilterOutputWithContext(context.Context) GcpMetricsSourceFilterOutput
}

type GcpMetricsSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (GcpMetricsSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourceFilter)(nil)).Elem()
}

func (i GcpMetricsSourceFilterArgs) ToGcpMetricsSourceFilterOutput() GcpMetricsSourceFilterOutput {
	return i.ToGcpMetricsSourceFilterOutputWithContext(context.Background())
}

func (i GcpMetricsSourceFilterArgs) ToGcpMetricsSourceFilterOutputWithContext(ctx context.Context) GcpMetricsSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceFilterOutput)
}

// GcpMetricsSourceFilterArrayInput is an input type that accepts GcpMetricsSourceFilterArray and GcpMetricsSourceFilterArrayOutput values.
// You can construct a concrete instance of `GcpMetricsSourceFilterArrayInput` via:
//
//          GcpMetricsSourceFilterArray{ GcpMetricsSourceFilterArgs{...} }
type GcpMetricsSourceFilterArrayInput interface {
	pulumi.Input

	ToGcpMetricsSourceFilterArrayOutput() GcpMetricsSourceFilterArrayOutput
	ToGcpMetricsSourceFilterArrayOutputWithContext(context.Context) GcpMetricsSourceFilterArrayOutput
}

type GcpMetricsSourceFilterArray []GcpMetricsSourceFilterInput

func (GcpMetricsSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourceFilter)(nil)).Elem()
}

func (i GcpMetricsSourceFilterArray) ToGcpMetricsSourceFilterArrayOutput() GcpMetricsSourceFilterArrayOutput {
	return i.ToGcpMetricsSourceFilterArrayOutputWithContext(context.Background())
}

func (i GcpMetricsSourceFilterArray) ToGcpMetricsSourceFilterArrayOutputWithContext(ctx context.Context) GcpMetricsSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourceFilterArrayOutput)
}

type GcpMetricsSourceFilterOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourceFilter)(nil)).Elem()
}

func (o GcpMetricsSourceFilterOutput) ToGcpMetricsSourceFilterOutput() GcpMetricsSourceFilterOutput {
	return o
}

func (o GcpMetricsSourceFilterOutput) ToGcpMetricsSourceFilterOutputWithContext(ctx context.Context) GcpMetricsSourceFilterOutput {
	return o
}

func (o GcpMetricsSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GcpMetricsSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GcpMetricsSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GcpMetricsSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GcpMetricsSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GcpMetricsSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type GcpMetricsSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourceFilter)(nil)).Elem()
}

func (o GcpMetricsSourceFilterArrayOutput) ToGcpMetricsSourceFilterArrayOutput() GcpMetricsSourceFilterArrayOutput {
	return o
}

func (o GcpMetricsSourceFilterArrayOutput) ToGcpMetricsSourceFilterArrayOutputWithContext(ctx context.Context) GcpMetricsSourceFilterArrayOutput {
	return o
}

func (o GcpMetricsSourceFilterArrayOutput) Index(i pulumi.IntInput) GcpMetricsSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpMetricsSourceFilter {
		return vs[0].([]GcpMetricsSourceFilter)[vs[1].(int)]
	}).(GcpMetricsSourceFilterOutput)
}

type GcpMetricsSourcePath struct {
	BucketName *string `pulumi:"bucketName"`
	// Sumoloigc provides list of services that can be used in limitToServices for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
	CustomServices    []GcpMetricsSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                            `pulumi:"limitToNamespaces"`
	// List of regions for which metrics would be collected (Empty to collect from all regions)
	LimitToRegions []string `pulumi:"limitToRegions"`
	// List of services from which metrics would be collected
	LimitToServices            []string                                        `pulumi:"limitToServices"`
	PathExpression             *string                                         `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns []GcpMetricsSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []GcpMetricsSourcePathTagFilter                 `pulumi:"tagFilters"`
	// Type of polling source. This has to be `GcpMetricsPath`.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// GcpMetricsSourcePathInput is an input type that accepts GcpMetricsSourcePathArgs and GcpMetricsSourcePathOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathInput` via:
//
//          GcpMetricsSourcePathArgs{...}
type GcpMetricsSourcePathInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathOutput() GcpMetricsSourcePathOutput
	ToGcpMetricsSourcePathOutputWithContext(context.Context) GcpMetricsSourcePathOutput
}

type GcpMetricsSourcePathArgs struct {
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Sumoloigc provides list of services that can be used in limitToServices for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
	CustomServices    GcpMetricsSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                     `pulumi:"limitToNamespaces"`
	// List of regions for which metrics would be collected (Empty to collect from all regions)
	LimitToRegions pulumi.StringArrayInput `pulumi:"limitToRegions"`
	// List of services from which metrics would be collected
	LimitToServices            pulumi.StringArrayInput                                 `pulumi:"limitToServices"`
	PathExpression             pulumi.StringPtrInput                                   `pulumi:"pathExpression"`
	SnsTopicOrSubscriptionArns GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 GcpMetricsSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// Type of polling source. This has to be `GcpMetricsPath`.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (GcpMetricsSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePath)(nil)).Elem()
}

func (i GcpMetricsSourcePathArgs) ToGcpMetricsSourcePathOutput() GcpMetricsSourcePathOutput {
	return i.ToGcpMetricsSourcePathOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathArgs) ToGcpMetricsSourcePathOutputWithContext(ctx context.Context) GcpMetricsSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathOutput)
}

func (i GcpMetricsSourcePathArgs) ToGcpMetricsSourcePathPtrOutput() GcpMetricsSourcePathPtrOutput {
	return i.ToGcpMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathArgs) ToGcpMetricsSourcePathPtrOutputWithContext(ctx context.Context) GcpMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathOutput).ToGcpMetricsSourcePathPtrOutputWithContext(ctx)
}

// GcpMetricsSourcePathPtrInput is an input type that accepts GcpMetricsSourcePathArgs, GcpMetricsSourcePathPtr and GcpMetricsSourcePathPtrOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathPtrInput` via:
//
//          GcpMetricsSourcePathArgs{...}
//
//  or:
//
//          nil
type GcpMetricsSourcePathPtrInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathPtrOutput() GcpMetricsSourcePathPtrOutput
	ToGcpMetricsSourcePathPtrOutputWithContext(context.Context) GcpMetricsSourcePathPtrOutput
}

type gcpMetricsSourcePathPtrType GcpMetricsSourcePathArgs

func GcpMetricsSourcePathPtr(v *GcpMetricsSourcePathArgs) GcpMetricsSourcePathPtrInput {
	return (*gcpMetricsSourcePathPtrType)(v)
}

func (*gcpMetricsSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpMetricsSourcePath)(nil)).Elem()
}

func (i *gcpMetricsSourcePathPtrType) ToGcpMetricsSourcePathPtrOutput() GcpMetricsSourcePathPtrOutput {
	return i.ToGcpMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i *gcpMetricsSourcePathPtrType) ToGcpMetricsSourcePathPtrOutputWithContext(ctx context.Context) GcpMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathPtrOutput)
}

type GcpMetricsSourcePathOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePath)(nil)).Elem()
}

func (o GcpMetricsSourcePathOutput) ToGcpMetricsSourcePathOutput() GcpMetricsSourcePathOutput {
	return o
}

func (o GcpMetricsSourcePathOutput) ToGcpMetricsSourcePathOutputWithContext(ctx context.Context) GcpMetricsSourcePathOutput {
	return o
}

func (o GcpMetricsSourcePathOutput) ToGcpMetricsSourcePathPtrOutput() GcpMetricsSourcePathPtrOutput {
	return o.ToGcpMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (o GcpMetricsSourcePathOutput) ToGcpMetricsSourcePathPtrOutputWithContext(ctx context.Context) GcpMetricsSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcpMetricsSourcePath) *GcpMetricsSourcePath {
		return &v
	}).(GcpMetricsSourcePathPtrOutput)
}

func (o GcpMetricsSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Sumoloigc provides list of services that can be used in limitToServices for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
func (o GcpMetricsSourcePathOutput) CustomServices() GcpMetricsSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) []GcpMetricsSourcePathCustomService { return v.CustomServices }).(GcpMetricsSourcePathCustomServiceArrayOutput)
}

func (o GcpMetricsSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of regions for which metrics would be collected (Empty to collect from all regions)
func (o GcpMetricsSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

// List of services from which metrics would be collected
func (o GcpMetricsSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

func (o GcpMetricsSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourcePathOutput) SnsTopicOrSubscriptionArns() GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) []GcpMetricsSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o GcpMetricsSourcePathOutput) TagFilters() GcpMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) []GcpMetricsSourcePathTagFilter { return v.TagFilters }).(GcpMetricsSourcePathTagFilterArrayOutput)
}

// Type of polling source. This has to be `GcpMetricsPath`.
func (o GcpMetricsSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o GcpMetricsSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type GcpMetricsSourcePathPtrOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpMetricsSourcePath)(nil)).Elem()
}

func (o GcpMetricsSourcePathPtrOutput) ToGcpMetricsSourcePathPtrOutput() GcpMetricsSourcePathPtrOutput {
	return o
}

func (o GcpMetricsSourcePathPtrOutput) ToGcpMetricsSourcePathPtrOutputWithContext(ctx context.Context) GcpMetricsSourcePathPtrOutput {
	return o
}

func (o GcpMetricsSourcePathPtrOutput) Elem() GcpMetricsSourcePathOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) GcpMetricsSourcePath {
		if v != nil {
			return *v
		}
		var ret GcpMetricsSourcePath
		return ret
	}).(GcpMetricsSourcePathOutput)
}

func (o GcpMetricsSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Sumoloigc provides list of services that can be used in limitToServices for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
func (o GcpMetricsSourcePathPtrOutput) CustomServices() GcpMetricsSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) []GcpMetricsSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(GcpMetricsSourcePathCustomServiceArrayOutput)
}

func (o GcpMetricsSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of regions for which metrics would be collected (Empty to collect from all regions)
func (o GcpMetricsSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

// List of services from which metrics would be collected
func (o GcpMetricsSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

func (o GcpMetricsSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourcePathPtrOutput) SnsTopicOrSubscriptionArns() GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) []GcpMetricsSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o GcpMetricsSourcePathPtrOutput) TagFilters() GcpMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) []GcpMetricsSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(GcpMetricsSourcePathTagFilterArrayOutput)
}

// Type of polling source. This has to be `GcpMetricsPath`.
func (o GcpMetricsSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GcpMetricsSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type GcpMetricsSourcePathCustomService struct {
	// List of metric type prefixes. Eg: `["compute.googleapis.com/instance/","compute.googleapis.com/guest/"]`
	Prefixes []string `pulumi:"prefixes"`
	// Name of the custom service you want to define.
	ServiceName *string `pulumi:"serviceName"`
}

// GcpMetricsSourcePathCustomServiceInput is an input type that accepts GcpMetricsSourcePathCustomServiceArgs and GcpMetricsSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathCustomServiceInput` via:
//
//          GcpMetricsSourcePathCustomServiceArgs{...}
type GcpMetricsSourcePathCustomServiceInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathCustomServiceOutput() GcpMetricsSourcePathCustomServiceOutput
	ToGcpMetricsSourcePathCustomServiceOutputWithContext(context.Context) GcpMetricsSourcePathCustomServiceOutput
}

type GcpMetricsSourcePathCustomServiceArgs struct {
	// List of metric type prefixes. Eg: `["compute.googleapis.com/instance/","compute.googleapis.com/guest/"]`
	Prefixes pulumi.StringArrayInput `pulumi:"prefixes"`
	// Name of the custom service you want to define.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (GcpMetricsSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePathCustomService)(nil)).Elem()
}

func (i GcpMetricsSourcePathCustomServiceArgs) ToGcpMetricsSourcePathCustomServiceOutput() GcpMetricsSourcePathCustomServiceOutput {
	return i.ToGcpMetricsSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathCustomServiceArgs) ToGcpMetricsSourcePathCustomServiceOutputWithContext(ctx context.Context) GcpMetricsSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathCustomServiceOutput)
}

// GcpMetricsSourcePathCustomServiceArrayInput is an input type that accepts GcpMetricsSourcePathCustomServiceArray and GcpMetricsSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathCustomServiceArrayInput` via:
//
//          GcpMetricsSourcePathCustomServiceArray{ GcpMetricsSourcePathCustomServiceArgs{...} }
type GcpMetricsSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathCustomServiceArrayOutput() GcpMetricsSourcePathCustomServiceArrayOutput
	ToGcpMetricsSourcePathCustomServiceArrayOutputWithContext(context.Context) GcpMetricsSourcePathCustomServiceArrayOutput
}

type GcpMetricsSourcePathCustomServiceArray []GcpMetricsSourcePathCustomServiceInput

func (GcpMetricsSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourcePathCustomService)(nil)).Elem()
}

func (i GcpMetricsSourcePathCustomServiceArray) ToGcpMetricsSourcePathCustomServiceArrayOutput() GcpMetricsSourcePathCustomServiceArrayOutput {
	return i.ToGcpMetricsSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathCustomServiceArray) ToGcpMetricsSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) GcpMetricsSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathCustomServiceArrayOutput)
}

type GcpMetricsSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePathCustomService)(nil)).Elem()
}

func (o GcpMetricsSourcePathCustomServiceOutput) ToGcpMetricsSourcePathCustomServiceOutput() GcpMetricsSourcePathCustomServiceOutput {
	return o
}

func (o GcpMetricsSourcePathCustomServiceOutput) ToGcpMetricsSourcePathCustomServiceOutputWithContext(ctx context.Context) GcpMetricsSourcePathCustomServiceOutput {
	return o
}

// List of metric type prefixes. Eg: `["compute.googleapis.com/instance/","compute.googleapis.com/guest/"]`
func (o GcpMetricsSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

// Name of the custom service you want to define.
func (o GcpMetricsSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type GcpMetricsSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourcePathCustomService)(nil)).Elem()
}

func (o GcpMetricsSourcePathCustomServiceArrayOutput) ToGcpMetricsSourcePathCustomServiceArrayOutput() GcpMetricsSourcePathCustomServiceArrayOutput {
	return o
}

func (o GcpMetricsSourcePathCustomServiceArrayOutput) ToGcpMetricsSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) GcpMetricsSourcePathCustomServiceArrayOutput {
	return o
}

func (o GcpMetricsSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) GcpMetricsSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpMetricsSourcePathCustomService {
		return vs[0].([]GcpMetricsSourcePathCustomService)[vs[1].(int)]
	}).(GcpMetricsSourcePathCustomServiceOutput)
}

type GcpMetricsSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// GcpMetricsSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs and GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs{...}
type GcpMetricsSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput() GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput
	ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput
}

type GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput() GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput)
}

// GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray and GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray{ GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput() GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray []GcpMetricsSourcePathSnsTopicOrSubscriptionArnInput

func (GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput() GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput() GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput() GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToGcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpMetricsSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]GcpMetricsSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput)
}

type GcpMetricsSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// Type of polling source. This has to be `GcpMetricsPath`.
	Type *string `pulumi:"type"`
}

// GcpMetricsSourcePathTagFilterInput is an input type that accepts GcpMetricsSourcePathTagFilterArgs and GcpMetricsSourcePathTagFilterOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathTagFilterInput` via:
//
//          GcpMetricsSourcePathTagFilterArgs{...}
type GcpMetricsSourcePathTagFilterInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathTagFilterOutput() GcpMetricsSourcePathTagFilterOutput
	ToGcpMetricsSourcePathTagFilterOutputWithContext(context.Context) GcpMetricsSourcePathTagFilterOutput
}

type GcpMetricsSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// Type of polling source. This has to be `GcpMetricsPath`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GcpMetricsSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i GcpMetricsSourcePathTagFilterArgs) ToGcpMetricsSourcePathTagFilterOutput() GcpMetricsSourcePathTagFilterOutput {
	return i.ToGcpMetricsSourcePathTagFilterOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathTagFilterArgs) ToGcpMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) GcpMetricsSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathTagFilterOutput)
}

// GcpMetricsSourcePathTagFilterArrayInput is an input type that accepts GcpMetricsSourcePathTagFilterArray and GcpMetricsSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `GcpMetricsSourcePathTagFilterArrayInput` via:
//
//          GcpMetricsSourcePathTagFilterArray{ GcpMetricsSourcePathTagFilterArgs{...} }
type GcpMetricsSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToGcpMetricsSourcePathTagFilterArrayOutput() GcpMetricsSourcePathTagFilterArrayOutput
	ToGcpMetricsSourcePathTagFilterArrayOutputWithContext(context.Context) GcpMetricsSourcePathTagFilterArrayOutput
}

type GcpMetricsSourcePathTagFilterArray []GcpMetricsSourcePathTagFilterInput

func (GcpMetricsSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i GcpMetricsSourcePathTagFilterArray) ToGcpMetricsSourcePathTagFilterArrayOutput() GcpMetricsSourcePathTagFilterArrayOutput {
	return i.ToGcpMetricsSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i GcpMetricsSourcePathTagFilterArray) ToGcpMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) GcpMetricsSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpMetricsSourcePathTagFilterArrayOutput)
}

type GcpMetricsSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o GcpMetricsSourcePathTagFilterOutput) ToGcpMetricsSourcePathTagFilterOutput() GcpMetricsSourcePathTagFilterOutput {
	return o
}

func (o GcpMetricsSourcePathTagFilterOutput) ToGcpMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) GcpMetricsSourcePathTagFilterOutput {
	return o
}

func (o GcpMetricsSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GcpMetricsSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Type of polling source. This has to be `GcpMetricsPath`.
func (o GcpMetricsSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpMetricsSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GcpMetricsSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (GcpMetricsSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o GcpMetricsSourcePathTagFilterArrayOutput) ToGcpMetricsSourcePathTagFilterArrayOutput() GcpMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o GcpMetricsSourcePathTagFilterArrayOutput) ToGcpMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) GcpMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o GcpMetricsSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) GcpMetricsSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpMetricsSourcePathTagFilter {
		return vs[0].([]GcpMetricsSourcePathTagFilter)[vs[1].(int)]
	}).(GcpMetricsSourcePathTagFilterOutput)
}

type GcpSourceAuthentication struct {
	Type *string `pulumi:"type"`
}

// GcpSourceAuthenticationInput is an input type that accepts GcpSourceAuthenticationArgs and GcpSourceAuthenticationOutput values.
// You can construct a concrete instance of `GcpSourceAuthenticationInput` via:
//
//          GcpSourceAuthenticationArgs{...}
type GcpSourceAuthenticationInput interface {
	pulumi.Input

	ToGcpSourceAuthenticationOutput() GcpSourceAuthenticationOutput
	ToGcpSourceAuthenticationOutputWithContext(context.Context) GcpSourceAuthenticationOutput
}

type GcpSourceAuthenticationArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GcpSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceAuthentication)(nil)).Elem()
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationOutput() GcpSourceAuthenticationOutput {
	return i.ToGcpSourceAuthenticationOutputWithContext(context.Background())
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationOutputWithContext(ctx context.Context) GcpSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceAuthenticationOutput)
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return i.ToGcpSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i GcpSourceAuthenticationArgs) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceAuthenticationOutput).ToGcpSourceAuthenticationPtrOutputWithContext(ctx)
}

// GcpSourceAuthenticationPtrInput is an input type that accepts GcpSourceAuthenticationArgs, GcpSourceAuthenticationPtr and GcpSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `GcpSourceAuthenticationPtrInput` via:
//
//          GcpSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type GcpSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput
	ToGcpSourceAuthenticationPtrOutputWithContext(context.Context) GcpSourceAuthenticationPtrOutput
}

type gcpSourceAuthenticationPtrType GcpSourceAuthenticationArgs

func GcpSourceAuthenticationPtr(v *GcpSourceAuthenticationArgs) GcpSourceAuthenticationPtrInput {
	return (*gcpSourceAuthenticationPtrType)(v)
}

func (*gcpSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourceAuthentication)(nil)).Elem()
}

func (i *gcpSourceAuthenticationPtrType) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return i.ToGcpSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *gcpSourceAuthenticationPtrType) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceAuthenticationPtrOutput)
}

type GcpSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (GcpSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceAuthentication)(nil)).Elem()
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationOutput() GcpSourceAuthenticationOutput {
	return o
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationOutputWithContext(ctx context.Context) GcpSourceAuthenticationOutput {
	return o
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return o.ToGcpSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o GcpSourceAuthenticationOutput) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcpSourceAuthentication) *GcpSourceAuthentication {
		return &v
	}).(GcpSourceAuthenticationPtrOutput)
}

func (o GcpSourceAuthenticationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourceAuthentication) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GcpSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GcpSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourceAuthentication)(nil)).Elem()
}

func (o GcpSourceAuthenticationPtrOutput) ToGcpSourceAuthenticationPtrOutput() GcpSourceAuthenticationPtrOutput {
	return o
}

func (o GcpSourceAuthenticationPtrOutput) ToGcpSourceAuthenticationPtrOutputWithContext(ctx context.Context) GcpSourceAuthenticationPtrOutput {
	return o
}

func (o GcpSourceAuthenticationPtrOutput) Elem() GcpSourceAuthenticationOutput {
	return o.ApplyT(func(v *GcpSourceAuthentication) GcpSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret GcpSourceAuthentication
		return ret
	}).(GcpSourceAuthenticationOutput)
}

func (o GcpSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GcpSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// GcpSourceDefaultDateFormatInput is an input type that accepts GcpSourceDefaultDateFormatArgs and GcpSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `GcpSourceDefaultDateFormatInput` via:
//
//          GcpSourceDefaultDateFormatArgs{...}
type GcpSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToGcpSourceDefaultDateFormatOutput() GcpSourceDefaultDateFormatOutput
	ToGcpSourceDefaultDateFormatOutputWithContext(context.Context) GcpSourceDefaultDateFormatOutput
}

type GcpSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (GcpSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (i GcpSourceDefaultDateFormatArgs) ToGcpSourceDefaultDateFormatOutput() GcpSourceDefaultDateFormatOutput {
	return i.ToGcpSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i GcpSourceDefaultDateFormatArgs) ToGcpSourceDefaultDateFormatOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceDefaultDateFormatOutput)
}

// GcpSourceDefaultDateFormatArrayInput is an input type that accepts GcpSourceDefaultDateFormatArray and GcpSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `GcpSourceDefaultDateFormatArrayInput` via:
//
//          GcpSourceDefaultDateFormatArray{ GcpSourceDefaultDateFormatArgs{...} }
type GcpSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToGcpSourceDefaultDateFormatArrayOutput() GcpSourceDefaultDateFormatArrayOutput
	ToGcpSourceDefaultDateFormatArrayOutputWithContext(context.Context) GcpSourceDefaultDateFormatArrayOutput
}

type GcpSourceDefaultDateFormatArray []GcpSourceDefaultDateFormatInput

func (GcpSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (i GcpSourceDefaultDateFormatArray) ToGcpSourceDefaultDateFormatArrayOutput() GcpSourceDefaultDateFormatArrayOutput {
	return i.ToGcpSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i GcpSourceDefaultDateFormatArray) ToGcpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceDefaultDateFormatArrayOutput)
}

type GcpSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (GcpSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (o GcpSourceDefaultDateFormatOutput) ToGcpSourceDefaultDateFormatOutput() GcpSourceDefaultDateFormatOutput {
	return o
}

func (o GcpSourceDefaultDateFormatOutput) ToGcpSourceDefaultDateFormatOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatOutput {
	return o
}

func (o GcpSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o GcpSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type GcpSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (GcpSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceDefaultDateFormat)(nil)).Elem()
}

func (o GcpSourceDefaultDateFormatArrayOutput) ToGcpSourceDefaultDateFormatArrayOutput() GcpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o GcpSourceDefaultDateFormatArrayOutput) ToGcpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) GcpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o GcpSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) GcpSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpSourceDefaultDateFormat {
		return vs[0].([]GcpSourceDefaultDateFormat)[vs[1].(int)]
	}).(GcpSourceDefaultDateFormatOutput)
}

type GcpSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// GcpSourceFilterInput is an input type that accepts GcpSourceFilterArgs and GcpSourceFilterOutput values.
// You can construct a concrete instance of `GcpSourceFilterInput` via:
//
//          GcpSourceFilterArgs{...}
type GcpSourceFilterInput interface {
	pulumi.Input

	ToGcpSourceFilterOutput() GcpSourceFilterOutput
	ToGcpSourceFilterOutputWithContext(context.Context) GcpSourceFilterOutput
}

type GcpSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (GcpSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceFilter)(nil)).Elem()
}

func (i GcpSourceFilterArgs) ToGcpSourceFilterOutput() GcpSourceFilterOutput {
	return i.ToGcpSourceFilterOutputWithContext(context.Background())
}

func (i GcpSourceFilterArgs) ToGcpSourceFilterOutputWithContext(ctx context.Context) GcpSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceFilterOutput)
}

// GcpSourceFilterArrayInput is an input type that accepts GcpSourceFilterArray and GcpSourceFilterArrayOutput values.
// You can construct a concrete instance of `GcpSourceFilterArrayInput` via:
//
//          GcpSourceFilterArray{ GcpSourceFilterArgs{...} }
type GcpSourceFilterArrayInput interface {
	pulumi.Input

	ToGcpSourceFilterArrayOutput() GcpSourceFilterArrayOutput
	ToGcpSourceFilterArrayOutputWithContext(context.Context) GcpSourceFilterArrayOutput
}

type GcpSourceFilterArray []GcpSourceFilterInput

func (GcpSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceFilter)(nil)).Elem()
}

func (i GcpSourceFilterArray) ToGcpSourceFilterArrayOutput() GcpSourceFilterArrayOutput {
	return i.ToGcpSourceFilterArrayOutputWithContext(context.Background())
}

func (i GcpSourceFilterArray) ToGcpSourceFilterArrayOutputWithContext(ctx context.Context) GcpSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourceFilterArrayOutput)
}

type GcpSourceFilterOutput struct{ *pulumi.OutputState }

func (GcpSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourceFilter)(nil)).Elem()
}

func (o GcpSourceFilterOutput) ToGcpSourceFilterOutput() GcpSourceFilterOutput {
	return o
}

func (o GcpSourceFilterOutput) ToGcpSourceFilterOutputWithContext(ctx context.Context) GcpSourceFilterOutput {
	return o
}

func (o GcpSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GcpSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o GcpSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GcpSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v GcpSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type GcpSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GcpSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpSourceFilter)(nil)).Elem()
}

func (o GcpSourceFilterArrayOutput) ToGcpSourceFilterArrayOutput() GcpSourceFilterArrayOutput {
	return o
}

func (o GcpSourceFilterArrayOutput) ToGcpSourceFilterArrayOutputWithContext(ctx context.Context) GcpSourceFilterArrayOutput {
	return o
}

func (o GcpSourceFilterArrayOutput) Index(i pulumi.IntInput) GcpSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpSourceFilter {
		return vs[0].([]GcpSourceFilter)[vs[1].(int)]
	}).(GcpSourceFilterOutput)
}

type GcpSourcePath struct {
	Type *string `pulumi:"type"`
}

// GcpSourcePathInput is an input type that accepts GcpSourcePathArgs and GcpSourcePathOutput values.
// You can construct a concrete instance of `GcpSourcePathInput` via:
//
//          GcpSourcePathArgs{...}
type GcpSourcePathInput interface {
	pulumi.Input

	ToGcpSourcePathOutput() GcpSourcePathOutput
	ToGcpSourcePathOutputWithContext(context.Context) GcpSourcePathOutput
}

type GcpSourcePathArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GcpSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourcePath)(nil)).Elem()
}

func (i GcpSourcePathArgs) ToGcpSourcePathOutput() GcpSourcePathOutput {
	return i.ToGcpSourcePathOutputWithContext(context.Background())
}

func (i GcpSourcePathArgs) ToGcpSourcePathOutputWithContext(ctx context.Context) GcpSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourcePathOutput)
}

func (i GcpSourcePathArgs) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return i.ToGcpSourcePathPtrOutputWithContext(context.Background())
}

func (i GcpSourcePathArgs) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourcePathOutput).ToGcpSourcePathPtrOutputWithContext(ctx)
}

// GcpSourcePathPtrInput is an input type that accepts GcpSourcePathArgs, GcpSourcePathPtr and GcpSourcePathPtrOutput values.
// You can construct a concrete instance of `GcpSourcePathPtrInput` via:
//
//          GcpSourcePathArgs{...}
//
//  or:
//
//          nil
type GcpSourcePathPtrInput interface {
	pulumi.Input

	ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput
	ToGcpSourcePathPtrOutputWithContext(context.Context) GcpSourcePathPtrOutput
}

type gcpSourcePathPtrType GcpSourcePathArgs

func GcpSourcePathPtr(v *GcpSourcePathArgs) GcpSourcePathPtrInput {
	return (*gcpSourcePathPtrType)(v)
}

func (*gcpSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourcePath)(nil)).Elem()
}

func (i *gcpSourcePathPtrType) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return i.ToGcpSourcePathPtrOutputWithContext(context.Background())
}

func (i *gcpSourcePathPtrType) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpSourcePathPtrOutput)
}

type GcpSourcePathOutput struct{ *pulumi.OutputState }

func (GcpSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpSourcePath)(nil)).Elem()
}

func (o GcpSourcePathOutput) ToGcpSourcePathOutput() GcpSourcePathOutput {
	return o
}

func (o GcpSourcePathOutput) ToGcpSourcePathOutputWithContext(ctx context.Context) GcpSourcePathOutput {
	return o
}

func (o GcpSourcePathOutput) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return o.ToGcpSourcePathPtrOutputWithContext(context.Background())
}

func (o GcpSourcePathOutput) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcpSourcePath) *GcpSourcePath {
		return &v
	}).(GcpSourcePathPtrOutput)
}

func (o GcpSourcePathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GcpSourcePath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GcpSourcePathPtrOutput struct{ *pulumi.OutputState }

func (GcpSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpSourcePath)(nil)).Elem()
}

func (o GcpSourcePathPtrOutput) ToGcpSourcePathPtrOutput() GcpSourcePathPtrOutput {
	return o
}

func (o GcpSourcePathPtrOutput) ToGcpSourcePathPtrOutputWithContext(ctx context.Context) GcpSourcePathPtrOutput {
	return o
}

func (o GcpSourcePathPtrOutput) Elem() GcpSourcePathOutput {
	return o.ApplyT(func(v *GcpSourcePath) GcpSourcePath {
		if v != nil {
			return *v
		}
		var ret GcpSourcePath
		return ret
	}).(GcpSourcePathOutput)
}

func (o GcpSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type HierarchyFilter struct {
	// Filtering key.
	Key string `pulumi:"key"`
	// Value required for the filtering key.
	Value string `pulumi:"value"`
}

// HierarchyFilterInput is an input type that accepts HierarchyFilterArgs and HierarchyFilterOutput values.
// You can construct a concrete instance of `HierarchyFilterInput` via:
//
//          HierarchyFilterArgs{...}
type HierarchyFilterInput interface {
	pulumi.Input

	ToHierarchyFilterOutput() HierarchyFilterOutput
	ToHierarchyFilterOutputWithContext(context.Context) HierarchyFilterOutput
}

type HierarchyFilterArgs struct {
	// Filtering key.
	Key pulumi.StringInput `pulumi:"key"`
	// Value required for the filtering key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (HierarchyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyFilter)(nil)).Elem()
}

func (i HierarchyFilterArgs) ToHierarchyFilterOutput() HierarchyFilterOutput {
	return i.ToHierarchyFilterOutputWithContext(context.Background())
}

func (i HierarchyFilterArgs) ToHierarchyFilterOutputWithContext(ctx context.Context) HierarchyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyFilterOutput)
}

func (i HierarchyFilterArgs) ToHierarchyFilterPtrOutput() HierarchyFilterPtrOutput {
	return i.ToHierarchyFilterPtrOutputWithContext(context.Background())
}

func (i HierarchyFilterArgs) ToHierarchyFilterPtrOutputWithContext(ctx context.Context) HierarchyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyFilterOutput).ToHierarchyFilterPtrOutputWithContext(ctx)
}

// HierarchyFilterPtrInput is an input type that accepts HierarchyFilterArgs, HierarchyFilterPtr and HierarchyFilterPtrOutput values.
// You can construct a concrete instance of `HierarchyFilterPtrInput` via:
//
//          HierarchyFilterArgs{...}
//
//  or:
//
//          nil
type HierarchyFilterPtrInput interface {
	pulumi.Input

	ToHierarchyFilterPtrOutput() HierarchyFilterPtrOutput
	ToHierarchyFilterPtrOutputWithContext(context.Context) HierarchyFilterPtrOutput
}

type hierarchyFilterPtrType HierarchyFilterArgs

func HierarchyFilterPtr(v *HierarchyFilterArgs) HierarchyFilterPtrInput {
	return (*hierarchyFilterPtrType)(v)
}

func (*hierarchyFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyFilter)(nil)).Elem()
}

func (i *hierarchyFilterPtrType) ToHierarchyFilterPtrOutput() HierarchyFilterPtrOutput {
	return i.ToHierarchyFilterPtrOutputWithContext(context.Background())
}

func (i *hierarchyFilterPtrType) ToHierarchyFilterPtrOutputWithContext(ctx context.Context) HierarchyFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyFilterPtrOutput)
}

type HierarchyFilterOutput struct{ *pulumi.OutputState }

func (HierarchyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyFilter)(nil)).Elem()
}

func (o HierarchyFilterOutput) ToHierarchyFilterOutput() HierarchyFilterOutput {
	return o
}

func (o HierarchyFilterOutput) ToHierarchyFilterOutputWithContext(ctx context.Context) HierarchyFilterOutput {
	return o
}

func (o HierarchyFilterOutput) ToHierarchyFilterPtrOutput() HierarchyFilterPtrOutput {
	return o.ToHierarchyFilterPtrOutputWithContext(context.Background())
}

func (o HierarchyFilterOutput) ToHierarchyFilterPtrOutputWithContext(ctx context.Context) HierarchyFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyFilter) *HierarchyFilter {
		return &v
	}).(HierarchyFilterPtrOutput)
}

// Filtering key.
func (o HierarchyFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Value required for the filtering key.
func (o HierarchyFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyFilter) string { return v.Value }).(pulumi.StringOutput)
}

type HierarchyFilterPtrOutput struct{ *pulumi.OutputState }

func (HierarchyFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyFilter)(nil)).Elem()
}

func (o HierarchyFilterPtrOutput) ToHierarchyFilterPtrOutput() HierarchyFilterPtrOutput {
	return o
}

func (o HierarchyFilterPtrOutput) ToHierarchyFilterPtrOutputWithContext(ctx context.Context) HierarchyFilterPtrOutput {
	return o
}

func (o HierarchyFilterPtrOutput) Elem() HierarchyFilterOutput {
	return o.ApplyT(func(v *HierarchyFilter) HierarchyFilter {
		if v != nil {
			return *v
		}
		var ret HierarchyFilter
		return ret
	}).(HierarchyFilterOutput)
}

// Filtering key.
func (o HierarchyFilterPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Value required for the filtering key.
func (o HierarchyFilterPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type HierarchyLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelInput is an input type that accepts HierarchyLevelArgs and HierarchyLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelInput` via:
//
//          HierarchyLevelArgs{...}
type HierarchyLevelInput interface {
	pulumi.Input

	ToHierarchyLevelOutput() HierarchyLevelOutput
	ToHierarchyLevelOutputWithContext(context.Context) HierarchyLevelOutput
}

type HierarchyLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevel)(nil)).Elem()
}

func (i HierarchyLevelArgs) ToHierarchyLevelOutput() HierarchyLevelOutput {
	return i.ToHierarchyLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelArgs) ToHierarchyLevelOutputWithContext(ctx context.Context) HierarchyLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelOutput)
}

// HierarchyLevelArrayInput is an input type that accepts HierarchyLevelArray and HierarchyLevelArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelArrayInput` via:
//
//          HierarchyLevelArray{ HierarchyLevelArgs{...} }
type HierarchyLevelArrayInput interface {
	pulumi.Input

	ToHierarchyLevelArrayOutput() HierarchyLevelArrayOutput
	ToHierarchyLevelArrayOutputWithContext(context.Context) HierarchyLevelArrayOutput
}

type HierarchyLevelArray []HierarchyLevelInput

func (HierarchyLevelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevel)(nil)).Elem()
}

func (i HierarchyLevelArray) ToHierarchyLevelArrayOutput() HierarchyLevelArrayOutput {
	return i.ToHierarchyLevelArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelArray) ToHierarchyLevelArrayOutputWithContext(ctx context.Context) HierarchyLevelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelArrayOutput)
}

type HierarchyLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevel)(nil)).Elem()
}

func (o HierarchyLevelOutput) ToHierarchyLevelOutput() HierarchyLevelOutput {
	return o
}

func (o HierarchyLevelOutput) ToHierarchyLevelOutputWithContext(ctx context.Context) HierarchyLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelOutput) NextLevel() HierarchyLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevel) *HierarchyLevelNextLevel { return v.NextLevel }).(HierarchyLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevel) []HierarchyLevelNextLevelsWithCondition { return v.NextLevelsWithConditions }).(HierarchyLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevel)(nil)).Elem()
}

func (o HierarchyLevelArrayOutput) ToHierarchyLevelArrayOutput() HierarchyLevelArrayOutput {
	return o
}

func (o HierarchyLevelArrayOutput) ToHierarchyLevelArrayOutputWithContext(ctx context.Context) HierarchyLevelArrayOutput {
	return o
}

func (o HierarchyLevelArrayOutput) Index(i pulumi.IntInput) HierarchyLevelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevel {
		return vs[0].([]HierarchyLevel)[vs[1].(int)]
	}).(HierarchyLevelOutput)
}

type HierarchyLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelArgs and HierarchyLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelArgs{...}
type HierarchyLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelOutput() HierarchyLevelNextLevelOutput
	ToHierarchyLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelOutput
}

type HierarchyLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelArgs) ToHierarchyLevelNextLevelOutput() HierarchyLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelArgs) ToHierarchyLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelArgs) ToHierarchyLevelNextLevelPtrOutput() HierarchyLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelArgs) ToHierarchyLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelOutput).ToHierarchyLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelArgs, HierarchyLevelNextLevelPtr and HierarchyLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelPtrOutput() HierarchyLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelPtrType HierarchyLevelNextLevelArgs

func HierarchyLevelNextLevelPtr(v *HierarchyLevelNextLevelArgs) HierarchyLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelPtrType) ToHierarchyLevelNextLevelPtrOutput() HierarchyLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelPtrType) ToHierarchyLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelOutput) ToHierarchyLevelNextLevelOutput() HierarchyLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelOutput) ToHierarchyLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelOutput) ToHierarchyLevelNextLevelPtrOutput() HierarchyLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelOutput) ToHierarchyLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevel) *HierarchyLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevel) *HierarchyLevelNextLevelNextLevel { return v.NextLevel }).(HierarchyLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelPtrOutput() HierarchyLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevel) HierarchyLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevel) *HierarchyLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                         `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                  `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                         `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition) string { return v.Condition }).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                     `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                       `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithCondition) string { return v.Condition }).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                     `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                   `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                        `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                              `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                       `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithCondition) string { return v.Condition }).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                     `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                   `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                        `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                          `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                   `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                        `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                      `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                                                  `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                                           `pulumi:"condition"`
	Level     HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                     `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                              `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithCondition) string { return v.Condition }).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) string { return v.EntityType }).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                     `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                   `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                            `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                        `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                          `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                   `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                        `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                      `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                                                  `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                                           `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                 `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                          `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string { return v.Condition }).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                        `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                      `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                               `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                                                  `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                                           `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                             `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                      `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v == nil {
			return nil
		}
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                                                  `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                                           `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                                         `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                                  `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Next level without a condition.
	NextLevel HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput `pulumi:"nextLevel"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Next level without a condition.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevel() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return v.NextLevel
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return v.NextLevelsWithConditions
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput).ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs, HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{...}
//
//  or:
//
//          nil
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput
}

type hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs

func HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtr(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput {
	return (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType)(v)
}

func (*hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (i *hierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrType) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(context.Background())
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		return &v
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) Elem() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
		if v != nil {
			return *v
		}
		var ret HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel
		return ret
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput)
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) EntityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) *string {
		if v == nil {
			return nil
		}
		return &v.EntityType
	}).(pulumi.StringPtrOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel) []string {
		if v == nil {
			return nil
		}
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition string                                                                                                                                                     `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel `pulumi:"level"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs struct {
	// Condition to be checked against for level.entityType value, for now full string match.
	Condition pulumi.StringInput                                                                                                                                              `pulumi:"condition"`
	Level     HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput `pulumi:"level"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{ HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{...} }
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray []HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return o
}

// Condition to be checked against for level.entityType value, for now full string match.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) string {
		return v.Condition
	}).(pulumi.StringOutput)
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput) Level() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
		return v.Level
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput) Index(i pulumi.IntInput) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
		return vs[0].([]HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition)[vs[1].(int)]
	}).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType string `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions []string `pulumi:"nextLevelsWithConditions"`
}

// HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput is an input type that accepts HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs and HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput values.
// You can construct a concrete instance of `HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput` via:
//
//          HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{...}
type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput interface {
	pulumi.Input

	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
	ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs struct {
	// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// Zero or more next levels with conditions.
	NextLevelsWithConditions pulumi.StringArrayInput `pulumi:"nextLevelsWithConditions"`
}

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return i.ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(context.Background())
}

func (i HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput)
}

type HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput struct{ *pulumi.OutputState }

func (HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel)(nil)).Elem()
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput() HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) ToHierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutputWithContext(ctx context.Context) HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput {
	return o
}

// Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) string {
		return v.EntityType
	}).(pulumi.StringOutput)
}

// Zero or more next levels with conditions.
func (o HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput) NextLevelsWithConditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel) []string {
		return v.NextLevelsWithConditions
	}).(pulumi.StringArrayOutput)
}

type HttpSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// HttpSourceDefaultDateFormatInput is an input type that accepts HttpSourceDefaultDateFormatArgs and HttpSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `HttpSourceDefaultDateFormatInput` via:
//
//          HttpSourceDefaultDateFormatArgs{...}
type HttpSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput
	ToHttpSourceDefaultDateFormatOutputWithContext(context.Context) HttpSourceDefaultDateFormatOutput
}

type HttpSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (HttpSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (i HttpSourceDefaultDateFormatArgs) ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput {
	return i.ToHttpSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i HttpSourceDefaultDateFormatArgs) ToHttpSourceDefaultDateFormatOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceDefaultDateFormatOutput)
}

// HttpSourceDefaultDateFormatArrayInput is an input type that accepts HttpSourceDefaultDateFormatArray and HttpSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `HttpSourceDefaultDateFormatArrayInput` via:
//
//          HttpSourceDefaultDateFormatArray{ HttpSourceDefaultDateFormatArgs{...} }
type HttpSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput
	ToHttpSourceDefaultDateFormatArrayOutputWithContext(context.Context) HttpSourceDefaultDateFormatArrayOutput
}

type HttpSourceDefaultDateFormatArray []HttpSourceDefaultDateFormatInput

func (HttpSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (i HttpSourceDefaultDateFormatArray) ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput {
	return i.ToHttpSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i HttpSourceDefaultDateFormatArray) ToHttpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceDefaultDateFormatArrayOutput)
}

type HttpSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (HttpSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (o HttpSourceDefaultDateFormatOutput) ToHttpSourceDefaultDateFormatOutput() HttpSourceDefaultDateFormatOutput {
	return o
}

func (o HttpSourceDefaultDateFormatOutput) ToHttpSourceDefaultDateFormatOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatOutput {
	return o
}

func (o HttpSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o HttpSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type HttpSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (HttpSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceDefaultDateFormat)(nil)).Elem()
}

func (o HttpSourceDefaultDateFormatArrayOutput) ToHttpSourceDefaultDateFormatArrayOutput() HttpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o HttpSourceDefaultDateFormatArrayOutput) ToHttpSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) HttpSourceDefaultDateFormatArrayOutput {
	return o
}

func (o HttpSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) HttpSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpSourceDefaultDateFormat {
		return vs[0].([]HttpSourceDefaultDateFormat)[vs[1].(int)]
	}).(HttpSourceDefaultDateFormatOutput)
}

type HttpSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// HttpSourceFilterInput is an input type that accepts HttpSourceFilterArgs and HttpSourceFilterOutput values.
// You can construct a concrete instance of `HttpSourceFilterInput` via:
//
//          HttpSourceFilterArgs{...}
type HttpSourceFilterInput interface {
	pulumi.Input

	ToHttpSourceFilterOutput() HttpSourceFilterOutput
	ToHttpSourceFilterOutputWithContext(context.Context) HttpSourceFilterOutput
}

type HttpSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (HttpSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceFilter)(nil)).Elem()
}

func (i HttpSourceFilterArgs) ToHttpSourceFilterOutput() HttpSourceFilterOutput {
	return i.ToHttpSourceFilterOutputWithContext(context.Background())
}

func (i HttpSourceFilterArgs) ToHttpSourceFilterOutputWithContext(ctx context.Context) HttpSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceFilterOutput)
}

// HttpSourceFilterArrayInput is an input type that accepts HttpSourceFilterArray and HttpSourceFilterArrayOutput values.
// You can construct a concrete instance of `HttpSourceFilterArrayInput` via:
//
//          HttpSourceFilterArray{ HttpSourceFilterArgs{...} }
type HttpSourceFilterArrayInput interface {
	pulumi.Input

	ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput
	ToHttpSourceFilterArrayOutputWithContext(context.Context) HttpSourceFilterArrayOutput
}

type HttpSourceFilterArray []HttpSourceFilterInput

func (HttpSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceFilter)(nil)).Elem()
}

func (i HttpSourceFilterArray) ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput {
	return i.ToHttpSourceFilterArrayOutputWithContext(context.Background())
}

func (i HttpSourceFilterArray) ToHttpSourceFilterArrayOutputWithContext(ctx context.Context) HttpSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpSourceFilterArrayOutput)
}

type HttpSourceFilterOutput struct{ *pulumi.OutputState }

func (HttpSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpSourceFilter)(nil)).Elem()
}

func (o HttpSourceFilterOutput) ToHttpSourceFilterOutput() HttpSourceFilterOutput {
	return o
}

func (o HttpSourceFilterOutput) ToHttpSourceFilterOutputWithContext(ctx context.Context) HttpSourceFilterOutput {
	return o
}

func (o HttpSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o HttpSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HttpSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o HttpSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o HttpSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v HttpSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type HttpSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (HttpSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpSourceFilter)(nil)).Elem()
}

func (o HttpSourceFilterArrayOutput) ToHttpSourceFilterArrayOutput() HttpSourceFilterArrayOutput {
	return o
}

func (o HttpSourceFilterArrayOutput) ToHttpSourceFilterArrayOutputWithContext(ctx context.Context) HttpSourceFilterArrayOutput {
	return o
}

func (o HttpSourceFilterArrayOutput) Index(i pulumi.IntInput) HttpSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpSourceFilter {
		return vs[0].([]HttpSourceFilter)[vs[1].(int)]
	}).(HttpSourceFilterOutput)
}

type KineisLogSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// Must be either `KinesisLogPath` or `NoPathExpression`
	Type string `pulumi:"type"`
}

// KineisLogSourceAuthenticationInput is an input type that accepts KineisLogSourceAuthenticationArgs and KineisLogSourceAuthenticationOutput values.
// You can construct a concrete instance of `KineisLogSourceAuthenticationInput` via:
//
//          KineisLogSourceAuthenticationArgs{...}
type KineisLogSourceAuthenticationInput interface {
	pulumi.Input

	ToKineisLogSourceAuthenticationOutput() KineisLogSourceAuthenticationOutput
	ToKineisLogSourceAuthenticationOutputWithContext(context.Context) KineisLogSourceAuthenticationOutput
}

type KineisLogSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Must be either `KinesisLogPath` or `NoPathExpression`
	Type pulumi.StringInput `pulumi:"type"`
}

func (KineisLogSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceAuthentication)(nil)).Elem()
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationOutput() KineisLogSourceAuthenticationOutput {
	return i.ToKineisLogSourceAuthenticationOutputWithContext(context.Background())
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceAuthenticationOutput)
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return i.ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i KineisLogSourceAuthenticationArgs) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceAuthenticationOutput).ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx)
}

// KineisLogSourceAuthenticationPtrInput is an input type that accepts KineisLogSourceAuthenticationArgs, KineisLogSourceAuthenticationPtr and KineisLogSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `KineisLogSourceAuthenticationPtrInput` via:
//
//          KineisLogSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type KineisLogSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput
	ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Context) KineisLogSourceAuthenticationPtrOutput
}

type kineisLogSourceAuthenticationPtrType KineisLogSourceAuthenticationArgs

func KineisLogSourceAuthenticationPtr(v *KineisLogSourceAuthenticationArgs) KineisLogSourceAuthenticationPtrInput {
	return (*kineisLogSourceAuthenticationPtrType)(v)
}

func (*kineisLogSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourceAuthentication)(nil)).Elem()
}

func (i *kineisLogSourceAuthenticationPtrType) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return i.ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kineisLogSourceAuthenticationPtrType) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceAuthenticationPtrOutput)
}

type KineisLogSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (KineisLogSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceAuthentication)(nil)).Elem()
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationOutput() KineisLogSourceAuthenticationOutput {
	return o
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationOutput {
	return o
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return o.ToKineisLogSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o KineisLogSourceAuthenticationOutput) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KineisLogSourceAuthentication) *KineisLogSourceAuthentication {
		return &v
	}).(KineisLogSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KineisLogSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Must be either `KinesisLogPath` or `NoPathExpression`
func (o KineisLogSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type KineisLogSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KineisLogSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourceAuthentication)(nil)).Elem()
}

func (o KineisLogSourceAuthenticationPtrOutput) ToKineisLogSourceAuthenticationPtrOutput() KineisLogSourceAuthenticationPtrOutput {
	return o
}

func (o KineisLogSourceAuthenticationPtrOutput) ToKineisLogSourceAuthenticationPtrOutputWithContext(ctx context.Context) KineisLogSourceAuthenticationPtrOutput {
	return o
}

func (o KineisLogSourceAuthenticationPtrOutput) Elem() KineisLogSourceAuthenticationOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) KineisLogSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret KineisLogSourceAuthentication
		return ret
	}).(KineisLogSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KineisLogSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Must be either `KinesisLogPath` or `NoPathExpression`
func (o KineisLogSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KineisLogSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// KineisLogSourceDefaultDateFormatInput is an input type that accepts KineisLogSourceDefaultDateFormatArgs and KineisLogSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `KineisLogSourceDefaultDateFormatInput` via:
//
//          KineisLogSourceDefaultDateFormatArgs{...}
type KineisLogSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToKineisLogSourceDefaultDateFormatOutput() KineisLogSourceDefaultDateFormatOutput
	ToKineisLogSourceDefaultDateFormatOutputWithContext(context.Context) KineisLogSourceDefaultDateFormatOutput
}

type KineisLogSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (KineisLogSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (i KineisLogSourceDefaultDateFormatArgs) ToKineisLogSourceDefaultDateFormatOutput() KineisLogSourceDefaultDateFormatOutput {
	return i.ToKineisLogSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i KineisLogSourceDefaultDateFormatArgs) ToKineisLogSourceDefaultDateFormatOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceDefaultDateFormatOutput)
}

// KineisLogSourceDefaultDateFormatArrayInput is an input type that accepts KineisLogSourceDefaultDateFormatArray and KineisLogSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `KineisLogSourceDefaultDateFormatArrayInput` via:
//
//          KineisLogSourceDefaultDateFormatArray{ KineisLogSourceDefaultDateFormatArgs{...} }
type KineisLogSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToKineisLogSourceDefaultDateFormatArrayOutput() KineisLogSourceDefaultDateFormatArrayOutput
	ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(context.Context) KineisLogSourceDefaultDateFormatArrayOutput
}

type KineisLogSourceDefaultDateFormatArray []KineisLogSourceDefaultDateFormatInput

func (KineisLogSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (i KineisLogSourceDefaultDateFormatArray) ToKineisLogSourceDefaultDateFormatArrayOutput() KineisLogSourceDefaultDateFormatArrayOutput {
	return i.ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i KineisLogSourceDefaultDateFormatArray) ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceDefaultDateFormatArrayOutput)
}

type KineisLogSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (KineisLogSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (o KineisLogSourceDefaultDateFormatOutput) ToKineisLogSourceDefaultDateFormatOutput() KineisLogSourceDefaultDateFormatOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatOutput) ToKineisLogSourceDefaultDateFormatOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o KineisLogSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type KineisLogSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (KineisLogSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceDefaultDateFormat)(nil)).Elem()
}

func (o KineisLogSourceDefaultDateFormatArrayOutput) ToKineisLogSourceDefaultDateFormatArrayOutput() KineisLogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatArrayOutput) ToKineisLogSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KineisLogSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KineisLogSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) KineisLogSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KineisLogSourceDefaultDateFormat {
		return vs[0].([]KineisLogSourceDefaultDateFormat)[vs[1].(int)]
	}).(KineisLogSourceDefaultDateFormatOutput)
}

type KineisLogSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// KineisLogSourceFilterInput is an input type that accepts KineisLogSourceFilterArgs and KineisLogSourceFilterOutput values.
// You can construct a concrete instance of `KineisLogSourceFilterInput` via:
//
//          KineisLogSourceFilterArgs{...}
type KineisLogSourceFilterInput interface {
	pulumi.Input

	ToKineisLogSourceFilterOutput() KineisLogSourceFilterOutput
	ToKineisLogSourceFilterOutputWithContext(context.Context) KineisLogSourceFilterOutput
}

type KineisLogSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (KineisLogSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceFilter)(nil)).Elem()
}

func (i KineisLogSourceFilterArgs) ToKineisLogSourceFilterOutput() KineisLogSourceFilterOutput {
	return i.ToKineisLogSourceFilterOutputWithContext(context.Background())
}

func (i KineisLogSourceFilterArgs) ToKineisLogSourceFilterOutputWithContext(ctx context.Context) KineisLogSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceFilterOutput)
}

// KineisLogSourceFilterArrayInput is an input type that accepts KineisLogSourceFilterArray and KineisLogSourceFilterArrayOutput values.
// You can construct a concrete instance of `KineisLogSourceFilterArrayInput` via:
//
//          KineisLogSourceFilterArray{ KineisLogSourceFilterArgs{...} }
type KineisLogSourceFilterArrayInput interface {
	pulumi.Input

	ToKineisLogSourceFilterArrayOutput() KineisLogSourceFilterArrayOutput
	ToKineisLogSourceFilterArrayOutputWithContext(context.Context) KineisLogSourceFilterArrayOutput
}

type KineisLogSourceFilterArray []KineisLogSourceFilterInput

func (KineisLogSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceFilter)(nil)).Elem()
}

func (i KineisLogSourceFilterArray) ToKineisLogSourceFilterArrayOutput() KineisLogSourceFilterArrayOutput {
	return i.ToKineisLogSourceFilterArrayOutputWithContext(context.Background())
}

func (i KineisLogSourceFilterArray) ToKineisLogSourceFilterArrayOutputWithContext(ctx context.Context) KineisLogSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourceFilterArrayOutput)
}

type KineisLogSourceFilterOutput struct{ *pulumi.OutputState }

func (KineisLogSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourceFilter)(nil)).Elem()
}

func (o KineisLogSourceFilterOutput) ToKineisLogSourceFilterOutput() KineisLogSourceFilterOutput {
	return o
}

func (o KineisLogSourceFilterOutput) ToKineisLogSourceFilterOutputWithContext(ctx context.Context) KineisLogSourceFilterOutput {
	return o
}

func (o KineisLogSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o KineisLogSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o KineisLogSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o KineisLogSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type KineisLogSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (KineisLogSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KineisLogSourceFilter)(nil)).Elem()
}

func (o KineisLogSourceFilterArrayOutput) ToKineisLogSourceFilterArrayOutput() KineisLogSourceFilterArrayOutput {
	return o
}

func (o KineisLogSourceFilterArrayOutput) ToKineisLogSourceFilterArrayOutputWithContext(ctx context.Context) KineisLogSourceFilterArrayOutput {
	return o
}

func (o KineisLogSourceFilterArrayOutput) Index(i pulumi.IntInput) KineisLogSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KineisLogSourceFilter {
		return vs[0].([]KineisLogSourceFilter)[vs[1].(int)]
	}).(KineisLogSourceFilterOutput)
}

type KineisLogSourcePath struct {
	// The name of the bucket. This is needed if using type `KinesisLogPath`.
	BucketName *string `pulumi:"bucketName"`
	// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must includes `http-endpoint-failed/`.
	PathExpression *string `pulumi:"pathExpression"`
	// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
	ScanInterval *int `pulumi:"scanInterval"`
	// Must be either `KinesisLogPath` or `NoPathExpression`
	Type string `pulumi:"type"`
}

// KineisLogSourcePathInput is an input type that accepts KineisLogSourcePathArgs and KineisLogSourcePathOutput values.
// You can construct a concrete instance of `KineisLogSourcePathInput` via:
//
//          KineisLogSourcePathArgs{...}
type KineisLogSourcePathInput interface {
	pulumi.Input

	ToKineisLogSourcePathOutput() KineisLogSourcePathOutput
	ToKineisLogSourcePathOutputWithContext(context.Context) KineisLogSourcePathOutput
}

type KineisLogSourcePathArgs struct {
	// The name of the bucket. This is needed if using type `KinesisLogPath`.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must includes `http-endpoint-failed/`.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
	ScanInterval pulumi.IntPtrInput `pulumi:"scanInterval"`
	// Must be either `KinesisLogPath` or `NoPathExpression`
	Type pulumi.StringInput `pulumi:"type"`
}

func (KineisLogSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourcePath)(nil)).Elem()
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathOutput() KineisLogSourcePathOutput {
	return i.ToKineisLogSourcePathOutputWithContext(context.Background())
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathOutputWithContext(ctx context.Context) KineisLogSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourcePathOutput)
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return i.ToKineisLogSourcePathPtrOutputWithContext(context.Background())
}

func (i KineisLogSourcePathArgs) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourcePathOutput).ToKineisLogSourcePathPtrOutputWithContext(ctx)
}

// KineisLogSourcePathPtrInput is an input type that accepts KineisLogSourcePathArgs, KineisLogSourcePathPtr and KineisLogSourcePathPtrOutput values.
// You can construct a concrete instance of `KineisLogSourcePathPtrInput` via:
//
//          KineisLogSourcePathArgs{...}
//
//  or:
//
//          nil
type KineisLogSourcePathPtrInput interface {
	pulumi.Input

	ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput
	ToKineisLogSourcePathPtrOutputWithContext(context.Context) KineisLogSourcePathPtrOutput
}

type kineisLogSourcePathPtrType KineisLogSourcePathArgs

func KineisLogSourcePathPtr(v *KineisLogSourcePathArgs) KineisLogSourcePathPtrInput {
	return (*kineisLogSourcePathPtrType)(v)
}

func (*kineisLogSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourcePath)(nil)).Elem()
}

func (i *kineisLogSourcePathPtrType) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return i.ToKineisLogSourcePathPtrOutputWithContext(context.Background())
}

func (i *kineisLogSourcePathPtrType) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KineisLogSourcePathPtrOutput)
}

type KineisLogSourcePathOutput struct{ *pulumi.OutputState }

func (KineisLogSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KineisLogSourcePath)(nil)).Elem()
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathOutput() KineisLogSourcePathOutput {
	return o
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathOutputWithContext(ctx context.Context) KineisLogSourcePathOutput {
	return o
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return o.ToKineisLogSourcePathPtrOutputWithContext(context.Background())
}

func (o KineisLogSourcePathOutput) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KineisLogSourcePath) *KineisLogSourcePath {
		return &v
	}).(KineisLogSourcePathPtrOutput)
}

// The name of the bucket. This is needed if using type `KinesisLogPath`.
func (o KineisLogSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must includes `http-endpoint-failed/`.
func (o KineisLogSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
func (o KineisLogSourcePathOutput) ScanInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KineisLogSourcePath) *int { return v.ScanInterval }).(pulumi.IntPtrOutput)
}

// Must be either `KinesisLogPath` or `NoPathExpression`
func (o KineisLogSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KineisLogSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type KineisLogSourcePathPtrOutput struct{ *pulumi.OutputState }

func (KineisLogSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KineisLogSourcePath)(nil)).Elem()
}

func (o KineisLogSourcePathPtrOutput) ToKineisLogSourcePathPtrOutput() KineisLogSourcePathPtrOutput {
	return o
}

func (o KineisLogSourcePathPtrOutput) ToKineisLogSourcePathPtrOutputWithContext(ctx context.Context) KineisLogSourcePathPtrOutput {
	return o
}

func (o KineisLogSourcePathPtrOutput) Elem() KineisLogSourcePathOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) KineisLogSourcePath {
		if v != nil {
			return *v
		}
		var ret KineisLogSourcePath
		return ret
	}).(KineisLogSourcePathOutput)
}

// The name of the bucket. This is needed if using type `KinesisLogPath`.
func (o KineisLogSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must includes `http-endpoint-failed/`.
func (o KineisLogSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
func (o KineisLogSourcePathPtrOutput) ScanInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *int {
		if v == nil {
			return nil
		}
		return v.ScanInterval
	}).(pulumi.IntPtrOutput)
}

// Must be either `KinesisLogPath` or `NoPathExpression`
func (o KineisLogSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KineisLogSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// This value has to be set to `TagFilters`
	Type string `pulumi:"type"`
}

// KinesisMetricsSourceAuthenticationInput is an input type that accepts KinesisMetricsSourceAuthenticationArgs and KinesisMetricsSourceAuthenticationOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceAuthenticationInput` via:
//
//          KinesisMetricsSourceAuthenticationArgs{...}
type KinesisMetricsSourceAuthenticationInput interface {
	pulumi.Input

	ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput
	ToKinesisMetricsSourceAuthenticationOutputWithContext(context.Context) KinesisMetricsSourceAuthenticationOutput
}

type KinesisMetricsSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringInput `pulumi:"type"`
}

func (KinesisMetricsSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput {
	return i.ToKinesisMetricsSourceAuthenticationOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationOutput)
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return i.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceAuthenticationArgs) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationOutput).ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx)
}

// KinesisMetricsSourceAuthenticationPtrInput is an input type that accepts KinesisMetricsSourceAuthenticationArgs, KinesisMetricsSourceAuthenticationPtr and KinesisMetricsSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceAuthenticationPtrInput` via:
//
//          KinesisMetricsSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type KinesisMetricsSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput
	ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Context) KinesisMetricsSourceAuthenticationPtrOutput
}

type kinesisMetricsSourceAuthenticationPtrType KinesisMetricsSourceAuthenticationArgs

func KinesisMetricsSourceAuthenticationPtr(v *KinesisMetricsSourceAuthenticationArgs) KinesisMetricsSourceAuthenticationPtrInput {
	return (*kinesisMetricsSourceAuthenticationPtrType)(v)
}

func (*kinesisMetricsSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (i *kinesisMetricsSourceAuthenticationPtrType) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return i.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *kinesisMetricsSourceAuthenticationPtrType) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceAuthenticationPtrOutput)
}

type KinesisMetricsSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationOutput() KinesisMetricsSourceAuthenticationOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return o.ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o KinesisMetricsSourceAuthenticationOutput) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KinesisMetricsSourceAuthentication) *KinesisMetricsSourceAuthentication {
		return &v
	}).(KinesisMetricsSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// This value has to be set to `TagFilters`
func (o KinesisMetricsSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type KinesisMetricsSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourceAuthentication)(nil)).Elem()
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) ToKinesisMetricsSourceAuthenticationPtrOutput() KinesisMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) ToKinesisMetricsSourceAuthenticationPtrOutputWithContext(ctx context.Context) KinesisMetricsSourceAuthenticationPtrOutput {
	return o
}

func (o KinesisMetricsSourceAuthenticationPtrOutput) Elem() KinesisMetricsSourceAuthenticationOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) KinesisMetricsSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret KinesisMetricsSourceAuthentication
		return ret
	}).(KinesisMetricsSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o KinesisMetricsSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// This value has to be set to `TagFilters`
func (o KinesisMetricsSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// KinesisMetricsSourceDefaultDateFormatInput is an input type that accepts KinesisMetricsSourceDefaultDateFormatArgs and KinesisMetricsSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceDefaultDateFormatInput` via:
//
//          KinesisMetricsSourceDefaultDateFormatArgs{...}
type KinesisMetricsSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput
	ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(context.Context) KinesisMetricsSourceDefaultDateFormatOutput
}

type KinesisMetricsSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (KinesisMetricsSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i KinesisMetricsSourceDefaultDateFormatArgs) ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput {
	return i.ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceDefaultDateFormatArgs) ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceDefaultDateFormatOutput)
}

// KinesisMetricsSourceDefaultDateFormatArrayInput is an input type that accepts KinesisMetricsSourceDefaultDateFormatArray and KinesisMetricsSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceDefaultDateFormatArrayInput` via:
//
//          KinesisMetricsSourceDefaultDateFormatArray{ KinesisMetricsSourceDefaultDateFormatArgs{...} }
type KinesisMetricsSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput
	ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput
}

type KinesisMetricsSourceDefaultDateFormatArray []KinesisMetricsSourceDefaultDateFormatInput

func (KinesisMetricsSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (i KinesisMetricsSourceDefaultDateFormatArray) ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return i.ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceDefaultDateFormatArray) ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceDefaultDateFormatArrayOutput)
}

type KinesisMetricsSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) ToKinesisMetricsSourceDefaultDateFormatOutput() KinesisMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) ToKinesisMetricsSourceDefaultDateFormatOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceDefaultDateFormat)(nil)).Elem()
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) ToKinesisMetricsSourceDefaultDateFormatArrayOutput() KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) ToKinesisMetricsSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceDefaultDateFormatArrayOutput {
	return o
}

func (o KinesisMetricsSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourceDefaultDateFormat {
		return vs[0].([]KinesisMetricsSourceDefaultDateFormat)[vs[1].(int)]
	}).(KinesisMetricsSourceDefaultDateFormatOutput)
}

type KinesisMetricsSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// KinesisMetricsSourceFilterInput is an input type that accepts KinesisMetricsSourceFilterArgs and KinesisMetricsSourceFilterOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceFilterInput` via:
//
//          KinesisMetricsSourceFilterArgs{...}
type KinesisMetricsSourceFilterInput interface {
	pulumi.Input

	ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput
	ToKinesisMetricsSourceFilterOutputWithContext(context.Context) KinesisMetricsSourceFilterOutput
}

type KinesisMetricsSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (KinesisMetricsSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceFilter)(nil)).Elem()
}

func (i KinesisMetricsSourceFilterArgs) ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput {
	return i.ToKinesisMetricsSourceFilterOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceFilterArgs) ToKinesisMetricsSourceFilterOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceFilterOutput)
}

// KinesisMetricsSourceFilterArrayInput is an input type that accepts KinesisMetricsSourceFilterArray and KinesisMetricsSourceFilterArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourceFilterArrayInput` via:
//
//          KinesisMetricsSourceFilterArray{ KinesisMetricsSourceFilterArgs{...} }
type KinesisMetricsSourceFilterArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput
	ToKinesisMetricsSourceFilterArrayOutputWithContext(context.Context) KinesisMetricsSourceFilterArrayOutput
}

type KinesisMetricsSourceFilterArray []KinesisMetricsSourceFilterInput

func (KinesisMetricsSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceFilter)(nil)).Elem()
}

func (i KinesisMetricsSourceFilterArray) ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput {
	return i.ToKinesisMetricsSourceFilterArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourceFilterArray) ToKinesisMetricsSourceFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourceFilterArrayOutput)
}

type KinesisMetricsSourceFilterOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourceFilter)(nil)).Elem()
}

func (o KinesisMetricsSourceFilterOutput) ToKinesisMetricsSourceFilterOutput() KinesisMetricsSourceFilterOutput {
	return o
}

func (o KinesisMetricsSourceFilterOutput) ToKinesisMetricsSourceFilterOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterOutput {
	return o
}

func (o KinesisMetricsSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o KinesisMetricsSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o KinesisMetricsSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type KinesisMetricsSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourceFilter)(nil)).Elem()
}

func (o KinesisMetricsSourceFilterArrayOutput) ToKinesisMetricsSourceFilterArrayOutput() KinesisMetricsSourceFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourceFilterArrayOutput) ToKinesisMetricsSourceFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourceFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourceFilterArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourceFilter {
		return vs[0].([]KinesisMetricsSourceFilter)[vs[1].(int)]
	}).(KinesisMetricsSourceFilterOutput)
}

type KinesisMetricsSourcePath struct {
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters []KinesisMetricsSourcePathTagFilter `pulumi:"tagFilters"`
	// This value has to be set to `TagFilters`
	Type string `pulumi:"type"`
}

// KinesisMetricsSourcePathInput is an input type that accepts KinesisMetricsSourcePathArgs and KinesisMetricsSourcePathOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathInput` via:
//
//          KinesisMetricsSourcePathArgs{...}
type KinesisMetricsSourcePathInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput
	ToKinesisMetricsSourcePathOutputWithContext(context.Context) KinesisMetricsSourcePathOutput
}

type KinesisMetricsSourcePathArgs struct {
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters KinesisMetricsSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringInput `pulumi:"type"`
}

func (KinesisMetricsSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePath)(nil)).Elem()
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput {
	return i.ToKinesisMetricsSourcePathOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathOutputWithContext(ctx context.Context) KinesisMetricsSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathOutput)
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return i.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathArgs) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathOutput).ToKinesisMetricsSourcePathPtrOutputWithContext(ctx)
}

// KinesisMetricsSourcePathPtrInput is an input type that accepts KinesisMetricsSourcePathArgs, KinesisMetricsSourcePathPtr and KinesisMetricsSourcePathPtrOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathPtrInput` via:
//
//          KinesisMetricsSourcePathArgs{...}
//
//  or:
//
//          nil
type KinesisMetricsSourcePathPtrInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput
	ToKinesisMetricsSourcePathPtrOutputWithContext(context.Context) KinesisMetricsSourcePathPtrOutput
}

type kinesisMetricsSourcePathPtrType KinesisMetricsSourcePathArgs

func KinesisMetricsSourcePathPtr(v *KinesisMetricsSourcePathArgs) KinesisMetricsSourcePathPtrInput {
	return (*kinesisMetricsSourcePathPtrType)(v)
}

func (*kinesisMetricsSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourcePath)(nil)).Elem()
}

func (i *kinesisMetricsSourcePathPtrType) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return i.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (i *kinesisMetricsSourcePathPtrType) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathPtrOutput)
}

type KinesisMetricsSourcePathOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePath)(nil)).Elem()
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathOutput() KinesisMetricsSourcePathOutput {
	return o
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathOutputWithContext(ctx context.Context) KinesisMetricsSourcePathOutput {
	return o
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return o.ToKinesisMetricsSourcePathPtrOutputWithContext(context.Background())
}

func (o KinesisMetricsSourcePathOutput) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KinesisMetricsSourcePath) *KinesisMetricsSourcePath {
		return &v
	}).(KinesisMetricsSourcePathPtrOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o KinesisMetricsSourcePathOutput) TagFilters() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) []KinesisMetricsSourcePathTagFilter { return v.TagFilters }).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

// This value has to be set to `TagFilters`
func (o KinesisMetricsSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type KinesisMetricsSourcePathPtrOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KinesisMetricsSourcePath)(nil)).Elem()
}

func (o KinesisMetricsSourcePathPtrOutput) ToKinesisMetricsSourcePathPtrOutput() KinesisMetricsSourcePathPtrOutput {
	return o
}

func (o KinesisMetricsSourcePathPtrOutput) ToKinesisMetricsSourcePathPtrOutputWithContext(ctx context.Context) KinesisMetricsSourcePathPtrOutput {
	return o
}

func (o KinesisMetricsSourcePathPtrOutput) Elem() KinesisMetricsSourcePathOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) KinesisMetricsSourcePath {
		if v != nil {
			return *v
		}
		var ret KinesisMetricsSourcePath
		return ret
	}).(KinesisMetricsSourcePathOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o KinesisMetricsSourcePathPtrOutput) TagFilters() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) []KinesisMetricsSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

// This value has to be set to `TagFilters`
func (o KinesisMetricsSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KinesisMetricsSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourcePathTagFilter struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace *string `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags []string `pulumi:"tags"`
	// This value has to be set to `TagFilters`
	Type *string `pulumi:"type"`
}

// KinesisMetricsSourcePathTagFilterInput is an input type that accepts KinesisMetricsSourcePathTagFilterArgs and KinesisMetricsSourcePathTagFilterOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathTagFilterInput` via:
//
//          KinesisMetricsSourcePathTagFilterArgs{...}
type KinesisMetricsSourcePathTagFilterInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput
	ToKinesisMetricsSourcePathTagFilterOutputWithContext(context.Context) KinesisMetricsSourcePathTagFilterOutput
}

type KinesisMetricsSourcePathTagFilterArgs struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (KinesisMetricsSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i KinesisMetricsSourcePathTagFilterArgs) ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput {
	return i.ToKinesisMetricsSourcePathTagFilterOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathTagFilterArgs) ToKinesisMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathTagFilterOutput)
}

// KinesisMetricsSourcePathTagFilterArrayInput is an input type that accepts KinesisMetricsSourcePathTagFilterArray and KinesisMetricsSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `KinesisMetricsSourcePathTagFilterArrayInput` via:
//
//          KinesisMetricsSourcePathTagFilterArray{ KinesisMetricsSourcePathTagFilterArgs{...} }
type KinesisMetricsSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput
	ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(context.Context) KinesisMetricsSourcePathTagFilterArrayOutput
}

type KinesisMetricsSourcePathTagFilterArray []KinesisMetricsSourcePathTagFilterInput

func (KinesisMetricsSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (i KinesisMetricsSourcePathTagFilterArray) ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput {
	return i.ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i KinesisMetricsSourcePathTagFilterArray) ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KinesisMetricsSourcePathTagFilterArrayOutput)
}

type KinesisMetricsSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o KinesisMetricsSourcePathTagFilterOutput) ToKinesisMetricsSourcePathTagFilterOutput() KinesisMetricsSourcePathTagFilterOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterOutput) ToKinesisMetricsSourcePathTagFilterOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterOutput {
	return o
}

// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
func (o KinesisMetricsSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
func (o KinesisMetricsSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// This value has to be set to `TagFilters`
func (o KinesisMetricsSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KinesisMetricsSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type KinesisMetricsSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (KinesisMetricsSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KinesisMetricsSourcePathTagFilter)(nil)).Elem()
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) ToKinesisMetricsSourcePathTagFilterArrayOutput() KinesisMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) ToKinesisMetricsSourcePathTagFilterArrayOutputWithContext(ctx context.Context) KinesisMetricsSourcePathTagFilterArrayOutput {
	return o
}

func (o KinesisMetricsSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) KinesisMetricsSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KinesisMetricsSourcePathTagFilter {
		return vs[0].([]KinesisMetricsSourcePathTagFilter)[vs[1].(int)]
	}).(KinesisMetricsSourcePathTagFilterOutput)
}

type LookupTableField struct {
	FieldName string `pulumi:"fieldName"`
	FieldType string `pulumi:"fieldType"`
}

// LookupTableFieldInput is an input type that accepts LookupTableFieldArgs and LookupTableFieldOutput values.
// You can construct a concrete instance of `LookupTableFieldInput` via:
//
//          LookupTableFieldArgs{...}
type LookupTableFieldInput interface {
	pulumi.Input

	ToLookupTableFieldOutput() LookupTableFieldOutput
	ToLookupTableFieldOutputWithContext(context.Context) LookupTableFieldOutput
}

type LookupTableFieldArgs struct {
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	FieldType pulumi.StringInput `pulumi:"fieldType"`
}

func (LookupTableFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableField)(nil)).Elem()
}

func (i LookupTableFieldArgs) ToLookupTableFieldOutput() LookupTableFieldOutput {
	return i.ToLookupTableFieldOutputWithContext(context.Background())
}

func (i LookupTableFieldArgs) ToLookupTableFieldOutputWithContext(ctx context.Context) LookupTableFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupTableFieldOutput)
}

// LookupTableFieldArrayInput is an input type that accepts LookupTableFieldArray and LookupTableFieldArrayOutput values.
// You can construct a concrete instance of `LookupTableFieldArrayInput` via:
//
//          LookupTableFieldArray{ LookupTableFieldArgs{...} }
type LookupTableFieldArrayInput interface {
	pulumi.Input

	ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput
	ToLookupTableFieldArrayOutputWithContext(context.Context) LookupTableFieldArrayOutput
}

type LookupTableFieldArray []LookupTableFieldInput

func (LookupTableFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupTableField)(nil)).Elem()
}

func (i LookupTableFieldArray) ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput {
	return i.ToLookupTableFieldArrayOutputWithContext(context.Background())
}

func (i LookupTableFieldArray) ToLookupTableFieldArrayOutputWithContext(ctx context.Context) LookupTableFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookupTableFieldArrayOutput)
}

type LookupTableFieldOutput struct{ *pulumi.OutputState }

func (LookupTableFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableField)(nil)).Elem()
}

func (o LookupTableFieldOutput) ToLookupTableFieldOutput() LookupTableFieldOutput {
	return o
}

func (o LookupTableFieldOutput) ToLookupTableFieldOutputWithContext(ctx context.Context) LookupTableFieldOutput {
	return o
}

func (o LookupTableFieldOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableField) string { return v.FieldName }).(pulumi.StringOutput)
}

func (o LookupTableFieldOutput) FieldType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableField) string { return v.FieldType }).(pulumi.StringOutput)
}

type LookupTableFieldArrayOutput struct{ *pulumi.OutputState }

func (LookupTableFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LookupTableField)(nil)).Elem()
}

func (o LookupTableFieldArrayOutput) ToLookupTableFieldArrayOutput() LookupTableFieldArrayOutput {
	return o
}

func (o LookupTableFieldArrayOutput) ToLookupTableFieldArrayOutputWithContext(ctx context.Context) LookupTableFieldArrayOutput {
	return o
}

func (o LookupTableFieldArrayOutput) Index(i pulumi.IntInput) LookupTableFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LookupTableField {
		return vs[0].([]LookupTableField)[vs[1].(int)]
	}).(LookupTableFieldOutput)
}

type MetadataSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// type of polling source. Only allowed value is `AwsMetadataPath`.
	Type string `pulumi:"type"`
}

// MetadataSourceAuthenticationInput is an input type that accepts MetadataSourceAuthenticationArgs and MetadataSourceAuthenticationOutput values.
// You can construct a concrete instance of `MetadataSourceAuthenticationInput` via:
//
//          MetadataSourceAuthenticationArgs{...}
type MetadataSourceAuthenticationInput interface {
	pulumi.Input

	ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput
	ToMetadataSourceAuthenticationOutputWithContext(context.Context) MetadataSourceAuthenticationOutput
}

type MetadataSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// type of polling source. Only allowed value is `AwsMetadataPath`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MetadataSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceAuthentication)(nil)).Elem()
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput {
	return i.ToMetadataSourceAuthenticationOutputWithContext(context.Background())
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationOutputWithContext(ctx context.Context) MetadataSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationOutput)
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return i.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i MetadataSourceAuthenticationArgs) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationOutput).ToMetadataSourceAuthenticationPtrOutputWithContext(ctx)
}

// MetadataSourceAuthenticationPtrInput is an input type that accepts MetadataSourceAuthenticationArgs, MetadataSourceAuthenticationPtr and MetadataSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `MetadataSourceAuthenticationPtrInput` via:
//
//          MetadataSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type MetadataSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput
	ToMetadataSourceAuthenticationPtrOutputWithContext(context.Context) MetadataSourceAuthenticationPtrOutput
}

type metadataSourceAuthenticationPtrType MetadataSourceAuthenticationArgs

func MetadataSourceAuthenticationPtr(v *MetadataSourceAuthenticationArgs) MetadataSourceAuthenticationPtrInput {
	return (*metadataSourceAuthenticationPtrType)(v)
}

func (*metadataSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceAuthentication)(nil)).Elem()
}

func (i *metadataSourceAuthenticationPtrType) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return i.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *metadataSourceAuthenticationPtrType) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceAuthenticationPtrOutput)
}

type MetadataSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (MetadataSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceAuthentication)(nil)).Elem()
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationOutput() MetadataSourceAuthenticationOutput {
	return o
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationOutputWithContext(ctx context.Context) MetadataSourceAuthenticationOutput {
	return o
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return o.ToMetadataSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o MetadataSourceAuthenticationOutput) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSourceAuthentication) *MetadataSourceAuthentication {
		return &v
	}).(MetadataSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o MetadataSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// type of polling source. Only allowed value is `AwsMetadataPath`.
func (o MetadataSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type MetadataSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (MetadataSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourceAuthentication)(nil)).Elem()
}

func (o MetadataSourceAuthenticationPtrOutput) ToMetadataSourceAuthenticationPtrOutput() MetadataSourceAuthenticationPtrOutput {
	return o
}

func (o MetadataSourceAuthenticationPtrOutput) ToMetadataSourceAuthenticationPtrOutputWithContext(ctx context.Context) MetadataSourceAuthenticationPtrOutput {
	return o
}

func (o MetadataSourceAuthenticationPtrOutput) Elem() MetadataSourceAuthenticationOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) MetadataSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret MetadataSourceAuthentication
		return ret
	}).(MetadataSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o MetadataSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o MetadataSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// type of polling source. Only allowed value is `AwsMetadataPath`.
func (o MetadataSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MetadataSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// MetadataSourceDefaultDateFormatInput is an input type that accepts MetadataSourceDefaultDateFormatArgs and MetadataSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `MetadataSourceDefaultDateFormatInput` via:
//
//          MetadataSourceDefaultDateFormatArgs{...}
type MetadataSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput
	ToMetadataSourceDefaultDateFormatOutputWithContext(context.Context) MetadataSourceDefaultDateFormatOutput
}

type MetadataSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (MetadataSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (i MetadataSourceDefaultDateFormatArgs) ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput {
	return i.ToMetadataSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i MetadataSourceDefaultDateFormatArgs) ToMetadataSourceDefaultDateFormatOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceDefaultDateFormatOutput)
}

// MetadataSourceDefaultDateFormatArrayInput is an input type that accepts MetadataSourceDefaultDateFormatArray and MetadataSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `MetadataSourceDefaultDateFormatArrayInput` via:
//
//          MetadataSourceDefaultDateFormatArray{ MetadataSourceDefaultDateFormatArgs{...} }
type MetadataSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput
	ToMetadataSourceDefaultDateFormatArrayOutputWithContext(context.Context) MetadataSourceDefaultDateFormatArrayOutput
}

type MetadataSourceDefaultDateFormatArray []MetadataSourceDefaultDateFormatInput

func (MetadataSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (i MetadataSourceDefaultDateFormatArray) ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput {
	return i.ToMetadataSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i MetadataSourceDefaultDateFormatArray) ToMetadataSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceDefaultDateFormatArrayOutput)
}

type MetadataSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (MetadataSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (o MetadataSourceDefaultDateFormatOutput) ToMetadataSourceDefaultDateFormatOutput() MetadataSourceDefaultDateFormatOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatOutput) ToMetadataSourceDefaultDateFormatOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o MetadataSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type MetadataSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (MetadataSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceDefaultDateFormat)(nil)).Elem()
}

func (o MetadataSourceDefaultDateFormatArrayOutput) ToMetadataSourceDefaultDateFormatArrayOutput() MetadataSourceDefaultDateFormatArrayOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatArrayOutput) ToMetadataSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) MetadataSourceDefaultDateFormatArrayOutput {
	return o
}

func (o MetadataSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) MetadataSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataSourceDefaultDateFormat {
		return vs[0].([]MetadataSourceDefaultDateFormat)[vs[1].(int)]
	}).(MetadataSourceDefaultDateFormatOutput)
}

type MetadataSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// MetadataSourceFilterInput is an input type that accepts MetadataSourceFilterArgs and MetadataSourceFilterOutput values.
// You can construct a concrete instance of `MetadataSourceFilterInput` via:
//
//          MetadataSourceFilterArgs{...}
type MetadataSourceFilterInput interface {
	pulumi.Input

	ToMetadataSourceFilterOutput() MetadataSourceFilterOutput
	ToMetadataSourceFilterOutputWithContext(context.Context) MetadataSourceFilterOutput
}

type MetadataSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (MetadataSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceFilter)(nil)).Elem()
}

func (i MetadataSourceFilterArgs) ToMetadataSourceFilterOutput() MetadataSourceFilterOutput {
	return i.ToMetadataSourceFilterOutputWithContext(context.Background())
}

func (i MetadataSourceFilterArgs) ToMetadataSourceFilterOutputWithContext(ctx context.Context) MetadataSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceFilterOutput)
}

// MetadataSourceFilterArrayInput is an input type that accepts MetadataSourceFilterArray and MetadataSourceFilterArrayOutput values.
// You can construct a concrete instance of `MetadataSourceFilterArrayInput` via:
//
//          MetadataSourceFilterArray{ MetadataSourceFilterArgs{...} }
type MetadataSourceFilterArrayInput interface {
	pulumi.Input

	ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput
	ToMetadataSourceFilterArrayOutputWithContext(context.Context) MetadataSourceFilterArrayOutput
}

type MetadataSourceFilterArray []MetadataSourceFilterInput

func (MetadataSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceFilter)(nil)).Elem()
}

func (i MetadataSourceFilterArray) ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput {
	return i.ToMetadataSourceFilterArrayOutputWithContext(context.Background())
}

func (i MetadataSourceFilterArray) ToMetadataSourceFilterArrayOutputWithContext(ctx context.Context) MetadataSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceFilterArrayOutput)
}

type MetadataSourceFilterOutput struct{ *pulumi.OutputState }

func (MetadataSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourceFilter)(nil)).Elem()
}

func (o MetadataSourceFilterOutput) ToMetadataSourceFilterOutput() MetadataSourceFilterOutput {
	return o
}

func (o MetadataSourceFilterOutput) ToMetadataSourceFilterOutputWithContext(ctx context.Context) MetadataSourceFilterOutput {
	return o
}

func (o MetadataSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o MetadataSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o MetadataSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o MetadataSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type MetadataSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (MetadataSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetadataSourceFilter)(nil)).Elem()
}

func (o MetadataSourceFilterArrayOutput) ToMetadataSourceFilterArrayOutput() MetadataSourceFilterArrayOutput {
	return o
}

func (o MetadataSourceFilterArrayOutput) ToMetadataSourceFilterArrayOutputWithContext(ctx context.Context) MetadataSourceFilterArrayOutput {
	return o
}

func (o MetadataSourceFilterArrayOutput) Index(i pulumi.IntInput) MetadataSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetadataSourceFilter {
		return vs[0].([]MetadataSourceFilter)[vs[1].(int)]
	}).(MetadataSourceFilterOutput)
}

type MetadataSourcePath struct {
	// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions []string `pulumi:"limitToRegions"`
	// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
	TagFilters []string `pulumi:"tagFilters"`
	// type of polling source. Only allowed value is `AwsMetadataPath`.
	Type string `pulumi:"type"`
}

// MetadataSourcePathInput is an input type that accepts MetadataSourcePathArgs and MetadataSourcePathOutput values.
// You can construct a concrete instance of `MetadataSourcePathInput` via:
//
//          MetadataSourcePathArgs{...}
type MetadataSourcePathInput interface {
	pulumi.Input

	ToMetadataSourcePathOutput() MetadataSourcePathOutput
	ToMetadataSourcePathOutputWithContext(context.Context) MetadataSourcePathOutput
}

type MetadataSourcePathArgs struct {
	// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	// List of Amazon regions.
	LimitToRegions pulumi.StringArrayInput `pulumi:"limitToRegions"`
	// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
	TagFilters pulumi.StringArrayInput `pulumi:"tagFilters"`
	// type of polling source. Only allowed value is `AwsMetadataPath`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MetadataSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourcePath)(nil)).Elem()
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathOutput() MetadataSourcePathOutput {
	return i.ToMetadataSourcePathOutputWithContext(context.Background())
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathOutputWithContext(ctx context.Context) MetadataSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathOutput)
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return i.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (i MetadataSourcePathArgs) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathOutput).ToMetadataSourcePathPtrOutputWithContext(ctx)
}

// MetadataSourcePathPtrInput is an input type that accepts MetadataSourcePathArgs, MetadataSourcePathPtr and MetadataSourcePathPtrOutput values.
// You can construct a concrete instance of `MetadataSourcePathPtrInput` via:
//
//          MetadataSourcePathArgs{...}
//
//  or:
//
//          nil
type MetadataSourcePathPtrInput interface {
	pulumi.Input

	ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput
	ToMetadataSourcePathPtrOutputWithContext(context.Context) MetadataSourcePathPtrOutput
}

type metadataSourcePathPtrType MetadataSourcePathArgs

func MetadataSourcePathPtr(v *MetadataSourcePathArgs) MetadataSourcePathPtrInput {
	return (*metadataSourcePathPtrType)(v)
}

func (*metadataSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourcePath)(nil)).Elem()
}

func (i *metadataSourcePathPtrType) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return i.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (i *metadataSourcePathPtrType) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePathPtrOutput)
}

type MetadataSourcePathOutput struct{ *pulumi.OutputState }

func (MetadataSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSourcePath)(nil)).Elem()
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathOutput() MetadataSourcePathOutput {
	return o
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathOutputWithContext(ctx context.Context) MetadataSourcePathOutput {
	return o
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return o.ToMetadataSourcePathPtrOutputWithContext(context.Background())
}

func (o MetadataSourcePathOutput) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSourcePath) *MetadataSourcePath {
		return &v
	}).(MetadataSourcePathPtrOutput)
}

// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
func (o MetadataSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o MetadataSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
func (o MetadataSourcePathOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataSourcePath) []string { return v.TagFilters }).(pulumi.StringArrayOutput)
}

// type of polling source. Only allowed value is `AwsMetadataPath`.
func (o MetadataSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type MetadataSourcePathPtrOutput struct{ *pulumi.OutputState }

func (MetadataSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSourcePath)(nil)).Elem()
}

func (o MetadataSourcePathPtrOutput) ToMetadataSourcePathPtrOutput() MetadataSourcePathPtrOutput {
	return o
}

func (o MetadataSourcePathPtrOutput) ToMetadataSourcePathPtrOutputWithContext(ctx context.Context) MetadataSourcePathPtrOutput {
	return o
}

func (o MetadataSourcePathPtrOutput) Elem() MetadataSourcePathOutput {
	return o.ApplyT(func(v *MetadataSourcePath) MetadataSourcePath {
		if v != nil {
			return *v
		}
		var ret MetadataSourcePath
		return ret
	}).(MetadataSourcePathOutput)
}

// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
func (o MetadataSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions.
func (o MetadataSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
func (o MetadataSourcePathPtrOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(pulumi.StringArrayOutput)
}

// type of polling source. Only allowed value is `AwsMetadataPath`.
func (o MetadataSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type MonitorFolderObjPermission struct {
	// A Set of Permissions. Valid Permission Values:
	// - `Create`
	// - `Read`
	Permissions []string `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId string `pulumi:"subjectId"`
	// Valid values:
	SubjectType string `pulumi:"subjectType"`
}

// MonitorFolderObjPermissionInput is an input type that accepts MonitorFolderObjPermissionArgs and MonitorFolderObjPermissionOutput values.
// You can construct a concrete instance of `MonitorFolderObjPermissionInput` via:
//
//          MonitorFolderObjPermissionArgs{...}
type MonitorFolderObjPermissionInput interface {
	pulumi.Input

	ToMonitorFolderObjPermissionOutput() MonitorFolderObjPermissionOutput
	ToMonitorFolderObjPermissionOutputWithContext(context.Context) MonitorFolderObjPermissionOutput
}

type MonitorFolderObjPermissionArgs struct {
	// A Set of Permissions. Valid Permission Values:
	// - `Create`
	// - `Read`
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId pulumi.StringInput `pulumi:"subjectId"`
	// Valid values:
	SubjectType pulumi.StringInput `pulumi:"subjectType"`
}

func (MonitorFolderObjPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorFolderObjPermission)(nil)).Elem()
}

func (i MonitorFolderObjPermissionArgs) ToMonitorFolderObjPermissionOutput() MonitorFolderObjPermissionOutput {
	return i.ToMonitorFolderObjPermissionOutputWithContext(context.Background())
}

func (i MonitorFolderObjPermissionArgs) ToMonitorFolderObjPermissionOutputWithContext(ctx context.Context) MonitorFolderObjPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorFolderObjPermissionOutput)
}

// MonitorFolderObjPermissionArrayInput is an input type that accepts MonitorFolderObjPermissionArray and MonitorFolderObjPermissionArrayOutput values.
// You can construct a concrete instance of `MonitorFolderObjPermissionArrayInput` via:
//
//          MonitorFolderObjPermissionArray{ MonitorFolderObjPermissionArgs{...} }
type MonitorFolderObjPermissionArrayInput interface {
	pulumi.Input

	ToMonitorFolderObjPermissionArrayOutput() MonitorFolderObjPermissionArrayOutput
	ToMonitorFolderObjPermissionArrayOutputWithContext(context.Context) MonitorFolderObjPermissionArrayOutput
}

type MonitorFolderObjPermissionArray []MonitorFolderObjPermissionInput

func (MonitorFolderObjPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorFolderObjPermission)(nil)).Elem()
}

func (i MonitorFolderObjPermissionArray) ToMonitorFolderObjPermissionArrayOutput() MonitorFolderObjPermissionArrayOutput {
	return i.ToMonitorFolderObjPermissionArrayOutputWithContext(context.Background())
}

func (i MonitorFolderObjPermissionArray) ToMonitorFolderObjPermissionArrayOutputWithContext(ctx context.Context) MonitorFolderObjPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorFolderObjPermissionArrayOutput)
}

type MonitorFolderObjPermissionOutput struct{ *pulumi.OutputState }

func (MonitorFolderObjPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorFolderObjPermission)(nil)).Elem()
}

func (o MonitorFolderObjPermissionOutput) ToMonitorFolderObjPermissionOutput() MonitorFolderObjPermissionOutput {
	return o
}

func (o MonitorFolderObjPermissionOutput) ToMonitorFolderObjPermissionOutputWithContext(ctx context.Context) MonitorFolderObjPermissionOutput {
	return o
}

// A Set of Permissions. Valid Permission Values:
// - `Create`
// - `Read`
func (o MonitorFolderObjPermissionOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorFolderObjPermission) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

// A Role ID or the Org ID of the account
func (o MonitorFolderObjPermissionOutput) SubjectId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorFolderObjPermission) string { return v.SubjectId }).(pulumi.StringOutput)
}

// Valid values:
func (o MonitorFolderObjPermissionOutput) SubjectType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorFolderObjPermission) string { return v.SubjectType }).(pulumi.StringOutput)
}

type MonitorFolderObjPermissionArrayOutput struct{ *pulumi.OutputState }

func (MonitorFolderObjPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorFolderObjPermission)(nil)).Elem()
}

func (o MonitorFolderObjPermissionArrayOutput) ToMonitorFolderObjPermissionArrayOutput() MonitorFolderObjPermissionArrayOutput {
	return o
}

func (o MonitorFolderObjPermissionArrayOutput) ToMonitorFolderObjPermissionArrayOutputWithContext(ctx context.Context) MonitorFolderObjPermissionArrayOutput {
	return o
}

func (o MonitorFolderObjPermissionArrayOutput) Index(i pulumi.IntInput) MonitorFolderObjPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorFolderObjPermission {
		return vs[0].([]MonitorFolderObjPermission)[vs[1].(int)]
	}).(MonitorFolderObjPermissionOutput)
}

type MonitorNotification struct {
	Notification       MonitorNotificationNotification `pulumi:"notification"`
	RunForTriggerTypes []string                        `pulumi:"runForTriggerTypes"`
}

// MonitorNotificationInput is an input type that accepts MonitorNotificationArgs and MonitorNotificationOutput values.
// You can construct a concrete instance of `MonitorNotificationInput` via:
//
//          MonitorNotificationArgs{...}
type MonitorNotificationInput interface {
	pulumi.Input

	ToMonitorNotificationOutput() MonitorNotificationOutput
	ToMonitorNotificationOutputWithContext(context.Context) MonitorNotificationOutput
}

type MonitorNotificationArgs struct {
	Notification       MonitorNotificationNotificationInput `pulumi:"notification"`
	RunForTriggerTypes pulumi.StringArrayInput              `pulumi:"runForTriggerTypes"`
}

func (MonitorNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotification)(nil)).Elem()
}

func (i MonitorNotificationArgs) ToMonitorNotificationOutput() MonitorNotificationOutput {
	return i.ToMonitorNotificationOutputWithContext(context.Background())
}

func (i MonitorNotificationArgs) ToMonitorNotificationOutputWithContext(ctx context.Context) MonitorNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationOutput)
}

// MonitorNotificationArrayInput is an input type that accepts MonitorNotificationArray and MonitorNotificationArrayOutput values.
// You can construct a concrete instance of `MonitorNotificationArrayInput` via:
//
//          MonitorNotificationArray{ MonitorNotificationArgs{...} }
type MonitorNotificationArrayInput interface {
	pulumi.Input

	ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput
	ToMonitorNotificationArrayOutputWithContext(context.Context) MonitorNotificationArrayOutput
}

type MonitorNotificationArray []MonitorNotificationInput

func (MonitorNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorNotification)(nil)).Elem()
}

func (i MonitorNotificationArray) ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput {
	return i.ToMonitorNotificationArrayOutputWithContext(context.Background())
}

func (i MonitorNotificationArray) ToMonitorNotificationArrayOutputWithContext(ctx context.Context) MonitorNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationArrayOutput)
}

type MonitorNotificationOutput struct{ *pulumi.OutputState }

func (MonitorNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotification)(nil)).Elem()
}

func (o MonitorNotificationOutput) ToMonitorNotificationOutput() MonitorNotificationOutput {
	return o
}

func (o MonitorNotificationOutput) ToMonitorNotificationOutputWithContext(ctx context.Context) MonitorNotificationOutput {
	return o
}

func (o MonitorNotificationOutput) Notification() MonitorNotificationNotificationOutput {
	return o.ApplyT(func(v MonitorNotification) MonitorNotificationNotification { return v.Notification }).(MonitorNotificationNotificationOutput)
}

func (o MonitorNotificationOutput) RunForTriggerTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorNotification) []string { return v.RunForTriggerTypes }).(pulumi.StringArrayOutput)
}

type MonitorNotificationArrayOutput struct{ *pulumi.OutputState }

func (MonitorNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorNotification)(nil)).Elem()
}

func (o MonitorNotificationArrayOutput) ToMonitorNotificationArrayOutput() MonitorNotificationArrayOutput {
	return o
}

func (o MonitorNotificationArrayOutput) ToMonitorNotificationArrayOutputWithContext(ctx context.Context) MonitorNotificationArrayOutput {
	return o
}

func (o MonitorNotificationArrayOutput) Index(i pulumi.IntInput) MonitorNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorNotification {
		return vs[0].([]MonitorNotification)[vs[1].(int)]
	}).(MonitorNotificationOutput)
}

type MonitorNotificationNotification struct {
	// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
	ActionType      *string  `pulumi:"actionType"`
	ConnectionId    *string  `pulumi:"connectionId"`
	ConnectionType  *string  `pulumi:"connectionType"`
	MessageBody     *string  `pulumi:"messageBody"`
	PayloadOverride *string  `pulumi:"payloadOverride"`
	Recipients      []string `pulumi:"recipients"`
	Subject         *string  `pulumi:"subject"`
	TimeZone        *string  `pulumi:"timeZone"`
}

// MonitorNotificationNotificationInput is an input type that accepts MonitorNotificationNotificationArgs and MonitorNotificationNotificationOutput values.
// You can construct a concrete instance of `MonitorNotificationNotificationInput` via:
//
//          MonitorNotificationNotificationArgs{...}
type MonitorNotificationNotificationInput interface {
	pulumi.Input

	ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput
	ToMonitorNotificationNotificationOutputWithContext(context.Context) MonitorNotificationNotificationOutput
}

type MonitorNotificationNotificationArgs struct {
	// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
	ActionType      pulumi.StringPtrInput   `pulumi:"actionType"`
	ConnectionId    pulumi.StringPtrInput   `pulumi:"connectionId"`
	ConnectionType  pulumi.StringPtrInput   `pulumi:"connectionType"`
	MessageBody     pulumi.StringPtrInput   `pulumi:"messageBody"`
	PayloadOverride pulumi.StringPtrInput   `pulumi:"payloadOverride"`
	Recipients      pulumi.StringArrayInput `pulumi:"recipients"`
	Subject         pulumi.StringPtrInput   `pulumi:"subject"`
	TimeZone        pulumi.StringPtrInput   `pulumi:"timeZone"`
}

func (MonitorNotificationNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotificationNotification)(nil)).Elem()
}

func (i MonitorNotificationNotificationArgs) ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput {
	return i.ToMonitorNotificationNotificationOutputWithContext(context.Background())
}

func (i MonitorNotificationNotificationArgs) ToMonitorNotificationNotificationOutputWithContext(ctx context.Context) MonitorNotificationNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorNotificationNotificationOutput)
}

type MonitorNotificationNotificationOutput struct{ *pulumi.OutputState }

func (MonitorNotificationNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorNotificationNotification)(nil)).Elem()
}

func (o MonitorNotificationNotificationOutput) ToMonitorNotificationNotificationOutput() MonitorNotificationNotificationOutput {
	return o
}

func (o MonitorNotificationNotificationOutput) ToMonitorNotificationNotificationOutputWithContext(ctx context.Context) MonitorNotificationNotificationOutput {
	return o
}

// Deprecated: The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
func (o MonitorNotificationNotificationOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) ConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ConnectionId }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) PayloadOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.PayloadOverride }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) Recipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) []string { return v.Recipients }).(pulumi.StringArrayOutput)
}

func (o MonitorNotificationNotificationOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o MonitorNotificationNotificationOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorNotificationNotification) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type MonitorObjPermission struct {
	// A Set of Permissions. Valid Permission Values:
	// - `Read`
	// - `Update`
	// - `Delete`
	// - `Manage`
	Permissions []string `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId string `pulumi:"subjectId"`
	// Valid values:
	// - `role`
	// - `org`
	SubjectType string `pulumi:"subjectType"`
}

// MonitorObjPermissionInput is an input type that accepts MonitorObjPermissionArgs and MonitorObjPermissionOutput values.
// You can construct a concrete instance of `MonitorObjPermissionInput` via:
//
//          MonitorObjPermissionArgs{...}
type MonitorObjPermissionInput interface {
	pulumi.Input

	ToMonitorObjPermissionOutput() MonitorObjPermissionOutput
	ToMonitorObjPermissionOutputWithContext(context.Context) MonitorObjPermissionOutput
}

type MonitorObjPermissionArgs struct {
	// A Set of Permissions. Valid Permission Values:
	// - `Read`
	// - `Update`
	// - `Delete`
	// - `Manage`
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	// A Role ID or the Org ID of the account
	SubjectId pulumi.StringInput `pulumi:"subjectId"`
	// Valid values:
	// - `role`
	// - `org`
	SubjectType pulumi.StringInput `pulumi:"subjectType"`
}

func (MonitorObjPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorObjPermission)(nil)).Elem()
}

func (i MonitorObjPermissionArgs) ToMonitorObjPermissionOutput() MonitorObjPermissionOutput {
	return i.ToMonitorObjPermissionOutputWithContext(context.Background())
}

func (i MonitorObjPermissionArgs) ToMonitorObjPermissionOutputWithContext(ctx context.Context) MonitorObjPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorObjPermissionOutput)
}

// MonitorObjPermissionArrayInput is an input type that accepts MonitorObjPermissionArray and MonitorObjPermissionArrayOutput values.
// You can construct a concrete instance of `MonitorObjPermissionArrayInput` via:
//
//          MonitorObjPermissionArray{ MonitorObjPermissionArgs{...} }
type MonitorObjPermissionArrayInput interface {
	pulumi.Input

	ToMonitorObjPermissionArrayOutput() MonitorObjPermissionArrayOutput
	ToMonitorObjPermissionArrayOutputWithContext(context.Context) MonitorObjPermissionArrayOutput
}

type MonitorObjPermissionArray []MonitorObjPermissionInput

func (MonitorObjPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorObjPermission)(nil)).Elem()
}

func (i MonitorObjPermissionArray) ToMonitorObjPermissionArrayOutput() MonitorObjPermissionArrayOutput {
	return i.ToMonitorObjPermissionArrayOutputWithContext(context.Background())
}

func (i MonitorObjPermissionArray) ToMonitorObjPermissionArrayOutputWithContext(ctx context.Context) MonitorObjPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorObjPermissionArrayOutput)
}

type MonitorObjPermissionOutput struct{ *pulumi.OutputState }

func (MonitorObjPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorObjPermission)(nil)).Elem()
}

func (o MonitorObjPermissionOutput) ToMonitorObjPermissionOutput() MonitorObjPermissionOutput {
	return o
}

func (o MonitorObjPermissionOutput) ToMonitorObjPermissionOutputWithContext(ctx context.Context) MonitorObjPermissionOutput {
	return o
}

// A Set of Permissions. Valid Permission Values:
// - `Read`
// - `Update`
// - `Delete`
// - `Manage`
func (o MonitorObjPermissionOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorObjPermission) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

// A Role ID or the Org ID of the account
func (o MonitorObjPermissionOutput) SubjectId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorObjPermission) string { return v.SubjectId }).(pulumi.StringOutput)
}

// Valid values:
// - `role`
// - `org`
func (o MonitorObjPermissionOutput) SubjectType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorObjPermission) string { return v.SubjectType }).(pulumi.StringOutput)
}

type MonitorObjPermissionArrayOutput struct{ *pulumi.OutputState }

func (MonitorObjPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorObjPermission)(nil)).Elem()
}

func (o MonitorObjPermissionArrayOutput) ToMonitorObjPermissionArrayOutput() MonitorObjPermissionArrayOutput {
	return o
}

func (o MonitorObjPermissionArrayOutput) ToMonitorObjPermissionArrayOutputWithContext(ctx context.Context) MonitorObjPermissionArrayOutput {
	return o
}

func (o MonitorObjPermissionArrayOutput) Index(i pulumi.IntInput) MonitorObjPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorObjPermission {
		return vs[0].([]MonitorObjPermission)[vs[1].(int)]
	}).(MonitorObjPermissionOutput)
}

type MonitorQuery struct {
	Query string `pulumi:"query"`
	RowId string `pulumi:"rowId"`
}

// MonitorQueryInput is an input type that accepts MonitorQueryArgs and MonitorQueryOutput values.
// You can construct a concrete instance of `MonitorQueryInput` via:
//
//          MonitorQueryArgs{...}
type MonitorQueryInput interface {
	pulumi.Input

	ToMonitorQueryOutput() MonitorQueryOutput
	ToMonitorQueryOutputWithContext(context.Context) MonitorQueryOutput
}

type MonitorQueryArgs struct {
	Query pulumi.StringInput `pulumi:"query"`
	RowId pulumi.StringInput `pulumi:"rowId"`
}

func (MonitorQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArgs) ToMonitorQueryOutput() MonitorQueryOutput {
	return i.ToMonitorQueryOutputWithContext(context.Background())
}

func (i MonitorQueryArgs) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryOutput)
}

// MonitorQueryArrayInput is an input type that accepts MonitorQueryArray and MonitorQueryArrayOutput values.
// You can construct a concrete instance of `MonitorQueryArrayInput` via:
//
//          MonitorQueryArray{ MonitorQueryArgs{...} }
type MonitorQueryArrayInput interface {
	pulumi.Input

	ToMonitorQueryArrayOutput() MonitorQueryArrayOutput
	ToMonitorQueryArrayOutputWithContext(context.Context) MonitorQueryArrayOutput
}

type MonitorQueryArray []MonitorQueryInput

func (MonitorQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArray) ToMonitorQueryArrayOutput() MonitorQueryArrayOutput {
	return i.ToMonitorQueryArrayOutputWithContext(context.Background())
}

func (i MonitorQueryArray) ToMonitorQueryArrayOutputWithContext(ctx context.Context) MonitorQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryArrayOutput)
}

type MonitorQueryOutput struct{ *pulumi.OutputState }

func (MonitorQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryOutput) ToMonitorQueryOutput() MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorQuery) string { return v.Query }).(pulumi.StringOutput)
}

func (o MonitorQueryOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorQuery) string { return v.RowId }).(pulumi.StringOutput)
}

type MonitorQueryArrayOutput struct{ *pulumi.OutputState }

func (MonitorQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryArrayOutput) ToMonitorQueryArrayOutput() MonitorQueryArrayOutput {
	return o
}

func (o MonitorQueryArrayOutput) ToMonitorQueryArrayOutputWithContext(ctx context.Context) MonitorQueryArrayOutput {
	return o
}

func (o MonitorQueryArrayOutput) Index(i pulumi.IntInput) MonitorQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorQuery {
		return vs[0].([]MonitorQuery)[vs[1].(int)]
	}).(MonitorQueryOutput)
}

type MonitorTrigger struct {
	DetectionMethod *string  `pulumi:"detectionMethod"`
	OccurrenceType  *string  `pulumi:"occurrenceType"`
	Threshold       *float64 `pulumi:"threshold"`
	ThresholdType   *string  `pulumi:"thresholdType"`
	TimeRange       *string  `pulumi:"timeRange"`
	TriggerSource   *string  `pulumi:"triggerSource"`
	TriggerType     *string  `pulumi:"triggerType"`
}

// MonitorTriggerInput is an input type that accepts MonitorTriggerArgs and MonitorTriggerOutput values.
// You can construct a concrete instance of `MonitorTriggerInput` via:
//
//          MonitorTriggerArgs{...}
type MonitorTriggerInput interface {
	pulumi.Input

	ToMonitorTriggerOutput() MonitorTriggerOutput
	ToMonitorTriggerOutputWithContext(context.Context) MonitorTriggerOutput
}

type MonitorTriggerArgs struct {
	DetectionMethod pulumi.StringPtrInput  `pulumi:"detectionMethod"`
	OccurrenceType  pulumi.StringPtrInput  `pulumi:"occurrenceType"`
	Threshold       pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType   pulumi.StringPtrInput  `pulumi:"thresholdType"`
	TimeRange       pulumi.StringPtrInput  `pulumi:"timeRange"`
	TriggerSource   pulumi.StringPtrInput  `pulumi:"triggerSource"`
	TriggerType     pulumi.StringPtrInput  `pulumi:"triggerType"`
}

func (MonitorTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTrigger)(nil)).Elem()
}

func (i MonitorTriggerArgs) ToMonitorTriggerOutput() MonitorTriggerOutput {
	return i.ToMonitorTriggerOutputWithContext(context.Background())
}

func (i MonitorTriggerArgs) ToMonitorTriggerOutputWithContext(ctx context.Context) MonitorTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerOutput)
}

// MonitorTriggerArrayInput is an input type that accepts MonitorTriggerArray and MonitorTriggerArrayOutput values.
// You can construct a concrete instance of `MonitorTriggerArrayInput` via:
//
//          MonitorTriggerArray{ MonitorTriggerArgs{...} }
type MonitorTriggerArrayInput interface {
	pulumi.Input

	ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput
	ToMonitorTriggerArrayOutputWithContext(context.Context) MonitorTriggerArrayOutput
}

type MonitorTriggerArray []MonitorTriggerInput

func (MonitorTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTrigger)(nil)).Elem()
}

func (i MonitorTriggerArray) ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput {
	return i.ToMonitorTriggerArrayOutputWithContext(context.Background())
}

func (i MonitorTriggerArray) ToMonitorTriggerArrayOutputWithContext(ctx context.Context) MonitorTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerArrayOutput)
}

type MonitorTriggerOutput struct{ *pulumi.OutputState }

func (MonitorTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTrigger)(nil)).Elem()
}

func (o MonitorTriggerOutput) ToMonitorTriggerOutput() MonitorTriggerOutput {
	return o
}

func (o MonitorTriggerOutput) ToMonitorTriggerOutputWithContext(ctx context.Context) MonitorTriggerOutput {
	return o
}

func (o MonitorTriggerOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.OccurrenceType }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TimeRange }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TriggerSource }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerOutput) TriggerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTrigger) *string { return v.TriggerType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerArrayOutput struct{ *pulumi.OutputState }

func (MonitorTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorTrigger)(nil)).Elem()
}

func (o MonitorTriggerArrayOutput) ToMonitorTriggerArrayOutput() MonitorTriggerArrayOutput {
	return o
}

func (o MonitorTriggerArrayOutput) ToMonitorTriggerArrayOutputWithContext(ctx context.Context) MonitorTriggerArrayOutput {
	return o
}

func (o MonitorTriggerArrayOutput) Index(i pulumi.IntInput) MonitorTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorTrigger {
		return vs[0].([]MonitorTrigger)[vs[1].(int)]
	}).(MonitorTriggerOutput)
}

type MonitorTriggerConditions struct {
	LogsMissingDataCondition    *MonitorTriggerConditionsLogsMissingDataCondition    `pulumi:"logsMissingDataCondition"`
	LogsOutlierCondition        *MonitorTriggerConditionsLogsOutlierCondition        `pulumi:"logsOutlierCondition"`
	LogsStaticCondition         *MonitorTriggerConditionsLogsStaticCondition         `pulumi:"logsStaticCondition"`
	MetricsMissingDataCondition *MonitorTriggerConditionsMetricsMissingDataCondition `pulumi:"metricsMissingDataCondition"`
	MetricsOutlierCondition     *MonitorTriggerConditionsMetricsOutlierCondition     `pulumi:"metricsOutlierCondition"`
	MetricsStaticCondition      *MonitorTriggerConditionsMetricsStaticCondition      `pulumi:"metricsStaticCondition"`
	SloBurnRateCondition        *MonitorTriggerConditionsSloBurnRateCondition        `pulumi:"sloBurnRateCondition"`
	SloSliCondition             *MonitorTriggerConditionsSloSliCondition             `pulumi:"sloSliCondition"`
}

// MonitorTriggerConditionsInput is an input type that accepts MonitorTriggerConditionsArgs and MonitorTriggerConditionsOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsInput` via:
//
//          MonitorTriggerConditionsArgs{...}
type MonitorTriggerConditionsInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsOutput() MonitorTriggerConditionsOutput
	ToMonitorTriggerConditionsOutputWithContext(context.Context) MonitorTriggerConditionsOutput
}

type MonitorTriggerConditionsArgs struct {
	LogsMissingDataCondition    MonitorTriggerConditionsLogsMissingDataConditionPtrInput    `pulumi:"logsMissingDataCondition"`
	LogsOutlierCondition        MonitorTriggerConditionsLogsOutlierConditionPtrInput        `pulumi:"logsOutlierCondition"`
	LogsStaticCondition         MonitorTriggerConditionsLogsStaticConditionPtrInput         `pulumi:"logsStaticCondition"`
	MetricsMissingDataCondition MonitorTriggerConditionsMetricsMissingDataConditionPtrInput `pulumi:"metricsMissingDataCondition"`
	MetricsOutlierCondition     MonitorTriggerConditionsMetricsOutlierConditionPtrInput     `pulumi:"metricsOutlierCondition"`
	MetricsStaticCondition      MonitorTriggerConditionsMetricsStaticConditionPtrInput      `pulumi:"metricsStaticCondition"`
	SloBurnRateCondition        MonitorTriggerConditionsSloBurnRateConditionPtrInput        `pulumi:"sloBurnRateCondition"`
	SloSliCondition             MonitorTriggerConditionsSloSliConditionPtrInput             `pulumi:"sloSliCondition"`
}

func (MonitorTriggerConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditions)(nil)).Elem()
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsOutput() MonitorTriggerConditionsOutput {
	return i.ToMonitorTriggerConditionsOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsOutputWithContext(ctx context.Context) MonitorTriggerConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsOutput)
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return i.ToMonitorTriggerConditionsPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsArgs) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsOutput).ToMonitorTriggerConditionsPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsPtrInput is an input type that accepts MonitorTriggerConditionsArgs, MonitorTriggerConditionsPtr and MonitorTriggerConditionsPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsPtrInput` via:
//
//          MonitorTriggerConditionsArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput
	ToMonitorTriggerConditionsPtrOutputWithContext(context.Context) MonitorTriggerConditionsPtrOutput
}

type monitorTriggerConditionsPtrType MonitorTriggerConditionsArgs

func MonitorTriggerConditionsPtr(v *MonitorTriggerConditionsArgs) MonitorTriggerConditionsPtrInput {
	return (*monitorTriggerConditionsPtrType)(v)
}

func (*monitorTriggerConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditions)(nil)).Elem()
}

func (i *monitorTriggerConditionsPtrType) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return i.ToMonitorTriggerConditionsPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsPtrType) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsPtrOutput)
}

type MonitorTriggerConditionsOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditions)(nil)).Elem()
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsOutput() MonitorTriggerConditionsOutput {
	return o
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsOutputWithContext(ctx context.Context) MonitorTriggerConditionsOutput {
	return o
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return o.ToMonitorTriggerConditionsPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsOutput) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditions) *MonitorTriggerConditions {
		return &v
	}).(MonitorTriggerConditionsPtrOutput)
}

func (o MonitorTriggerConditionsOutput) LogsMissingDataCondition() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsLogsMissingDataCondition {
		return v.LogsMissingDataCondition
	}).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) LogsOutlierCondition() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsLogsOutlierCondition {
		return v.LogsOutlierCondition
	}).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) LogsStaticCondition() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsLogsStaticCondition {
		return v.LogsStaticCondition
	}).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) MetricsMissingDataCondition() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsMetricsMissingDataCondition {
		return v.MetricsMissingDataCondition
	}).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) MetricsOutlierCondition() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsMetricsOutlierCondition {
		return v.MetricsOutlierCondition
	}).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) MetricsStaticCondition() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsMetricsStaticCondition {
		return v.MetricsStaticCondition
	}).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) SloBurnRateCondition() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsSloBurnRateCondition {
		return v.SloBurnRateCondition
	}).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

func (o MonitorTriggerConditionsOutput) SloSliCondition() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditions) *MonitorTriggerConditionsSloSliCondition { return v.SloSliCondition }).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

type MonitorTriggerConditionsPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditions)(nil)).Elem()
}

func (o MonitorTriggerConditionsPtrOutput) ToMonitorTriggerConditionsPtrOutput() MonitorTriggerConditionsPtrOutput {
	return o
}

func (o MonitorTriggerConditionsPtrOutput) ToMonitorTriggerConditionsPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsPtrOutput {
	return o
}

func (o MonitorTriggerConditionsPtrOutput) Elem() MonitorTriggerConditionsOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) MonitorTriggerConditions {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditions
		return ret
	}).(MonitorTriggerConditionsOutput)
}

func (o MonitorTriggerConditionsPtrOutput) LogsMissingDataCondition() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsLogsMissingDataCondition {
		if v == nil {
			return nil
		}
		return v.LogsMissingDataCondition
	}).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) LogsOutlierCondition() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsLogsOutlierCondition {
		if v == nil {
			return nil
		}
		return v.LogsOutlierCondition
	}).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) LogsStaticCondition() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsLogsStaticCondition {
		if v == nil {
			return nil
		}
		return v.LogsStaticCondition
	}).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) MetricsMissingDataCondition() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsMetricsMissingDataCondition {
		if v == nil {
			return nil
		}
		return v.MetricsMissingDataCondition
	}).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) MetricsOutlierCondition() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsMetricsOutlierCondition {
		if v == nil {
			return nil
		}
		return v.MetricsOutlierCondition
	}).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) MetricsStaticCondition() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsMetricsStaticCondition {
		if v == nil {
			return nil
		}
		return v.MetricsStaticCondition
	}).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) SloBurnRateCondition() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsSloBurnRateCondition {
		if v == nil {
			return nil
		}
		return v.SloBurnRateCondition
	}).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

func (o MonitorTriggerConditionsPtrOutput) SloSliCondition() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditions) *MonitorTriggerConditionsSloSliCondition {
		if v == nil {
			return nil
		}
		return v.SloSliCondition
	}).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

type MonitorTriggerConditionsLogsMissingDataCondition struct {
	TimeRange string `pulumi:"timeRange"`
}

// MonitorTriggerConditionsLogsMissingDataConditionInput is an input type that accepts MonitorTriggerConditionsLogsMissingDataConditionArgs and MonitorTriggerConditionsLogsMissingDataConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsMissingDataConditionInput` via:
//
//          MonitorTriggerConditionsLogsMissingDataConditionArgs{...}
type MonitorTriggerConditionsLogsMissingDataConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsMissingDataConditionOutput() MonitorTriggerConditionsLogsMissingDataConditionOutput
	ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(context.Context) MonitorTriggerConditionsLogsMissingDataConditionOutput
}

type MonitorTriggerConditionsLogsMissingDataConditionArgs struct {
	TimeRange pulumi.StringInput `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsLogsMissingDataConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionOutput() MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return i.ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsMissingDataConditionOutput)
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsMissingDataConditionArgs) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsMissingDataConditionOutput).ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsMissingDataConditionPtrInput is an input type that accepts MonitorTriggerConditionsLogsMissingDataConditionArgs, MonitorTriggerConditionsLogsMissingDataConditionPtr and MonitorTriggerConditionsLogsMissingDataConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsMissingDataConditionPtrInput` via:
//
//          MonitorTriggerConditionsLogsMissingDataConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsMissingDataConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput
	ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput
}

type monitorTriggerConditionsLogsMissingDataConditionPtrType MonitorTriggerConditionsLogsMissingDataConditionArgs

func MonitorTriggerConditionsLogsMissingDataConditionPtr(v *MonitorTriggerConditionsLogsMissingDataConditionArgs) MonitorTriggerConditionsLogsMissingDataConditionPtrInput {
	return (*monitorTriggerConditionsLogsMissingDataConditionPtrType)(v)
}

func (*monitorTriggerConditionsLogsMissingDataConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsMissingDataConditionPtrType) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsMissingDataConditionPtrType) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

type MonitorTriggerConditionsLogsMissingDataConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsMissingDataConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionOutput() MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsMissingDataCondition) *MonitorTriggerConditionsLogsMissingDataCondition {
		return &v
	}).(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsLogsMissingDataConditionOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsMissingDataCondition) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsLogsMissingDataConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutput() MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsLogsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) Elem() MonitorTriggerConditionsLogsMissingDataConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsMissingDataCondition) MonitorTriggerConditionsLogsMissingDataCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsMissingDataCondition
		return ret
	}).(MonitorTriggerConditionsLogsMissingDataConditionOutput)
}

func (o MonitorTriggerConditionsLogsMissingDataConditionPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsMissingDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierCondition struct {
	Critical  *MonitorTriggerConditionsLogsOutlierConditionCritical `pulumi:"critical"`
	Direction *string                                               `pulumi:"direction"`
	Field     *string                                               `pulumi:"field"`
	Warning   *MonitorTriggerConditionsLogsOutlierConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsLogsOutlierConditionInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionArgs and MonitorTriggerConditionsLogsOutlierConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionInput` via:
//
//          MonitorTriggerConditionsLogsOutlierConditionArgs{...}
type MonitorTriggerConditionsLogsOutlierConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionOutput() MonitorTriggerConditionsLogsOutlierConditionOutput
	ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionOutput
}

type MonitorTriggerConditionsLogsOutlierConditionArgs struct {
	Critical  MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput `pulumi:"critical"`
	Direction pulumi.StringPtrInput                                        `pulumi:"direction"`
	Field     pulumi.StringPtrInput                                        `pulumi:"field"`
	Warning   MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsLogsOutlierConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionOutput() MonitorTriggerConditionsLogsOutlierConditionOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionOutput)
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionArgs) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionOutput).ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsOutlierConditionPtrInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionArgs, MonitorTriggerConditionsLogsOutlierConditionPtr and MonitorTriggerConditionsLogsOutlierConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionPtrInput` via:
//
//          MonitorTriggerConditionsLogsOutlierConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsOutlierConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput
	ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput
}

type monitorTriggerConditionsLogsOutlierConditionPtrType MonitorTriggerConditionsLogsOutlierConditionArgs

func MonitorTriggerConditionsLogsOutlierConditionPtr(v *MonitorTriggerConditionsLogsOutlierConditionArgs) MonitorTriggerConditionsLogsOutlierConditionPtrInput {
	return (*monitorTriggerConditionsLogsOutlierConditionPtrType)(v)
}

func (*monitorTriggerConditionsLogsOutlierConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsOutlierConditionPtrType) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsOutlierConditionPtrType) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionOutput() MonitorTriggerConditionsLogsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierCondition {
		return &v
	}).(MonitorTriggerConditionsLogsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Critical() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionOutput) Warning() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutput() MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Elem() MonitorTriggerConditionsLogsOutlierConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) MonitorTriggerConditionsLogsOutlierCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsOutlierCondition
		return ret
	}).(MonitorTriggerConditionsLogsOutlierConditionOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Critical() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *string {
		if v == nil {
			return nil
		}
		return v.Direction
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionPtrOutput) Warning() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierCondition) *MonitorTriggerConditionsLogsOutlierConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionCritical struct {
	Consecutive *int     `pulumi:"consecutive"`
	Threshold   *float64 `pulumi:"threshold"`
	Window      *int     `pulumi:"window"`
}

// MonitorTriggerConditionsLogsOutlierConditionCriticalInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionCriticalArgs and MonitorTriggerConditionsLogsOutlierConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionCriticalInput` via:
//
//          MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{...}
type MonitorTriggerConditionsLogsOutlierConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput
	ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalOutput
}

type MonitorTriggerConditionsLogsOutlierConditionCriticalArgs struct {
	Consecutive pulumi.IntPtrInput     `pulumi:"consecutive"`
	Threshold   pulumi.Float64PtrInput `pulumi:"threshold"`
	Window      pulumi.IntPtrInput     `pulumi:"window"`
}

func (MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput)
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput).ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionCriticalArgs, MonitorTriggerConditionsLogsOutlierConditionCriticalPtr and MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput` via:
//
//          MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput
	ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput
}

type monitorTriggerConditionsLogsOutlierConditionCriticalPtrType MonitorTriggerConditionsLogsOutlierConditionCriticalArgs

func MonitorTriggerConditionsLogsOutlierConditionCriticalPtr(v *MonitorTriggerConditionsLogsOutlierConditionCriticalArgs) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput {
	return (*monitorTriggerConditionsLogsOutlierConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsLogsOutlierConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsOutlierConditionCritical) *MonitorTriggerConditionsLogsOutlierConditionCritical {
		return &v
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionCritical) *int { return v.Consecutive }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionCritical) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionCritical) *int { return v.Window }).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsLogsOutlierConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) MonitorTriggerConditionsLogsOutlierConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsOutlierConditionCritical
		return ret
	}).(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionCritical) *int {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionWarning struct {
	Consecutive *int     `pulumi:"consecutive"`
	Threshold   *float64 `pulumi:"threshold"`
	Window      *int     `pulumi:"window"`
}

// MonitorTriggerConditionsLogsOutlierConditionWarningInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionWarningArgs and MonitorTriggerConditionsLogsOutlierConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionWarningInput` via:
//
//          MonitorTriggerConditionsLogsOutlierConditionWarningArgs{...}
type MonitorTriggerConditionsLogsOutlierConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionWarningOutput() MonitorTriggerConditionsLogsOutlierConditionWarningOutput
	ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningOutput
}

type MonitorTriggerConditionsLogsOutlierConditionWarningArgs struct {
	Consecutive pulumi.IntPtrInput     `pulumi:"consecutive"`
	Threshold   pulumi.Float64PtrInput `pulumi:"threshold"`
	Window      pulumi.IntPtrInput     `pulumi:"window"`
}

func (MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutput() MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionWarningOutput)
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsOutlierConditionWarningArgs) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionWarningOutput).ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsLogsOutlierConditionWarningArgs, MonitorTriggerConditionsLogsOutlierConditionWarningPtr and MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput` via:
//
//          MonitorTriggerConditionsLogsOutlierConditionWarningArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput
	ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput
}

type monitorTriggerConditionsLogsOutlierConditionWarningPtrType MonitorTriggerConditionsLogsOutlierConditionWarningArgs

func MonitorTriggerConditionsLogsOutlierConditionWarningPtr(v *MonitorTriggerConditionsLogsOutlierConditionWarningArgs) MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput {
	return (*monitorTriggerConditionsLogsOutlierConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsLogsOutlierConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutput() MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsOutlierConditionWarning) *MonitorTriggerConditionsLogsOutlierConditionWarning {
		return &v
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionWarning) *int { return v.Consecutive }).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionWarning) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsOutlierConditionWarning) *int { return v.Window }).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Elem() MonitorTriggerConditionsLogsOutlierConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) MonitorTriggerConditionsLogsOutlierConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsOutlierConditionWarning
		return ret
	}).(MonitorTriggerConditionsLogsOutlierConditionWarningOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Consecutive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) *int {
		if v == nil {
			return nil
		}
		return v.Consecutive
	}).(pulumi.IntPtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsOutlierConditionWarning) *int {
		if v == nil {
			return nil
		}
		return v.Window
	}).(pulumi.IntPtrOutput)
}

type MonitorTriggerConditionsLogsStaticCondition struct {
	Critical *MonitorTriggerConditionsLogsStaticConditionCritical `pulumi:"critical"`
	Field    *string                                              `pulumi:"field"`
	Warning  *MonitorTriggerConditionsLogsStaticConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsLogsStaticConditionInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionArgs and MonitorTriggerConditionsLogsStaticConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionArgs{...}
type MonitorTriggerConditionsLogsStaticConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionOutput() MonitorTriggerConditionsLogsStaticConditionOutput
	ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionOutput
}

type MonitorTriggerConditionsLogsStaticConditionArgs struct {
	Critical MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput `pulumi:"critical"`
	Field    pulumi.StringPtrInput                                       `pulumi:"field"`
	Warning  MonitorTriggerConditionsLogsStaticConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsLogsStaticConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionOutput() MonitorTriggerConditionsLogsStaticConditionOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionArgs) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionOutput).ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionArgs, MonitorTriggerConditionsLogsStaticConditionPtr and MonitorTriggerConditionsLogsStaticConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionPtrType MonitorTriggerConditionsLogsStaticConditionArgs

func MonitorTriggerConditionsLogsStaticConditionPtr(v *MonitorTriggerConditionsLogsStaticConditionArgs) MonitorTriggerConditionsLogsStaticConditionPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionPtrType) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionPtrType) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionOutput() MonitorTriggerConditionsLogsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticCondition {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) Critical() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticCondition) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionOutput) Warning() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutput() MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) MonitorTriggerConditionsLogsStaticCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticCondition
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Critical() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionPtrOutput) Warning() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticCondition) *MonitorTriggerConditionsLogsStaticConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCritical struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionCriticalAlert      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionCriticalResolution `pulumi:"resolution"`
	TimeRange  string                                                        `pulumi:"timeRange"`
}

// MonitorTriggerConditionsLogsStaticConditionCriticalInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalArgs and MonitorTriggerConditionsLogsStaticConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionCriticalArgs{...}
type MonitorTriggerConditionsLogsStaticConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalOutput() MonitorTriggerConditionsLogsStaticConditionCriticalOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalOutput
}

type MonitorTriggerConditionsLogsStaticConditionCriticalArgs struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput `pulumi:"resolution"`
	TimeRange  pulumi.StringInput                                                 `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutput() MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalOutput).ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalArgs, MonitorTriggerConditionsLogsStaticConditionCriticalPtr and MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionCriticalArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionCriticalPtrType MonitorTriggerConditionsLogsStaticConditionCriticalArgs

func MonitorTriggerConditionsLogsStaticConditionCriticalPtr(v *MonitorTriggerConditionsLogsStaticConditionCriticalArgs) MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutput() MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionCritical) *MonitorTriggerConditionsLogsStaticConditionCritical {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) Alert() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCritical) MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		return v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCritical) MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCritical) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) MonitorTriggerConditionsLogsStaticConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionCritical
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) Alert() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) *MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) *MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlert struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs and MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{...}
type MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput).ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs, MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtr and MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs

func MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtr(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlert) MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionCriticalAlert
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolution struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs and MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{...}
type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput).ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs, MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtr and MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs

func MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtr(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionCriticalResolution
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarning struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionWarningAlert      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionWarningResolution `pulumi:"resolution"`
	TimeRange  string                                                       `pulumi:"timeRange"`
}

// MonitorTriggerConditionsLogsStaticConditionWarningInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningArgs and MonitorTriggerConditionsLogsStaticConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionWarningArgs{...}
type MonitorTriggerConditionsLogsStaticConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningOutput() MonitorTriggerConditionsLogsStaticConditionWarningOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningOutput
}

type MonitorTriggerConditionsLogsStaticConditionWarningArgs struct {
	Alert      MonitorTriggerConditionsLogsStaticConditionWarningAlertInput      `pulumi:"alert"`
	Resolution MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput `pulumi:"resolution"`
	TimeRange  pulumi.StringInput                                                `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsLogsStaticConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningOutput() MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningOutput).ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningArgs, MonitorTriggerConditionsLogsStaticConditionWarningPtr and MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionWarningArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionWarningPtrType MonitorTriggerConditionsLogsStaticConditionWarningArgs

func MonitorTriggerConditionsLogsStaticConditionWarningPtr(v *MonitorTriggerConditionsLogsStaticConditionWarningArgs) MonitorTriggerConditionsLogsStaticConditionWarningPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningOutput() MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionWarning) *MonitorTriggerConditionsLogsStaticConditionWarning {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) Alert() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarning) MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		return v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarning) MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarning) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) MonitorTriggerConditionsLogsStaticConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionWarning
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionWarningOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) Alert() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) *MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) Resolution() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) *MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlert struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionWarningAlertInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs and MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningAlertInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{...}
type MonitorTriggerConditionsLogsStaticConditionWarningAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput).ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs, MonitorTriggerConditionsLogsStaticConditionWarningAlertPtr and MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs

func MonitorTriggerConditionsLogsStaticConditionWarningAlertPtr(v *MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionWarningAlert) *MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningAlert) MonitorTriggerConditionsLogsStaticConditionWarningAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionWarningAlert
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolution struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs and MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{...}
type MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput)
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput).ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput is an input type that accepts MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs, MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtr and MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput` via:
//
//          MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput
	ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput
}

type monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs

func MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtr(v *MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput {
	return (*monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType)(v)
}

func (*monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsLogsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		return &v
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsLogsStaticConditionWarningResolution) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsLogsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) Elem() MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) MonitorTriggerConditionsLogsStaticConditionWarningResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsLogsStaticConditionWarningResolution
		return ret
	}).(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsLogsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsMissingDataCondition struct {
	TimeRange     string `pulumi:"timeRange"`
	TriggerSource string `pulumi:"triggerSource"`
}

// MonitorTriggerConditionsMetricsMissingDataConditionInput is an input type that accepts MonitorTriggerConditionsMetricsMissingDataConditionArgs and MonitorTriggerConditionsMetricsMissingDataConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsMissingDataConditionInput` via:
//
//          MonitorTriggerConditionsMetricsMissingDataConditionArgs{...}
type MonitorTriggerConditionsMetricsMissingDataConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsMissingDataConditionOutput() MonitorTriggerConditionsMetricsMissingDataConditionOutput
	ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsMissingDataConditionOutput
}

type MonitorTriggerConditionsMetricsMissingDataConditionArgs struct {
	TimeRange     pulumi.StringInput `pulumi:"timeRange"`
	TriggerSource pulumi.StringInput `pulumi:"triggerSource"`
}

func (MonitorTriggerConditionsMetricsMissingDataConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionOutput() MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return i.ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsMissingDataConditionOutput)
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsMissingDataConditionArgs) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsMissingDataConditionOutput).ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsMissingDataConditionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsMissingDataConditionArgs, MonitorTriggerConditionsMetricsMissingDataConditionPtr and MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsMissingDataConditionPtrInput` via:
//
//          MonitorTriggerConditionsMetricsMissingDataConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsMissingDataConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput
	ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput
}

type monitorTriggerConditionsMetricsMissingDataConditionPtrType MonitorTriggerConditionsMetricsMissingDataConditionArgs

func MonitorTriggerConditionsMetricsMissingDataConditionPtr(v *MonitorTriggerConditionsMetricsMissingDataConditionArgs) MonitorTriggerConditionsMetricsMissingDataConditionPtrInput {
	return (*monitorTriggerConditionsMetricsMissingDataConditionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsMissingDataConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsMissingDataConditionPtrType) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsMissingDataConditionPtrType) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

type MonitorTriggerConditionsMetricsMissingDataConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsMissingDataConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionOutput() MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsMissingDataCondition) *MonitorTriggerConditionsMetricsMissingDataCondition {
		return &v
	}).(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsMissingDataCondition) string { return v.TimeRange }).(pulumi.StringOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionOutput) TriggerSource() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsMissingDataCondition) string { return v.TriggerSource }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsMissingDataCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutput() MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) ToMonitorTriggerConditionsMetricsMissingDataConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) Elem() MonitorTriggerConditionsMetricsMissingDataConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsMissingDataCondition) MonitorTriggerConditionsMetricsMissingDataCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsMissingDataCondition
		return ret
	}).(MonitorTriggerConditionsMetricsMissingDataConditionOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsMissingDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsMissingDataCondition) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerSource
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierCondition struct {
	Critical  *MonitorTriggerConditionsMetricsOutlierConditionCritical `pulumi:"critical"`
	Direction *string                                                  `pulumi:"direction"`
	Warning   *MonitorTriggerConditionsMetricsOutlierConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsMetricsOutlierConditionInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionArgs and MonitorTriggerConditionsMetricsOutlierConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionInput` via:
//
//          MonitorTriggerConditionsMetricsOutlierConditionArgs{...}
type MonitorTriggerConditionsMetricsOutlierConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionOutput() MonitorTriggerConditionsMetricsOutlierConditionOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionOutput
}

type MonitorTriggerConditionsMetricsOutlierConditionArgs struct {
	Critical  MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput `pulumi:"critical"`
	Direction pulumi.StringPtrInput                                           `pulumi:"direction"`
	Warning   MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsMetricsOutlierConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionOutput() MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionOutput)
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionArgs) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionOutput).ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsOutlierConditionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionArgs, MonitorTriggerConditionsMetricsOutlierConditionPtr and MonitorTriggerConditionsMetricsOutlierConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionPtrInput` via:
//
//          MonitorTriggerConditionsMetricsOutlierConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsOutlierConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput
}

type monitorTriggerConditionsMetricsOutlierConditionPtrType MonitorTriggerConditionsMetricsOutlierConditionArgs

func MonitorTriggerConditionsMetricsOutlierConditionPtr(v *MonitorTriggerConditionsMetricsOutlierConditionArgs) MonitorTriggerConditionsMetricsOutlierConditionPtrInput {
	return (*monitorTriggerConditionsMetricsOutlierConditionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsOutlierConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsOutlierConditionPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsOutlierConditionPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionOutput() MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierCondition {
		return &v
	}).(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) Critical() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierCondition) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionOutput) Warning() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Elem() MonitorTriggerConditionsMetricsOutlierConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) MonitorTriggerConditionsMetricsOutlierCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsOutlierCondition
		return ret
	}).(MonitorTriggerConditionsMetricsOutlierConditionOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Critical() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) *string {
		if v == nil {
			return nil
		}
		return v.Direction
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionPtrOutput) Warning() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierCondition) *MonitorTriggerConditionsMetricsOutlierConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionCritical struct {
	BaselineWindow *string  `pulumi:"baselineWindow"`
	Threshold      *float64 `pulumi:"threshold"`
}

// MonitorTriggerConditionsMetricsOutlierConditionCriticalInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs and MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionCriticalInput` via:
//
//          MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{...}
type MonitorTriggerConditionsMetricsOutlierConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput
}

type MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs struct {
	BaselineWindow pulumi.StringPtrInput  `pulumi:"baselineWindow"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput)
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput).ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs, MonitorTriggerConditionsMetricsOutlierConditionCriticalPtr and MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput` via:
//
//          MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput
}

type monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs

func MonitorTriggerConditionsMetricsOutlierConditionCriticalPtr(v *MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput {
	return (*monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsOutlierConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsOutlierConditionCritical) *MonitorTriggerConditionsMetricsOutlierConditionCritical {
		return &v
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionCritical) *string { return v.BaselineWindow }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionCritical) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionCritical) MonitorTriggerConditionsMetricsOutlierConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsOutlierConditionCritical
		return ret
	}).(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.BaselineWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionWarning struct {
	BaselineWindow *string  `pulumi:"baselineWindow"`
	Threshold      *float64 `pulumi:"threshold"`
}

// MonitorTriggerConditionsMetricsOutlierConditionWarningInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionWarningArgs and MonitorTriggerConditionsMetricsOutlierConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionWarningInput` via:
//
//          MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{...}
type MonitorTriggerConditionsMetricsOutlierConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningOutput
}

type MonitorTriggerConditionsMetricsOutlierConditionWarningArgs struct {
	BaselineWindow pulumi.StringPtrInput  `pulumi:"baselineWindow"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput)
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput).ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsMetricsOutlierConditionWarningArgs, MonitorTriggerConditionsMetricsOutlierConditionWarningPtr and MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput` via:
//
//          MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput
	ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput
}

type monitorTriggerConditionsMetricsOutlierConditionWarningPtrType MonitorTriggerConditionsMetricsOutlierConditionWarningArgs

func MonitorTriggerConditionsMetricsOutlierConditionWarningPtr(v *MonitorTriggerConditionsMetricsOutlierConditionWarningArgs) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput {
	return (*monitorTriggerConditionsMetricsOutlierConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsMetricsOutlierConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsOutlierConditionWarningPtrType) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsOutlierConditionWarning) *MonitorTriggerConditionsMetricsOutlierConditionWarning {
		return &v
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionWarning) *string { return v.BaselineWindow }).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsOutlierConditionWarning) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsOutlierConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput() MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) Elem() MonitorTriggerConditionsMetricsOutlierConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionWarning) MonitorTriggerConditionsMetricsOutlierConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsOutlierConditionWarning
		return ret
	}).(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) BaselineWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.BaselineWindow
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsOutlierConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsMetricsStaticCondition struct {
	Critical *MonitorTriggerConditionsMetricsStaticConditionCritical `pulumi:"critical"`
	Warning  *MonitorTriggerConditionsMetricsStaticConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsMetricsStaticConditionInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionArgs and MonitorTriggerConditionsMetricsStaticConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionOutput() MonitorTriggerConditionsMetricsStaticConditionOutput
	ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionOutput
}

type MonitorTriggerConditionsMetricsStaticConditionArgs struct {
	Critical MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput `pulumi:"critical"`
	Warning  MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsMetricsStaticConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionOutput() MonitorTriggerConditionsMetricsStaticConditionOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionArgs) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionOutput).ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionArgs, MonitorTriggerConditionsMetricsStaticConditionPtr and MonitorTriggerConditionsMetricsStaticConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionPtrType MonitorTriggerConditionsMetricsStaticConditionArgs

func MonitorTriggerConditionsMetricsStaticConditionPtr(v *MonitorTriggerConditionsMetricsStaticConditionArgs) MonitorTriggerConditionsMetricsStaticConditionPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionOutput() MonitorTriggerConditionsMetricsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticCondition {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) Critical() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionOutput) Warning() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticCondition) MonitorTriggerConditionsMetricsStaticCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticCondition
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) Critical() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionPtrOutput) Warning() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticCondition) *MonitorTriggerConditionsMetricsStaticConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCritical struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionCriticalAlert      `pulumi:"alert"`
	OccurrenceType string                                                           `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionCriticalResolution `pulumi:"resolution"`
	TimeRange      string                                                           `pulumi:"timeRange"`
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalArgs and MonitorTriggerConditionsMetricsStaticConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalOutput
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalArgs struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput      `pulumi:"alert"`
	OccurrenceType pulumi.StringInput                                                    `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput `pulumi:"resolution"`
	TimeRange      pulumi.StringInput                                                    `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput).ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalArgs, MonitorTriggerConditionsMetricsStaticConditionCriticalPtr and MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionCriticalPtrType MonitorTriggerConditionsMetricsStaticConditionCriticalArgs

func MonitorTriggerConditionsMetricsStaticConditionCriticalPtr(v *MonitorTriggerConditionsMetricsStaticConditionCriticalArgs) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionCritical) *MonitorTriggerConditionsMetricsStaticConditionCritical {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		return v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) OccurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) string { return v.OccurrenceType }).(pulumi.StringOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCritical) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) MonitorTriggerConditionsMetricsStaticConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionCritical
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlert struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs and MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput).ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs, MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtr and MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs

func MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtr(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionCriticalAlert
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolution struct {
	OccurrenceType *string  `pulumi:"occurrenceType"`
	Threshold      *float64 `pulumi:"threshold"`
	ThresholdType  *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs and MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs struct {
	OccurrenceType pulumi.StringPtrInput  `pulumi:"occurrenceType"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType  pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput).ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs, MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtr and MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs

func MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtr(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionCriticalResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionCriticalResolution
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionCriticalResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarning struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionWarningAlert      `pulumi:"alert"`
	OccurrenceType string                                                          `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionWarningResolution `pulumi:"resolution"`
	TimeRange      string                                                          `pulumi:"timeRange"`
}

// MonitorTriggerConditionsMetricsStaticConditionWarningInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningArgs and MonitorTriggerConditionsMetricsStaticConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionWarningArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningOutput() MonitorTriggerConditionsMetricsStaticConditionWarningOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningOutput
}

type MonitorTriggerConditionsMetricsStaticConditionWarningArgs struct {
	Alert          MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput      `pulumi:"alert"`
	OccurrenceType pulumi.StringInput                                                   `pulumi:"occurrenceType"`
	Resolution     MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput `pulumi:"resolution"`
	TimeRange      pulumi.StringInput                                                   `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutput() MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningOutput).ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningArgs, MonitorTriggerConditionsMetricsStaticConditionWarningPtr and MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionWarningArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionWarningPtrType MonitorTriggerConditionsMetricsStaticConditionWarningArgs

func MonitorTriggerConditionsMetricsStaticConditionWarningPtr(v *MonitorTriggerConditionsMetricsStaticConditionWarningArgs) MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutput() MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionWarning) *MonitorTriggerConditionsMetricsStaticConditionWarning {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		return v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) OccurrenceType() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) string { return v.OccurrenceType }).(pulumi.StringOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		return v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarning) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) MonitorTriggerConditionsMetricsStaticConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionWarning
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) Alert() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		if v == nil {
			return nil
		}
		return &v.Alert
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) Resolution() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlert struct {
	Threshold     *float64 `pulumi:"threshold"`
	ThresholdType *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs and MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs struct {
	Threshold     pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput).ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs, MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtr and MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs

func MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtr(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningAlertPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *string { return v.ThresholdType }).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningAlert)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionWarningAlert
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningAlert) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolution struct {
	OccurrenceType *string  `pulumi:"occurrenceType"`
	Threshold      *float64 `pulumi:"threshold"`
	ThresholdType  *string  `pulumi:"thresholdType"`
}

// MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs and MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{...}
type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs struct {
	OccurrenceType pulumi.StringPtrInput  `pulumi:"occurrenceType"`
	Threshold      pulumi.Float64PtrInput `pulumi:"threshold"`
	ThresholdType  pulumi.StringPtrInput  `pulumi:"thresholdType"`
}

func (MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput)
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput).ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput is an input type that accepts MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs, MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtr and MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput` via:
//
//          MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput
	ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput
}

type monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs

func MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtr(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput {
	return (*monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType)(v)
}

func (*monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return i.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrType) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o.ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		return &v
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsMetricsStaticConditionWarningResolution)(nil)).Elem()
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ToMonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) Elem() MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsMetricsStaticConditionWarningResolution
		return ret
	}).(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) OccurrenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.OccurrenceType
	}).(pulumi.StringPtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput) ThresholdType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsMetricsStaticConditionWarningResolution) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdType
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateCondition struct {
	Critical *MonitorTriggerConditionsSloBurnRateConditionCritical `pulumi:"critical"`
	Warning  *MonitorTriggerConditionsSloBurnRateConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsSloBurnRateConditionInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionArgs and MonitorTriggerConditionsSloBurnRateConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionInput` via:
//
//          MonitorTriggerConditionsSloBurnRateConditionArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionOutput() MonitorTriggerConditionsSloBurnRateConditionOutput
	ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionOutput
}

type MonitorTriggerConditionsSloBurnRateConditionArgs struct {
	Critical MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput `pulumi:"critical"`
	Warning  MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsSloBurnRateConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionOutput() MonitorTriggerConditionsSloBurnRateConditionOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionOutput)
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionArgs) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionOutput).ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloBurnRateConditionPtrInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionArgs, MonitorTriggerConditionsSloBurnRateConditionPtr and MonitorTriggerConditionsSloBurnRateConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionPtrInput` via:
//
//          MonitorTriggerConditionsSloBurnRateConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsSloBurnRateConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput
	ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput
}

type monitorTriggerConditionsSloBurnRateConditionPtrType MonitorTriggerConditionsSloBurnRateConditionArgs

func MonitorTriggerConditionsSloBurnRateConditionPtr(v *MonitorTriggerConditionsSloBurnRateConditionArgs) MonitorTriggerConditionsSloBurnRateConditionPtrInput {
	return (*monitorTriggerConditionsSloBurnRateConditionPtrType)(v)
}

func (*monitorTriggerConditionsSloBurnRateConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloBurnRateConditionPtrType) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloBurnRateConditionPtrType) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionOutput() MonitorTriggerConditionsSloBurnRateConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateCondition {
		return &v
	}).(MonitorTriggerConditionsSloBurnRateConditionPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) Critical() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionOutput) Warning() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutput() MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) Elem() MonitorTriggerConditionsSloBurnRateConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateCondition) MonitorTriggerConditionsSloBurnRateCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloBurnRateCondition
		return ret
	}).(MonitorTriggerConditionsSloBurnRateConditionOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) Critical() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionPtrOutput) Warning() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateCondition) *MonitorTriggerConditionsSloBurnRateConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCritical struct {
	BurnRateThreshold float64 `pulumi:"burnRateThreshold"`
	TimeRange         string  `pulumi:"timeRange"`
}

// MonitorTriggerConditionsSloBurnRateConditionCriticalInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionCriticalArgs and MonitorTriggerConditionsSloBurnRateConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionCriticalInput` via:
//
//          MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput
	ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalOutput
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalArgs struct {
	BurnRateThreshold pulumi.Float64Input `pulumi:"burnRateThreshold"`
	TimeRange         pulumi.StringInput  `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput)
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput).ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionCriticalArgs, MonitorTriggerConditionsSloBurnRateConditionCriticalPtr and MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput` via:
//
//          MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput
	ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput
}

type monitorTriggerConditionsSloBurnRateConditionCriticalPtrType MonitorTriggerConditionsSloBurnRateConditionCriticalArgs

func MonitorTriggerConditionsSloBurnRateConditionCriticalPtr(v *MonitorTriggerConditionsSloBurnRateConditionCriticalArgs) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput {
	return (*monitorTriggerConditionsSloBurnRateConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsSloBurnRateConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloBurnRateConditionCriticalPtrType) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloBurnRateConditionCriticalPtrType) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloBurnRateConditionCritical) *MonitorTriggerConditionsSloBurnRateConditionCritical {
		return &v
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) BurnRateThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCritical) float64 { return v.BurnRateThreshold }).(pulumi.Float64Output)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionCritical) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput() MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsSloBurnRateConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) MonitorTriggerConditionsSloBurnRateConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloBurnRateConditionCritical
		return ret
	}).(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) BurnRateThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return &v.BurnRateThreshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionCritical) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarning struct {
	BurnRateThreshold float64 `pulumi:"burnRateThreshold"`
	TimeRange         string  `pulumi:"timeRange"`
}

// MonitorTriggerConditionsSloBurnRateConditionWarningInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionWarningArgs and MonitorTriggerConditionsSloBurnRateConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionWarningInput` via:
//
//          MonitorTriggerConditionsSloBurnRateConditionWarningArgs{...}
type MonitorTriggerConditionsSloBurnRateConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionWarningOutput() MonitorTriggerConditionsSloBurnRateConditionWarningOutput
	ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningOutput
}

type MonitorTriggerConditionsSloBurnRateConditionWarningArgs struct {
	BurnRateThreshold pulumi.Float64Input `pulumi:"burnRateThreshold"`
	TimeRange         pulumi.StringInput  `pulumi:"timeRange"`
}

func (MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutput() MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningOutput)
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloBurnRateConditionWarningArgs) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningOutput).ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsSloBurnRateConditionWarningArgs, MonitorTriggerConditionsSloBurnRateConditionWarningPtr and MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput` via:
//
//          MonitorTriggerConditionsSloBurnRateConditionWarningArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput
	ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput
}

type monitorTriggerConditionsSloBurnRateConditionWarningPtrType MonitorTriggerConditionsSloBurnRateConditionWarningArgs

func MonitorTriggerConditionsSloBurnRateConditionWarningPtr(v *MonitorTriggerConditionsSloBurnRateConditionWarningArgs) MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput {
	return (*monitorTriggerConditionsSloBurnRateConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsSloBurnRateConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloBurnRateConditionWarningPtrType) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloBurnRateConditionWarningPtrType) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutput() MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloBurnRateConditionWarning) *MonitorTriggerConditionsSloBurnRateConditionWarning {
		return &v
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) BurnRateThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarning) float64 { return v.BurnRateThreshold }).(pulumi.Float64Output)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningOutput) TimeRange() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloBurnRateConditionWarning) string { return v.TimeRange }).(pulumi.StringOutput)
}

type MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloBurnRateConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput() MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) ToMonitorTriggerConditionsSloBurnRateConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) Elem() MonitorTriggerConditionsSloBurnRateConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) MonitorTriggerConditionsSloBurnRateConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloBurnRateConditionWarning
		return ret
	}).(MonitorTriggerConditionsSloBurnRateConditionWarningOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) BurnRateThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return &v.BurnRateThreshold
	}).(pulumi.Float64PtrOutput)
}

func (o MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput) TimeRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloBurnRateConditionWarning) *string {
		if v == nil {
			return nil
		}
		return &v.TimeRange
	}).(pulumi.StringPtrOutput)
}

type MonitorTriggerConditionsSloSliCondition struct {
	Critical *MonitorTriggerConditionsSloSliConditionCritical `pulumi:"critical"`
	Warning  *MonitorTriggerConditionsSloSliConditionWarning  `pulumi:"warning"`
}

// MonitorTriggerConditionsSloSliConditionInput is an input type that accepts MonitorTriggerConditionsSloSliConditionArgs and MonitorTriggerConditionsSloSliConditionOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionInput` via:
//
//          MonitorTriggerConditionsSloSliConditionArgs{...}
type MonitorTriggerConditionsSloSliConditionInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionOutput() MonitorTriggerConditionsSloSliConditionOutput
	ToMonitorTriggerConditionsSloSliConditionOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionOutput
}

type MonitorTriggerConditionsSloSliConditionArgs struct {
	Critical MonitorTriggerConditionsSloSliConditionCriticalPtrInput `pulumi:"critical"`
	Warning  MonitorTriggerConditionsSloSliConditionWarningPtrInput  `pulumi:"warning"`
}

func (MonitorTriggerConditionsSloSliConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionOutput() MonitorTriggerConditionsSloSliConditionOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionOutput)
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionArgs) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionOutput).ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloSliConditionPtrInput is an input type that accepts MonitorTriggerConditionsSloSliConditionArgs, MonitorTriggerConditionsSloSliConditionPtr and MonitorTriggerConditionsSloSliConditionPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionPtrInput` via:
//
//          MonitorTriggerConditionsSloSliConditionArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsSloSliConditionPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput
	ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput
}

type monitorTriggerConditionsSloSliConditionPtrType MonitorTriggerConditionsSloSliConditionArgs

func MonitorTriggerConditionsSloSliConditionPtr(v *MonitorTriggerConditionsSloSliConditionArgs) MonitorTriggerConditionsSloSliConditionPtrInput {
	return (*monitorTriggerConditionsSloSliConditionPtrType)(v)
}

func (*monitorTriggerConditionsSloSliConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloSliConditionPtrType) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloSliConditionPtrType) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionOutput() MonitorTriggerConditionsSloSliConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloSliConditionOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliCondition {
		return &v
	}).(MonitorTriggerConditionsSloSliConditionPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionOutput) Critical() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionCritical {
		return v.Critical
	}).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionOutput) Warning() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionWarning {
		return v.Warning
	}).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliCondition)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutput() MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) ToMonitorTriggerConditionsSloSliConditionPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) Elem() MonitorTriggerConditionsSloSliConditionOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliCondition) MonitorTriggerConditionsSloSliCondition {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloSliCondition
		return ret
	}).(MonitorTriggerConditionsSloSliConditionOutput)
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) Critical() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionPtrOutput) Warning() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliCondition) *MonitorTriggerConditionsSloSliConditionWarning {
		if v == nil {
			return nil
		}
		return v.Warning
	}).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionCritical struct {
	SliThreshold float64 `pulumi:"sliThreshold"`
}

// MonitorTriggerConditionsSloSliConditionCriticalInput is an input type that accepts MonitorTriggerConditionsSloSliConditionCriticalArgs and MonitorTriggerConditionsSloSliConditionCriticalOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionCriticalInput` via:
//
//          MonitorTriggerConditionsSloSliConditionCriticalArgs{...}
type MonitorTriggerConditionsSloSliConditionCriticalInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionCriticalOutput() MonitorTriggerConditionsSloSliConditionCriticalOutput
	ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionCriticalOutput
}

type MonitorTriggerConditionsSloSliConditionCriticalArgs struct {
	SliThreshold pulumi.Float64Input `pulumi:"sliThreshold"`
}

func (MonitorTriggerConditionsSloSliConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalOutput() MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionCriticalOutput)
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionCriticalArgs) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionCriticalOutput).ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloSliConditionCriticalPtrInput is an input type that accepts MonitorTriggerConditionsSloSliConditionCriticalArgs, MonitorTriggerConditionsSloSliConditionCriticalPtr and MonitorTriggerConditionsSloSliConditionCriticalPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionCriticalPtrInput` via:
//
//          MonitorTriggerConditionsSloSliConditionCriticalArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsSloSliConditionCriticalPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput
	ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput
}

type monitorTriggerConditionsSloSliConditionCriticalPtrType MonitorTriggerConditionsSloSliConditionCriticalArgs

func MonitorTriggerConditionsSloSliConditionCriticalPtr(v *MonitorTriggerConditionsSloSliConditionCriticalArgs) MonitorTriggerConditionsSloSliConditionCriticalPtrInput {
	return (*monitorTriggerConditionsSloSliConditionCriticalPtrType)(v)
}

func (*monitorTriggerConditionsSloSliConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloSliConditionCriticalPtrType) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloSliConditionCriticalPtrType) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionCriticalOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalOutput() MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloSliConditionCritical) *MonitorTriggerConditionsSloSliConditionCritical {
		return &v
	}).(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionCriticalOutput) SliThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliConditionCritical) float64 { return v.SliThreshold }).(pulumi.Float64Output)
}

type MonitorTriggerConditionsSloSliConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionCritical)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutput() MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) ToMonitorTriggerConditionsSloSliConditionCriticalPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionCriticalPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) Elem() MonitorTriggerConditionsSloSliConditionCriticalOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionCritical) MonitorTriggerConditionsSloSliConditionCritical {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloSliConditionCritical
		return ret
	}).(MonitorTriggerConditionsSloSliConditionCriticalOutput)
}

func (o MonitorTriggerConditionsSloSliConditionCriticalPtrOutput) SliThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return &v.SliThreshold
	}).(pulumi.Float64PtrOutput)
}

type MonitorTriggerConditionsSloSliConditionWarning struct {
	SliThreshold float64 `pulumi:"sliThreshold"`
}

// MonitorTriggerConditionsSloSliConditionWarningInput is an input type that accepts MonitorTriggerConditionsSloSliConditionWarningArgs and MonitorTriggerConditionsSloSliConditionWarningOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionWarningInput` via:
//
//          MonitorTriggerConditionsSloSliConditionWarningArgs{...}
type MonitorTriggerConditionsSloSliConditionWarningInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionWarningOutput() MonitorTriggerConditionsSloSliConditionWarningOutput
	ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionWarningOutput
}

type MonitorTriggerConditionsSloSliConditionWarningArgs struct {
	SliThreshold pulumi.Float64Input `pulumi:"sliThreshold"`
}

func (MonitorTriggerConditionsSloSliConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningOutput() MonitorTriggerConditionsSloSliConditionWarningOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionWarningOutput)
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Background())
}

func (i MonitorTriggerConditionsSloSliConditionWarningArgs) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionWarningOutput).ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx)
}

// MonitorTriggerConditionsSloSliConditionWarningPtrInput is an input type that accepts MonitorTriggerConditionsSloSliConditionWarningArgs, MonitorTriggerConditionsSloSliConditionWarningPtr and MonitorTriggerConditionsSloSliConditionWarningPtrOutput values.
// You can construct a concrete instance of `MonitorTriggerConditionsSloSliConditionWarningPtrInput` via:
//
//          MonitorTriggerConditionsSloSliConditionWarningArgs{...}
//
//  or:
//
//          nil
type MonitorTriggerConditionsSloSliConditionWarningPtrInput interface {
	pulumi.Input

	ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput
	ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput
}

type monitorTriggerConditionsSloSliConditionWarningPtrType MonitorTriggerConditionsSloSliConditionWarningArgs

func MonitorTriggerConditionsSloSliConditionWarningPtr(v *MonitorTriggerConditionsSloSliConditionWarningArgs) MonitorTriggerConditionsSloSliConditionWarningPtrInput {
	return (*monitorTriggerConditionsSloSliConditionWarningPtrType)(v)
}

func (*monitorTriggerConditionsSloSliConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (i *monitorTriggerConditionsSloSliConditionWarningPtrType) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return i.ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Background())
}

func (i *monitorTriggerConditionsSloSliConditionWarningPtrType) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

type MonitorTriggerConditionsSloSliConditionWarningOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningOutput() MonitorTriggerConditionsSloSliConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(context.Background())
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorTriggerConditionsSloSliConditionWarning) *MonitorTriggerConditionsSloSliConditionWarning {
		return &v
	}).(MonitorTriggerConditionsSloSliConditionWarningPtrOutput)
}

func (o MonitorTriggerConditionsSloSliConditionWarningOutput) SliThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v MonitorTriggerConditionsSloSliConditionWarning) float64 { return v.SliThreshold }).(pulumi.Float64Output)
}

type MonitorTriggerConditionsSloSliConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (MonitorTriggerConditionsSloSliConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorTriggerConditionsSloSliConditionWarning)(nil)).Elem()
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutput() MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) ToMonitorTriggerConditionsSloSliConditionWarningPtrOutputWithContext(ctx context.Context) MonitorTriggerConditionsSloSliConditionWarningPtrOutput {
	return o
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) Elem() MonitorTriggerConditionsSloSliConditionWarningOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionWarning) MonitorTriggerConditionsSloSliConditionWarning {
		if v != nil {
			return *v
		}
		var ret MonitorTriggerConditionsSloSliConditionWarning
		return ret
	}).(MonitorTriggerConditionsSloSliConditionWarningOutput)
}

func (o MonitorTriggerConditionsSloSliConditionWarningPtrOutput) SliThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MonitorTriggerConditionsSloSliConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return &v.SliThreshold
	}).(pulumi.Float64PtrOutput)
}

type PoliciesUserConcurrentSessionsLimit struct {
	// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
	Enabled bool `pulumi:"enabled"`
	// Maximum number of concurrent sessions a user may have. Defaults to `100`.
	MaxConcurrentSessions *int `pulumi:"maxConcurrentSessions"`
}

// PoliciesUserConcurrentSessionsLimitInput is an input type that accepts PoliciesUserConcurrentSessionsLimitArgs and PoliciesUserConcurrentSessionsLimitOutput values.
// You can construct a concrete instance of `PoliciesUserConcurrentSessionsLimitInput` via:
//
//          PoliciesUserConcurrentSessionsLimitArgs{...}
type PoliciesUserConcurrentSessionsLimitInput interface {
	pulumi.Input

	ToPoliciesUserConcurrentSessionsLimitOutput() PoliciesUserConcurrentSessionsLimitOutput
	ToPoliciesUserConcurrentSessionsLimitOutputWithContext(context.Context) PoliciesUserConcurrentSessionsLimitOutput
}

type PoliciesUserConcurrentSessionsLimitArgs struct {
	// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Maximum number of concurrent sessions a user may have. Defaults to `100`.
	MaxConcurrentSessions pulumi.IntPtrInput `pulumi:"maxConcurrentSessions"`
}

func (PoliciesUserConcurrentSessionsLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitOutput() PoliciesUserConcurrentSessionsLimitOutput {
	return i.ToPoliciesUserConcurrentSessionsLimitOutputWithContext(context.Background())
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesUserConcurrentSessionsLimitOutput)
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return i.ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Background())
}

func (i PoliciesUserConcurrentSessionsLimitArgs) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesUserConcurrentSessionsLimitOutput).ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx)
}

// PoliciesUserConcurrentSessionsLimitPtrInput is an input type that accepts PoliciesUserConcurrentSessionsLimitArgs, PoliciesUserConcurrentSessionsLimitPtr and PoliciesUserConcurrentSessionsLimitPtrOutput values.
// You can construct a concrete instance of `PoliciesUserConcurrentSessionsLimitPtrInput` via:
//
//          PoliciesUserConcurrentSessionsLimitArgs{...}
//
//  or:
//
//          nil
type PoliciesUserConcurrentSessionsLimitPtrInput interface {
	pulumi.Input

	ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput
	ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput
}

type policiesUserConcurrentSessionsLimitPtrType PoliciesUserConcurrentSessionsLimitArgs

func PoliciesUserConcurrentSessionsLimitPtr(v *PoliciesUserConcurrentSessionsLimitArgs) PoliciesUserConcurrentSessionsLimitPtrInput {
	return (*policiesUserConcurrentSessionsLimitPtrType)(v)
}

func (*policiesUserConcurrentSessionsLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (i *policiesUserConcurrentSessionsLimitPtrType) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return i.ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Background())
}

func (i *policiesUserConcurrentSessionsLimitPtrType) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesUserConcurrentSessionsLimitPtrOutput)
}

type PoliciesUserConcurrentSessionsLimitOutput struct{ *pulumi.OutputState }

func (PoliciesUserConcurrentSessionsLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitOutput() PoliciesUserConcurrentSessionsLimitOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o.ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(context.Background())
}

func (o PoliciesUserConcurrentSessionsLimitOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoliciesUserConcurrentSessionsLimit) *PoliciesUserConcurrentSessionsLimit {
		return &v
	}).(PoliciesUserConcurrentSessionsLimitPtrOutput)
}

// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
func (o PoliciesUserConcurrentSessionsLimitOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PoliciesUserConcurrentSessionsLimit) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Maximum number of concurrent sessions a user may have. Defaults to `100`.
func (o PoliciesUserConcurrentSessionsLimitOutput) MaxConcurrentSessions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoliciesUserConcurrentSessionsLimit) *int { return v.MaxConcurrentSessions }).(pulumi.IntPtrOutput)
}

type PoliciesUserConcurrentSessionsLimitPtrOutput struct{ *pulumi.OutputState }

func (PoliciesUserConcurrentSessionsLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesUserConcurrentSessionsLimit)(nil)).Elem()
}

func (o PoliciesUserConcurrentSessionsLimitPtrOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutput() PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitPtrOutput) ToPoliciesUserConcurrentSessionsLimitPtrOutputWithContext(ctx context.Context) PoliciesUserConcurrentSessionsLimitPtrOutput {
	return o
}

func (o PoliciesUserConcurrentSessionsLimitPtrOutput) Elem() PoliciesUserConcurrentSessionsLimitOutput {
	return o.ApplyT(func(v *PoliciesUserConcurrentSessionsLimit) PoliciesUserConcurrentSessionsLimit {
		if v != nil {
			return *v
		}
		var ret PoliciesUserConcurrentSessionsLimit
		return ret
	}).(PoliciesUserConcurrentSessionsLimitOutput)
}

// Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
func (o PoliciesUserConcurrentSessionsLimitPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoliciesUserConcurrentSessionsLimit) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of concurrent sessions a user may have. Defaults to `100`.
func (o PoliciesUserConcurrentSessionsLimitPtrOutput) MaxConcurrentSessions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoliciesUserConcurrentSessionsLimit) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentSessions
	}).(pulumi.IntPtrOutput)
}

type PollingSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey *string `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey *string `pulumi:"secretKey"`
	// This value has to be set to `TagFilters`
	Type string `pulumi:"type"`
}

// PollingSourceAuthenticationInput is an input type that accepts PollingSourceAuthenticationArgs and PollingSourceAuthenticationOutput values.
// You can construct a concrete instance of `PollingSourceAuthenticationInput` via:
//
//          PollingSourceAuthenticationArgs{...}
type PollingSourceAuthenticationInput interface {
	pulumi.Input

	ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput
	ToPollingSourceAuthenticationOutputWithContext(context.Context) PollingSourceAuthenticationOutput
}

type PollingSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PollingSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceAuthentication)(nil)).Elem()
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput {
	return i.ToPollingSourceAuthenticationOutputWithContext(context.Background())
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationOutputWithContext(ctx context.Context) PollingSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationOutput)
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return i.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i PollingSourceAuthenticationArgs) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationOutput).ToPollingSourceAuthenticationPtrOutputWithContext(ctx)
}

// PollingSourceAuthenticationPtrInput is an input type that accepts PollingSourceAuthenticationArgs, PollingSourceAuthenticationPtr and PollingSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `PollingSourceAuthenticationPtrInput` via:
//
//          PollingSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type PollingSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput
	ToPollingSourceAuthenticationPtrOutputWithContext(context.Context) PollingSourceAuthenticationPtrOutput
}

type pollingSourceAuthenticationPtrType PollingSourceAuthenticationArgs

func PollingSourceAuthenticationPtr(v *PollingSourceAuthenticationArgs) PollingSourceAuthenticationPtrInput {
	return (*pollingSourceAuthenticationPtrType)(v)
}

func (*pollingSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourceAuthentication)(nil)).Elem()
}

func (i *pollingSourceAuthenticationPtrType) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return i.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *pollingSourceAuthenticationPtrType) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceAuthenticationPtrOutput)
}

type PollingSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (PollingSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceAuthentication)(nil)).Elem()
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationOutput() PollingSourceAuthenticationOutput {
	return o
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationOutputWithContext(ctx context.Context) PollingSourceAuthenticationOutput {
	return o
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return o.ToPollingSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o PollingSourceAuthenticationOutput) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PollingSourceAuthentication) *PollingSourceAuthentication {
		return &v
	}).(PollingSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o PollingSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// This value has to be set to `TagFilters`
func (o PollingSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type PollingSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (PollingSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourceAuthentication)(nil)).Elem()
}

func (o PollingSourceAuthenticationPtrOutput) ToPollingSourceAuthenticationPtrOutput() PollingSourceAuthenticationPtrOutput {
	return o
}

func (o PollingSourceAuthenticationPtrOutput) ToPollingSourceAuthenticationPtrOutputWithContext(ctx context.Context) PollingSourceAuthenticationPtrOutput {
	return o
}

func (o PollingSourceAuthenticationPtrOutput) Elem() PollingSourceAuthenticationOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) PollingSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret PollingSourceAuthentication
		return ret
	}).(PollingSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`
func (o PollingSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`
func (o PollingSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// This value has to be set to `TagFilters`
func (o PollingSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PollingSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// PollingSourceDefaultDateFormatInput is an input type that accepts PollingSourceDefaultDateFormatArgs and PollingSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `PollingSourceDefaultDateFormatInput` via:
//
//          PollingSourceDefaultDateFormatArgs{...}
type PollingSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput
	ToPollingSourceDefaultDateFormatOutputWithContext(context.Context) PollingSourceDefaultDateFormatOutput
}

type PollingSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (PollingSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (i PollingSourceDefaultDateFormatArgs) ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput {
	return i.ToPollingSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i PollingSourceDefaultDateFormatArgs) ToPollingSourceDefaultDateFormatOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceDefaultDateFormatOutput)
}

// PollingSourceDefaultDateFormatArrayInput is an input type that accepts PollingSourceDefaultDateFormatArray and PollingSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `PollingSourceDefaultDateFormatArrayInput` via:
//
//          PollingSourceDefaultDateFormatArray{ PollingSourceDefaultDateFormatArgs{...} }
type PollingSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput
	ToPollingSourceDefaultDateFormatArrayOutputWithContext(context.Context) PollingSourceDefaultDateFormatArrayOutput
}

type PollingSourceDefaultDateFormatArray []PollingSourceDefaultDateFormatInput

func (PollingSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (i PollingSourceDefaultDateFormatArray) ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput {
	return i.ToPollingSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i PollingSourceDefaultDateFormatArray) ToPollingSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceDefaultDateFormatArrayOutput)
}

type PollingSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (PollingSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (o PollingSourceDefaultDateFormatOutput) ToPollingSourceDefaultDateFormatOutput() PollingSourceDefaultDateFormatOutput {
	return o
}

func (o PollingSourceDefaultDateFormatOutput) ToPollingSourceDefaultDateFormatOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatOutput {
	return o
}

func (o PollingSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o PollingSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type PollingSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (PollingSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceDefaultDateFormat)(nil)).Elem()
}

func (o PollingSourceDefaultDateFormatArrayOutput) ToPollingSourceDefaultDateFormatArrayOutput() PollingSourceDefaultDateFormatArrayOutput {
	return o
}

func (o PollingSourceDefaultDateFormatArrayOutput) ToPollingSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) PollingSourceDefaultDateFormatArrayOutput {
	return o
}

func (o PollingSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) PollingSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourceDefaultDateFormat {
		return vs[0].([]PollingSourceDefaultDateFormat)[vs[1].(int)]
	}).(PollingSourceDefaultDateFormatOutput)
}

type PollingSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// PollingSourceFilterInput is an input type that accepts PollingSourceFilterArgs and PollingSourceFilterOutput values.
// You can construct a concrete instance of `PollingSourceFilterInput` via:
//
//          PollingSourceFilterArgs{...}
type PollingSourceFilterInput interface {
	pulumi.Input

	ToPollingSourceFilterOutput() PollingSourceFilterOutput
	ToPollingSourceFilterOutputWithContext(context.Context) PollingSourceFilterOutput
}

type PollingSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (PollingSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceFilter)(nil)).Elem()
}

func (i PollingSourceFilterArgs) ToPollingSourceFilterOutput() PollingSourceFilterOutput {
	return i.ToPollingSourceFilterOutputWithContext(context.Background())
}

func (i PollingSourceFilterArgs) ToPollingSourceFilterOutputWithContext(ctx context.Context) PollingSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceFilterOutput)
}

// PollingSourceFilterArrayInput is an input type that accepts PollingSourceFilterArray and PollingSourceFilterArrayOutput values.
// You can construct a concrete instance of `PollingSourceFilterArrayInput` via:
//
//          PollingSourceFilterArray{ PollingSourceFilterArgs{...} }
type PollingSourceFilterArrayInput interface {
	pulumi.Input

	ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput
	ToPollingSourceFilterArrayOutputWithContext(context.Context) PollingSourceFilterArrayOutput
}

type PollingSourceFilterArray []PollingSourceFilterInput

func (PollingSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceFilter)(nil)).Elem()
}

func (i PollingSourceFilterArray) ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput {
	return i.ToPollingSourceFilterArrayOutputWithContext(context.Background())
}

func (i PollingSourceFilterArray) ToPollingSourceFilterArrayOutputWithContext(ctx context.Context) PollingSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourceFilterArrayOutput)
}

type PollingSourceFilterOutput struct{ *pulumi.OutputState }

func (PollingSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourceFilter)(nil)).Elem()
}

func (o PollingSourceFilterOutput) ToPollingSourceFilterOutput() PollingSourceFilterOutput {
	return o
}

func (o PollingSourceFilterOutput) ToPollingSourceFilterOutputWithContext(ctx context.Context) PollingSourceFilterOutput {
	return o
}

func (o PollingSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o PollingSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o PollingSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o PollingSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type PollingSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (PollingSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourceFilter)(nil)).Elem()
}

func (o PollingSourceFilterArrayOutput) ToPollingSourceFilterArrayOutput() PollingSourceFilterArrayOutput {
	return o
}

func (o PollingSourceFilterArrayOutput) ToPollingSourceFilterArrayOutputWithContext(ctx context.Context) PollingSourceFilterArrayOutput {
	return o
}

func (o PollingSourceFilterArrayOutput) Index(i pulumi.IntInput) PollingSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourceFilter {
		return vs[0].([]PollingSourceFilter)[vs[1].(int)]
	}).(PollingSourceFilterOutput)
}

type PollingSourcePath struct {
	// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
	BucketName *string `pulumi:"bucketName"`
	// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
	LimitToNamespaces []string `pulumi:"limitToNamespaces"`
	// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
	LimitToRegions []string `pulumi:"limitToRegions"`
	// The path to the data. This is needed if using type `S3BucketPathExpression`.
	PathExpression *string `pulumi:"pathExpression"`
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters []PollingSourcePathTagFilter `pulumi:"tagFilters"`
	// This value has to be set to `TagFilters`
	Type string `pulumi:"type"`
}

// PollingSourcePathInput is an input type that accepts PollingSourcePathArgs and PollingSourcePathOutput values.
// You can construct a concrete instance of `PollingSourcePathInput` via:
//
//          PollingSourcePathArgs{...}
type PollingSourcePathInput interface {
	pulumi.Input

	ToPollingSourcePathOutput() PollingSourcePathOutput
	ToPollingSourcePathOutputWithContext(context.Context) PollingSourcePathOutput
}

type PollingSourcePathArgs struct {
	// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
	LimitToNamespaces pulumi.StringArrayInput `pulumi:"limitToNamespaces"`
	// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
	LimitToRegions pulumi.StringArrayInput `pulumi:"limitToRegions"`
	// The path to the data. This is needed if using type `S3BucketPathExpression`.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
	TagFilters PollingSourcePathTagFilterArrayInput `pulumi:"tagFilters"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PollingSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePath)(nil)).Elem()
}

func (i PollingSourcePathArgs) ToPollingSourcePathOutput() PollingSourcePathOutput {
	return i.ToPollingSourcePathOutputWithContext(context.Background())
}

func (i PollingSourcePathArgs) ToPollingSourcePathOutputWithContext(ctx context.Context) PollingSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathOutput)
}

func (i PollingSourcePathArgs) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return i.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (i PollingSourcePathArgs) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathOutput).ToPollingSourcePathPtrOutputWithContext(ctx)
}

// PollingSourcePathPtrInput is an input type that accepts PollingSourcePathArgs, PollingSourcePathPtr and PollingSourcePathPtrOutput values.
// You can construct a concrete instance of `PollingSourcePathPtrInput` via:
//
//          PollingSourcePathArgs{...}
//
//  or:
//
//          nil
type PollingSourcePathPtrInput interface {
	pulumi.Input

	ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput
	ToPollingSourcePathPtrOutputWithContext(context.Context) PollingSourcePathPtrOutput
}

type pollingSourcePathPtrType PollingSourcePathArgs

func PollingSourcePathPtr(v *PollingSourcePathArgs) PollingSourcePathPtrInput {
	return (*pollingSourcePathPtrType)(v)
}

func (*pollingSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourcePath)(nil)).Elem()
}

func (i *pollingSourcePathPtrType) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return i.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (i *pollingSourcePathPtrType) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathPtrOutput)
}

type PollingSourcePathOutput struct{ *pulumi.OutputState }

func (PollingSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePath)(nil)).Elem()
}

func (o PollingSourcePathOutput) ToPollingSourcePathOutput() PollingSourcePathOutput {
	return o
}

func (o PollingSourcePathOutput) ToPollingSourcePathOutputWithContext(ctx context.Context) PollingSourcePathOutput {
	return o
}

func (o PollingSourcePathOutput) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return o.ToPollingSourcePathPtrOutputWithContext(context.Background())
}

func (o PollingSourcePathOutput) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PollingSourcePath) *PollingSourcePath {
		return &v
	}).(PollingSourcePathPtrOutput)
}

// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
func (o PollingSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
func (o PollingSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

// The path to the data. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o PollingSourcePathOutput) TagFilters() PollingSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v PollingSourcePath) []PollingSourcePathTagFilter { return v.TagFilters }).(PollingSourcePathTagFilterArrayOutput)
}

// This value has to be set to `TagFilters`
func (o PollingSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PollingSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

type PollingSourcePathPtrOutput struct{ *pulumi.OutputState }

func (PollingSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PollingSourcePath)(nil)).Elem()
}

func (o PollingSourcePathPtrOutput) ToPollingSourcePathPtrOutput() PollingSourcePathPtrOutput {
	return o
}

func (o PollingSourcePathPtrOutput) ToPollingSourcePathPtrOutputWithContext(ctx context.Context) PollingSourcePathPtrOutput {
	return o
}

func (o PollingSourcePathPtrOutput) Elem() PollingSourcePathOutput {
	return o.ApplyT(func(v *PollingSourcePath) PollingSourcePath {
		if v != nil {
			return *v
		}
		var ret PollingSourcePath
		return ret
	}).(PollingSourcePathOutput)
}

// The name of the bucket. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
func (o PollingSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

// List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
func (o PollingSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

// The path to the data. This is needed if using type `S3BucketPathExpression`.
func (o PollingSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
func (o PollingSourcePathPtrOutput) TagFilters() PollingSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *PollingSourcePath) []PollingSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(PollingSourcePathTagFilterArrayOutput)
}

// This value has to be set to `TagFilters`
func (o PollingSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PollingSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PollingSourcePathTagFilter struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace *string `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags []string `pulumi:"tags"`
	// This value has to be set to `TagFilters`
	Type *string `pulumi:"type"`
}

// PollingSourcePathTagFilterInput is an input type that accepts PollingSourcePathTagFilterArgs and PollingSourcePathTagFilterOutput values.
// You can construct a concrete instance of `PollingSourcePathTagFilterInput` via:
//
//          PollingSourcePathTagFilterArgs{...}
type PollingSourcePathTagFilterInput interface {
	pulumi.Input

	ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput
	ToPollingSourcePathTagFilterOutputWithContext(context.Context) PollingSourcePathTagFilterOutput
}

type PollingSourcePathTagFilterArgs struct {
	// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// This value has to be set to `TagFilters`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PollingSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePathTagFilter)(nil)).Elem()
}

func (i PollingSourcePathTagFilterArgs) ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput {
	return i.ToPollingSourcePathTagFilterOutputWithContext(context.Background())
}

func (i PollingSourcePathTagFilterArgs) ToPollingSourcePathTagFilterOutputWithContext(ctx context.Context) PollingSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathTagFilterOutput)
}

// PollingSourcePathTagFilterArrayInput is an input type that accepts PollingSourcePathTagFilterArray and PollingSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `PollingSourcePathTagFilterArrayInput` via:
//
//          PollingSourcePathTagFilterArray{ PollingSourcePathTagFilterArgs{...} }
type PollingSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput
	ToPollingSourcePathTagFilterArrayOutputWithContext(context.Context) PollingSourcePathTagFilterArrayOutput
}

type PollingSourcePathTagFilterArray []PollingSourcePathTagFilterInput

func (PollingSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourcePathTagFilter)(nil)).Elem()
}

func (i PollingSourcePathTagFilterArray) ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput {
	return i.ToPollingSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i PollingSourcePathTagFilterArray) ToPollingSourcePathTagFilterArrayOutputWithContext(ctx context.Context) PollingSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PollingSourcePathTagFilterArrayOutput)
}

type PollingSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (PollingSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PollingSourcePathTagFilter)(nil)).Elem()
}

func (o PollingSourcePathTagFilterOutput) ToPollingSourcePathTagFilterOutput() PollingSourcePathTagFilterOutput {
	return o
}

func (o PollingSourcePathTagFilterOutput) ToPollingSourcePathTagFilterOutputWithContext(ctx context.Context) PollingSourcePathTagFilterOutput {
	return o
}

// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
func (o PollingSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// List of key-value pairs of tag filters. Eg: `["k3=v3"]`
func (o PollingSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// This value has to be set to `TagFilters`
func (o PollingSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PollingSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PollingSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (PollingSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PollingSourcePathTagFilter)(nil)).Elem()
}

func (o PollingSourcePathTagFilterArrayOutput) ToPollingSourcePathTagFilterArrayOutput() PollingSourcePathTagFilterArrayOutput {
	return o
}

func (o PollingSourcePathTagFilterArrayOutput) ToPollingSourcePathTagFilterArrayOutputWithContext(ctx context.Context) PollingSourcePathTagFilterArrayOutput {
	return o
}

func (o PollingSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) PollingSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PollingSourcePathTagFilter {
		return vs[0].([]PollingSourcePathTagFilter)[vs[1].(int)]
	}).(PollingSourcePathTagFilterOutput)
}

type S3AuditSourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type string `pulumi:"type"`
}

// S3AuditSourceAuthenticationInput is an input type that accepts S3AuditSourceAuthenticationArgs and S3AuditSourceAuthenticationOutput values.
// You can construct a concrete instance of `S3AuditSourceAuthenticationInput` via:
//
//          S3AuditSourceAuthenticationArgs{...}
type S3AuditSourceAuthenticationInput interface {
	pulumi.Input

	ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput
	ToS3AuditSourceAuthenticationOutputWithContext(context.Context) S3AuditSourceAuthenticationOutput
}

type S3AuditSourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (S3AuditSourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceAuthentication)(nil)).Elem()
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput {
	return i.ToS3AuditSourceAuthenticationOutputWithContext(context.Background())
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationOutput)
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return i.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3AuditSourceAuthenticationArgs) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationOutput).ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx)
}

// S3AuditSourceAuthenticationPtrInput is an input type that accepts S3AuditSourceAuthenticationArgs, S3AuditSourceAuthenticationPtr and S3AuditSourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3AuditSourceAuthenticationPtrInput` via:
//
//          S3AuditSourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type S3AuditSourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput
	ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Context) S3AuditSourceAuthenticationPtrOutput
}

type s3auditSourceAuthenticationPtrType S3AuditSourceAuthenticationArgs

func S3AuditSourceAuthenticationPtr(v *S3AuditSourceAuthenticationArgs) S3AuditSourceAuthenticationPtrInput {
	return (*s3auditSourceAuthenticationPtrType)(v)
}

func (*s3auditSourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourceAuthentication)(nil)).Elem()
}

func (i *s3auditSourceAuthenticationPtrType) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return i.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3auditSourceAuthenticationPtrType) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceAuthenticationPtrOutput)
}

type S3AuditSourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3AuditSourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceAuthentication)(nil)).Elem()
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationOutput() S3AuditSourceAuthenticationOutput {
	return o
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationOutput {
	return o
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return o.ToS3AuditSourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3AuditSourceAuthenticationOutput) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3AuditSourceAuthentication) *S3AuditSourceAuthentication {
		return &v
	}).(S3AuditSourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3AuditSourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
func (o S3AuditSourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3AuditSourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3AuditSourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourceAuthentication)(nil)).Elem()
}

func (o S3AuditSourceAuthenticationPtrOutput) ToS3AuditSourceAuthenticationPtrOutput() S3AuditSourceAuthenticationPtrOutput {
	return o
}

func (o S3AuditSourceAuthenticationPtrOutput) ToS3AuditSourceAuthenticationPtrOutputWithContext(ctx context.Context) S3AuditSourceAuthenticationPtrOutput {
	return o
}

func (o S3AuditSourceAuthenticationPtrOutput) Elem() S3AuditSourceAuthenticationOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) S3AuditSourceAuthentication {
		if v != nil {
			return *v
		}
		var ret S3AuditSourceAuthentication
		return ret
	}).(S3AuditSourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3AuditSourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
func (o S3AuditSourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3AuditSourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3AuditSourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3AuditSourceDefaultDateFormatInput is an input type that accepts S3AuditSourceDefaultDateFormatArgs and S3AuditSourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3AuditSourceDefaultDateFormatInput` via:
//
//          S3AuditSourceDefaultDateFormatArgs{...}
type S3AuditSourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput
	ToS3AuditSourceDefaultDateFormatOutputWithContext(context.Context) S3AuditSourceDefaultDateFormatOutput
}

type S3AuditSourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3AuditSourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3AuditSourceDefaultDateFormatArgs) ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput {
	return i.ToS3AuditSourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3AuditSourceDefaultDateFormatArgs) ToS3AuditSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceDefaultDateFormatOutput)
}

// S3AuditSourceDefaultDateFormatArrayInput is an input type that accepts S3AuditSourceDefaultDateFormatArray and S3AuditSourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3AuditSourceDefaultDateFormatArrayInput` via:
//
//          S3AuditSourceDefaultDateFormatArray{ S3AuditSourceDefaultDateFormatArgs{...} }
type S3AuditSourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput
	ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(context.Context) S3AuditSourceDefaultDateFormatArrayOutput
}

type S3AuditSourceDefaultDateFormatArray []S3AuditSourceDefaultDateFormatInput

func (S3AuditSourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (i S3AuditSourceDefaultDateFormatArray) ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput {
	return i.ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3AuditSourceDefaultDateFormatArray) ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceDefaultDateFormatArrayOutput)
}

type S3AuditSourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3AuditSourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3AuditSourceDefaultDateFormatOutput) ToS3AuditSourceDefaultDateFormatOutput() S3AuditSourceDefaultDateFormatOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatOutput) ToS3AuditSourceDefaultDateFormatOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3AuditSourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3AuditSourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceDefaultDateFormat)(nil)).Elem()
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) ToS3AuditSourceDefaultDateFormatArrayOutput() S3AuditSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) ToS3AuditSourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3AuditSourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3AuditSourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3AuditSourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourceDefaultDateFormat {
		return vs[0].([]S3AuditSourceDefaultDateFormat)[vs[1].(int)]
	}).(S3AuditSourceDefaultDateFormatOutput)
}

type S3AuditSourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3AuditSourceFilterInput is an input type that accepts S3AuditSourceFilterArgs and S3AuditSourceFilterOutput values.
// You can construct a concrete instance of `S3AuditSourceFilterInput` via:
//
//          S3AuditSourceFilterArgs{...}
type S3AuditSourceFilterInput interface {
	pulumi.Input

	ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput
	ToS3AuditSourceFilterOutputWithContext(context.Context) S3AuditSourceFilterOutput
}

type S3AuditSourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3AuditSourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceFilter)(nil)).Elem()
}

func (i S3AuditSourceFilterArgs) ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput {
	return i.ToS3AuditSourceFilterOutputWithContext(context.Background())
}

func (i S3AuditSourceFilterArgs) ToS3AuditSourceFilterOutputWithContext(ctx context.Context) S3AuditSourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceFilterOutput)
}

// S3AuditSourceFilterArrayInput is an input type that accepts S3AuditSourceFilterArray and S3AuditSourceFilterArrayOutput values.
// You can construct a concrete instance of `S3AuditSourceFilterArrayInput` via:
//
//          S3AuditSourceFilterArray{ S3AuditSourceFilterArgs{...} }
type S3AuditSourceFilterArrayInput interface {
	pulumi.Input

	ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput
	ToS3AuditSourceFilterArrayOutputWithContext(context.Context) S3AuditSourceFilterArrayOutput
}

type S3AuditSourceFilterArray []S3AuditSourceFilterInput

func (S3AuditSourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceFilter)(nil)).Elem()
}

func (i S3AuditSourceFilterArray) ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput {
	return i.ToS3AuditSourceFilterArrayOutputWithContext(context.Background())
}

func (i S3AuditSourceFilterArray) ToS3AuditSourceFilterArrayOutputWithContext(ctx context.Context) S3AuditSourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourceFilterArrayOutput)
}

type S3AuditSourceFilterOutput struct{ *pulumi.OutputState }

func (S3AuditSourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourceFilter)(nil)).Elem()
}

func (o S3AuditSourceFilterOutput) ToS3AuditSourceFilterOutput() S3AuditSourceFilterOutput {
	return o
}

func (o S3AuditSourceFilterOutput) ToS3AuditSourceFilterOutputWithContext(ctx context.Context) S3AuditSourceFilterOutput {
	return o
}

func (o S3AuditSourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3AuditSourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3AuditSourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3AuditSourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourceFilter)(nil)).Elem()
}

func (o S3AuditSourceFilterArrayOutput) ToS3AuditSourceFilterArrayOutput() S3AuditSourceFilterArrayOutput {
	return o
}

func (o S3AuditSourceFilterArrayOutput) ToS3AuditSourceFilterArrayOutputWithContext(ctx context.Context) S3AuditSourceFilterArrayOutput {
	return o
}

func (o S3AuditSourceFilterArrayOutput) Index(i pulumi.IntInput) S3AuditSourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourceFilter {
		return vs[0].([]S3AuditSourceFilter)[vs[1].(int)]
	}).(S3AuditSourceFilterOutput)
}

type S3AuditSourcePath struct {
	// The name of the bucket.
	BucketName        *string                          `pulumi:"bucketName"`
	CustomServices    []S3AuditSourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                         `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                         `pulumi:"limitToRegions"`
	LimitToServices   []string                         `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []S3AuditSourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []S3AuditSourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type            string `pulumi:"type"`
	UseVersionedApi *bool  `pulumi:"useVersionedApi"`
}

// S3AuditSourcePathInput is an input type that accepts S3AuditSourcePathArgs and S3AuditSourcePathOutput values.
// You can construct a concrete instance of `S3AuditSourcePathInput` via:
//
//          S3AuditSourcePathArgs{...}
type S3AuditSourcePathInput interface {
	pulumi.Input

	ToS3AuditSourcePathOutput() S3AuditSourcePathOutput
	ToS3AuditSourcePathOutputWithContext(context.Context) S3AuditSourcePathOutput
}

type S3AuditSourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput                    `pulumi:"bucketName"`
	CustomServices    S3AuditSourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput                  `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput                  `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput                  `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 S3AuditSourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type            pulumi.StringInput  `pulumi:"type"`
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (S3AuditSourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePath)(nil)).Elem()
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathOutput() S3AuditSourcePathOutput {
	return i.ToS3AuditSourcePathOutputWithContext(context.Background())
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathOutputWithContext(ctx context.Context) S3AuditSourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathOutput)
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return i.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (i S3AuditSourcePathArgs) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathOutput).ToS3AuditSourcePathPtrOutputWithContext(ctx)
}

// S3AuditSourcePathPtrInput is an input type that accepts S3AuditSourcePathArgs, S3AuditSourcePathPtr and S3AuditSourcePathPtrOutput values.
// You can construct a concrete instance of `S3AuditSourcePathPtrInput` via:
//
//          S3AuditSourcePathArgs{...}
//
//  or:
//
//          nil
type S3AuditSourcePathPtrInput interface {
	pulumi.Input

	ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput
	ToS3AuditSourcePathPtrOutputWithContext(context.Context) S3AuditSourcePathPtrOutput
}

type s3auditSourcePathPtrType S3AuditSourcePathArgs

func S3AuditSourcePathPtr(v *S3AuditSourcePathArgs) S3AuditSourcePathPtrInput {
	return (*s3auditSourcePathPtrType)(v)
}

func (*s3auditSourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourcePath)(nil)).Elem()
}

func (i *s3auditSourcePathPtrType) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return i.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (i *s3auditSourcePathPtrType) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathPtrOutput)
}

type S3AuditSourcePathOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePath)(nil)).Elem()
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathOutput() S3AuditSourcePathOutput {
	return o
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathOutputWithContext(ctx context.Context) S3AuditSourcePathOutput {
	return o
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return o.ToS3AuditSourcePathPtrOutputWithContext(context.Background())
}

func (o S3AuditSourcePathOutput) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3AuditSourcePath) *S3AuditSourcePath {
		return &v
	}).(S3AuditSourcePathPtrOutput)
}

// The name of the bucket.
func (o S3AuditSourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathOutput) CustomServices() S3AuditSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathCustomService { return v.CustomServices }).(S3AuditSourcePathCustomServiceArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3AuditSourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3AuditSourcePathOutput) SnsTopicOrSubscriptionArns() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathSnsTopicOrSubscriptionArn {
		return v.SnsTopicOrSubscriptionArns
	}).(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3AuditSourcePathOutput) TagFilters() S3AuditSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePath) []S3AuditSourcePathTagFilter { return v.TagFilters }).(S3AuditSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3AuditSourcePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o S3AuditSourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type S3AuditSourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AuditSourcePath)(nil)).Elem()
}

func (o S3AuditSourcePathPtrOutput) ToS3AuditSourcePathPtrOutput() S3AuditSourcePathPtrOutput {
	return o
}

func (o S3AuditSourcePathPtrOutput) ToS3AuditSourcePathPtrOutputWithContext(ctx context.Context) S3AuditSourcePathPtrOutput {
	return o
}

func (o S3AuditSourcePathPtrOutput) Elem() S3AuditSourcePathOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) S3AuditSourcePath {
		if v != nil {
			return *v
		}
		var ret S3AuditSourcePath
		return ret
	}).(S3AuditSourcePathOutput)
}

// The name of the bucket.
func (o S3AuditSourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathPtrOutput) CustomServices() S3AuditSourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(S3AuditSourcePathCustomServiceArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3AuditSourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3AuditSourcePathPtrOutput) SnsTopicOrSubscriptionArns() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3AuditSourcePathPtrOutput) TagFilters() S3AuditSourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) []S3AuditSourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3AuditSourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3AuditSourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type S3AuditSourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// S3AuditSourcePathCustomServiceInput is an input type that accepts S3AuditSourcePathCustomServiceArgs and S3AuditSourcePathCustomServiceOutput values.
// You can construct a concrete instance of `S3AuditSourcePathCustomServiceInput` via:
//
//          S3AuditSourcePathCustomServiceArgs{...}
type S3AuditSourcePathCustomServiceInput interface {
	pulumi.Input

	ToS3AuditSourcePathCustomServiceOutput() S3AuditSourcePathCustomServiceOutput
	ToS3AuditSourcePathCustomServiceOutputWithContext(context.Context) S3AuditSourcePathCustomServiceOutput
}

type S3AuditSourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (S3AuditSourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathCustomService)(nil)).Elem()
}

func (i S3AuditSourcePathCustomServiceArgs) ToS3AuditSourcePathCustomServiceOutput() S3AuditSourcePathCustomServiceOutput {
	return i.ToS3AuditSourcePathCustomServiceOutputWithContext(context.Background())
}

func (i S3AuditSourcePathCustomServiceArgs) ToS3AuditSourcePathCustomServiceOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathCustomServiceOutput)
}

// S3AuditSourcePathCustomServiceArrayInput is an input type that accepts S3AuditSourcePathCustomServiceArray and S3AuditSourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathCustomServiceArrayInput` via:
//
//          S3AuditSourcePathCustomServiceArray{ S3AuditSourcePathCustomServiceArgs{...} }
type S3AuditSourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathCustomServiceArrayOutput() S3AuditSourcePathCustomServiceArrayOutput
	ToS3AuditSourcePathCustomServiceArrayOutputWithContext(context.Context) S3AuditSourcePathCustomServiceArrayOutput
}

type S3AuditSourcePathCustomServiceArray []S3AuditSourcePathCustomServiceInput

func (S3AuditSourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathCustomService)(nil)).Elem()
}

func (i S3AuditSourcePathCustomServiceArray) ToS3AuditSourcePathCustomServiceArrayOutput() S3AuditSourcePathCustomServiceArrayOutput {
	return i.ToS3AuditSourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathCustomServiceArray) ToS3AuditSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathCustomServiceArrayOutput)
}

type S3AuditSourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathCustomService)(nil)).Elem()
}

func (o S3AuditSourcePathCustomServiceOutput) ToS3AuditSourcePathCustomServiceOutput() S3AuditSourcePathCustomServiceOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceOutput) ToS3AuditSourcePathCustomServiceOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o S3AuditSourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type S3AuditSourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathCustomService)(nil)).Elem()
}

func (o S3AuditSourcePathCustomServiceArrayOutput) ToS3AuditSourcePathCustomServiceArrayOutput() S3AuditSourcePathCustomServiceArrayOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceArrayOutput) ToS3AuditSourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3AuditSourcePathCustomServiceArrayOutput {
	return o
}

func (o S3AuditSourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathCustomService {
		return vs[0].([]S3AuditSourcePathCustomService)[vs[1].(int)]
	}).(S3AuditSourcePathCustomServiceOutput)
}

type S3AuditSourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// S3AuditSourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts S3AuditSourcePathSnsTopicOrSubscriptionArnArgs and S3AuditSourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `S3AuditSourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          S3AuditSourcePathSnsTopicOrSubscriptionArnArgs{...}
type S3AuditSourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnOutput
	ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (S3AuditSourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArgs) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArgs) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathSnsTopicOrSubscriptionArnOutput)
}

// S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts S3AuditSourcePathSnsTopicOrSubscriptionArnArray and S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          S3AuditSourcePathSnsTopicOrSubscriptionArnArray{ S3AuditSourcePathSnsTopicOrSubscriptionArnArgs{...} }
type S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnArray []S3AuditSourcePathSnsTopicOrSubscriptionArnInput

func (S3AuditSourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArray) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathSnsTopicOrSubscriptionArnArray) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput() S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]S3AuditSourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(S3AuditSourcePathSnsTopicOrSubscriptionArnOutput)
}

type S3AuditSourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type *string `pulumi:"type"`
}

// S3AuditSourcePathTagFilterInput is an input type that accepts S3AuditSourcePathTagFilterArgs and S3AuditSourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3AuditSourcePathTagFilterInput` via:
//
//          S3AuditSourcePathTagFilterArgs{...}
type S3AuditSourcePathTagFilterInput interface {
	pulumi.Input

	ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput
	ToS3AuditSourcePathTagFilterOutputWithContext(context.Context) S3AuditSourcePathTagFilterOutput
}

type S3AuditSourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (S3AuditSourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (i S3AuditSourcePathTagFilterArgs) ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput {
	return i.ToS3AuditSourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3AuditSourcePathTagFilterArgs) ToS3AuditSourcePathTagFilterOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathTagFilterOutput)
}

// S3AuditSourcePathTagFilterArrayInput is an input type that accepts S3AuditSourcePathTagFilterArray and S3AuditSourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3AuditSourcePathTagFilterArrayInput` via:
//
//          S3AuditSourcePathTagFilterArray{ S3AuditSourcePathTagFilterArgs{...} }
type S3AuditSourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput
	ToS3AuditSourcePathTagFilterArrayOutputWithContext(context.Context) S3AuditSourcePathTagFilterArrayOutput
}

type S3AuditSourcePathTagFilterArray []S3AuditSourcePathTagFilterInput

func (S3AuditSourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (i S3AuditSourcePathTagFilterArray) ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput {
	return i.ToS3AuditSourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3AuditSourcePathTagFilterArray) ToS3AuditSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AuditSourcePathTagFilterArrayOutput)
}

type S3AuditSourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (o S3AuditSourcePathTagFilterOutput) ToS3AuditSourcePathTagFilterOutput() S3AuditSourcePathTagFilterOutput {
	return o
}

func (o S3AuditSourcePathTagFilterOutput) ToS3AuditSourcePathTagFilterOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterOutput {
	return o
}

func (o S3AuditSourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3AuditSourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
func (o S3AuditSourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3AuditSourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3AuditSourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3AuditSourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3AuditSourcePathTagFilter)(nil)).Elem()
}

func (o S3AuditSourcePathTagFilterArrayOutput) ToS3AuditSourcePathTagFilterArrayOutput() S3AuditSourcePathTagFilterArrayOutput {
	return o
}

func (o S3AuditSourcePathTagFilterArrayOutput) ToS3AuditSourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3AuditSourcePathTagFilterArrayOutput {
	return o
}

func (o S3AuditSourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3AuditSourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3AuditSourcePathTagFilter {
		return vs[0].([]S3AuditSourcePathTagFilter)[vs[1].(int)]
	}).(S3AuditSourcePathTagFilterOutput)
}

type S3SourceAuthentication struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               *string `pulumi:"accessKey"`
	AuthProviderX509CertUrl *string `pulumi:"authProviderX509CertUrl"`
	AuthUri                 *string `pulumi:"authUri"`
	ClientEmail             *string `pulumi:"clientEmail"`
	ClientId                *string `pulumi:"clientId"`
	ClientX509CertUrl       *string `pulumi:"clientX509CertUrl"`
	PrivateKey              *string `pulumi:"privateKey"`
	PrivateKeyId            *string `pulumi:"privateKeyId"`
	ProjectId               *string `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region *string `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn *string `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey *string `pulumi:"secretKey"`
	TokenUri  *string `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type string `pulumi:"type"`
}

// S3SourceAuthenticationInput is an input type that accepts S3SourceAuthenticationArgs and S3SourceAuthenticationOutput values.
// You can construct a concrete instance of `S3SourceAuthenticationInput` via:
//
//          S3SourceAuthenticationArgs{...}
type S3SourceAuthenticationInput interface {
	pulumi.Input

	ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput
	ToS3SourceAuthenticationOutputWithContext(context.Context) S3SourceAuthenticationOutput
}

type S3SourceAuthenticationArgs struct {
	// Your AWS access key if using type `S3BucketAuthentication`.
	AccessKey               pulumi.StringPtrInput `pulumi:"accessKey"`
	AuthProviderX509CertUrl pulumi.StringPtrInput `pulumi:"authProviderX509CertUrl"`
	AuthUri                 pulumi.StringPtrInput `pulumi:"authUri"`
	ClientEmail             pulumi.StringPtrInput `pulumi:"clientEmail"`
	ClientId                pulumi.StringPtrInput `pulumi:"clientId"`
	ClientX509CertUrl       pulumi.StringPtrInput `pulumi:"clientX509CertUrl"`
	PrivateKey              pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId            pulumi.StringPtrInput `pulumi:"privateKeyId"`
	ProjectId               pulumi.StringPtrInput `pulumi:"projectId"`
	// Your AWS Bucket region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Your AWS secret key if using type `S3BucketAuthentication`.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	TokenUri  pulumi.StringPtrInput `pulumi:"tokenUri"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (S3SourceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceAuthentication)(nil)).Elem()
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput {
	return i.ToS3SourceAuthenticationOutputWithContext(context.Background())
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationOutputWithContext(ctx context.Context) S3SourceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationOutput)
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return i.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i S3SourceAuthenticationArgs) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationOutput).ToS3SourceAuthenticationPtrOutputWithContext(ctx)
}

// S3SourceAuthenticationPtrInput is an input type that accepts S3SourceAuthenticationArgs, S3SourceAuthenticationPtr and S3SourceAuthenticationPtrOutput values.
// You can construct a concrete instance of `S3SourceAuthenticationPtrInput` via:
//
//          S3SourceAuthenticationArgs{...}
//
//  or:
//
//          nil
type S3SourceAuthenticationPtrInput interface {
	pulumi.Input

	ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput
	ToS3SourceAuthenticationPtrOutputWithContext(context.Context) S3SourceAuthenticationPtrOutput
}

type s3sourceAuthenticationPtrType S3SourceAuthenticationArgs

func S3SourceAuthenticationPtr(v *S3SourceAuthenticationArgs) S3SourceAuthenticationPtrInput {
	return (*s3sourceAuthenticationPtrType)(v)
}

func (*s3sourceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourceAuthentication)(nil)).Elem()
}

func (i *s3sourceAuthenticationPtrType) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return i.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *s3sourceAuthenticationPtrType) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceAuthenticationPtrOutput)
}

type S3SourceAuthenticationOutput struct{ *pulumi.OutputState }

func (S3SourceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceAuthentication)(nil)).Elem()
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationOutput() S3SourceAuthenticationOutput {
	return o
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationOutputWithContext(ctx context.Context) S3SourceAuthenticationOutput {
	return o
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return o.ToS3SourceAuthenticationPtrOutputWithContext(context.Background())
}

func (o S3SourceAuthenticationOutput) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3SourceAuthentication) *S3SourceAuthentication {
		return &v
	}).(S3SourceAuthenticationPtrOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AuthProviderX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.AuthUri }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ClientX509CertUrl }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3SourceAuthenticationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o S3SourceAuthenticationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceAuthentication) *string { return v.TokenUri }).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourceAuthenticationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceAuthentication) string { return v.Type }).(pulumi.StringOutput)
}

type S3SourceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (S3SourceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourceAuthentication)(nil)).Elem()
}

func (o S3SourceAuthenticationPtrOutput) ToS3SourceAuthenticationPtrOutput() S3SourceAuthenticationPtrOutput {
	return o
}

func (o S3SourceAuthenticationPtrOutput) ToS3SourceAuthenticationPtrOutputWithContext(ctx context.Context) S3SourceAuthenticationPtrOutput {
	return o
}

func (o S3SourceAuthenticationPtrOutput) Elem() S3SourceAuthenticationOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) S3SourceAuthentication {
		if v != nil {
			return *v
		}
		var ret S3SourceAuthentication
		return ret
	}).(S3SourceAuthenticationOutput)
}

// Your AWS access key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) AuthProviderX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthProviderX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) AuthUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.AuthUri
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ClientX509CertUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ClientX509CertUrl
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

// Your AWS Bucket region.
func (o S3SourceAuthenticationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
func (o S3SourceAuthenticationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Your AWS secret key if using type `S3BucketAuthentication`.
func (o S3SourceAuthenticationPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

func (o S3SourceAuthenticationPtrOutput) TokenUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenUri
	}).(pulumi.StringPtrOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourceAuthenticationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type S3SourceDefaultDateFormat struct {
	Format  string  `pulumi:"format"`
	Locator *string `pulumi:"locator"`
}

// S3SourceDefaultDateFormatInput is an input type that accepts S3SourceDefaultDateFormatArgs and S3SourceDefaultDateFormatOutput values.
// You can construct a concrete instance of `S3SourceDefaultDateFormatInput` via:
//
//          S3SourceDefaultDateFormatArgs{...}
type S3SourceDefaultDateFormatInput interface {
	pulumi.Input

	ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput
	ToS3SourceDefaultDateFormatOutputWithContext(context.Context) S3SourceDefaultDateFormatOutput
}

type S3SourceDefaultDateFormatArgs struct {
	Format  pulumi.StringInput    `pulumi:"format"`
	Locator pulumi.StringPtrInput `pulumi:"locator"`
}

func (S3SourceDefaultDateFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceDefaultDateFormat)(nil)).Elem()
}

func (i S3SourceDefaultDateFormatArgs) ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput {
	return i.ToS3SourceDefaultDateFormatOutputWithContext(context.Background())
}

func (i S3SourceDefaultDateFormatArgs) ToS3SourceDefaultDateFormatOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceDefaultDateFormatOutput)
}

// S3SourceDefaultDateFormatArrayInput is an input type that accepts S3SourceDefaultDateFormatArray and S3SourceDefaultDateFormatArrayOutput values.
// You can construct a concrete instance of `S3SourceDefaultDateFormatArrayInput` via:
//
//          S3SourceDefaultDateFormatArray{ S3SourceDefaultDateFormatArgs{...} }
type S3SourceDefaultDateFormatArrayInput interface {
	pulumi.Input

	ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput
	ToS3SourceDefaultDateFormatArrayOutputWithContext(context.Context) S3SourceDefaultDateFormatArrayOutput
}

type S3SourceDefaultDateFormatArray []S3SourceDefaultDateFormatInput

func (S3SourceDefaultDateFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceDefaultDateFormat)(nil)).Elem()
}

func (i S3SourceDefaultDateFormatArray) ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput {
	return i.ToS3SourceDefaultDateFormatArrayOutputWithContext(context.Background())
}

func (i S3SourceDefaultDateFormatArray) ToS3SourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceDefaultDateFormatArrayOutput)
}

type S3SourceDefaultDateFormatOutput struct{ *pulumi.OutputState }

func (S3SourceDefaultDateFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceDefaultDateFormat)(nil)).Elem()
}

func (o S3SourceDefaultDateFormatOutput) ToS3SourceDefaultDateFormatOutput() S3SourceDefaultDateFormatOutput {
	return o
}

func (o S3SourceDefaultDateFormatOutput) ToS3SourceDefaultDateFormatOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatOutput {
	return o
}

func (o S3SourceDefaultDateFormatOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceDefaultDateFormat) string { return v.Format }).(pulumi.StringOutput)
}

func (o S3SourceDefaultDateFormatOutput) Locator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceDefaultDateFormat) *string { return v.Locator }).(pulumi.StringPtrOutput)
}

type S3SourceDefaultDateFormatArrayOutput struct{ *pulumi.OutputState }

func (S3SourceDefaultDateFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceDefaultDateFormat)(nil)).Elem()
}

func (o S3SourceDefaultDateFormatArrayOutput) ToS3SourceDefaultDateFormatArrayOutput() S3SourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3SourceDefaultDateFormatArrayOutput) ToS3SourceDefaultDateFormatArrayOutputWithContext(ctx context.Context) S3SourceDefaultDateFormatArrayOutput {
	return o
}

func (o S3SourceDefaultDateFormatArrayOutput) Index(i pulumi.IntInput) S3SourceDefaultDateFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourceDefaultDateFormat {
		return vs[0].([]S3SourceDefaultDateFormat)[vs[1].(int)]
	}).(S3SourceDefaultDateFormatOutput)
}

type S3SourceFilter struct {
	FilterType string  `pulumi:"filterType"`
	Mask       *string `pulumi:"mask"`
	Name       string  `pulumi:"name"`
	Regexp     string  `pulumi:"regexp"`
}

// S3SourceFilterInput is an input type that accepts S3SourceFilterArgs and S3SourceFilterOutput values.
// You can construct a concrete instance of `S3SourceFilterInput` via:
//
//          S3SourceFilterArgs{...}
type S3SourceFilterInput interface {
	pulumi.Input

	ToS3SourceFilterOutput() S3SourceFilterOutput
	ToS3SourceFilterOutputWithContext(context.Context) S3SourceFilterOutput
}

type S3SourceFilterArgs struct {
	FilterType pulumi.StringInput    `pulumi:"filterType"`
	Mask       pulumi.StringPtrInput `pulumi:"mask"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Regexp     pulumi.StringInput    `pulumi:"regexp"`
}

func (S3SourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceFilter)(nil)).Elem()
}

func (i S3SourceFilterArgs) ToS3SourceFilterOutput() S3SourceFilterOutput {
	return i.ToS3SourceFilterOutputWithContext(context.Background())
}

func (i S3SourceFilterArgs) ToS3SourceFilterOutputWithContext(ctx context.Context) S3SourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceFilterOutput)
}

// S3SourceFilterArrayInput is an input type that accepts S3SourceFilterArray and S3SourceFilterArrayOutput values.
// You can construct a concrete instance of `S3SourceFilterArrayInput` via:
//
//          S3SourceFilterArray{ S3SourceFilterArgs{...} }
type S3SourceFilterArrayInput interface {
	pulumi.Input

	ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput
	ToS3SourceFilterArrayOutputWithContext(context.Context) S3SourceFilterArrayOutput
}

type S3SourceFilterArray []S3SourceFilterInput

func (S3SourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceFilter)(nil)).Elem()
}

func (i S3SourceFilterArray) ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput {
	return i.ToS3SourceFilterArrayOutputWithContext(context.Background())
}

func (i S3SourceFilterArray) ToS3SourceFilterArrayOutputWithContext(ctx context.Context) S3SourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourceFilterArrayOutput)
}

type S3SourceFilterOutput struct{ *pulumi.OutputState }

func (S3SourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourceFilter)(nil)).Elem()
}

func (o S3SourceFilterOutput) ToS3SourceFilterOutput() S3SourceFilterOutput {
	return o
}

func (o S3SourceFilterOutput) ToS3SourceFilterOutputWithContext(ctx context.Context) S3SourceFilterOutput {
	return o
}

func (o S3SourceFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o S3SourceFilterOutput) Mask() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourceFilter) *string { return v.Mask }).(pulumi.StringPtrOutput)
}

func (o S3SourceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o S3SourceFilterOutput) Regexp() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourceFilter) string { return v.Regexp }).(pulumi.StringOutput)
}

type S3SourceFilterArrayOutput struct{ *pulumi.OutputState }

func (S3SourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourceFilter)(nil)).Elem()
}

func (o S3SourceFilterArrayOutput) ToS3SourceFilterArrayOutput() S3SourceFilterArrayOutput {
	return o
}

func (o S3SourceFilterArrayOutput) ToS3SourceFilterArrayOutputWithContext(ctx context.Context) S3SourceFilterArrayOutput {
	return o
}

func (o S3SourceFilterArrayOutput) Index(i pulumi.IntInput) S3SourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourceFilter {
		return vs[0].([]S3SourceFilter)[vs[1].(int)]
	}).(S3SourceFilterOutput)
}

type S3SourcePath struct {
	// The name of the bucket.
	BucketName        *string                     `pulumi:"bucketName"`
	CustomServices    []S3SourcePathCustomService `pulumi:"customServices"`
	LimitToNamespaces []string                    `pulumi:"limitToNamespaces"`
	LimitToRegions    []string                    `pulumi:"limitToRegions"`
	LimitToServices   []string                    `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression *string `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns []S3SourcePathSnsTopicOrSubscriptionArn `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 []S3SourcePathTagFilter                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type string `pulumi:"type"`
	// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
	UseVersionedApi *bool `pulumi:"useVersionedApi"`
}

// S3SourcePathInput is an input type that accepts S3SourcePathArgs and S3SourcePathOutput values.
// You can construct a concrete instance of `S3SourcePathInput` via:
//
//          S3SourcePathArgs{...}
type S3SourcePathInput interface {
	pulumi.Input

	ToS3SourcePathOutput() S3SourcePathOutput
	ToS3SourcePathOutputWithContext(context.Context) S3SourcePathOutput
}

type S3SourcePathArgs struct {
	// The name of the bucket.
	BucketName        pulumi.StringPtrInput               `pulumi:"bucketName"`
	CustomServices    S3SourcePathCustomServiceArrayInput `pulumi:"customServices"`
	LimitToNamespaces pulumi.StringArrayInput             `pulumi:"limitToNamespaces"`
	LimitToRegions    pulumi.StringArrayInput             `pulumi:"limitToRegions"`
	LimitToServices   pulumi.StringArrayInput             `pulumi:"limitToServices"`
	// The path to the data.
	PathExpression pulumi.StringPtrInput `pulumi:"pathExpression"`
	// This is a computed field for SNS topic/subscription ARN.
	SnsTopicOrSubscriptionArns S3SourcePathSnsTopicOrSubscriptionArnArrayInput `pulumi:"snsTopicOrSubscriptionArns"`
	TagFilters                 S3SourcePathTagFilterArrayInput                 `pulumi:"tagFilters"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type pulumi.StringInput `pulumi:"type"`
	// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
	UseVersionedApi pulumi.BoolPtrInput `pulumi:"useVersionedApi"`
}

func (S3SourcePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePath)(nil)).Elem()
}

func (i S3SourcePathArgs) ToS3SourcePathOutput() S3SourcePathOutput {
	return i.ToS3SourcePathOutputWithContext(context.Background())
}

func (i S3SourcePathArgs) ToS3SourcePathOutputWithContext(ctx context.Context) S3SourcePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathOutput)
}

func (i S3SourcePathArgs) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return i.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (i S3SourcePathArgs) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathOutput).ToS3SourcePathPtrOutputWithContext(ctx)
}

// S3SourcePathPtrInput is an input type that accepts S3SourcePathArgs, S3SourcePathPtr and S3SourcePathPtrOutput values.
// You can construct a concrete instance of `S3SourcePathPtrInput` via:
//
//          S3SourcePathArgs{...}
//
//  or:
//
//          nil
type S3SourcePathPtrInput interface {
	pulumi.Input

	ToS3SourcePathPtrOutput() S3SourcePathPtrOutput
	ToS3SourcePathPtrOutputWithContext(context.Context) S3SourcePathPtrOutput
}

type s3sourcePathPtrType S3SourcePathArgs

func S3SourcePathPtr(v *S3SourcePathArgs) S3SourcePathPtrInput {
	return (*s3sourcePathPtrType)(v)
}

func (*s3sourcePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourcePath)(nil)).Elem()
}

func (i *s3sourcePathPtrType) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return i.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (i *s3sourcePathPtrType) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathPtrOutput)
}

type S3SourcePathOutput struct{ *pulumi.OutputState }

func (S3SourcePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePath)(nil)).Elem()
}

func (o S3SourcePathOutput) ToS3SourcePathOutput() S3SourcePathOutput {
	return o
}

func (o S3SourcePathOutput) ToS3SourcePathOutputWithContext(ctx context.Context) S3SourcePathOutput {
	return o
}

func (o S3SourcePathOutput) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return o.ToS3SourcePathPtrOutputWithContext(context.Background())
}

func (o S3SourcePathOutput) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v S3SourcePath) *S3SourcePath {
		return &v
	}).(S3SourcePathPtrOutput)
}

// The name of the bucket.
func (o S3SourcePathOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathOutput) CustomServices() S3SourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathCustomService { return v.CustomServices }).(S3SourcePathCustomServiceArrayOutput)
}

func (o S3SourcePathOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToNamespaces }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToRegions }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []string { return v.LimitToServices }).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3SourcePathOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *string { return v.PathExpression }).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3SourcePathOutput) SnsTopicOrSubscriptionArns() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathSnsTopicOrSubscriptionArn { return v.SnsTopicOrSubscriptionArns }).(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3SourcePathOutput) TagFilters() S3SourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v S3SourcePath) []S3SourcePathTagFilter { return v.TagFilters }).(S3SourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourcePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v S3SourcePath) string { return v.Type }).(pulumi.StringOutput)
}

// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
func (o S3SourcePathOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3SourcePath) *bool { return v.UseVersionedApi }).(pulumi.BoolPtrOutput)
}

type S3SourcePathPtrOutput struct{ *pulumi.OutputState }

func (S3SourcePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3SourcePath)(nil)).Elem()
}

func (o S3SourcePathPtrOutput) ToS3SourcePathPtrOutput() S3SourcePathPtrOutput {
	return o
}

func (o S3SourcePathPtrOutput) ToS3SourcePathPtrOutputWithContext(ctx context.Context) S3SourcePathPtrOutput {
	return o
}

func (o S3SourcePathPtrOutput) Elem() S3SourcePathOutput {
	return o.ApplyT(func(v *S3SourcePath) S3SourcePath {
		if v != nil {
			return *v
		}
		var ret S3SourcePath
		return ret
	}).(S3SourcePathOutput)
}

// The name of the bucket.
func (o S3SourcePathPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o S3SourcePathPtrOutput) CustomServices() S3SourcePathCustomServiceArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathCustomService {
		if v == nil {
			return nil
		}
		return v.CustomServices
	}).(S3SourcePathCustomServiceArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToNamespaces
	}).(pulumi.StringArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToRegions
	}).(pulumi.StringArrayOutput)
}

func (o S3SourcePathPtrOutput) LimitToServices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []string {
		if v == nil {
			return nil
		}
		return v.LimitToServices
	}).(pulumi.StringArrayOutput)
}

// The path to the data.
func (o S3SourcePathPtrOutput) PathExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return v.PathExpression
	}).(pulumi.StringPtrOutput)
}

// This is a computed field for SNS topic/subscription ARN.
func (o S3SourcePathPtrOutput) SnsTopicOrSubscriptionArns() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathSnsTopicOrSubscriptionArn {
		if v == nil {
			return nil
		}
		return v.SnsTopicOrSubscriptionArns
	}).(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

func (o S3SourcePathPtrOutput) TagFilters() S3SourcePathTagFilterArrayOutput {
	return o.ApplyT(func(v *S3SourcePath) []S3SourcePathTagFilter {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(S3SourcePathTagFilterArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourcePathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
func (o S3SourcePathPtrOutput) UseVersionedApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *S3SourcePath) *bool {
		if v == nil {
			return nil
		}
		return v.UseVersionedApi
	}).(pulumi.BoolPtrOutput)
}

type S3SourcePathCustomService struct {
	Prefixes    []string `pulumi:"prefixes"`
	ServiceName *string  `pulumi:"serviceName"`
}

// S3SourcePathCustomServiceInput is an input type that accepts S3SourcePathCustomServiceArgs and S3SourcePathCustomServiceOutput values.
// You can construct a concrete instance of `S3SourcePathCustomServiceInput` via:
//
//          S3SourcePathCustomServiceArgs{...}
type S3SourcePathCustomServiceInput interface {
	pulumi.Input

	ToS3SourcePathCustomServiceOutput() S3SourcePathCustomServiceOutput
	ToS3SourcePathCustomServiceOutputWithContext(context.Context) S3SourcePathCustomServiceOutput
}

type S3SourcePathCustomServiceArgs struct {
	Prefixes    pulumi.StringArrayInput `pulumi:"prefixes"`
	ServiceName pulumi.StringPtrInput   `pulumi:"serviceName"`
}

func (S3SourcePathCustomServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathCustomService)(nil)).Elem()
}

func (i S3SourcePathCustomServiceArgs) ToS3SourcePathCustomServiceOutput() S3SourcePathCustomServiceOutput {
	return i.ToS3SourcePathCustomServiceOutputWithContext(context.Background())
}

func (i S3SourcePathCustomServiceArgs) ToS3SourcePathCustomServiceOutputWithContext(ctx context.Context) S3SourcePathCustomServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathCustomServiceOutput)
}

// S3SourcePathCustomServiceArrayInput is an input type that accepts S3SourcePathCustomServiceArray and S3SourcePathCustomServiceArrayOutput values.
// You can construct a concrete instance of `S3SourcePathCustomServiceArrayInput` via:
//
//          S3SourcePathCustomServiceArray{ S3SourcePathCustomServiceArgs{...} }
type S3SourcePathCustomServiceArrayInput interface {
	pulumi.Input

	ToS3SourcePathCustomServiceArrayOutput() S3SourcePathCustomServiceArrayOutput
	ToS3SourcePathCustomServiceArrayOutputWithContext(context.Context) S3SourcePathCustomServiceArrayOutput
}

type S3SourcePathCustomServiceArray []S3SourcePathCustomServiceInput

func (S3SourcePathCustomServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathCustomService)(nil)).Elem()
}

func (i S3SourcePathCustomServiceArray) ToS3SourcePathCustomServiceArrayOutput() S3SourcePathCustomServiceArrayOutput {
	return i.ToS3SourcePathCustomServiceArrayOutputWithContext(context.Background())
}

func (i S3SourcePathCustomServiceArray) ToS3SourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3SourcePathCustomServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathCustomServiceArrayOutput)
}

type S3SourcePathCustomServiceOutput struct{ *pulumi.OutputState }

func (S3SourcePathCustomServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathCustomService)(nil)).Elem()
}

func (o S3SourcePathCustomServiceOutput) ToS3SourcePathCustomServiceOutput() S3SourcePathCustomServiceOutput {
	return o
}

func (o S3SourcePathCustomServiceOutput) ToS3SourcePathCustomServiceOutputWithContext(ctx context.Context) S3SourcePathCustomServiceOutput {
	return o
}

func (o S3SourcePathCustomServiceOutput) Prefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePathCustomService) []string { return v.Prefixes }).(pulumi.StringArrayOutput)
}

func (o S3SourcePathCustomServiceOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathCustomService) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type S3SourcePathCustomServiceArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathCustomServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathCustomService)(nil)).Elem()
}

func (o S3SourcePathCustomServiceArrayOutput) ToS3SourcePathCustomServiceArrayOutput() S3SourcePathCustomServiceArrayOutput {
	return o
}

func (o S3SourcePathCustomServiceArrayOutput) ToS3SourcePathCustomServiceArrayOutputWithContext(ctx context.Context) S3SourcePathCustomServiceArrayOutput {
	return o
}

func (o S3SourcePathCustomServiceArrayOutput) Index(i pulumi.IntInput) S3SourcePathCustomServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathCustomService {
		return vs[0].([]S3SourcePathCustomService)[vs[1].(int)]
	}).(S3SourcePathCustomServiceOutput)
}

type S3SourcePathSnsTopicOrSubscriptionArn struct {
	Arn       *string `pulumi:"arn"`
	IsSuccess *bool   `pulumi:"isSuccess"`
}

// S3SourcePathSnsTopicOrSubscriptionArnInput is an input type that accepts S3SourcePathSnsTopicOrSubscriptionArnArgs and S3SourcePathSnsTopicOrSubscriptionArnOutput values.
// You can construct a concrete instance of `S3SourcePathSnsTopicOrSubscriptionArnInput` via:
//
//          S3SourcePathSnsTopicOrSubscriptionArnArgs{...}
type S3SourcePathSnsTopicOrSubscriptionArnInput interface {
	pulumi.Input

	ToS3SourcePathSnsTopicOrSubscriptionArnOutput() S3SourcePathSnsTopicOrSubscriptionArnOutput
	ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Context) S3SourcePathSnsTopicOrSubscriptionArnOutput
}

type S3SourcePathSnsTopicOrSubscriptionArnArgs struct {
	Arn       pulumi.StringPtrInput `pulumi:"arn"`
	IsSuccess pulumi.BoolPtrInput   `pulumi:"isSuccess"`
}

func (S3SourcePathSnsTopicOrSubscriptionArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArgs) ToS3SourcePathSnsTopicOrSubscriptionArnOutput() S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return i.ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(context.Background())
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArgs) ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathSnsTopicOrSubscriptionArnOutput)
}

// S3SourcePathSnsTopicOrSubscriptionArnArrayInput is an input type that accepts S3SourcePathSnsTopicOrSubscriptionArnArray and S3SourcePathSnsTopicOrSubscriptionArnArrayOutput values.
// You can construct a concrete instance of `S3SourcePathSnsTopicOrSubscriptionArnArrayInput` via:
//
//          S3SourcePathSnsTopicOrSubscriptionArnArray{ S3SourcePathSnsTopicOrSubscriptionArnArgs{...} }
type S3SourcePathSnsTopicOrSubscriptionArnArrayInput interface {
	pulumi.Input

	ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutput() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput
	ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Context) S3SourcePathSnsTopicOrSubscriptionArnArrayOutput
}

type S3SourcePathSnsTopicOrSubscriptionArnArray []S3SourcePathSnsTopicOrSubscriptionArnInput

func (S3SourcePathSnsTopicOrSubscriptionArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArray) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutput() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return i.ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(context.Background())
}

func (i S3SourcePathSnsTopicOrSubscriptionArnArray) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput)
}

type S3SourcePathSnsTopicOrSubscriptionArnOutput struct{ *pulumi.OutputState }

func (S3SourcePathSnsTopicOrSubscriptionArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) ToS3SourcePathSnsTopicOrSubscriptionArnOutput() S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) ToS3SourcePathSnsTopicOrSubscriptionArnOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathSnsTopicOrSubscriptionArn) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathSnsTopicOrSubscriptionArnOutput) IsSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v S3SourcePathSnsTopicOrSubscriptionArn) *bool { return v.IsSuccess }).(pulumi.BoolPtrOutput)
}

type S3SourcePathSnsTopicOrSubscriptionArnArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathSnsTopicOrSubscriptionArn)(nil)).Elem()
}

func (o S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutput() S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) ToS3SourcePathSnsTopicOrSubscriptionArnArrayOutputWithContext(ctx context.Context) S3SourcePathSnsTopicOrSubscriptionArnArrayOutput {
	return o
}

func (o S3SourcePathSnsTopicOrSubscriptionArnArrayOutput) Index(i pulumi.IntInput) S3SourcePathSnsTopicOrSubscriptionArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathSnsTopicOrSubscriptionArn {
		return vs[0].([]S3SourcePathSnsTopicOrSubscriptionArn)[vs[1].(int)]
	}).(S3SourcePathSnsTopicOrSubscriptionArnOutput)
}

type S3SourcePathTagFilter struct {
	Namespace *string  `pulumi:"namespace"`
	Tags      []string `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type *string `pulumi:"type"`
}

// S3SourcePathTagFilterInput is an input type that accepts S3SourcePathTagFilterArgs and S3SourcePathTagFilterOutput values.
// You can construct a concrete instance of `S3SourcePathTagFilterInput` via:
//
//          S3SourcePathTagFilterArgs{...}
type S3SourcePathTagFilterInput interface {
	pulumi.Input

	ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput
	ToS3SourcePathTagFilterOutputWithContext(context.Context) S3SourcePathTagFilterOutput
}

type S3SourcePathTagFilterArgs struct {
	Namespace pulumi.StringPtrInput   `pulumi:"namespace"`
	Tags      pulumi.StringArrayInput `pulumi:"tags"`
	// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (S3SourcePathTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathTagFilter)(nil)).Elem()
}

func (i S3SourcePathTagFilterArgs) ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput {
	return i.ToS3SourcePathTagFilterOutputWithContext(context.Background())
}

func (i S3SourcePathTagFilterArgs) ToS3SourcePathTagFilterOutputWithContext(ctx context.Context) S3SourcePathTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathTagFilterOutput)
}

// S3SourcePathTagFilterArrayInput is an input type that accepts S3SourcePathTagFilterArray and S3SourcePathTagFilterArrayOutput values.
// You can construct a concrete instance of `S3SourcePathTagFilterArrayInput` via:
//
//          S3SourcePathTagFilterArray{ S3SourcePathTagFilterArgs{...} }
type S3SourcePathTagFilterArrayInput interface {
	pulumi.Input

	ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput
	ToS3SourcePathTagFilterArrayOutputWithContext(context.Context) S3SourcePathTagFilterArrayOutput
}

type S3SourcePathTagFilterArray []S3SourcePathTagFilterInput

func (S3SourcePathTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathTagFilter)(nil)).Elem()
}

func (i S3SourcePathTagFilterArray) ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput {
	return i.ToS3SourcePathTagFilterArrayOutputWithContext(context.Background())
}

func (i S3SourcePathTagFilterArray) ToS3SourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3SourcePathTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3SourcePathTagFilterArrayOutput)
}

type S3SourcePathTagFilterOutput struct{ *pulumi.OutputState }

func (S3SourcePathTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*S3SourcePathTagFilter)(nil)).Elem()
}

func (o S3SourcePathTagFilterOutput) ToS3SourcePathTagFilterOutput() S3SourcePathTagFilterOutput {
	return o
}

func (o S3SourcePathTagFilterOutput) ToS3SourcePathTagFilterOutputWithContext(ctx context.Context) S3SourcePathTagFilterOutput {
	return o
}

func (o S3SourcePathTagFilterOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o S3SourcePathTagFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
func (o S3SourcePathTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v S3SourcePathTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type S3SourcePathTagFilterArrayOutput struct{ *pulumi.OutputState }

func (S3SourcePathTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]S3SourcePathTagFilter)(nil)).Elem()
}

func (o S3SourcePathTagFilterArrayOutput) ToS3SourcePathTagFilterArrayOutput() S3SourcePathTagFilterArrayOutput {
	return o
}

func (o S3SourcePathTagFilterArrayOutput) ToS3SourcePathTagFilterArrayOutputWithContext(ctx context.Context) S3SourcePathTagFilterArrayOutput {
	return o
}

func (o S3SourcePathTagFilterArrayOutput) Index(i pulumi.IntInput) S3SourcePathTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) S3SourcePathTagFilter {
		return vs[0].([]S3SourcePathTagFilter)[vs[1].(int)]
	}).(S3SourcePathTagFilterOutput)
}

type SamlConfigurationOnDemandProvisioningEnabled struct {
	// First name attribute of the new user account. Defaults to "".
	FirstNameAttribute *string `pulumi:"firstNameAttribute"`
	// Last name attribute of the new user account. Defaults to "".
	LastNameAttribute *string `pulumi:"lastNameAttribute"`
	// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
	OnDemandProvisioningRoles []string `pulumi:"onDemandProvisioningRoles"`
}

// SamlConfigurationOnDemandProvisioningEnabledInput is an input type that accepts SamlConfigurationOnDemandProvisioningEnabledArgs and SamlConfigurationOnDemandProvisioningEnabledOutput values.
// You can construct a concrete instance of `SamlConfigurationOnDemandProvisioningEnabledInput` via:
//
//          SamlConfigurationOnDemandProvisioningEnabledArgs{...}
type SamlConfigurationOnDemandProvisioningEnabledInput interface {
	pulumi.Input

	ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput
	ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput
}

type SamlConfigurationOnDemandProvisioningEnabledArgs struct {
	// First name attribute of the new user account. Defaults to "".
	FirstNameAttribute pulumi.StringPtrInput `pulumi:"firstNameAttribute"`
	// Last name attribute of the new user account. Defaults to "".
	LastNameAttribute pulumi.StringPtrInput `pulumi:"lastNameAttribute"`
	// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
	OnDemandProvisioningRoles pulumi.StringArrayInput `pulumi:"onDemandProvisioningRoles"`
}

func (SamlConfigurationOnDemandProvisioningEnabledArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(context.Background())
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledOutput)
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (i SamlConfigurationOnDemandProvisioningEnabledArgs) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledOutput).ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx)
}

// SamlConfigurationOnDemandProvisioningEnabledPtrInput is an input type that accepts SamlConfigurationOnDemandProvisioningEnabledArgs, SamlConfigurationOnDemandProvisioningEnabledPtr and SamlConfigurationOnDemandProvisioningEnabledPtrOutput values.
// You can construct a concrete instance of `SamlConfigurationOnDemandProvisioningEnabledPtrInput` via:
//
//          SamlConfigurationOnDemandProvisioningEnabledArgs{...}
//
//  or:
//
//          nil
type SamlConfigurationOnDemandProvisioningEnabledPtrInput interface {
	pulumi.Input

	ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput
	ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput
}

type samlConfigurationOnDemandProvisioningEnabledPtrType SamlConfigurationOnDemandProvisioningEnabledArgs

func SamlConfigurationOnDemandProvisioningEnabledPtr(v *SamlConfigurationOnDemandProvisioningEnabledArgs) SamlConfigurationOnDemandProvisioningEnabledPtrInput {
	return (*samlConfigurationOnDemandProvisioningEnabledPtrType)(v)
}

func (*samlConfigurationOnDemandProvisioningEnabledPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (i *samlConfigurationOnDemandProvisioningEnabledPtrType) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return i.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (i *samlConfigurationOnDemandProvisioningEnabledPtrType) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlConfigurationOnDemandProvisioningEnabledPtrOutput)
}

type SamlConfigurationOnDemandProvisioningEnabledOutput struct{ *pulumi.OutputState }

func (SamlConfigurationOnDemandProvisioningEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledOutput() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o.ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(context.Background())
}

func (o SamlConfigurationOnDemandProvisioningEnabledOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SamlConfigurationOnDemandProvisioningEnabled) *SamlConfigurationOnDemandProvisioningEnabled {
		return &v
	}).(SamlConfigurationOnDemandProvisioningEnabledPtrOutput)
}

// First name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *string { return v.FirstNameAttribute }).(pulumi.StringPtrOutput)
}

// Last name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) *string { return v.LastNameAttribute }).(pulumi.StringPtrOutput)
}

// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
func (o SamlConfigurationOnDemandProvisioningEnabledOutput) OnDemandProvisioningRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SamlConfigurationOnDemandProvisioningEnabled) []string { return v.OnDemandProvisioningRoles }).(pulumi.StringArrayOutput)
}

type SamlConfigurationOnDemandProvisioningEnabledPtrOutput struct{ *pulumi.OutputState }

func (SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlConfigurationOnDemandProvisioningEnabled)(nil)).Elem()
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutput() SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) ToSamlConfigurationOnDemandProvisioningEnabledPtrOutputWithContext(ctx context.Context) SamlConfigurationOnDemandProvisioningEnabledPtrOutput {
	return o
}

func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) Elem() SamlConfigurationOnDemandProvisioningEnabledOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) SamlConfigurationOnDemandProvisioningEnabled {
		if v != nil {
			return *v
		}
		var ret SamlConfigurationOnDemandProvisioningEnabled
		return ret
	}).(SamlConfigurationOnDemandProvisioningEnabledOutput)
}

// First name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) FirstNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) *string {
		if v == nil {
			return nil
		}
		return v.FirstNameAttribute
	}).(pulumi.StringPtrOutput)
}

// Last name attribute of the new user account. Defaults to "".
func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) LastNameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) *string {
		if v == nil {
			return nil
		}
		return v.LastNameAttribute
	}).(pulumi.StringPtrOutput)
}

// List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
func (o SamlConfigurationOnDemandProvisioningEnabledPtrOutput) OnDemandProvisioningRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SamlConfigurationOnDemandProvisioningEnabled) []string {
		if v == nil {
			return nil
		}
		return v.OnDemandProvisioningRoles
	}).(pulumi.StringArrayOutput)
}

type SloCompliance struct {
	// The type of compliance to use. Valid values are `Rolling` or `Calendar`.
	ComplianceType string `pulumi:"complianceType"`
	// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
	// based evaluation.
	Size string `pulumi:"size"`
	// Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
	// Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
	// For `Month` it's not required and is set to first day of the month.
	StartFrom *string `pulumi:"startFrom"`
	// The target value to use, must be a number between 0 and 100.
	Target float64 `pulumi:"target"`
	// Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone string `pulumi:"timezone"`
}

// SloComplianceInput is an input type that accepts SloComplianceArgs and SloComplianceOutput values.
// You can construct a concrete instance of `SloComplianceInput` via:
//
//          SloComplianceArgs{...}
type SloComplianceInput interface {
	pulumi.Input

	ToSloComplianceOutput() SloComplianceOutput
	ToSloComplianceOutputWithContext(context.Context) SloComplianceOutput
}

type SloComplianceArgs struct {
	// The type of compliance to use. Valid values are `Rolling` or `Calendar`.
	ComplianceType pulumi.StringInput `pulumi:"complianceType"`
	// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
	// based evaluation.
	Size pulumi.StringInput `pulumi:"size"`
	// Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
	// Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
	// For `Month` it's not required and is set to first day of the month.
	StartFrom pulumi.StringPtrInput `pulumi:"startFrom"`
	// The target value to use, must be a number between 0 and 100.
	Target pulumi.Float64Input `pulumi:"target"`
	// Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (SloComplianceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloCompliance)(nil)).Elem()
}

func (i SloComplianceArgs) ToSloComplianceOutput() SloComplianceOutput {
	return i.ToSloComplianceOutputWithContext(context.Background())
}

func (i SloComplianceArgs) ToSloComplianceOutputWithContext(ctx context.Context) SloComplianceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloComplianceOutput)
}

// SloComplianceArrayInput is an input type that accepts SloComplianceArray and SloComplianceArrayOutput values.
// You can construct a concrete instance of `SloComplianceArrayInput` via:
//
//          SloComplianceArray{ SloComplianceArgs{...} }
type SloComplianceArrayInput interface {
	pulumi.Input

	ToSloComplianceArrayOutput() SloComplianceArrayOutput
	ToSloComplianceArrayOutputWithContext(context.Context) SloComplianceArrayOutput
}

type SloComplianceArray []SloComplianceInput

func (SloComplianceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloCompliance)(nil)).Elem()
}

func (i SloComplianceArray) ToSloComplianceArrayOutput() SloComplianceArrayOutput {
	return i.ToSloComplianceArrayOutputWithContext(context.Background())
}

func (i SloComplianceArray) ToSloComplianceArrayOutputWithContext(ctx context.Context) SloComplianceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloComplianceArrayOutput)
}

type SloComplianceOutput struct{ *pulumi.OutputState }

func (SloComplianceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloCompliance)(nil)).Elem()
}

func (o SloComplianceOutput) ToSloComplianceOutput() SloComplianceOutput {
	return o
}

func (o SloComplianceOutput) ToSloComplianceOutputWithContext(ctx context.Context) SloComplianceOutput {
	return o
}

// The type of compliance to use. Valid values are `Rolling` or `Calendar`.
func (o SloComplianceOutput) ComplianceType() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompliance) string { return v.ComplianceType }).(pulumi.StringOutput)
}

// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
// based evaluation.
func (o SloComplianceOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompliance) string { return v.Size }).(pulumi.StringOutput)
}

// Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
// Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
// For `Month` it's not required and is set to first day of the month.
func (o SloComplianceOutput) StartFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloCompliance) *string { return v.StartFrom }).(pulumi.StringPtrOutput)
}

// The target value to use, must be a number between 0 and 100.
func (o SloComplianceOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v SloCompliance) float64 { return v.Target }).(pulumi.Float64Output)
}

// Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
func (o SloComplianceOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompliance) string { return v.Timezone }).(pulumi.StringOutput)
}

type SloComplianceArrayOutput struct{ *pulumi.OutputState }

func (SloComplianceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloCompliance)(nil)).Elem()
}

func (o SloComplianceArrayOutput) ToSloComplianceArrayOutput() SloComplianceArrayOutput {
	return o
}

func (o SloComplianceArrayOutput) ToSloComplianceArrayOutputWithContext(ctx context.Context) SloComplianceArrayOutput {
	return o
}

func (o SloComplianceArrayOutput) Index(i pulumi.IntInput) SloComplianceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloCompliance {
		return vs[0].([]SloCompliance)[vs[1].(int)]
	}).(SloComplianceOutput)
}

type SloIndicator struct {
	RequestBasedEvaluation *SloIndicatorRequestBasedEvaluation `pulumi:"requestBasedEvaluation"`
	WindowBasedEvaluation  *SloIndicatorWindowBasedEvaluation  `pulumi:"windowBasedEvaluation"`
}

// SloIndicatorInput is an input type that accepts SloIndicatorArgs and SloIndicatorOutput values.
// You can construct a concrete instance of `SloIndicatorInput` via:
//
//          SloIndicatorArgs{...}
type SloIndicatorInput interface {
	pulumi.Input

	ToSloIndicatorOutput() SloIndicatorOutput
	ToSloIndicatorOutputWithContext(context.Context) SloIndicatorOutput
}

type SloIndicatorArgs struct {
	RequestBasedEvaluation SloIndicatorRequestBasedEvaluationPtrInput `pulumi:"requestBasedEvaluation"`
	WindowBasedEvaluation  SloIndicatorWindowBasedEvaluationPtrInput  `pulumi:"windowBasedEvaluation"`
}

func (SloIndicatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicator)(nil)).Elem()
}

func (i SloIndicatorArgs) ToSloIndicatorOutput() SloIndicatorOutput {
	return i.ToSloIndicatorOutputWithContext(context.Background())
}

func (i SloIndicatorArgs) ToSloIndicatorOutputWithContext(ctx context.Context) SloIndicatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorOutput)
}

func (i SloIndicatorArgs) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return i.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (i SloIndicatorArgs) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorOutput).ToSloIndicatorPtrOutputWithContext(ctx)
}

// SloIndicatorPtrInput is an input type that accepts SloIndicatorArgs, SloIndicatorPtr and SloIndicatorPtrOutput values.
// You can construct a concrete instance of `SloIndicatorPtrInput` via:
//
//          SloIndicatorArgs{...}
//
//  or:
//
//          nil
type SloIndicatorPtrInput interface {
	pulumi.Input

	ToSloIndicatorPtrOutput() SloIndicatorPtrOutput
	ToSloIndicatorPtrOutputWithContext(context.Context) SloIndicatorPtrOutput
}

type sloIndicatorPtrType SloIndicatorArgs

func SloIndicatorPtr(v *SloIndicatorArgs) SloIndicatorPtrInput {
	return (*sloIndicatorPtrType)(v)
}

func (*sloIndicatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicator)(nil)).Elem()
}

func (i *sloIndicatorPtrType) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return i.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorPtrType) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorPtrOutput)
}

type SloIndicatorOutput struct{ *pulumi.OutputState }

func (SloIndicatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicator)(nil)).Elem()
}

func (o SloIndicatorOutput) ToSloIndicatorOutput() SloIndicatorOutput {
	return o
}

func (o SloIndicatorOutput) ToSloIndicatorOutputWithContext(ctx context.Context) SloIndicatorOutput {
	return o
}

func (o SloIndicatorOutput) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return o.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (o SloIndicatorOutput) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicator) *SloIndicator {
		return &v
	}).(SloIndicatorPtrOutput)
}

func (o SloIndicatorOutput) RequestBasedEvaluation() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ApplyT(func(v SloIndicator) *SloIndicatorRequestBasedEvaluation { return v.RequestBasedEvaluation }).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

func (o SloIndicatorOutput) WindowBasedEvaluation() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ApplyT(func(v SloIndicator) *SloIndicatorWindowBasedEvaluation { return v.WindowBasedEvaluation }).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

type SloIndicatorPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicator)(nil)).Elem()
}

func (o SloIndicatorPtrOutput) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return o
}

func (o SloIndicatorPtrOutput) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return o
}

func (o SloIndicatorPtrOutput) Elem() SloIndicatorOutput {
	return o.ApplyT(func(v *SloIndicator) SloIndicator {
		if v != nil {
			return *v
		}
		var ret SloIndicator
		return ret
	}).(SloIndicatorOutput)
}

func (o SloIndicatorPtrOutput) RequestBasedEvaluation() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *SloIndicatorRequestBasedEvaluation {
		if v == nil {
			return nil
		}
		return v.RequestBasedEvaluation
	}).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

func (o SloIndicatorPtrOutput) WindowBasedEvaluation() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *SloIndicatorWindowBasedEvaluation {
		if v == nil {
			return nil
		}
		return v.WindowBasedEvaluation
	}).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

type SloIndicatorRequestBasedEvaluation struct {
	// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op *string `pulumi:"op"`
	// The queries to use.
	Queries []SloIndicatorRequestBasedEvaluationQuery `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType string `pulumi:"queryType"`
	// Compared against threshold query's raw data points to determine success criteria.
	Threshold *float64 `pulumi:"threshold"`
}

// SloIndicatorRequestBasedEvaluationInput is an input type that accepts SloIndicatorRequestBasedEvaluationArgs and SloIndicatorRequestBasedEvaluationOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationInput` via:
//
//          SloIndicatorRequestBasedEvaluationArgs{...}
type SloIndicatorRequestBasedEvaluationInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationOutput() SloIndicatorRequestBasedEvaluationOutput
	ToSloIndicatorRequestBasedEvaluationOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationOutput
}

type SloIndicatorRequestBasedEvaluationArgs struct {
	// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op pulumi.StringPtrInput `pulumi:"op"`
	// The queries to use.
	Queries SloIndicatorRequestBasedEvaluationQueryArrayInput `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// Compared against threshold query's raw data points to determine success criteria.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (SloIndicatorRequestBasedEvaluationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationOutput() SloIndicatorRequestBasedEvaluationOutput {
	return i.ToSloIndicatorRequestBasedEvaluationOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationOutput)
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return i.ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationArgs) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationOutput).ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx)
}

// SloIndicatorRequestBasedEvaluationPtrInput is an input type that accepts SloIndicatorRequestBasedEvaluationArgs, SloIndicatorRequestBasedEvaluationPtr and SloIndicatorRequestBasedEvaluationPtrOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationPtrInput` via:
//
//          SloIndicatorRequestBasedEvaluationArgs{...}
//
//  or:
//
//          nil
type SloIndicatorRequestBasedEvaluationPtrInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput
	ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationPtrOutput
}

type sloIndicatorRequestBasedEvaluationPtrType SloIndicatorRequestBasedEvaluationArgs

func SloIndicatorRequestBasedEvaluationPtr(v *SloIndicatorRequestBasedEvaluationArgs) SloIndicatorRequestBasedEvaluationPtrInput {
	return (*sloIndicatorRequestBasedEvaluationPtrType)(v)
}

func (*sloIndicatorRequestBasedEvaluationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (i *sloIndicatorRequestBasedEvaluationPtrType) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return i.ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorRequestBasedEvaluationPtrType) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

type SloIndicatorRequestBasedEvaluationOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationOutput() SloIndicatorRequestBasedEvaluationOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(context.Background())
}

func (o SloIndicatorRequestBasedEvaluationOutput) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicatorRequestBasedEvaluation) *SloIndicatorRequestBasedEvaluation {
		return &v
	}).(SloIndicatorRequestBasedEvaluationPtrOutput)
}

// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorRequestBasedEvaluationOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) *string { return v.Op }).(pulumi.StringPtrOutput)
}

// The queries to use.
func (o SloIndicatorRequestBasedEvaluationOutput) Queries() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) []SloIndicatorRequestBasedEvaluationQuery { return v.Queries }).(SloIndicatorRequestBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorRequestBasedEvaluationOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) string { return v.QueryType }).(pulumi.StringOutput)
}

// Compared against threshold query's raw data points to determine success criteria.
func (o SloIndicatorRequestBasedEvaluationOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluation) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type SloIndicatorRequestBasedEvaluationPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorRequestBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationPtrOutput) ToSloIndicatorRequestBasedEvaluationPtrOutput() SloIndicatorRequestBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationPtrOutput) ToSloIndicatorRequestBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationPtrOutput) Elem() SloIndicatorRequestBasedEvaluationOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) SloIndicatorRequestBasedEvaluation {
		if v != nil {
			return *v
		}
		var ret SloIndicatorRequestBasedEvaluation
		return ret
	}).(SloIndicatorRequestBasedEvaluationOutput)
}

// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return v.Op
	}).(pulumi.StringPtrOutput)
}

// The queries to use.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) Queries() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) []SloIndicatorRequestBasedEvaluationQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(SloIndicatorRequestBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.QueryType
	}).(pulumi.StringPtrOutput)
}

// Compared against threshold query's raw data points to determine success criteria.
func (o SloIndicatorRequestBasedEvaluationPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloIndicatorRequestBasedEvaluation) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type SloIndicatorRequestBasedEvaluationQuery struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType string `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups []SloIndicatorRequestBasedEvaluationQueryQueryGroup `pulumi:"queryGroups"`
}

// SloIndicatorRequestBasedEvaluationQueryInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryArgs and SloIndicatorRequestBasedEvaluationQueryOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryInput` via:
//
//          SloIndicatorRequestBasedEvaluationQueryArgs{...}
type SloIndicatorRequestBasedEvaluationQueryInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryOutput() SloIndicatorRequestBasedEvaluationQueryOutput
	ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryOutput
}

type SloIndicatorRequestBasedEvaluationQueryArgs struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType pulumi.StringInput `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput `pulumi:"queryGroups"`
}

func (SloIndicatorRequestBasedEvaluationQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryArgs) ToSloIndicatorRequestBasedEvaluationQueryOutput() SloIndicatorRequestBasedEvaluationQueryOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryArgs) ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryOutput)
}

// SloIndicatorRequestBasedEvaluationQueryArrayInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryArray and SloIndicatorRequestBasedEvaluationQueryArrayOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryArrayInput` via:
//
//          SloIndicatorRequestBasedEvaluationQueryArray{ SloIndicatorRequestBasedEvaluationQueryArgs{...} }
type SloIndicatorRequestBasedEvaluationQueryArrayInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryArrayOutput() SloIndicatorRequestBasedEvaluationQueryArrayOutput
	ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryArrayOutput
}

type SloIndicatorRequestBasedEvaluationQueryArray []SloIndicatorRequestBasedEvaluationQueryInput

func (SloIndicatorRequestBasedEvaluationQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryArray) ToSloIndicatorRequestBasedEvaluationQueryArrayOutput() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryArray) ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryArrayOutput)
}

type SloIndicatorRequestBasedEvaluationQueryOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryOutput) ToSloIndicatorRequestBasedEvaluationQueryOutput() SloIndicatorRequestBasedEvaluationQueryOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryOutput) ToSloIndicatorRequestBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryOutput {
	return o
}

// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
// , `Threshold`.
func (o SloIndicatorRequestBasedEvaluationQueryOutput) QueryGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQuery) string { return v.QueryGroupType }).(pulumi.StringOutput)
}

// List of queries to use.
func (o SloIndicatorRequestBasedEvaluationQueryOutput) QueryGroups() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQuery) []SloIndicatorRequestBasedEvaluationQueryQueryGroup {
		return v.QueryGroups
	}).(SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorRequestBasedEvaluationQueryArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryArrayOutput() SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryArrayOutput) Index(i pulumi.IntInput) SloIndicatorRequestBasedEvaluationQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorRequestBasedEvaluationQuery {
		return vs[0].([]SloIndicatorRequestBasedEvaluationQuery)[vs[1].(int)]
	}).(SloIndicatorRequestBasedEvaluationQueryOutput)
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroup struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field *string `pulumi:"field"`
	// The query string to use.
	Query string `pulumi:"query"`
	// The row ID to use.
	RowId string `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount bool `pulumi:"useRowCount"`
}

// SloIndicatorRequestBasedEvaluationQueryQueryGroupInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs and SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryQueryGroupInput` via:
//
//          SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs{...}
type SloIndicatorRequestBasedEvaluationQueryQueryGroupInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput
	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The query string to use.
	Query pulumi.StringInput `pulumi:"query"`
	// The row ID to use.
	RowId pulumi.StringInput `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount pulumi.BoolInput `pulumi:"useRowCount"`
}

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput)
}

// SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput is an input type that accepts SloIndicatorRequestBasedEvaluationQueryQueryGroupArray and SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput values.
// You can construct a concrete instance of `SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput` via:
//
//          SloIndicatorRequestBasedEvaluationQueryQueryGroupArray{ SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs{...} }
type SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput interface {
	pulumi.Input

	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput
	ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupArray []SloIndicatorRequestBasedEvaluationQueryQueryGroupInput

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArray) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return i.ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Background())
}

func (i SloIndicatorRequestBasedEvaluationQueryQueryGroupArray) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return o
}

// Field of log query output to compare against. To be used only for logs based data
// type when `useRowCount` is false.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The query string to use.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) string { return v.Query }).(pulumi.StringOutput)
}

// The row ID to use.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) string { return v.RowId }).(pulumi.StringOutput)
}

// Whether to use the row count. Defaults to false.
func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput) UseRowCount() pulumi.BoolOutput {
	return o.ApplyT(func(v SloIndicatorRequestBasedEvaluationQueryQueryGroup) bool { return v.UseRowCount }).(pulumi.BoolOutput)
}

type SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorRequestBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput) Index(i pulumi.IntInput) SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorRequestBasedEvaluationQueryQueryGroup {
		return vs[0].([]SloIndicatorRequestBasedEvaluationQueryQueryGroup)[vs[1].(int)]
	}).(SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput)
}

type SloIndicatorWindowBasedEvaluation struct {
	// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
	// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
	Aggregation *string `pulumi:"aggregation"`
	// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op string `pulumi:"op"`
	// The queries to use.
	Queries []SloIndicatorWindowBasedEvaluationQuery `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType string `pulumi:"queryType"`
	// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
	// based evaluation.
	Size string `pulumi:"size"`
	// Compared against threshold query's raw data points to determine success criteria.
	Threshold float64 `pulumi:"threshold"`
}

// SloIndicatorWindowBasedEvaluationInput is an input type that accepts SloIndicatorWindowBasedEvaluationArgs and SloIndicatorWindowBasedEvaluationOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationInput` via:
//
//          SloIndicatorWindowBasedEvaluationArgs{...}
type SloIndicatorWindowBasedEvaluationInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationOutput() SloIndicatorWindowBasedEvaluationOutput
	ToSloIndicatorWindowBasedEvaluationOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationOutput
}

type SloIndicatorWindowBasedEvaluationArgs struct {
	// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
	// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
	// , `GreaterThanOrEqual`.
	Op pulumi.StringInput `pulumi:"op"`
	// The queries to use.
	Queries SloIndicatorWindowBasedEvaluationQueryArrayInput `pulumi:"queries"`
	// The type of query to use. Valid values are `Metrics` or `Logs`.
	QueryType pulumi.StringInput `pulumi:"queryType"`
	// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
	// based evaluation.
	Size pulumi.StringInput `pulumi:"size"`
	// Compared against threshold query's raw data points to determine success criteria.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (SloIndicatorWindowBasedEvaluationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationOutput() SloIndicatorWindowBasedEvaluationOutput {
	return i.ToSloIndicatorWindowBasedEvaluationOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationOutput)
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return i.ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationArgs) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationOutput).ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx)
}

// SloIndicatorWindowBasedEvaluationPtrInput is an input type that accepts SloIndicatorWindowBasedEvaluationArgs, SloIndicatorWindowBasedEvaluationPtr and SloIndicatorWindowBasedEvaluationPtrOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationPtrInput` via:
//
//          SloIndicatorWindowBasedEvaluationArgs{...}
//
//  or:
//
//          nil
type SloIndicatorWindowBasedEvaluationPtrInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput
	ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationPtrOutput
}

type sloIndicatorWindowBasedEvaluationPtrType SloIndicatorWindowBasedEvaluationArgs

func SloIndicatorWindowBasedEvaluationPtr(v *SloIndicatorWindowBasedEvaluationArgs) SloIndicatorWindowBasedEvaluationPtrInput {
	return (*sloIndicatorWindowBasedEvaluationPtrType)(v)
}

func (*sloIndicatorWindowBasedEvaluationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (i *sloIndicatorWindowBasedEvaluationPtrType) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return i.ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorWindowBasedEvaluationPtrType) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

type SloIndicatorWindowBasedEvaluationOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationOutput() SloIndicatorWindowBasedEvaluationOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(context.Background())
}

func (o SloIndicatorWindowBasedEvaluationOutput) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicatorWindowBasedEvaluation) *SloIndicatorWindowBasedEvaluation {
		return &v
	}).(SloIndicatorWindowBasedEvaluationPtrOutput)
}

// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
func (o SloIndicatorWindowBasedEvaluationOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorWindowBasedEvaluationOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) string { return v.Op }).(pulumi.StringOutput)
}

// The queries to use.
func (o SloIndicatorWindowBasedEvaluationOutput) Queries() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) []SloIndicatorWindowBasedEvaluationQuery { return v.Queries }).(SloIndicatorWindowBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorWindowBasedEvaluationOutput) QueryType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) string { return v.QueryType }).(pulumi.StringOutput)
}

// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
// based evaluation.
func (o SloIndicatorWindowBasedEvaluationOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) string { return v.Size }).(pulumi.StringOutput)
}

// Compared against threshold query's raw data points to determine success criteria.
func (o SloIndicatorWindowBasedEvaluationOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluation) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type SloIndicatorWindowBasedEvaluationPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicatorWindowBasedEvaluation)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationPtrOutput) ToSloIndicatorWindowBasedEvaluationPtrOutput() SloIndicatorWindowBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationPtrOutput) ToSloIndicatorWindowBasedEvaluationPtrOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationPtrOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationPtrOutput) Elem() SloIndicatorWindowBasedEvaluationOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) SloIndicatorWindowBasedEvaluation {
		if v != nil {
			return *v
		}
		var ret SloIndicatorWindowBasedEvaluation
		return ret
	}).(SloIndicatorWindowBasedEvaluationOutput)
}

// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
// , `GreaterThanOrEqual`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.Op
	}).(pulumi.StringPtrOutput)
}

// The queries to use.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Queries() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) []SloIndicatorWindowBasedEvaluationQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(SloIndicatorWindowBasedEvaluationQueryArrayOutput)
}

// The type of query to use. Valid values are `Metrics` or `Logs`.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) QueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.QueryType
	}).(pulumi.StringPtrOutput)
}

// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
// based evaluation.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *string {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.StringPtrOutput)
}

// Compared against threshold query's raw data points to determine success criteria.
func (o SloIndicatorWindowBasedEvaluationPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloIndicatorWindowBasedEvaluation) *float64 {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type SloIndicatorWindowBasedEvaluationQuery struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType string `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups []SloIndicatorWindowBasedEvaluationQueryQueryGroup `pulumi:"queryGroups"`
}

// SloIndicatorWindowBasedEvaluationQueryInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryArgs and SloIndicatorWindowBasedEvaluationQueryOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryInput` via:
//
//          SloIndicatorWindowBasedEvaluationQueryArgs{...}
type SloIndicatorWindowBasedEvaluationQueryInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryOutput() SloIndicatorWindowBasedEvaluationQueryOutput
	ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryOutput
}

type SloIndicatorWindowBasedEvaluationQueryArgs struct {
	// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
	// , `Threshold`.
	QueryGroupType pulumi.StringInput `pulumi:"queryGroupType"`
	// List of queries to use.
	QueryGroups SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput `pulumi:"queryGroups"`
}

func (SloIndicatorWindowBasedEvaluationQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryArgs) ToSloIndicatorWindowBasedEvaluationQueryOutput() SloIndicatorWindowBasedEvaluationQueryOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryArgs) ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryOutput)
}

// SloIndicatorWindowBasedEvaluationQueryArrayInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryArray and SloIndicatorWindowBasedEvaluationQueryArrayOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryArrayInput` via:
//
//          SloIndicatorWindowBasedEvaluationQueryArray{ SloIndicatorWindowBasedEvaluationQueryArgs{...} }
type SloIndicatorWindowBasedEvaluationQueryArrayInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryArrayOutput() SloIndicatorWindowBasedEvaluationQueryArrayOutput
	ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryArrayOutput
}

type SloIndicatorWindowBasedEvaluationQueryArray []SloIndicatorWindowBasedEvaluationQueryInput

func (SloIndicatorWindowBasedEvaluationQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryArray) ToSloIndicatorWindowBasedEvaluationQueryArrayOutput() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryArray) ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryArrayOutput)
}

type SloIndicatorWindowBasedEvaluationQueryOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryOutput) ToSloIndicatorWindowBasedEvaluationQueryOutput() SloIndicatorWindowBasedEvaluationQueryOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryOutput) ToSloIndicatorWindowBasedEvaluationQueryOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryOutput {
	return o
}

// The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
// , `Threshold`.
func (o SloIndicatorWindowBasedEvaluationQueryOutput) QueryGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQuery) string { return v.QueryGroupType }).(pulumi.StringOutput)
}

// List of queries to use.
func (o SloIndicatorWindowBasedEvaluationQueryOutput) QueryGroups() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQuery) []SloIndicatorWindowBasedEvaluationQueryQueryGroup {
		return v.QueryGroups
	}).(SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorWindowBasedEvaluationQueryArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQuery)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryArrayOutput() SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryArrayOutput) Index(i pulumi.IntInput) SloIndicatorWindowBasedEvaluationQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorWindowBasedEvaluationQuery {
		return vs[0].([]SloIndicatorWindowBasedEvaluationQuery)[vs[1].(int)]
	}).(SloIndicatorWindowBasedEvaluationQueryOutput)
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroup struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field *string `pulumi:"field"`
	// The query string to use.
	Query string `pulumi:"query"`
	// The row ID to use.
	RowId string `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount bool `pulumi:"useRowCount"`
}

// SloIndicatorWindowBasedEvaluationQueryQueryGroupInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs and SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryQueryGroupInput` via:
//
//          SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs{...}
type SloIndicatorWindowBasedEvaluationQueryQueryGroupInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput
	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs struct {
	// Field of log query output to compare against. To be used only for logs based data
	// type when `useRowCount` is false.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// The query string to use.
	Query pulumi.StringInput `pulumi:"query"`
	// The row ID to use.
	RowId pulumi.StringInput `pulumi:"rowId"`
	// Whether to use the row count. Defaults to false.
	UseRowCount pulumi.BoolInput `pulumi:"useRowCount"`
}

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput)
}

// SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput is an input type that accepts SloIndicatorWindowBasedEvaluationQueryQueryGroupArray and SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput values.
// You can construct a concrete instance of `SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput` via:
//
//          SloIndicatorWindowBasedEvaluationQueryQueryGroupArray{ SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs{...} }
type SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput interface {
	pulumi.Input

	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput
	ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupArray []SloIndicatorWindowBasedEvaluationQueryQueryGroupInput

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArray) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return i.ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(context.Background())
}

func (i SloIndicatorWindowBasedEvaluationQueryQueryGroupArray) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput)
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return o
}

// Field of log query output to compare against. To be used only for logs based data
// type when `useRowCount` is false.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// The query string to use.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) string { return v.Query }).(pulumi.StringOutput)
}

// The row ID to use.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) RowId() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) string { return v.RowId }).(pulumi.StringOutput)
}

// Whether to use the row count. Defaults to false.
func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput) UseRowCount() pulumi.BoolOutput {
	return o.ApplyT(func(v SloIndicatorWindowBasedEvaluationQueryQueryGroup) bool { return v.UseRowCount }).(pulumi.BoolOutput)
}

type SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput struct{ *pulumi.OutputState }

func (SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloIndicatorWindowBasedEvaluationQueryQueryGroup)(nil)).Elem()
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput() SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) ToSloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutputWithContext(ctx context.Context) SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput {
	return o
}

func (o SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput) Index(i pulumi.IntInput) SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloIndicatorWindowBasedEvaluationQueryQueryGroup {
		return vs[0].([]SloIndicatorWindowBasedEvaluationQueryQueryGroup)[vs[1].(int)]
	}).(SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceAuthenticationInput)(nil)).Elem(), AwsInventorySourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceAuthenticationPtrInput)(nil)).Elem(), AwsInventorySourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceDefaultDateFormatInput)(nil)).Elem(), AwsInventorySourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceDefaultDateFormatArrayInput)(nil)).Elem(), AwsInventorySourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceFilterInput)(nil)).Elem(), AwsInventorySourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourceFilterArrayInput)(nil)).Elem(), AwsInventorySourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathInput)(nil)).Elem(), AwsInventorySourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathPtrInput)(nil)).Elem(), AwsInventorySourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathCustomServiceInput)(nil)).Elem(), AwsInventorySourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathCustomServiceArrayInput)(nil)).Elem(), AwsInventorySourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), AwsInventorySourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathTagFilterInput)(nil)).Elem(), AwsInventorySourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInventorySourcePathTagFilterArrayInput)(nil)).Elem(), AwsInventorySourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourceAuthenticationInput)(nil)).Elem(), AwsXraySourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourceAuthenticationPtrInput)(nil)).Elem(), AwsXraySourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourceDefaultDateFormatInput)(nil)).Elem(), AwsXraySourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourceDefaultDateFormatArrayInput)(nil)).Elem(), AwsXraySourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourceFilterInput)(nil)).Elem(), AwsXraySourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourceFilterArrayInput)(nil)).Elem(), AwsXraySourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathInput)(nil)).Elem(), AwsXraySourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathPtrInput)(nil)).Elem(), AwsXraySourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathCustomServiceInput)(nil)).Elem(), AwsXraySourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathCustomServiceArrayInput)(nil)).Elem(), AwsXraySourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), AwsXraySourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), AwsXraySourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathTagFilterInput)(nil)).Elem(), AwsXraySourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsXraySourcePathTagFilterArrayInput)(nil)).Elem(), AwsXraySourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceDefaultDateFormatInput)(nil)).Elem(), CloudSyslogSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceDefaultDateFormatArrayInput)(nil)).Elem(), CloudSyslogSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceFilterInput)(nil)).Elem(), CloudSyslogSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceFilterArrayInput)(nil)).Elem(), CloudSyslogSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourceAuthenticationInput)(nil)).Elem(), CloudfrontSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourceAuthenticationPtrInput)(nil)).Elem(), CloudfrontSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourceDefaultDateFormatInput)(nil)).Elem(), CloudfrontSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourceDefaultDateFormatArrayInput)(nil)).Elem(), CloudfrontSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourceFilterInput)(nil)).Elem(), CloudfrontSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourceFilterArrayInput)(nil)).Elem(), CloudfrontSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathInput)(nil)).Elem(), CloudfrontSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathPtrInput)(nil)).Elem(), CloudfrontSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathCustomServiceInput)(nil)).Elem(), CloudfrontSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathCustomServiceArrayInput)(nil)).Elem(), CloudfrontSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), CloudfrontSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), CloudfrontSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathTagFilterInput)(nil)).Elem(), CloudfrontSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfrontSourcePathTagFilterArrayInput)(nil)).Elem(), CloudfrontSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourceAuthenticationInput)(nil)).Elem(), CloudtrailSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourceAuthenticationPtrInput)(nil)).Elem(), CloudtrailSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourceDefaultDateFormatInput)(nil)).Elem(), CloudtrailSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourceDefaultDateFormatArrayInput)(nil)).Elem(), CloudtrailSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourceFilterInput)(nil)).Elem(), CloudtrailSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourceFilterArrayInput)(nil)).Elem(), CloudtrailSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathInput)(nil)).Elem(), CloudtrailSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathPtrInput)(nil)).Elem(), CloudtrailSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathCustomServiceInput)(nil)).Elem(), CloudtrailSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathCustomServiceArrayInput)(nil)).Elem(), CloudtrailSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), CloudtrailSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), CloudtrailSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathTagFilterInput)(nil)).Elem(), CloudtrailSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudtrailSourcePathTagFilterArrayInput)(nil)).Elem(), CloudtrailSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourceAuthenticationInput)(nil)).Elem(), CloudwatchSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourceAuthenticationPtrInput)(nil)).Elem(), CloudwatchSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourceDefaultDateFormatInput)(nil)).Elem(), CloudwatchSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourceDefaultDateFormatArrayInput)(nil)).Elem(), CloudwatchSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourceFilterInput)(nil)).Elem(), CloudwatchSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourceFilterArrayInput)(nil)).Elem(), CloudwatchSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathInput)(nil)).Elem(), CloudwatchSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathPtrInput)(nil)).Elem(), CloudwatchSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathCustomServiceInput)(nil)).Elem(), CloudwatchSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathCustomServiceArrayInput)(nil)).Elem(), CloudwatchSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), CloudwatchSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathTagFilterInput)(nil)).Elem(), CloudwatchSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudwatchSourcePathTagFilterArrayInput)(nil)).Elem(), CloudwatchSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentPermissionPermissionInput)(nil)).Elem(), ContentPermissionPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContentPermissionPermissionArrayInput)(nil)).Elem(), ContentPermissionPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleAggregationFunctionInput)(nil)).Elem(), CseAggregationRuleAggregationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleAggregationFunctionArrayInput)(nil)).Elem(), CseAggregationRuleAggregationFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleEntitySelectorInput)(nil)).Elem(), CseAggregationRuleEntitySelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleEntitySelectorArrayInput)(nil)).Elem(), CseAggregationRuleEntitySelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleSeverityMappingInput)(nil)).Elem(), CseAggregationRuleSeverityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleSeverityMappingPtrInput)(nil)).Elem(), CseAggregationRuleSeverityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleSeverityMappingMappingInput)(nil)).Elem(), CseAggregationRuleSeverityMappingMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseAggregationRuleSeverityMappingMappingArrayInput)(nil)).Elem(), CseAggregationRuleSeverityMappingMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseChainRuleEntitySelectorInput)(nil)).Elem(), CseChainRuleEntitySelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseChainRuleEntitySelectorArrayInput)(nil)).Elem(), CseChainRuleEntitySelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseChainRuleExpressionsAndLimitInput)(nil)).Elem(), CseChainRuleExpressionsAndLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseChainRuleExpressionsAndLimitArrayInput)(nil)).Elem(), CseChainRuleExpressionsAndLimitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingFieldInput)(nil)).Elem(), CseLogMappingFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingFieldArrayInput)(nil)).Elem(), CseLogMappingFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingFieldLookupInput)(nil)).Elem(), CseLogMappingFieldLookupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingFieldLookupArrayInput)(nil)).Elem(), CseLogMappingFieldLookupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingStructuredInputInput)(nil)).Elem(), CseLogMappingStructuredInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingStructuredInputArrayInput)(nil)).Elem(), CseLogMappingStructuredInputArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingUnstructuredFieldsInput)(nil)).Elem(), CseLogMappingUnstructuredFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseLogMappingUnstructuredFieldsPtrInput)(nil)).Elem(), CseLogMappingUnstructuredFieldsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchListItemInput)(nil)).Elem(), CseMatchListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchListItemArrayInput)(nil)).Elem(), CseMatchListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchRuleEntitySelectorInput)(nil)).Elem(), CseMatchRuleEntitySelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchRuleEntitySelectorArrayInput)(nil)).Elem(), CseMatchRuleEntitySelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchRuleSeverityMappingInput)(nil)).Elem(), CseMatchRuleSeverityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchRuleSeverityMappingPtrInput)(nil)).Elem(), CseMatchRuleSeverityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchRuleSeverityMappingMappingInput)(nil)).Elem(), CseMatchRuleSeverityMappingMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseMatchRuleSeverityMappingMappingArrayInput)(nil)).Elem(), CseMatchRuleSeverityMappingMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseThresholdRuleEntitySelectorInput)(nil)).Elem(), CseThresholdRuleEntitySelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseThresholdRuleEntitySelectorArrayInput)(nil)).Elem(), CseThresholdRuleEntitySelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColoringRuleInput)(nil)).Elem(), DashboardColoringRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColoringRuleArrayInput)(nil)).Elem(), DashboardColoringRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColoringRuleColorThresholdInput)(nil)).Elem(), DashboardColoringRuleColorThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardColoringRuleColorThresholdArrayInput)(nil)).Elem(), DashboardColoringRuleColorThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutInput)(nil)).Elem(), DashboardLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutPtrInput)(nil)).Elem(), DashboardLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutGridInput)(nil)).Elem(), DashboardLayoutGridArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutGridPtrInput)(nil)).Elem(), DashboardLayoutGridArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutGridLayoutStructureInput)(nil)).Elem(), DashboardLayoutGridLayoutStructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardLayoutGridLayoutStructureArrayInput)(nil)).Elem(), DashboardLayoutGridLayoutStructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelInput)(nil)).Elem(), DashboardPanelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelArrayInput)(nil)).Elem(), DashboardPanelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelInput)(nil)).Elem(), DashboardPanelSumoSearchPanelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelPtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleInput)(nil)).Elem(), DashboardPanelSumoSearchPanelColoringRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRulePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelColoringRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleColorThresholdInput)(nil)).Elem(), DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayInput)(nil)).Elem(), DashboardPanelSumoSearchPanelColoringRuleColorThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelLinkedDashboardInput)(nil)).Elem(), DashboardPanelSumoSearchPanelLinkedDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelLinkedDashboardPtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelLinkedDashboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryArrayInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayInput)(nil)).Elem(), DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrInput)(nil)).Elem(), DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelTextPanelInput)(nil)).Elem(), DashboardPanelTextPanelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardPanelTextPanelPtrInput)(nil)).Elem(), DashboardPanelTextPanelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeInput)(nil)).Elem(), DashboardTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromPtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToPtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeCompleteLiteralTimeRangeInput)(nil)).Elem(), DashboardTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTimeRangeCompleteLiteralTimeRangePtrInput)(nil)).Elem(), DashboardTimeRangeCompleteLiteralTimeRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopologyLabelMapInput)(nil)).Elem(), DashboardTopologyLabelMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopologyLabelMapPtrInput)(nil)).Elem(), DashboardTopologyLabelMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopologyLabelMapDataInput)(nil)).Elem(), DashboardTopologyLabelMapDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardTopologyLabelMapDataArrayInput)(nil)).Elem(), DashboardTopologyLabelMapDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableInput)(nil)).Elem(), DashboardVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableArrayInput)(nil)).Elem(), DashboardVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionInput)(nil)).Elem(), DashboardVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionCsvVariableSourceDefinitionInput)(nil)).Elem(), DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrInput)(nil)).Elem(), DashboardVariableSourceDefinitionCsvVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionInput)(nil)).Elem(), DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrInput)(nil)).Elem(), DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionInput)(nil)).Elem(), DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrInput)(nil)).Elem(), DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourceAuthenticationInput)(nil)).Elem(), ElbSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourceAuthenticationPtrInput)(nil)).Elem(), ElbSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourceDefaultDateFormatInput)(nil)).Elem(), ElbSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourceDefaultDateFormatArrayInput)(nil)).Elem(), ElbSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourceFilterInput)(nil)).Elem(), ElbSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourceFilterArrayInput)(nil)).Elem(), ElbSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathInput)(nil)).Elem(), ElbSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathPtrInput)(nil)).Elem(), ElbSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathCustomServiceInput)(nil)).Elem(), ElbSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathCustomServiceArrayInput)(nil)).Elem(), ElbSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), ElbSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), ElbSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathTagFilterInput)(nil)).Elem(), ElbSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElbSourcePathTagFilterArrayInput)(nil)).Elem(), ElbSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourceAuthenticationInput)(nil)).Elem(), GcpMetricsSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourceAuthenticationPtrInput)(nil)).Elem(), GcpMetricsSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourceDefaultDateFormatInput)(nil)).Elem(), GcpMetricsSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourceDefaultDateFormatArrayInput)(nil)).Elem(), GcpMetricsSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourceFilterInput)(nil)).Elem(), GcpMetricsSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourceFilterArrayInput)(nil)).Elem(), GcpMetricsSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathInput)(nil)).Elem(), GcpMetricsSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathPtrInput)(nil)).Elem(), GcpMetricsSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathCustomServiceInput)(nil)).Elem(), GcpMetricsSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathCustomServiceArrayInput)(nil)).Elem(), GcpMetricsSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), GcpMetricsSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), GcpMetricsSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathTagFilterInput)(nil)).Elem(), GcpMetricsSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpMetricsSourcePathTagFilterArrayInput)(nil)).Elem(), GcpMetricsSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourceAuthenticationInput)(nil)).Elem(), GcpSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourceAuthenticationPtrInput)(nil)).Elem(), GcpSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourceDefaultDateFormatInput)(nil)).Elem(), GcpSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourceDefaultDateFormatArrayInput)(nil)).Elem(), GcpSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourceFilterInput)(nil)).Elem(), GcpSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourceFilterArrayInput)(nil)).Elem(), GcpSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourcePathInput)(nil)).Elem(), GcpSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpSourcePathPtrInput)(nil)).Elem(), GcpSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyFilterInput)(nil)).Elem(), HierarchyFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyFilterPtrInput)(nil)).Elem(), HierarchyFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelInput)(nil)).Elem(), HierarchyLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelArrayInput)(nil)).Elem(), HierarchyLevelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelInput)(nil)).Elem(), HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceDefaultDateFormatInput)(nil)).Elem(), HttpSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceDefaultDateFormatArrayInput)(nil)).Elem(), HttpSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceFilterInput)(nil)).Elem(), HttpSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpSourceFilterArrayInput)(nil)).Elem(), HttpSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceAuthenticationInput)(nil)).Elem(), KineisLogSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceAuthenticationPtrInput)(nil)).Elem(), KineisLogSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceDefaultDateFormatInput)(nil)).Elem(), KineisLogSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceDefaultDateFormatArrayInput)(nil)).Elem(), KineisLogSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceFilterInput)(nil)).Elem(), KineisLogSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourceFilterArrayInput)(nil)).Elem(), KineisLogSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourcePathInput)(nil)).Elem(), KineisLogSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KineisLogSourcePathPtrInput)(nil)).Elem(), KineisLogSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceAuthenticationInput)(nil)).Elem(), KinesisMetricsSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceAuthenticationPtrInput)(nil)).Elem(), KinesisMetricsSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormatInput)(nil)).Elem(), KinesisMetricsSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceDefaultDateFormatArrayInput)(nil)).Elem(), KinesisMetricsSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceFilterInput)(nil)).Elem(), KinesisMetricsSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourceFilterArrayInput)(nil)).Elem(), KinesisMetricsSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathInput)(nil)).Elem(), KinesisMetricsSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathPtrInput)(nil)).Elem(), KinesisMetricsSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathTagFilterInput)(nil)).Elem(), KinesisMetricsSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KinesisMetricsSourcePathTagFilterArrayInput)(nil)).Elem(), KinesisMetricsSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LookupTableFieldInput)(nil)).Elem(), LookupTableFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LookupTableFieldArrayInput)(nil)).Elem(), LookupTableFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceAuthenticationInput)(nil)).Elem(), MetadataSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceAuthenticationPtrInput)(nil)).Elem(), MetadataSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceDefaultDateFormatInput)(nil)).Elem(), MetadataSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceDefaultDateFormatArrayInput)(nil)).Elem(), MetadataSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceFilterInput)(nil)).Elem(), MetadataSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceFilterArrayInput)(nil)).Elem(), MetadataSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourcePathInput)(nil)).Elem(), MetadataSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourcePathPtrInput)(nil)).Elem(), MetadataSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorFolderObjPermissionInput)(nil)).Elem(), MonitorFolderObjPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorFolderObjPermissionArrayInput)(nil)).Elem(), MonitorFolderObjPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorNotificationInput)(nil)).Elem(), MonitorNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorNotificationArrayInput)(nil)).Elem(), MonitorNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorNotificationNotificationInput)(nil)).Elem(), MonitorNotificationNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorObjPermissionInput)(nil)).Elem(), MonitorObjPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorObjPermissionArrayInput)(nil)).Elem(), MonitorObjPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorQueryInput)(nil)).Elem(), MonitorQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorQueryArrayInput)(nil)).Elem(), MonitorQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerInput)(nil)).Elem(), MonitorTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerArrayInput)(nil)).Elem(), MonitorTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsInput)(nil)).Elem(), MonitorTriggerConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsPtrInput)(nil)).Elem(), MonitorTriggerConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataConditionInput)(nil)).Elem(), MonitorTriggerConditionsLogsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsMissingDataConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsOutlierConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlertInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolutionInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlertInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolutionInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataConditionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsMissingDataConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsMissingDataConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsOutlierConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsOutlierConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlertInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlertInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolutionInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrInput)(nil)).Elem(), MonitorTriggerConditionsMetricsStaticConditionWarningResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloBurnRateConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloBurnRateConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCriticalInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionCriticalPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarningInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorTriggerConditionsSloSliConditionWarningPtrInput)(nil)).Elem(), MonitorTriggerConditionsSloSliConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoliciesUserConcurrentSessionsLimitInput)(nil)).Elem(), PoliciesUserConcurrentSessionsLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoliciesUserConcurrentSessionsLimitPtrInput)(nil)).Elem(), PoliciesUserConcurrentSessionsLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceAuthenticationInput)(nil)).Elem(), PollingSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceAuthenticationPtrInput)(nil)).Elem(), PollingSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceDefaultDateFormatInput)(nil)).Elem(), PollingSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceDefaultDateFormatArrayInput)(nil)).Elem(), PollingSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceFilterInput)(nil)).Elem(), PollingSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourceFilterArrayInput)(nil)).Elem(), PollingSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathInput)(nil)).Elem(), PollingSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathPtrInput)(nil)).Elem(), PollingSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathTagFilterInput)(nil)).Elem(), PollingSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PollingSourcePathTagFilterArrayInput)(nil)).Elem(), PollingSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceAuthenticationInput)(nil)).Elem(), S3AuditSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceAuthenticationPtrInput)(nil)).Elem(), S3AuditSourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceDefaultDateFormatInput)(nil)).Elem(), S3AuditSourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceDefaultDateFormatArrayInput)(nil)).Elem(), S3AuditSourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceFilterInput)(nil)).Elem(), S3AuditSourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourceFilterArrayInput)(nil)).Elem(), S3AuditSourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathInput)(nil)).Elem(), S3AuditSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathPtrInput)(nil)).Elem(), S3AuditSourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathCustomServiceInput)(nil)).Elem(), S3AuditSourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathCustomServiceArrayInput)(nil)).Elem(), S3AuditSourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), S3AuditSourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), S3AuditSourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathTagFilterInput)(nil)).Elem(), S3AuditSourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AuditSourcePathTagFilterArrayInput)(nil)).Elem(), S3AuditSourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceAuthenticationInput)(nil)).Elem(), S3SourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceAuthenticationPtrInput)(nil)).Elem(), S3SourceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceDefaultDateFormatInput)(nil)).Elem(), S3SourceDefaultDateFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceDefaultDateFormatArrayInput)(nil)).Elem(), S3SourceDefaultDateFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceFilterInput)(nil)).Elem(), S3SourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourceFilterArrayInput)(nil)).Elem(), S3SourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathInput)(nil)).Elem(), S3SourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathPtrInput)(nil)).Elem(), S3SourcePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathCustomServiceInput)(nil)).Elem(), S3SourcePathCustomServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathCustomServiceArrayInput)(nil)).Elem(), S3SourcePathCustomServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArnInput)(nil)).Elem(), S3SourcePathSnsTopicOrSubscriptionArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathSnsTopicOrSubscriptionArnArrayInput)(nil)).Elem(), S3SourcePathSnsTopicOrSubscriptionArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathTagFilterInput)(nil)).Elem(), S3SourcePathTagFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3SourcePathTagFilterArrayInput)(nil)).Elem(), S3SourcePathTagFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabledInput)(nil)).Elem(), SamlConfigurationOnDemandProvisioningEnabledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SamlConfigurationOnDemandProvisioningEnabledPtrInput)(nil)).Elem(), SamlConfigurationOnDemandProvisioningEnabledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloComplianceInput)(nil)).Elem(), SloComplianceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloComplianceArrayInput)(nil)).Elem(), SloComplianceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorInput)(nil)).Elem(), SloIndicatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorPtrInput)(nil)).Elem(), SloIndicatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationPtrInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryArrayInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroupInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryQueryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayInput)(nil)).Elem(), SloIndicatorRequestBasedEvaluationQueryQueryGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationPtrInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryArrayInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroupInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayInput)(nil)).Elem(), SloIndicatorWindowBasedEvaluationQueryQueryGroupArray{})
	pulumi.RegisterOutputType(AwsInventorySourceAuthenticationOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceFilterOutput{})
	pulumi.RegisterOutputType(AwsInventorySourceFilterArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathPtrOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(AwsInventorySourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourceAuthenticationOutput{})
	pulumi.RegisterOutputType(AwsXraySourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(AwsXraySourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(AwsXraySourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourceFilterOutput{})
	pulumi.RegisterOutputType(AwsXraySourceFilterArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathPtrOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(AwsXraySourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudfrontSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathPtrOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(CloudfrontSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudtrailSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathPtrOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(CloudtrailSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceFilterOutput{})
	pulumi.RegisterOutputType(CloudwatchSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathPtrOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(CloudwatchSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(ContentPermissionPermissionOutput{})
	pulumi.RegisterOutputType(ContentPermissionPermissionArrayOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleAggregationFunctionOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleAggregationFunctionArrayOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleEntitySelectorOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleEntitySelectorArrayOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleSeverityMappingOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleSeverityMappingPtrOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleSeverityMappingMappingOutput{})
	pulumi.RegisterOutputType(CseAggregationRuleSeverityMappingMappingArrayOutput{})
	pulumi.RegisterOutputType(CseChainRuleEntitySelectorOutput{})
	pulumi.RegisterOutputType(CseChainRuleEntitySelectorArrayOutput{})
	pulumi.RegisterOutputType(CseChainRuleExpressionsAndLimitOutput{})
	pulumi.RegisterOutputType(CseChainRuleExpressionsAndLimitArrayOutput{})
	pulumi.RegisterOutputType(CseLogMappingFieldOutput{})
	pulumi.RegisterOutputType(CseLogMappingFieldArrayOutput{})
	pulumi.RegisterOutputType(CseLogMappingFieldLookupOutput{})
	pulumi.RegisterOutputType(CseLogMappingFieldLookupArrayOutput{})
	pulumi.RegisterOutputType(CseLogMappingStructuredInputOutput{})
	pulumi.RegisterOutputType(CseLogMappingStructuredInputArrayOutput{})
	pulumi.RegisterOutputType(CseLogMappingUnstructuredFieldsOutput{})
	pulumi.RegisterOutputType(CseLogMappingUnstructuredFieldsPtrOutput{})
	pulumi.RegisterOutputType(CseMatchListItemOutput{})
	pulumi.RegisterOutputType(CseMatchListItemArrayOutput{})
	pulumi.RegisterOutputType(CseMatchRuleEntitySelectorOutput{})
	pulumi.RegisterOutputType(CseMatchRuleEntitySelectorArrayOutput{})
	pulumi.RegisterOutputType(CseMatchRuleSeverityMappingOutput{})
	pulumi.RegisterOutputType(CseMatchRuleSeverityMappingPtrOutput{})
	pulumi.RegisterOutputType(CseMatchRuleSeverityMappingMappingOutput{})
	pulumi.RegisterOutputType(CseMatchRuleSeverityMappingMappingArrayOutput{})
	pulumi.RegisterOutputType(CseThresholdRuleEntitySelectorOutput{})
	pulumi.RegisterOutputType(CseThresholdRuleEntitySelectorArrayOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleArrayOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleColorThresholdOutput{})
	pulumi.RegisterOutputType(DashboardColoringRuleColorThresholdArrayOutput{})
	pulumi.RegisterOutputType(DashboardLayoutOutput{})
	pulumi.RegisterOutputType(DashboardLayoutPtrOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridPtrOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridLayoutStructureOutput{})
	pulumi.RegisterOutputType(DashboardLayoutGridLayoutStructureArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelOutput{})
	pulumi.RegisterOutputType(DashboardPanelArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRuleOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRulePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRuleColorThresholdOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelLinkedDashboardOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelLinkedDashboardPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilterArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameterArrayOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardPanelTextPanelOutput{})
	pulumi.RegisterOutputType(DashboardPanelTextPanelPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToPtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeCompleteLiteralTimeRangeOutput{})
	pulumi.RegisterOutputType(DashboardTimeRangeCompleteLiteralTimeRangePtrOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapPtrOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapDataOutput{})
	pulumi.RegisterOutputType(DashboardTopologyLabelMapDataArrayOutput{})
	pulumi.RegisterOutputType(DashboardVariableOutput{})
	pulumi.RegisterOutputType(DashboardVariableArrayOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionCsvVariableSourceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionOutput{})
	pulumi.RegisterOutputType(DashboardVariableSourceDefinitionMetadataVariableSourceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ElbSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(ElbSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ElbSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(ElbSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(ElbSourceFilterOutput{})
	pulumi.RegisterOutputType(ElbSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(ElbSourcePathOutput{})
	pulumi.RegisterOutputType(ElbSourcePathPtrOutput{})
	pulumi.RegisterOutputType(ElbSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(ElbSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(ElbSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(ElbSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(ElbSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(ElbSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourceFilterOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathPtrOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(GcpMetricsSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(GcpSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(GcpSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GcpSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(GcpSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(GcpSourceFilterOutput{})
	pulumi.RegisterOutputType(GcpSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GcpSourcePathOutput{})
	pulumi.RegisterOutputType(GcpSourcePathPtrOutput{})
	pulumi.RegisterOutputType(HierarchyFilterOutput{})
	pulumi.RegisterOutputType(HierarchyFilterPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelPtrOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionArrayOutput{})
	pulumi.RegisterOutputType(HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelOutput{})
	pulumi.RegisterOutputType(HttpSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(HttpSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(HttpSourceFilterOutput{})
	pulumi.RegisterOutputType(HttpSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KineisLogSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(KineisLogSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KineisLogSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(KineisLogSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(KineisLogSourceFilterOutput{})
	pulumi.RegisterOutputType(KineisLogSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KineisLogSourcePathOutput{})
	pulumi.RegisterOutputType(KineisLogSourcePathPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceFilterOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathPtrOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(KinesisMetricsSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(LookupTableFieldOutput{})
	pulumi.RegisterOutputType(LookupTableFieldArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(MetadataSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(MetadataSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(MetadataSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourceFilterOutput{})
	pulumi.RegisterOutputType(MetadataSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(MetadataSourcePathOutput{})
	pulumi.RegisterOutputType(MetadataSourcePathPtrOutput{})
	pulumi.RegisterOutputType(MonitorFolderObjPermissionOutput{})
	pulumi.RegisterOutputType(MonitorFolderObjPermissionArrayOutput{})
	pulumi.RegisterOutputType(MonitorNotificationOutput{})
	pulumi.RegisterOutputType(MonitorNotificationArrayOutput{})
	pulumi.RegisterOutputType(MonitorNotificationNotificationOutput{})
	pulumi.RegisterOutputType(MonitorObjPermissionOutput{})
	pulumi.RegisterOutputType(MonitorObjPermissionArrayOutput{})
	pulumi.RegisterOutputType(MonitorQueryOutput{})
	pulumi.RegisterOutputType(MonitorQueryArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerOutput{})
	pulumi.RegisterOutputType(MonitorTriggerArrayOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsMissingDataConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsMissingDataConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsOutlierConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionCriticalResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsLogsStaticConditionWarningResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsMissingDataConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsMissingDataConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsOutlierConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionCriticalResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningAlertOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningAlertPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsMetricsStaticConditionWarningResolutionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloBurnRateConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionCriticalOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionWarningOutput{})
	pulumi.RegisterOutputType(MonitorTriggerConditionsSloSliConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(PoliciesUserConcurrentSessionsLimitOutput{})
	pulumi.RegisterOutputType(PoliciesUserConcurrentSessionsLimitPtrOutput{})
	pulumi.RegisterOutputType(PollingSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(PollingSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(PollingSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(PollingSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(PollingSourceFilterOutput{})
	pulumi.RegisterOutputType(PollingSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(PollingSourcePathOutput{})
	pulumi.RegisterOutputType(PollingSourcePathPtrOutput{})
	pulumi.RegisterOutputType(PollingSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(PollingSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3AuditSourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3AuditSourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3AuditSourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourceFilterOutput{})
	pulumi.RegisterOutputType(S3AuditSourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3AuditSourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(S3SourceAuthenticationOutput{})
	pulumi.RegisterOutputType(S3SourceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(S3SourceDefaultDateFormatOutput{})
	pulumi.RegisterOutputType(S3SourceDefaultDateFormatArrayOutput{})
	pulumi.RegisterOutputType(S3SourceFilterOutput{})
	pulumi.RegisterOutputType(S3SourceFilterArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathOutput{})
	pulumi.RegisterOutputType(S3SourcePathPtrOutput{})
	pulumi.RegisterOutputType(S3SourcePathCustomServiceOutput{})
	pulumi.RegisterOutputType(S3SourcePathCustomServiceArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathSnsTopicOrSubscriptionArnOutput{})
	pulumi.RegisterOutputType(S3SourcePathSnsTopicOrSubscriptionArnArrayOutput{})
	pulumi.RegisterOutputType(S3SourcePathTagFilterOutput{})
	pulumi.RegisterOutputType(S3SourcePathTagFilterArrayOutput{})
	pulumi.RegisterOutputType(SamlConfigurationOnDemandProvisioningEnabledOutput{})
	pulumi.RegisterOutputType(SamlConfigurationOnDemandProvisioningEnabledPtrOutput{})
	pulumi.RegisterOutputType(SloComplianceOutput{})
	pulumi.RegisterOutputType(SloComplianceArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorOutput{})
	pulumi.RegisterOutputType(SloIndicatorPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryQueryGroupOutput{})
	pulumi.RegisterOutputType(SloIndicatorRequestBasedEvaluationQueryQueryGroupArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationPtrOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryQueryGroupOutput{})
	pulumi.RegisterOutputType(SloIndicatorWindowBasedEvaluationQueryQueryGroupArrayOutput{})
}
