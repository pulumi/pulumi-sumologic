// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Sumo Logic CSE [First Seen Rule](https://help.sumologic.com/docs/cse/rules/write-first-seen-rule/).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sumologic.NewCseFirstSeenRule(ctx, "firstSeenRule", &sumologic.CseFirstSeenRuleArgs{
//				BaselineType:          pulumi.String("PER_ENTITY"),
//				BaselineWindowSize:    pulumi.String("35000"),
//				DescriptionExpression: pulumi.String("First User Login - {{ user_username }}"),
//				Enabled:               pulumi.Bool(true),
//				EntitySelectors: sumologic.CseFirstSeenRuleEntitySelectorArray{
//					&sumologic.CseFirstSeenRuleEntitySelectorArgs{
//						EntityType: pulumi.String("_username"),
//						Expression: pulumi.String("user_username"),
//					},
//					&sumologic.CseFirstSeenRuleEntitySelectorArgs{
//						EntityType: pulumi.String("_hostname"),
//						Expression: pulumi.String("dstDevice_hostname"),
//					},
//				},
//				FilterExpression: pulumi.String("objectType=\"Network\""),
//				GroupByFields: pulumi.StringArray{
//					pulumi.String("user_username"),
//				},
//				IsPrototype:         pulumi.Bool(false),
//				NameExpression:      pulumi.String("First User Login - {{ user_username }}"),
//				RetentionWindowSize: pulumi.String("86400000"),
//				Severity:            pulumi.Int(1),
//				ValueFields: pulumi.StringArray{
//					pulumi.String("dstDevice_hostname"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # First Seen Rules can be imported using the field id, e.g.hcl
//
// ```sh
//
//	$ pulumi import sumologic:index/cseFirstSeenRule:CseFirstSeenRule first_seen_rule id
//
// ```
type CseFirstSeenRule struct {
	pulumi.CustomResourceState

	// The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
	BaselineType pulumi.StringOutput `pulumi:"baselineType"`
	// The baseline window size in milliseconds
	BaselineWindowSize pulumi.StringOutput `pulumi:"baselineWindowSize"`
	// The description of the generated Signals
	DescriptionExpression pulumi.StringOutput `pulumi:"descriptionExpression"`
	// Whether the rule should generate Signals
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The entities to generate Signals on
	EntitySelectors CseFirstSeenRuleEntitySelectorArrayOutput `pulumi:"entitySelectors"`
	// The expression for which records to match on
	FilterExpression pulumi.StringOutput `pulumi:"filterExpression"`
	// A list of fields to group records by
	GroupByFields pulumi.StringArrayOutput `pulumi:"groupByFields"`
	// Whether the generated Signals should be prototype Signals
	IsPrototype pulumi.BoolPtrOutput `pulumi:"isPrototype"`
	// The name of the Rule
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the generated Signals
	NameExpression pulumi.StringOutput `pulumi:"nameExpression"`
	// The retention window size in milliseconds
	RetentionWindowSize pulumi.StringOutput `pulumi:"retentionWindowSize"`
	// The severity of the generated Signals
	Severity pulumi.IntOutput `pulumi:"severity"`
	// The summary of the generated Signals
	SummaryExpression pulumi.StringPtrOutput `pulumi:"summaryExpression"`
	// The tags of the generated Signals
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The value fields
	//
	// The following attributes are exported:
	ValueFields pulumi.StringArrayOutput `pulumi:"valueFields"`
}

// NewCseFirstSeenRule registers a new resource with the given unique name, arguments, and options.
func NewCseFirstSeenRule(ctx *pulumi.Context,
	name string, args *CseFirstSeenRuleArgs, opts ...pulumi.ResourceOption) (*CseFirstSeenRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BaselineType == nil {
		return nil, errors.New("invalid value for required argument 'BaselineType'")
	}
	if args.BaselineWindowSize == nil {
		return nil, errors.New("invalid value for required argument 'BaselineWindowSize'")
	}
	if args.DescriptionExpression == nil {
		return nil, errors.New("invalid value for required argument 'DescriptionExpression'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.EntitySelectors == nil {
		return nil, errors.New("invalid value for required argument 'EntitySelectors'")
	}
	if args.FilterExpression == nil {
		return nil, errors.New("invalid value for required argument 'FilterExpression'")
	}
	if args.NameExpression == nil {
		return nil, errors.New("invalid value for required argument 'NameExpression'")
	}
	if args.RetentionWindowSize == nil {
		return nil, errors.New("invalid value for required argument 'RetentionWindowSize'")
	}
	if args.Severity == nil {
		return nil, errors.New("invalid value for required argument 'Severity'")
	}
	if args.ValueFields == nil {
		return nil, errors.New("invalid value for required argument 'ValueFields'")
	}
	var resource CseFirstSeenRule
	err := ctx.RegisterResource("sumologic:index/cseFirstSeenRule:CseFirstSeenRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCseFirstSeenRule gets an existing CseFirstSeenRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCseFirstSeenRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CseFirstSeenRuleState, opts ...pulumi.ResourceOption) (*CseFirstSeenRule, error) {
	var resource CseFirstSeenRule
	err := ctx.ReadResource("sumologic:index/cseFirstSeenRule:CseFirstSeenRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CseFirstSeenRule resources.
type cseFirstSeenRuleState struct {
	// The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
	BaselineType *string `pulumi:"baselineType"`
	// The baseline window size in milliseconds
	BaselineWindowSize *string `pulumi:"baselineWindowSize"`
	// The description of the generated Signals
	DescriptionExpression *string `pulumi:"descriptionExpression"`
	// Whether the rule should generate Signals
	Enabled *bool `pulumi:"enabled"`
	// The entities to generate Signals on
	EntitySelectors []CseFirstSeenRuleEntitySelector `pulumi:"entitySelectors"`
	// The expression for which records to match on
	FilterExpression *string `pulumi:"filterExpression"`
	// A list of fields to group records by
	GroupByFields []string `pulumi:"groupByFields"`
	// Whether the generated Signals should be prototype Signals
	IsPrototype *bool `pulumi:"isPrototype"`
	// The name of the Rule
	Name *string `pulumi:"name"`
	// The name of the generated Signals
	NameExpression *string `pulumi:"nameExpression"`
	// The retention window size in milliseconds
	RetentionWindowSize *string `pulumi:"retentionWindowSize"`
	// The severity of the generated Signals
	Severity *int `pulumi:"severity"`
	// The summary of the generated Signals
	SummaryExpression *string `pulumi:"summaryExpression"`
	// The tags of the generated Signals
	Tags []string `pulumi:"tags"`
	// The value fields
	//
	// The following attributes are exported:
	ValueFields []string `pulumi:"valueFields"`
}

type CseFirstSeenRuleState struct {
	// The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
	BaselineType pulumi.StringPtrInput
	// The baseline window size in milliseconds
	BaselineWindowSize pulumi.StringPtrInput
	// The description of the generated Signals
	DescriptionExpression pulumi.StringPtrInput
	// Whether the rule should generate Signals
	Enabled pulumi.BoolPtrInput
	// The entities to generate Signals on
	EntitySelectors CseFirstSeenRuleEntitySelectorArrayInput
	// The expression for which records to match on
	FilterExpression pulumi.StringPtrInput
	// A list of fields to group records by
	GroupByFields pulumi.StringArrayInput
	// Whether the generated Signals should be prototype Signals
	IsPrototype pulumi.BoolPtrInput
	// The name of the Rule
	Name pulumi.StringPtrInput
	// The name of the generated Signals
	NameExpression pulumi.StringPtrInput
	// The retention window size in milliseconds
	RetentionWindowSize pulumi.StringPtrInput
	// The severity of the generated Signals
	Severity pulumi.IntPtrInput
	// The summary of the generated Signals
	SummaryExpression pulumi.StringPtrInput
	// The tags of the generated Signals
	Tags pulumi.StringArrayInput
	// The value fields
	//
	// The following attributes are exported:
	ValueFields pulumi.StringArrayInput
}

func (CseFirstSeenRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*cseFirstSeenRuleState)(nil)).Elem()
}

type cseFirstSeenRuleArgs struct {
	// The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
	BaselineType string `pulumi:"baselineType"`
	// The baseline window size in milliseconds
	BaselineWindowSize string `pulumi:"baselineWindowSize"`
	// The description of the generated Signals
	DescriptionExpression string `pulumi:"descriptionExpression"`
	// Whether the rule should generate Signals
	Enabled bool `pulumi:"enabled"`
	// The entities to generate Signals on
	EntitySelectors []CseFirstSeenRuleEntitySelector `pulumi:"entitySelectors"`
	// The expression for which records to match on
	FilterExpression string `pulumi:"filterExpression"`
	// A list of fields to group records by
	GroupByFields []string `pulumi:"groupByFields"`
	// Whether the generated Signals should be prototype Signals
	IsPrototype *bool `pulumi:"isPrototype"`
	// The name of the Rule
	Name *string `pulumi:"name"`
	// The name of the generated Signals
	NameExpression string `pulumi:"nameExpression"`
	// The retention window size in milliseconds
	RetentionWindowSize string `pulumi:"retentionWindowSize"`
	// The severity of the generated Signals
	Severity int `pulumi:"severity"`
	// The summary of the generated Signals
	SummaryExpression *string `pulumi:"summaryExpression"`
	// The tags of the generated Signals
	Tags []string `pulumi:"tags"`
	// The value fields
	//
	// The following attributes are exported:
	ValueFields []string `pulumi:"valueFields"`
}

// The set of arguments for constructing a CseFirstSeenRule resource.
type CseFirstSeenRuleArgs struct {
	// The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
	BaselineType pulumi.StringInput
	// The baseline window size in milliseconds
	BaselineWindowSize pulumi.StringInput
	// The description of the generated Signals
	DescriptionExpression pulumi.StringInput
	// Whether the rule should generate Signals
	Enabled pulumi.BoolInput
	// The entities to generate Signals on
	EntitySelectors CseFirstSeenRuleEntitySelectorArrayInput
	// The expression for which records to match on
	FilterExpression pulumi.StringInput
	// A list of fields to group records by
	GroupByFields pulumi.StringArrayInput
	// Whether the generated Signals should be prototype Signals
	IsPrototype pulumi.BoolPtrInput
	// The name of the Rule
	Name pulumi.StringPtrInput
	// The name of the generated Signals
	NameExpression pulumi.StringInput
	// The retention window size in milliseconds
	RetentionWindowSize pulumi.StringInput
	// The severity of the generated Signals
	Severity pulumi.IntInput
	// The summary of the generated Signals
	SummaryExpression pulumi.StringPtrInput
	// The tags of the generated Signals
	Tags pulumi.StringArrayInput
	// The value fields
	//
	// The following attributes are exported:
	ValueFields pulumi.StringArrayInput
}

func (CseFirstSeenRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cseFirstSeenRuleArgs)(nil)).Elem()
}

type CseFirstSeenRuleInput interface {
	pulumi.Input

	ToCseFirstSeenRuleOutput() CseFirstSeenRuleOutput
	ToCseFirstSeenRuleOutputWithContext(ctx context.Context) CseFirstSeenRuleOutput
}

func (*CseFirstSeenRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CseFirstSeenRule)(nil)).Elem()
}

func (i *CseFirstSeenRule) ToCseFirstSeenRuleOutput() CseFirstSeenRuleOutput {
	return i.ToCseFirstSeenRuleOutputWithContext(context.Background())
}

func (i *CseFirstSeenRule) ToCseFirstSeenRuleOutputWithContext(ctx context.Context) CseFirstSeenRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseFirstSeenRuleOutput)
}

// CseFirstSeenRuleArrayInput is an input type that accepts CseFirstSeenRuleArray and CseFirstSeenRuleArrayOutput values.
// You can construct a concrete instance of `CseFirstSeenRuleArrayInput` via:
//
//	CseFirstSeenRuleArray{ CseFirstSeenRuleArgs{...} }
type CseFirstSeenRuleArrayInput interface {
	pulumi.Input

	ToCseFirstSeenRuleArrayOutput() CseFirstSeenRuleArrayOutput
	ToCseFirstSeenRuleArrayOutputWithContext(context.Context) CseFirstSeenRuleArrayOutput
}

type CseFirstSeenRuleArray []CseFirstSeenRuleInput

func (CseFirstSeenRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseFirstSeenRule)(nil)).Elem()
}

func (i CseFirstSeenRuleArray) ToCseFirstSeenRuleArrayOutput() CseFirstSeenRuleArrayOutput {
	return i.ToCseFirstSeenRuleArrayOutputWithContext(context.Background())
}

func (i CseFirstSeenRuleArray) ToCseFirstSeenRuleArrayOutputWithContext(ctx context.Context) CseFirstSeenRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseFirstSeenRuleArrayOutput)
}

// CseFirstSeenRuleMapInput is an input type that accepts CseFirstSeenRuleMap and CseFirstSeenRuleMapOutput values.
// You can construct a concrete instance of `CseFirstSeenRuleMapInput` via:
//
//	CseFirstSeenRuleMap{ "key": CseFirstSeenRuleArgs{...} }
type CseFirstSeenRuleMapInput interface {
	pulumi.Input

	ToCseFirstSeenRuleMapOutput() CseFirstSeenRuleMapOutput
	ToCseFirstSeenRuleMapOutputWithContext(context.Context) CseFirstSeenRuleMapOutput
}

type CseFirstSeenRuleMap map[string]CseFirstSeenRuleInput

func (CseFirstSeenRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseFirstSeenRule)(nil)).Elem()
}

func (i CseFirstSeenRuleMap) ToCseFirstSeenRuleMapOutput() CseFirstSeenRuleMapOutput {
	return i.ToCseFirstSeenRuleMapOutputWithContext(context.Background())
}

func (i CseFirstSeenRuleMap) ToCseFirstSeenRuleMapOutputWithContext(ctx context.Context) CseFirstSeenRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CseFirstSeenRuleMapOutput)
}

type CseFirstSeenRuleOutput struct{ *pulumi.OutputState }

func (CseFirstSeenRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CseFirstSeenRule)(nil)).Elem()
}

func (o CseFirstSeenRuleOutput) ToCseFirstSeenRuleOutput() CseFirstSeenRuleOutput {
	return o
}

func (o CseFirstSeenRuleOutput) ToCseFirstSeenRuleOutputWithContext(ctx context.Context) CseFirstSeenRuleOutput {
	return o
}

// The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
func (o CseFirstSeenRuleOutput) BaselineType() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.BaselineType }).(pulumi.StringOutput)
}

// The baseline window size in milliseconds
func (o CseFirstSeenRuleOutput) BaselineWindowSize() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.BaselineWindowSize }).(pulumi.StringOutput)
}

// The description of the generated Signals
func (o CseFirstSeenRuleOutput) DescriptionExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.DescriptionExpression }).(pulumi.StringOutput)
}

// Whether the rule should generate Signals
func (o CseFirstSeenRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The entities to generate Signals on
func (o CseFirstSeenRuleOutput) EntitySelectors() CseFirstSeenRuleEntitySelectorArrayOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) CseFirstSeenRuleEntitySelectorArrayOutput { return v.EntitySelectors }).(CseFirstSeenRuleEntitySelectorArrayOutput)
}

// The expression for which records to match on
func (o CseFirstSeenRuleOutput) FilterExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.FilterExpression }).(pulumi.StringOutput)
}

// A list of fields to group records by
func (o CseFirstSeenRuleOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringArrayOutput { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

// Whether the generated Signals should be prototype Signals
func (o CseFirstSeenRuleOutput) IsPrototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.BoolPtrOutput { return v.IsPrototype }).(pulumi.BoolPtrOutput)
}

// The name of the Rule
func (o CseFirstSeenRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the generated Signals
func (o CseFirstSeenRuleOutput) NameExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.NameExpression }).(pulumi.StringOutput)
}

// The retention window size in milliseconds
func (o CseFirstSeenRuleOutput) RetentionWindowSize() pulumi.StringOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringOutput { return v.RetentionWindowSize }).(pulumi.StringOutput)
}

// The severity of the generated Signals
func (o CseFirstSeenRuleOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.IntOutput { return v.Severity }).(pulumi.IntOutput)
}

// The summary of the generated Signals
func (o CseFirstSeenRuleOutput) SummaryExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringPtrOutput { return v.SummaryExpression }).(pulumi.StringPtrOutput)
}

// The tags of the generated Signals
func (o CseFirstSeenRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The value fields
//
// The following attributes are exported:
func (o CseFirstSeenRuleOutput) ValueFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CseFirstSeenRule) pulumi.StringArrayOutput { return v.ValueFields }).(pulumi.StringArrayOutput)
}

type CseFirstSeenRuleArrayOutput struct{ *pulumi.OutputState }

func (CseFirstSeenRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CseFirstSeenRule)(nil)).Elem()
}

func (o CseFirstSeenRuleArrayOutput) ToCseFirstSeenRuleArrayOutput() CseFirstSeenRuleArrayOutput {
	return o
}

func (o CseFirstSeenRuleArrayOutput) ToCseFirstSeenRuleArrayOutputWithContext(ctx context.Context) CseFirstSeenRuleArrayOutput {
	return o
}

func (o CseFirstSeenRuleArrayOutput) Index(i pulumi.IntInput) CseFirstSeenRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CseFirstSeenRule {
		return vs[0].([]*CseFirstSeenRule)[vs[1].(int)]
	}).(CseFirstSeenRuleOutput)
}

type CseFirstSeenRuleMapOutput struct{ *pulumi.OutputState }

func (CseFirstSeenRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CseFirstSeenRule)(nil)).Elem()
}

func (o CseFirstSeenRuleMapOutput) ToCseFirstSeenRuleMapOutput() CseFirstSeenRuleMapOutput {
	return o
}

func (o CseFirstSeenRuleMapOutput) ToCseFirstSeenRuleMapOutputWithContext(ctx context.Context) CseFirstSeenRuleMapOutput {
	return o
}

func (o CseFirstSeenRuleMapOutput) MapIndex(k pulumi.StringInput) CseFirstSeenRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CseFirstSeenRule {
		return vs[0].(map[string]*CseFirstSeenRule)[vs[1].(string)]
	}).(CseFirstSeenRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CseFirstSeenRuleInput)(nil)).Elem(), &CseFirstSeenRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseFirstSeenRuleArrayInput)(nil)).Elem(), CseFirstSeenRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CseFirstSeenRuleMapInput)(nil)).Elem(), CseFirstSeenRuleMap{})
	pulumi.RegisterOutputType(CseFirstSeenRuleOutput{})
	pulumi.RegisterOutputType(CseFirstSeenRuleArrayOutput{})
	pulumi.RegisterOutputType(CseFirstSeenRuleMapOutput{})
}
