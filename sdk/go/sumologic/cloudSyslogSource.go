// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sumologic

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a [Sumo Logic Cloud Syslog source](https://help.sumologic.com/Send_Data/Sources/02Sources_for_Hosted_Collectors/Cloud_Syslog_Source).
//
// __IMPORTANT:__ The token is stored in plain-text in the state. This is a potential security issue.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-sumologic/sdk/go/sumologic"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		collector, err := sumologic.NewCollector(ctx, "collector", &sumologic.CollectorArgs{
// 			Description: pulumi.String("Just testing this"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = sumologic.NewCloudSyslogSource(ctx, "cloudsyslogSource", &sumologic.CloudSyslogSourceArgs{
// 			Category:    pulumi.String("my/source/category"),
// 			CollectorId: collector.ID(),
// 			Description: pulumi.String("My description"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Attributes reference
//
// The following attributes are exported:
//
// - `id` - The internal ID of the source.
// - `token` - The token to use for sending data to this source.
//
// ## Import
//
// Cloud Syslog sources can be imported using the collector and source IDs (`collector/source`), e.g.hcl
//
// ```sh
//  $ pulumi import sumologic:index/cloudSyslogSource:CloudSyslogSource test 123/456
// ```
//
//  HTTP sources can be imported using the collector name and source name (`collectorName/sourceName`), e.g.hcl
//
// ```sh
//  $ pulumi import sumologic:index/cloudSyslogSource:CloudSyslogSource test my-test-collector/my-test-source
// ```
//
//  [1]https://help.sumologic.com/Send_Data/Sources/02Sources_for_Hosted_Collectors/Cloud_Syslog_Source
type CloudSyslogSource struct {
	pulumi.CustomResourceState

	AutomaticDateParsing       pulumi.BoolPtrOutput                          `pulumi:"automaticDateParsing"`
	Category                   pulumi.StringPtrOutput                        `pulumi:"category"`
	CollectorId                pulumi.IntOutput                              `pulumi:"collectorId"`
	ContentType                pulumi.StringPtrOutput                        `pulumi:"contentType"`
	CutoffRelativeTime         pulumi.StringPtrOutput                        `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            pulumi.IntPtrOutput                           `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         CloudSyslogSourceDefaultDateFormatArrayOutput `pulumi:"defaultDateFormats"`
	Description                pulumi.StringPtrOutput                        `pulumi:"description"`
	Fields                     pulumi.StringMapOutput                        `pulumi:"fields"`
	Filters                    CloudSyslogSourceFilterArrayOutput            `pulumi:"filters"`
	ForceTimezone              pulumi.BoolPtrOutput                          `pulumi:"forceTimezone"`
	HostName                   pulumi.StringPtrOutput                        `pulumi:"hostName"`
	ManualPrefixRegexp         pulumi.StringPtrOutput                        `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled pulumi.BoolPtrOutput                          `pulumi:"multilineProcessingEnabled"`
	Name                       pulumi.StringOutput                           `pulumi:"name"`
	Timezone                   pulumi.StringPtrOutput                        `pulumi:"timezone"`
	Token                      pulumi.StringOutput                           `pulumi:"token"`
	UseAutolineMatching        pulumi.BoolPtrOutput                          `pulumi:"useAutolineMatching"`
}

// NewCloudSyslogSource registers a new resource with the given unique name, arguments, and options.
func NewCloudSyslogSource(ctx *pulumi.Context,
	name string, args *CloudSyslogSourceArgs, opts ...pulumi.ResourceOption) (*CloudSyslogSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CollectorId == nil {
		return nil, errors.New("invalid value for required argument 'CollectorId'")
	}
	var resource CloudSyslogSource
	err := ctx.RegisterResource("sumologic:index/cloudSyslogSource:CloudSyslogSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudSyslogSource gets an existing CloudSyslogSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudSyslogSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudSyslogSourceState, opts ...pulumi.ResourceOption) (*CloudSyslogSource, error) {
	var resource CloudSyslogSource
	err := ctx.ReadResource("sumologic:index/cloudSyslogSource:CloudSyslogSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudSyslogSource resources.
type cloudSyslogSourceState struct {
	AutomaticDateParsing       *bool                                `pulumi:"automaticDateParsing"`
	Category                   *string                              `pulumi:"category"`
	CollectorId                *int                                 `pulumi:"collectorId"`
	ContentType                *string                              `pulumi:"contentType"`
	CutoffRelativeTime         *string                              `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                 `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []CloudSyslogSourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                              `pulumi:"description"`
	Fields                     map[string]string                    `pulumi:"fields"`
	Filters                    []CloudSyslogSourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                                `pulumi:"forceTimezone"`
	HostName                   *string                              `pulumi:"hostName"`
	ManualPrefixRegexp         *string                              `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                                `pulumi:"multilineProcessingEnabled"`
	Name                       *string                              `pulumi:"name"`
	Timezone                   *string                              `pulumi:"timezone"`
	Token                      *string                              `pulumi:"token"`
	UseAutolineMatching        *bool                                `pulumi:"useAutolineMatching"`
}

type CloudSyslogSourceState struct {
	AutomaticDateParsing       pulumi.BoolPtrInput
	Category                   pulumi.StringPtrInput
	CollectorId                pulumi.IntPtrInput
	ContentType                pulumi.StringPtrInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         CloudSyslogSourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    CloudSyslogSourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	Timezone                   pulumi.StringPtrInput
	Token                      pulumi.StringPtrInput
	UseAutolineMatching        pulumi.BoolPtrInput
}

func (CloudSyslogSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudSyslogSourceState)(nil)).Elem()
}

type cloudSyslogSourceArgs struct {
	AutomaticDateParsing       *bool                                `pulumi:"automaticDateParsing"`
	Category                   *string                              `pulumi:"category"`
	CollectorId                int                                  `pulumi:"collectorId"`
	ContentType                *string                              `pulumi:"contentType"`
	CutoffRelativeTime         *string                              `pulumi:"cutoffRelativeTime"`
	CutoffTimestamp            *int                                 `pulumi:"cutoffTimestamp"`
	DefaultDateFormats         []CloudSyslogSourceDefaultDateFormat `pulumi:"defaultDateFormats"`
	Description                *string                              `pulumi:"description"`
	Fields                     map[string]string                    `pulumi:"fields"`
	Filters                    []CloudSyslogSourceFilter            `pulumi:"filters"`
	ForceTimezone              *bool                                `pulumi:"forceTimezone"`
	HostName                   *string                              `pulumi:"hostName"`
	ManualPrefixRegexp         *string                              `pulumi:"manualPrefixRegexp"`
	MultilineProcessingEnabled *bool                                `pulumi:"multilineProcessingEnabled"`
	Name                       *string                              `pulumi:"name"`
	Timezone                   *string                              `pulumi:"timezone"`
	UseAutolineMatching        *bool                                `pulumi:"useAutolineMatching"`
}

// The set of arguments for constructing a CloudSyslogSource resource.
type CloudSyslogSourceArgs struct {
	AutomaticDateParsing       pulumi.BoolPtrInput
	Category                   pulumi.StringPtrInput
	CollectorId                pulumi.IntInput
	ContentType                pulumi.StringPtrInput
	CutoffRelativeTime         pulumi.StringPtrInput
	CutoffTimestamp            pulumi.IntPtrInput
	DefaultDateFormats         CloudSyslogSourceDefaultDateFormatArrayInput
	Description                pulumi.StringPtrInput
	Fields                     pulumi.StringMapInput
	Filters                    CloudSyslogSourceFilterArrayInput
	ForceTimezone              pulumi.BoolPtrInput
	HostName                   pulumi.StringPtrInput
	ManualPrefixRegexp         pulumi.StringPtrInput
	MultilineProcessingEnabled pulumi.BoolPtrInput
	Name                       pulumi.StringPtrInput
	Timezone                   pulumi.StringPtrInput
	UseAutolineMatching        pulumi.BoolPtrInput
}

func (CloudSyslogSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudSyslogSourceArgs)(nil)).Elem()
}

type CloudSyslogSourceInput interface {
	pulumi.Input

	ToCloudSyslogSourceOutput() CloudSyslogSourceOutput
	ToCloudSyslogSourceOutputWithContext(ctx context.Context) CloudSyslogSourceOutput
}

func (*CloudSyslogSource) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSyslogSource)(nil)).Elem()
}

func (i *CloudSyslogSource) ToCloudSyslogSourceOutput() CloudSyslogSourceOutput {
	return i.ToCloudSyslogSourceOutputWithContext(context.Background())
}

func (i *CloudSyslogSource) ToCloudSyslogSourceOutputWithContext(ctx context.Context) CloudSyslogSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceOutput)
}

// CloudSyslogSourceArrayInput is an input type that accepts CloudSyslogSourceArray and CloudSyslogSourceArrayOutput values.
// You can construct a concrete instance of `CloudSyslogSourceArrayInput` via:
//
//          CloudSyslogSourceArray{ CloudSyslogSourceArgs{...} }
type CloudSyslogSourceArrayInput interface {
	pulumi.Input

	ToCloudSyslogSourceArrayOutput() CloudSyslogSourceArrayOutput
	ToCloudSyslogSourceArrayOutputWithContext(context.Context) CloudSyslogSourceArrayOutput
}

type CloudSyslogSourceArray []CloudSyslogSourceInput

func (CloudSyslogSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudSyslogSource)(nil)).Elem()
}

func (i CloudSyslogSourceArray) ToCloudSyslogSourceArrayOutput() CloudSyslogSourceArrayOutput {
	return i.ToCloudSyslogSourceArrayOutputWithContext(context.Background())
}

func (i CloudSyslogSourceArray) ToCloudSyslogSourceArrayOutputWithContext(ctx context.Context) CloudSyslogSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceArrayOutput)
}

// CloudSyslogSourceMapInput is an input type that accepts CloudSyslogSourceMap and CloudSyslogSourceMapOutput values.
// You can construct a concrete instance of `CloudSyslogSourceMapInput` via:
//
//          CloudSyslogSourceMap{ "key": CloudSyslogSourceArgs{...} }
type CloudSyslogSourceMapInput interface {
	pulumi.Input

	ToCloudSyslogSourceMapOutput() CloudSyslogSourceMapOutput
	ToCloudSyslogSourceMapOutputWithContext(context.Context) CloudSyslogSourceMapOutput
}

type CloudSyslogSourceMap map[string]CloudSyslogSourceInput

func (CloudSyslogSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudSyslogSource)(nil)).Elem()
}

func (i CloudSyslogSourceMap) ToCloudSyslogSourceMapOutput() CloudSyslogSourceMapOutput {
	return i.ToCloudSyslogSourceMapOutputWithContext(context.Background())
}

func (i CloudSyslogSourceMap) ToCloudSyslogSourceMapOutputWithContext(ctx context.Context) CloudSyslogSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudSyslogSourceMapOutput)
}

type CloudSyslogSourceOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudSyslogSource)(nil)).Elem()
}

func (o CloudSyslogSourceOutput) ToCloudSyslogSourceOutput() CloudSyslogSourceOutput {
	return o
}

func (o CloudSyslogSourceOutput) ToCloudSyslogSourceOutputWithContext(ctx context.Context) CloudSyslogSourceOutput {
	return o
}

type CloudSyslogSourceArrayOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudSyslogSource)(nil)).Elem()
}

func (o CloudSyslogSourceArrayOutput) ToCloudSyslogSourceArrayOutput() CloudSyslogSourceArrayOutput {
	return o
}

func (o CloudSyslogSourceArrayOutput) ToCloudSyslogSourceArrayOutputWithContext(ctx context.Context) CloudSyslogSourceArrayOutput {
	return o
}

func (o CloudSyslogSourceArrayOutput) Index(i pulumi.IntInput) CloudSyslogSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudSyslogSource {
		return vs[0].([]*CloudSyslogSource)[vs[1].(int)]
	}).(CloudSyslogSourceOutput)
}

type CloudSyslogSourceMapOutput struct{ *pulumi.OutputState }

func (CloudSyslogSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudSyslogSource)(nil)).Elem()
}

func (o CloudSyslogSourceMapOutput) ToCloudSyslogSourceMapOutput() CloudSyslogSourceMapOutput {
	return o
}

func (o CloudSyslogSourceMapOutput) ToCloudSyslogSourceMapOutputWithContext(ctx context.Context) CloudSyslogSourceMapOutput {
	return o
}

func (o CloudSyslogSourceMapOutput) MapIndex(k pulumi.StringInput) CloudSyslogSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudSyslogSource {
		return vs[0].(map[string]*CloudSyslogSource)[vs[1].(string)]
	}).(CloudSyslogSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceInput)(nil)).Elem(), &CloudSyslogSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceArrayInput)(nil)).Elem(), CloudSyslogSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudSyslogSourceMapInput)(nil)).Elem(), CloudSyslogSourceMap{})
	pulumi.RegisterOutputType(CloudSyslogSourceOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceArrayOutput{})
	pulumi.RegisterOutputType(CloudSyslogSourceMapOutput{})
}
