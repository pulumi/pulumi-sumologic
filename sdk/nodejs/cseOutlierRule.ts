// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## ___
 *
 * layout: "sumologic"
 * page_title: "SumoLogic: sumologic.CseOutlierRule"
 * description: |-
 *   Provides a CSE Outlier Rule
 * ---
 *
 * # sumologic.CseOutlierRule
 * Provides a Sumo Logic CSE [Outlier Rule](https://help.sumologic.com/docs/cse/rules/write-outlier-rule/).
 *
 * ## Import
 *
 * Outlier rules can be imported using the field id, e.g.:
 *
 * hcl
 *
 * ```sh
 * $ pulumi import sumologic:index/cseOutlierRule:CseOutlierRule outlier_rule id
 * ```
 */
export class CseOutlierRule extends pulumi.CustomResource {
    /**
     * Get an existing CseOutlierRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CseOutlierRuleState, opts?: pulumi.CustomResourceOptions): CseOutlierRule {
        return new CseOutlierRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/cseOutlierRule:CseOutlierRule';

    /**
     * Returns true if the given object is an instance of CseOutlierRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CseOutlierRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CseOutlierRule.__pulumiType;
    }

    public readonly aggregationFunctions!: pulumi.Output<outputs.CseOutlierRuleAggregationFunctions>;
    /**
     * The baseline window size in milliseconds
     */
    public readonly baselineWindowSize!: pulumi.Output<string>;
    /**
     * The description of the generated Signals
     */
    public readonly descriptionExpression!: pulumi.Output<string>;
    /**
     * The deviation threshold used to calculate the threshold to trigger signals
     */
    public readonly deviationThreshold!: pulumi.Output<number>;
    /**
     * Whether the rule should generate Signals
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The entities to generate Signals on
     */
    public readonly entitySelectors!: pulumi.Output<outputs.CseOutlierRuleEntitySelector[]>;
    /**
     * The minimum threshold to trigger signals
     */
    public readonly floorValue!: pulumi.Output<number>;
    /**
     * A list of fields to group records by
     */
    public readonly groupByFields!: pulumi.Output<string[] | undefined>;
    /**
     * Whether the generated Signals should be prototype Signals
     */
    public readonly isPrototype!: pulumi.Output<boolean | undefined>;
    /**
     * The expression for which records to match on
     */
    public readonly matchExpression!: pulumi.Output<string>;
    /**
     * The name of the Rule
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the generated Signals
     */
    public readonly nameExpression!: pulumi.Output<string>;
    /**
     * The retention window size in milliseconds
     */
    public readonly retentionWindowSize!: pulumi.Output<string>;
    /**
     * The severity of the generated Signals
     */
    public readonly severity!: pulumi.Output<number>;
    /**
     * The summary of the generated Signals
     */
    public readonly summaryExpression!: pulumi.Output<string | undefined>;
    /**
     * The tags of the generated Signals
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The window size. Current acceptable values are T60M (1 hr) or  T24H (1 day)
     *
     * The following attributes are exported:
     */
    public readonly windowSize!: pulumi.Output<string>;

    /**
     * Create a CseOutlierRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CseOutlierRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CseOutlierRuleArgs | CseOutlierRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CseOutlierRuleState | undefined;
            resourceInputs["aggregationFunctions"] = state ? state.aggregationFunctions : undefined;
            resourceInputs["baselineWindowSize"] = state ? state.baselineWindowSize : undefined;
            resourceInputs["descriptionExpression"] = state ? state.descriptionExpression : undefined;
            resourceInputs["deviationThreshold"] = state ? state.deviationThreshold : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["entitySelectors"] = state ? state.entitySelectors : undefined;
            resourceInputs["floorValue"] = state ? state.floorValue : undefined;
            resourceInputs["groupByFields"] = state ? state.groupByFields : undefined;
            resourceInputs["isPrototype"] = state ? state.isPrototype : undefined;
            resourceInputs["matchExpression"] = state ? state.matchExpression : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameExpression"] = state ? state.nameExpression : undefined;
            resourceInputs["retentionWindowSize"] = state ? state.retentionWindowSize : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["summaryExpression"] = state ? state.summaryExpression : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["windowSize"] = state ? state.windowSize : undefined;
        } else {
            const args = argsOrState as CseOutlierRuleArgs | undefined;
            if ((!args || args.aggregationFunctions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aggregationFunctions'");
            }
            if ((!args || args.baselineWindowSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baselineWindowSize'");
            }
            if ((!args || args.descriptionExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'descriptionExpression'");
            }
            if ((!args || args.deviationThreshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviationThreshold'");
            }
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.entitySelectors === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entitySelectors'");
            }
            if ((!args || args.floorValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'floorValue'");
            }
            if ((!args || args.matchExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'matchExpression'");
            }
            if ((!args || args.nameExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nameExpression'");
            }
            if ((!args || args.retentionWindowSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionWindowSize'");
            }
            if ((!args || args.severity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if ((!args || args.windowSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'windowSize'");
            }
            resourceInputs["aggregationFunctions"] = args ? args.aggregationFunctions : undefined;
            resourceInputs["baselineWindowSize"] = args ? args.baselineWindowSize : undefined;
            resourceInputs["descriptionExpression"] = args ? args.descriptionExpression : undefined;
            resourceInputs["deviationThreshold"] = args ? args.deviationThreshold : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["entitySelectors"] = args ? args.entitySelectors : undefined;
            resourceInputs["floorValue"] = args ? args.floorValue : undefined;
            resourceInputs["groupByFields"] = args ? args.groupByFields : undefined;
            resourceInputs["isPrototype"] = args ? args.isPrototype : undefined;
            resourceInputs["matchExpression"] = args ? args.matchExpression : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nameExpression"] = args ? args.nameExpression : undefined;
            resourceInputs["retentionWindowSize"] = args ? args.retentionWindowSize : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["summaryExpression"] = args ? args.summaryExpression : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["windowSize"] = args ? args.windowSize : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CseOutlierRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CseOutlierRule resources.
 */
export interface CseOutlierRuleState {
    aggregationFunctions?: pulumi.Input<inputs.CseOutlierRuleAggregationFunctions>;
    /**
     * The baseline window size in milliseconds
     */
    baselineWindowSize?: pulumi.Input<string>;
    /**
     * The description of the generated Signals
     */
    descriptionExpression?: pulumi.Input<string>;
    /**
     * The deviation threshold used to calculate the threshold to trigger signals
     */
    deviationThreshold?: pulumi.Input<number>;
    /**
     * Whether the rule should generate Signals
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The entities to generate Signals on
     */
    entitySelectors?: pulumi.Input<pulumi.Input<inputs.CseOutlierRuleEntitySelector>[]>;
    /**
     * The minimum threshold to trigger signals
     */
    floorValue?: pulumi.Input<number>;
    /**
     * A list of fields to group records by
     */
    groupByFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the generated Signals should be prototype Signals
     */
    isPrototype?: pulumi.Input<boolean>;
    /**
     * The expression for which records to match on
     */
    matchExpression?: pulumi.Input<string>;
    /**
     * The name of the Rule
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the generated Signals
     */
    nameExpression?: pulumi.Input<string>;
    /**
     * The retention window size in milliseconds
     */
    retentionWindowSize?: pulumi.Input<string>;
    /**
     * The severity of the generated Signals
     */
    severity?: pulumi.Input<number>;
    /**
     * The summary of the generated Signals
     */
    summaryExpression?: pulumi.Input<string>;
    /**
     * The tags of the generated Signals
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The window size. Current acceptable values are T60M (1 hr) or  T24H (1 day)
     *
     * The following attributes are exported:
     */
    windowSize?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CseOutlierRule resource.
 */
export interface CseOutlierRuleArgs {
    aggregationFunctions: pulumi.Input<inputs.CseOutlierRuleAggregationFunctions>;
    /**
     * The baseline window size in milliseconds
     */
    baselineWindowSize: pulumi.Input<string>;
    /**
     * The description of the generated Signals
     */
    descriptionExpression: pulumi.Input<string>;
    /**
     * The deviation threshold used to calculate the threshold to trigger signals
     */
    deviationThreshold: pulumi.Input<number>;
    /**
     * Whether the rule should generate Signals
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The entities to generate Signals on
     */
    entitySelectors: pulumi.Input<pulumi.Input<inputs.CseOutlierRuleEntitySelector>[]>;
    /**
     * The minimum threshold to trigger signals
     */
    floorValue: pulumi.Input<number>;
    /**
     * A list of fields to group records by
     */
    groupByFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the generated Signals should be prototype Signals
     */
    isPrototype?: pulumi.Input<boolean>;
    /**
     * The expression for which records to match on
     */
    matchExpression: pulumi.Input<string>;
    /**
     * The name of the Rule
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the generated Signals
     */
    nameExpression: pulumi.Input<string>;
    /**
     * The retention window size in milliseconds
     */
    retentionWindowSize: pulumi.Input<string>;
    /**
     * The severity of the generated Signals
     */
    severity: pulumi.Input<number>;
    /**
     * The summary of the generated Signals
     */
    summaryExpression?: pulumi.Input<string>;
    /**
     * The tags of the generated Signals
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The window size. Current acceptable values are T60M (1 hr) or  T24H (1 day)
     *
     * The following attributes are exported:
     */
    windowSize: pulumi.Input<string>;
}
