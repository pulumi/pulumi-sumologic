// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const _this = sumologic.getPartition({
 *     id: "1234567890",
 * });
 * ```
 *
 * A partition can be looked up by `id`.
 *
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * - `name` - The name of the partition.
 * - `routingExpression` - The query that defines the data to be included in the partition.
 * - `analyticsTier` - The Data Tier where the data in the partition will reside. Possible values are: `continuous`, `frequent`, `infrequent`
 * - `retentionPeriod` - The number of days to retain data in the partition.
 * - `isCompliant` - Whether the partition is used for compliance or audit purposes.
 * - `isIncludedInDefaultSearch` - Whether the partition is included in the default search scope.
 * - `totalBytes` - The size of the data in the partition in bytes.
 * - `isActive` - Whether the partition is currently active or decommissioned.
 * - `indexType` - The type of partition index. Possible values are: `DefaultIndex`, `AuditIndex`or `Partition`
 * - `dataForwardingId` - The ID of the data forwarding configuration to be used by the partition.
 *
 * [1]: https://help.sumologic.com/docs/manage/partitions/data-tiers/
 */
export function getPartition(args: GetPartitionArgs, opts?: pulumi.InvokeOptions): Promise<GetPartitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sumologic:index/getPartition:getPartition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPartition.
 */
export interface GetPartitionArgs {
    id: string;
}

/**
 * A collection of values returned by getPartition.
 */
export interface GetPartitionResult {
    readonly analyticsTier: string;
    readonly dataForwardingId: string;
    readonly id: string;
    readonly indexType: string;
    readonly isActive: boolean;
    readonly isCompliant: boolean;
    readonly isIncludedInDefaultSearch: boolean;
    readonly name: string;
    readonly reduceRetentionPeriodImmediately: boolean;
    readonly retentionPeriod: number;
    readonly routingExpression: string;
    readonly totalBytes: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const _this = sumologic.getPartition({
 *     id: "1234567890",
 * });
 * ```
 *
 * A partition can be looked up by `id`.
 *
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * - `name` - The name of the partition.
 * - `routingExpression` - The query that defines the data to be included in the partition.
 * - `analyticsTier` - The Data Tier where the data in the partition will reside. Possible values are: `continuous`, `frequent`, `infrequent`
 * - `retentionPeriod` - The number of days to retain data in the partition.
 * - `isCompliant` - Whether the partition is used for compliance or audit purposes.
 * - `isIncludedInDefaultSearch` - Whether the partition is included in the default search scope.
 * - `totalBytes` - The size of the data in the partition in bytes.
 * - `isActive` - Whether the partition is currently active or decommissioned.
 * - `indexType` - The type of partition index. Possible values are: `DefaultIndex`, `AuditIndex`or `Partition`
 * - `dataForwardingId` - The ID of the data forwarding configuration to be used by the partition.
 *
 * [1]: https://help.sumologic.com/docs/manage/partitions/data-tiers/
 */
export function getPartitionOutput(args: GetPartitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPartitionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("sumologic:index/getPartition:getPartition", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPartition.
 */
export interface GetPartitionOutputArgs {
    id: pulumi.Input<string>;
}
