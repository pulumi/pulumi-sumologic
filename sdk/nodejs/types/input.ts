// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AwsInventorySourceAuthentication {
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN. More details [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Grant-Access-to-an-AWS-Product#iam-role).
     */
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
     */
    type: pulumi.Input<string>;
}

export interface AwsInventorySourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface AwsInventorySourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface AwsInventorySourcePath {
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.AwsInventorySourcePathCustomService>[]>;
    /**
     * List of namespaces. By default all namespaces are selected. You can also choose a subset from
     * + AWS/EC2
     * + AWS/AutoScaling
     * + AWS/EBS
     * + AWS/ELB
     * + AWS/ApplicationELB
     * + AWS/NetworkELB
     * + AWS/Lambda
     * + AWS/RDS
     * + AWS/Dynamodb
     * + AWS/ECS
     * + AWS/Elasticache
     * + AWS/Redshift
     * + AWS/Kinesis
     */
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Amazon regions.
     */
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    pathExpression?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.AwsInventorySourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.AwsInventorySourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface AwsInventorySourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface AwsInventorySourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface AwsInventorySourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
     */
    type?: pulumi.Input<string>;
}

export interface AwsXraySourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
     */
    type: pulumi.Input<string>;
}

export interface AwsXraySourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface AwsXraySourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface AwsXraySourcePath {
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.AwsXraySourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Amazon regions.
     */
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    pathExpression?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.AwsXraySourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.AwsXraySourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface AwsXraySourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface AwsXraySourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface AwsXraySourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
     */
    type?: pulumi.Input<string>;
}

export interface CloudSyslogSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudSyslogSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudfrontSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    /**
     * Your AWS Bucket region.
     */
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
     */
    type: pulumi.Input<string>;
}

export interface CloudfrontSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudfrontSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudfrontSourcePath {
    /**
     * The name of the bucket. This is needed if using type `S3BucketPathExpression`.
     */
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.CloudfrontSourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to the data. This is needed if using type `S3BucketPathExpression`.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * This is a computed field for SNS topic/subscription ARN.
     */
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.CloudfrontSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.CloudfrontSourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface CloudfrontSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface CloudfrontSourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface CloudfrontSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
     */
    type?: pulumi.Input<string>;
}

export interface CloudtrailSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    /**
     * Your AWS Bucket region.
     */
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
     */
    type: pulumi.Input<string>;
}

export interface CloudtrailSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudtrailSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudtrailSourcePath {
    /**
     * The name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.CloudtrailSourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to the data.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * This is a computed field for SNS topic/subscription ARN.
     */
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.CloudtrailSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.CloudtrailSourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface CloudtrailSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface CloudtrailSourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface CloudtrailSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `CloudTrail` source.
     */
    type?: pulumi.Input<string>;
}

export interface CloudwatchSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    /**
     * Your AWS Bucket region.
     */
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * This value has to be set to `TagFilters`
     */
    type: pulumi.Input<string>;
}

export interface CloudwatchSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface CloudwatchSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface CloudwatchSourcePath {
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.CloudwatchSourcePathCustomService>[]>;
    /**
     * List of namespaces. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace.
     */
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Amazon regions.
     */
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    pathExpression?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.CloudwatchSourcePathSnsTopicOrSubscriptionArn>[]>;
    /**
     * Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
     */
    tagFilters?: pulumi.Input<pulumi.Input<inputs.CloudwatchSourcePathTagFilter>[]>;
    /**
     * This value has to be set to `TagFilters`
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface CloudwatchSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface CloudwatchSourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface CloudwatchSourcePathTagFilter {
    /**
     * Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
     */
    namespace?: pulumi.Input<string>;
    /**
     * List of key-value pairs of tag filters. Eg: `["k3=v3"]`
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This value has to be set to `TagFilters`
     */
    type?: pulumi.Input<string>;
}

export interface ContentPermissionPermission {
    /**
     * Content permission name. Valid values are `View`, `GrantView`,
     * `Edit`, `GrantEdit`, `Manage`, and `GrantManage`. You can read more about permission levels
     * [here](https://help.sumologic.com/Manage/Content_Sharing/Share-Content#available-permission-levels).
     */
    permissionName: pulumi.Input<string>;
    /**
     * An identifier that belongs to the source type chosen above. For example,
     * if the `sourceType` is set to `user`, `sourceId` should be identifier of the user you want to share
     * content with (same goes for role and org source type).
     */
    sourceId: pulumi.Input<string>;
    /**
     * Type of source for the permission. Valid values are `user`, `role`,
     * and `org`.
     */
    sourceType: pulumi.Input<string>;
}

export interface CseAggregationRuleAggregationFunction {
    /**
     * One or more expressions to pass as arguments to the function
     */
    arguments: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The function to aggregate with
     */
    function: pulumi.Input<string>;
    /**
     * The name of the Rule
     */
    name: pulumi.Input<string>;
}

export interface CseAggregationRuleEntitySelector {
    entityType: pulumi.Input<string>;
    /**
     * The expression or field name to generate the Signal on.
     */
    expression: pulumi.Input<string>;
}

export interface CseAggregationRuleSeverityMapping {
    /**
     * The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
     */
    default?: pulumi.Input<number>;
    /**
     * The field to use in the "fieldValue"/"fieldValueMapping" cases.
     */
    field?: pulumi.Input<string>;
    /**
     * The map of record values to severities to use in the "fieldValueMapping" case
     */
    mappings?: pulumi.Input<pulumi.Input<inputs.CseAggregationRuleSeverityMappingMapping>[]>;
    /**
     * Must be set to "eq" currently
     */
    type: pulumi.Input<string>;
}

export interface CseAggregationRuleSeverityMappingMapping {
    /**
     * The record value to map from
     */
    from: pulumi.Input<string>;
    /**
     * The severity value to map to
     */
    to: pulumi.Input<number>;
    /**
     * Must be set to "eq" currently
     */
    type: pulumi.Input<string>;
}

export interface CseChainRuleEntitySelector {
    entityType: pulumi.Input<string>;
    /**
     * The expression for which records to match on
     */
    expression: pulumi.Input<string>;
}

export interface CseChainRuleExpressionsAndLimit {
    /**
     * The expression for which records to match on
     */
    expression: pulumi.Input<string>;
    /**
     * How many times this expression must match for the Signal to fire
     */
    limit: pulumi.Input<number>;
}

export interface CseLogMappingField {
    /**
     * List of alternate values.
     */
    alternateValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Case insensitive flag.
     */
    caseInsensitive?: pulumi.Input<boolean>;
    /**
     * Default value of the field.
     */
    defaultValue?: pulumi.Input<string>;
    /**
     * List of field join values.
     */
    fieldJoins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Format of the field. (JSON, Windows, Syslog, CEF, LEEF )
     */
    format?: pulumi.Input<string>;
    /**
     * List of format parameters.
     */
    formatParameters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Join delimiter.
     */
    joinDelimiter?: pulumi.Input<string>;
    /**
     * List of lookup key value pair for field. See lookupSchema for details.
     */
    lookups?: pulumi.Input<pulumi.Input<inputs.CseLogMappingFieldLookup>[]>;
    /**
     * Name of the field.
     */
    name: pulumi.Input<string>;
    /**
     * List of skipped values.
     */
    skippedValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Split delimiter to be used. (some example: ",", "-", "|")
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * The index value to select (starting at zero)
     */
    splitIndex?: pulumi.Input<number>;
    /**
     * Time zone.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Lookup value.
     */
    value?: pulumi.Input<string>;
    /**
     * The value type.
     */
    valueType?: pulumi.Input<string>;
}

export interface CseLogMappingFieldLookup {
    /**
     * Lookup key.
     */
    key: pulumi.Input<string>;
    /**
     * Lookup value.
     */
    value: pulumi.Input<string>;
}

export interface CseLogMappingStructuredInput {
    /**
     * Event id pattern.
     */
    eventIdPattern: pulumi.Input<string>;
    /**
     * Log format. (JSON, Windows, Syslog, CEF, LEEF )
     */
    logFormat: pulumi.Input<string>;
    /**
     * Product name.
     */
    product: pulumi.Input<string>;
    /**
     * Vendor name.
     */
    vendor: pulumi.Input<string>;
}

export interface CseLogMappingUnstructuredFields {
    /**
     * List of grok pattern names.
     */
    patternNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CseMatchListItem {
    /**
     * Match list item description.
     */
    description: pulumi.Input<string>;
    /**
     * Match list item expiration. (Format: YYYY-MM-DDTHH:mm:ss)
     */
    expiration?: pulumi.Input<string>;
    /**
     * The internal ID of the match list.
     */
    id?: pulumi.Input<string>;
    /**
     * Match list item value.
     */
    value: pulumi.Input<string>;
}

export interface CseMatchRuleEntitySelector {
    entityType: pulumi.Input<string>;
    /**
     * The expression for which records to match on
     */
    expression: pulumi.Input<string>;
}

export interface CseMatchRuleSeverityMapping {
    /**
     * The severity to use in the "constant" case or to fall back to if the field used by "fieldValue"/"fieldValueMapping" is not populated.
     */
    default?: pulumi.Input<number>;
    /**
     * The field to use in the "fieldValue"/"fieldValueMapping" cases.
     */
    field?: pulumi.Input<string>;
    /**
     * The map of record values to severities to use in the "fieldValueMapping" case
     */
    mappings?: pulumi.Input<pulumi.Input<inputs.CseMatchRuleSeverityMappingMapping>[]>;
    /**
     * Must be set to "eq" currently
     */
    type: pulumi.Input<string>;
}

export interface CseMatchRuleSeverityMappingMapping {
    /**
     * The record value to map from
     */
    from: pulumi.Input<string>;
    /**
     * The severity value to map to
     */
    to: pulumi.Input<number>;
    /**
     * Must be set to "eq" currently
     */
    type: pulumi.Input<string>;
}

export interface CseThresholdRuleEntitySelector {
    entityType: pulumi.Input<string>;
    /**
     * The expression for which records to match on
     */
    expression: pulumi.Input<string>;
}

export interface DashboardColoringRule {
    colorThresholds?: pulumi.Input<pulumi.Input<inputs.DashboardColoringRuleColorThreshold>[]>;
    multipleSeriesAggregateFunction: pulumi.Input<string>;
    scope: pulumi.Input<string>;
    singleSeriesAggregateFunction: pulumi.Input<string>;
}

export interface DashboardColoringRuleColorThreshold {
    color: pulumi.Input<string>;
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
}

export interface DashboardLayout {
    grid?: pulumi.Input<inputs.DashboardLayoutGrid>;
}

export interface DashboardLayoutGrid {
    layoutStructures: pulumi.Input<pulumi.Input<inputs.DashboardLayoutGridLayoutStructure>[]>;
}

export interface DashboardLayoutGridLayoutStructure {
    key: pulumi.Input<string>;
    structure: pulumi.Input<string>;
}

export interface DashboardPanel {
    sumoSearchPanel?: pulumi.Input<inputs.DashboardPanelSumoSearchPanel>;
    textPanel?: pulumi.Input<inputs.DashboardPanelTextPanel>;
}

export interface DashboardPanelSumoSearchPanel {
    coloringRule?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelColoringRule>;
    /**
     * Description of the dashboard.
     */
    description?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
    keepVisualSettingsConsistentWithParent?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    linkedDashboard?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelLinkedDashboard>;
    queries?: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQuery>[]>;
    /**
     * Time range of the dashboard. See time range schema
     * for details.
     */
    timeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRange>;
    /**
     * Title of the dashboard.
     */
    title?: pulumi.Input<string>;
    visualSettings?: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelColoringRule {
    colorThresholds?: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelColoringRuleColorThreshold>[]>;
    multipleSeriesAggregateFunction: pulumi.Input<string>;
    scope: pulumi.Input<string>;
    singleSeriesAggregateFunction: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelColoringRuleColorThreshold {
    color: pulumi.Input<string>;
    max?: pulumi.Input<number>;
    min?: pulumi.Input<number>;
}

export interface DashboardPanelSumoSearchPanelLinkedDashboard {
    id: pulumi.Input<string>;
    includeTimeRange?: pulumi.Input<boolean>;
    includeVariables?: pulumi.Input<boolean>;
    relativePath?: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelQuery {
    metricsQueryData?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryData>;
    metricsQueryMode?: pulumi.Input<string>;
    queryKey: pulumi.Input<string>;
    queryString: pulumi.Input<string>;
    queryType: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryData {
    aggregationType?: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter>[]>;
    groupBy?: pulumi.Input<string>;
    metric: pulumi.Input<string>;
    operators?: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator>[]>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryDataFilter {
    key: pulumi.Input<string>;
    negation?: pulumi.Input<boolean>;
    value: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperator {
    operatorName: pulumi.Input<string>;
    parameters: pulumi.Input<pulumi.Input<inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter>[]>;
}

export interface DashboardPanelSumoSearchPanelQueryMetricsQueryDataOperatorParameter {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardPanelSumoSearchPanelTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardPanelTextPanel {
    id?: pulumi.Input<string>;
    keepVisualSettingsConsistentWithParent?: pulumi.Input<boolean>;
    key: pulumi.Input<string>;
    text?: pulumi.Input<string>;
    /**
     * Title of the dashboard.
     */
    title?: pulumi.Input<string>;
    visualSettings?: pulumi.Input<string>;
}

export interface DashboardTimeRange {
    beginBoundedTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRange>;
    completeLiteralTimeRange?: pulumi.Input<inputs.DashboardTimeRangeCompleteLiteralTimeRange>;
}

export interface DashboardTimeRangeBeginBoundedTimeRange {
    from: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFrom>;
    to?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeTo>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFrom {
    epochTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeFromRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeTo {
    epochTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange>;
    iso8601TimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange>;
    literalTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange>;
    relativeTimeRange?: pulumi.Input<inputs.DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToEpochTimeRange {
    epochMillis: pulumi.Input<number>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToIso8601TimeRange {
    iso8601Time: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTimeRangeBeginBoundedTimeRangeToRelativeTimeRange {
    relativeTime: pulumi.Input<string>;
}

export interface DashboardTimeRangeCompleteLiteralTimeRange {
    rangeName: pulumi.Input<string>;
}

export interface DashboardTopologyLabelMap {
    datas: pulumi.Input<pulumi.Input<inputs.DashboardTopologyLabelMapData>[]>;
}

export interface DashboardTopologyLabelMapData {
    label: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DashboardVariable {
    allowMultiSelect?: pulumi.Input<boolean>;
    defaultValue?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    hideFromUi?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    includeAllOption?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    sourceDefinition: pulumi.Input<inputs.DashboardVariableSourceDefinition>;
}

export interface DashboardVariableSourceDefinition {
    csvVariableSourceDefinition?: pulumi.Input<inputs.DashboardVariableSourceDefinitionCsvVariableSourceDefinition>;
    logQueryVariableSourceDefinition?: pulumi.Input<inputs.DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition>;
    metadataVariableSourceDefinition?: pulumi.Input<inputs.DashboardVariableSourceDefinitionMetadataVariableSourceDefinition>;
}

export interface DashboardVariableSourceDefinitionCsvVariableSourceDefinition {
    values: pulumi.Input<string>;
}

export interface DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition {
    field: pulumi.Input<string>;
    query: pulumi.Input<string>;
}

export interface DashboardVariableSourceDefinitionMetadataVariableSourceDefinition {
    filter: pulumi.Input<string>;
    key: pulumi.Input<string>;
}

export interface ElbSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`.
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    /**
     * Your AWS Bucket region.
     */
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`.
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
     */
    type: pulumi.Input<string>;
}

export interface ElbSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface ElbSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface ElbSourcePath {
    /**
     * The name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.ElbSourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to the data.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * This is a computed field for SNS topic/subscription ARN.
     */
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.ElbSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.ElbSourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface ElbSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface ElbSourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface ElbSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `ELB` source.
     */
    type?: pulumi.Input<string>;
}

export interface GcpMetricsSourceAuthentication {
    accessKey?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    authProviderX509CertUrl?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    authUri?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    clientEmail?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    clientId?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    clientX509CertUrl?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    privateKey?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    privateKeyId?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    roleArn?: pulumi.Input<string>;
    secretKey?: pulumi.Input<string>;
    /**
     * As per the service_account.json downloaded from GCP
     */
    tokenUri?: pulumi.Input<string>;
    /**
     * Type of polling source. This has to be `GcpMetricsPath`.
     */
    type: pulumi.Input<string>;
}

export interface GcpMetricsSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface GcpMetricsSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface GcpMetricsSourcePath {
    bucketName?: pulumi.Input<string>;
    /**
     * Sumoloigc provides list of services that can be used in limitToServices for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
     */
    customServices?: pulumi.Input<pulumi.Input<inputs.GcpMetricsSourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of regions for which metrics would be collected (Empty to collect from all regions)
     */
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of services from which metrics would be collected
     */
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    pathExpression?: pulumi.Input<string>;
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.GcpMetricsSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.GcpMetricsSourcePathTagFilter>[]>;
    /**
     * Type of polling source. This has to be `GcpMetricsPath`.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface GcpMetricsSourcePathCustomService {
    /**
     * List of metric type prefixes. Eg: `["compute.googleapis.com/instance/","compute.googleapis.com/guest/"]`
     */
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the custom service you want to define.
     */
    serviceName?: pulumi.Input<string>;
}

export interface GcpMetricsSourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface GcpMetricsSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of polling source. This has to be `GcpMetricsPath`.
     */
    type?: pulumi.Input<string>;
}

export interface GcpSourceAuthentication {
    type?: pulumi.Input<string>;
}

export interface GcpSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface GcpSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface GcpSourcePath {
    type?: pulumi.Input<string>;
}

export interface HierarchyFilter {
    /**
     * Filtering key.
     */
    key: pulumi.Input<string>;
    /**
     * Value required for the filtering key.
     */
    value: pulumi.Input<string>;
}

export interface HierarchyLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Next level without a condition.
     */
    nextLevel?: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithCondition {
    /**
     * Condition to be checked against for level.entityType value, for now full string match.
     */
    condition: pulumi.Input<string>;
    level: pulumi.Input<inputs.HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel>;
}

export interface HierarchyLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevelNextLevelsWithConditionLevel {
    /**
     * Indicates the name and type for all entities at this hierarchy level, e.g. service or pod in case of kubernetes entities.
     */
    entityType: pulumi.Input<string>;
    /**
     * Zero or more next levels with conditions.
     */
    nextLevelsWithConditions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface HttpSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface HttpSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface KineisLogSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Must be either `KinesisLogPath` or `NoPathExpression`
     */
    type: pulumi.Input<string>;
}

export interface KineisLogSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface KineisLogSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface KineisLogSourcePath {
    /**
     * The name of the bucket. This is needed if using type `KinesisLogPath`.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must includes `http-endpoint-failed/`.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
     */
    scanInterval?: pulumi.Input<number>;
    /**
     * Must be either `KinesisLogPath` or `NoPathExpression`
     */
    type: pulumi.Input<string>;
}

export interface KinesisMetricsSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    /**
     * This value has to be set to `TagFilters`
     */
    type: pulumi.Input<string>;
}

export interface KinesisMetricsSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface KinesisMetricsSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface KinesisMetricsSourcePath {
    /**
     * Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
     */
    tagFilters?: pulumi.Input<pulumi.Input<inputs.KinesisMetricsSourcePathTagFilter>[]>;
    /**
     * This value has to be set to `TagFilters`
     */
    type: pulumi.Input<string>;
}

export interface KinesisMetricsSourcePathTagFilter {
    /**
     * Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
     */
    namespace?: pulumi.Input<string>;
    /**
     * List of key-value pairs of tag filters. Eg: `["k3=v3"]`
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This value has to be set to `TagFilters`
     */
    type?: pulumi.Input<string>;
}

export interface LookupTableField {
    fieldName: pulumi.Input<string>;
    fieldType: pulumi.Input<string>;
}

export interface MetadataSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    /**
     * type of polling source. Only allowed value is `AwsMetadataPath`.
     */
    type: pulumi.Input<string>;
}

export interface MetadataSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface MetadataSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface MetadataSourcePath {
    /**
     * List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
     */
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Amazon regions.
     */
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
     */
    tagFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. Only allowed value is `AwsMetadataPath`.
     */
    type: pulumi.Input<string>;
}

export interface MonitorFolderObjPermission {
    /**
     * A Set of Permissions. Valid Permission Values: 
     * - `Create`
     * - `Read`
     */
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Role ID or the Org ID of the account
     */
    subjectId: pulumi.Input<string>;
    /**
     * Valid values:
     */
    subjectType: pulumi.Input<string>;
}

export interface MonitorNotification {
    notification: pulumi.Input<inputs.MonitorNotificationNotification>;
    runForTriggerTypes: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitorNotificationNotification {
    /**
     * @deprecated The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
     */
    actionType?: pulumi.Input<string>;
    connectionId?: pulumi.Input<string>;
    connectionType?: pulumi.Input<string>;
    messageBody?: pulumi.Input<string>;
    payloadOverride?: pulumi.Input<string>;
    recipients?: pulumi.Input<pulumi.Input<string>[]>;
    subject?: pulumi.Input<string>;
    timeZone?: pulumi.Input<string>;
}

export interface MonitorObjPermission {
    /**
     * A Set of Permissions. Valid Permission Values:
     * - `Read`
     * - `Update`
     * - `Delete`
     * - `Manage`
     */
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Role ID or the Org ID of the account
     */
    subjectId: pulumi.Input<string>;
    /**
     * Valid values:
     * - `role`
     * - `org`
     */
    subjectType: pulumi.Input<string>;
}

export interface MonitorQuery {
    query: pulumi.Input<string>;
    rowId: pulumi.Input<string>;
}

export interface MonitorTrigger {
    detectionMethod?: pulumi.Input<string>;
    occurrenceType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
    timeRange?: pulumi.Input<string>;
    triggerSource?: pulumi.Input<string>;
    triggerType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditions {
    logsMissingDataCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsMissingDataCondition>;
    logsOutlierCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsOutlierCondition>;
    logsStaticCondition?: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticCondition>;
    metricsMissingDataCondition?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsMissingDataCondition>;
    metricsOutlierCondition?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsOutlierCondition>;
    metricsStaticCondition?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticCondition>;
    sloBurnRateCondition?: pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateCondition>;
    sloSliCondition?: pulumi.Input<inputs.MonitorTriggerConditionsSloSliCondition>;
}

export interface MonitorTriggerConditionsLogsMissingDataCondition {
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsOutlierCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsLogsOutlierConditionCritical>;
    direction?: pulumi.Input<string>;
    field?: pulumi.Input<string>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsLogsOutlierConditionWarning>;
}

export interface MonitorTriggerConditionsLogsOutlierConditionCritical {
    consecutive?: pulumi.Input<number>;
    threshold?: pulumi.Input<number>;
    window?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsLogsOutlierConditionWarning {
    consecutive?: pulumi.Input<number>;
    threshold?: pulumi.Input<number>;
    window?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsLogsStaticCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionCritical>;
    field?: pulumi.Input<string>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionWarning>;
}

export interface MonitorTriggerConditionsLogsStaticConditionCritical {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionCriticalAlert>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionCriticalResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionCriticalAlert {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionCriticalResolution {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionWarning {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionWarningAlert>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsLogsStaticConditionWarningResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionWarningAlert {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsLogsStaticConditionWarningResolution {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsMissingDataCondition {
    timeRange: pulumi.Input<string>;
    triggerSource: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsOutlierCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsOutlierConditionCritical>;
    direction?: pulumi.Input<string>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsOutlierConditionWarning>;
}

export interface MonitorTriggerConditionsMetricsOutlierConditionCritical {
    baselineWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsMetricsOutlierConditionWarning {
    baselineWindow?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsMetricsStaticCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionCritical>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionWarning>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionCritical {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionCriticalAlert>;
    occurrenceType: pulumi.Input<string>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionCriticalResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionCriticalAlert {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionCriticalResolution {
    occurrenceType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionWarning {
    alert: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionWarningAlert>;
    occurrenceType: pulumi.Input<string>;
    resolution: pulumi.Input<inputs.MonitorTriggerConditionsMetricsStaticConditionWarningResolution>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionWarningAlert {
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsMetricsStaticConditionWarningResolution {
    occurrenceType?: pulumi.Input<string>;
    threshold?: pulumi.Input<number>;
    thresholdType?: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloBurnRateCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateConditionCritical>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsSloBurnRateConditionWarning>;
}

export interface MonitorTriggerConditionsSloBurnRateConditionCritical {
    burnRateThreshold: pulumi.Input<number>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloBurnRateConditionWarning {
    burnRateThreshold: pulumi.Input<number>;
    timeRange: pulumi.Input<string>;
}

export interface MonitorTriggerConditionsSloSliCondition {
    critical?: pulumi.Input<inputs.MonitorTriggerConditionsSloSliConditionCritical>;
    warning?: pulumi.Input<inputs.MonitorTriggerConditionsSloSliConditionWarning>;
}

export interface MonitorTriggerConditionsSloSliConditionCritical {
    sliThreshold: pulumi.Input<number>;
}

export interface MonitorTriggerConditionsSloSliConditionWarning {
    sliThreshold: pulumi.Input<number>;
}

export interface PoliciesUserConcurrentSessionsLimit {
    /**
     * Whether the [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions) is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Maximum number of concurrent sessions a user may have. Defaults to `100`.
     */
    maxConcurrentSessions?: pulumi.Input<number>;
}

export interface PollingSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     */
    secretKey?: pulumi.Input<string>;
    /**
     * This value has to be set to `TagFilters`
     */
    type: pulumi.Input<string>;
}

export interface PollingSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface PollingSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface PollingSourcePath {
    /**
     * The name of the bucket. This is needed if using type `S3BucketPathExpression`.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
     */
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
     */
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to the data. This is needed if using type `S3BucketPathExpression`.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
     */
    tagFilters?: pulumi.Input<pulumi.Input<inputs.PollingSourcePathTagFilter>[]>;
    /**
     * This value has to be set to `TagFilters`
     */
    type: pulumi.Input<string>;
}

export interface PollingSourcePathTagFilter {
    /**
     * Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
     */
    namespace?: pulumi.Input<string>;
    /**
     * List of key-value pairs of tag filters. Eg: `["k3=v3"]`
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This value has to be set to `TagFilters`
     */
    type?: pulumi.Input<string>;
}

export interface S3AuditSourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`.
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    /**
     * Your AWS Bucket region.
     */
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`.This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`.
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
     */
    type: pulumi.Input<string>;
}

export interface S3AuditSourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface S3AuditSourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface S3AuditSourcePath {
    /**
     * The name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.S3AuditSourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to the data.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * This is a computed field for SNS topic/subscription ARN.
     */
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.S3AuditSourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.S3AuditSourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
     */
    type: pulumi.Input<string>;
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface S3AuditSourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface S3AuditSourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface S3AuditSourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
     */
    type?: pulumi.Input<string>;
}

export interface S3SourceAuthentication {
    /**
     * Your AWS access key if using type `S3BucketAuthentication`.
     */
    accessKey?: pulumi.Input<string>;
    authProviderX509CertUrl?: pulumi.Input<string>;
    authUri?: pulumi.Input<string>;
    clientEmail?: pulumi.Input<string>;
    clientId?: pulumi.Input<string>;
    clientX509CertUrl?: pulumi.Input<string>;
    privateKey?: pulumi.Input<string>;
    privateKeyId?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    /**
     * Your AWS Bucket region.
     */
    region?: pulumi.Input<string>;
    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     */
    roleArn?: pulumi.Input<string>;
    /**
     * Your AWS secret key if using type `S3BucketAuthentication`.
     */
    secretKey?: pulumi.Input<string>;
    tokenUri?: pulumi.Input<string>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
     */
    type: pulumi.Input<string>;
}

export interface S3SourceDefaultDateFormat {
    format: pulumi.Input<string>;
    locator?: pulumi.Input<string>;
}

export interface S3SourceFilter {
    filterType: pulumi.Input<string>;
    mask?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    regexp: pulumi.Input<string>;
}

export interface S3SourcePath {
    /**
     * The name of the bucket.
     */
    bucketName?: pulumi.Input<string>;
    customServices?: pulumi.Input<pulumi.Input<inputs.S3SourcePathCustomService>[]>;
    limitToNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    limitToRegions?: pulumi.Input<pulumi.Input<string>[]>;
    limitToServices?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path to the data.
     */
    pathExpression?: pulumi.Input<string>;
    /**
     * This is a computed field for SNS topic/subscription ARN.
     */
    snsTopicOrSubscriptionArns?: pulumi.Input<pulumi.Input<inputs.S3SourcePathSnsTopicOrSubscriptionArn>[]>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.S3SourcePathTagFilter>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
     */
    type: pulumi.Input<string>;
    /**
     * Whether to Use AWS versioned APIs. Default is set to `true`. If you're collecting from a Cisco Umbrella bucket this must be set to `false`.
     */
    useVersionedApi?: pulumi.Input<boolean>;
}

export interface S3SourcePathCustomService {
    prefixes?: pulumi.Input<pulumi.Input<string>[]>;
    serviceName?: pulumi.Input<string>;
}

export interface S3SourcePathSnsTopicOrSubscriptionArn {
    arn?: pulumi.Input<string>;
    isSuccess?: pulumi.Input<boolean>;
}

export interface S3SourcePathTagFilter {
    namespace?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * type of polling source. This has to be `S3BucketPathExpression` for `S3 source`.
     */
    type?: pulumi.Input<string>;
}

export interface SamlConfigurationOnDemandProvisioningEnabled {
    /**
     * First name attribute of the new user account. Defaults to "".
     */
    firstNameAttribute?: pulumi.Input<string>;
    /**
     * Last name attribute of the new user account. Defaults to "".
     */
    lastNameAttribute?: pulumi.Input<string>;
    /**
     * List of Sumo Logic RBAC roles to be assigned when user accounts are provisioned.
     */
    onDemandProvisioningRoles: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SloCompliance {
    /**
     * The type of compliance to use. Valid values are `Rolling` or `Calendar`.
     */
    complianceType: pulumi.Input<string>;
    /**
     * The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
     * based evaluation.
     */
    size: pulumi.Input<string>;
    /**
     * Start of the calendar window. For `Week` its required and it would be the day of the week (for e.g. Sunday,
     * Monday etc).  For `Quarter` its required, it would be the first month of the start of quarter (for e.g. January, February etc.).
     * For `Month` it's not required and is set to first day of the month.
     */
    startFrom?: pulumi.Input<string>;
    /**
     * The target value to use, must be a number between 0 and 100.
     */
    target: pulumi.Input<number>;
    /**
     * Time zone for the SLO compliance. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
     */
    timezone: pulumi.Input<string>;
}

export interface SloIndicator {
    requestBasedEvaluation?: pulumi.Input<inputs.SloIndicatorRequestBasedEvaluation>;
    windowBasedEvaluation?: pulumi.Input<inputs.SloIndicatorWindowBasedEvaluation>;
}

export interface SloIndicatorRequestBasedEvaluation {
    /**
     * Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
     * , `GreaterThanOrEqual`.
     */
    op?: pulumi.Input<string>;
    /**
     * The queries to use.
     */
    queries: pulumi.Input<pulumi.Input<inputs.SloIndicatorRequestBasedEvaluationQuery>[]>;
    /**
     * The type of query to use. Valid values are `Metrics` or `Logs`.
     */
    queryType: pulumi.Input<string>;
    /**
     * Compared against threshold query's raw data points to determine success criteria.
     */
    threshold?: pulumi.Input<number>;
}

export interface SloIndicatorRequestBasedEvaluationQuery {
    /**
     * The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
     * , `Threshold`.
     */
    queryGroupType: pulumi.Input<string>;
    /**
     * List of queries to use.
     */
    queryGroups: pulumi.Input<pulumi.Input<inputs.SloIndicatorRequestBasedEvaluationQueryQueryGroup>[]>;
}

export interface SloIndicatorRequestBasedEvaluationQueryQueryGroup {
    /**
     * Field of log query output to compare against. To be used only for logs based data
     * type when `useRowCount` is false.
     */
    field?: pulumi.Input<string>;
    /**
     * The query string to use.
     */
    query: pulumi.Input<string>;
    /**
     * The row ID to use.
     */
    rowId: pulumi.Input<string>;
    /**
     * Whether to use the row count. Defaults to false.
     */
    useRowCount: pulumi.Input<boolean>;
}

export interface SloIndicatorWindowBasedEvaluation {
    /**
     * Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
     * , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
     */
    aggregation?: pulumi.Input<string>;
    /**
     * Comparison function with threshold. Valid values are `LessThan`, `LessThanOrEqual`, `GreaterThan`
     * , `GreaterThanOrEqual`.
     */
    op: pulumi.Input<string>;
    /**
     * The queries to use.
     */
    queries: pulumi.Input<pulumi.Input<inputs.SloIndicatorWindowBasedEvaluationQuery>[]>;
    /**
     * The type of query to use. Valid values are `Metrics` or `Logs`.
     */
    queryType: pulumi.Input<string>;
    /**
     * The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
     * based evaluation.
     */
    size: pulumi.Input<string>;
    /**
     * Compared against threshold query's raw data points to determine success criteria.
     */
    threshold: pulumi.Input<number>;
}

export interface SloIndicatorWindowBasedEvaluationQuery {
    /**
     * The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
     * , `Threshold`.
     */
    queryGroupType: pulumi.Input<string>;
    /**
     * List of queries to use.
     */
    queryGroups: pulumi.Input<pulumi.Input<inputs.SloIndicatorWindowBasedEvaluationQueryQueryGroup>[]>;
}

export interface SloIndicatorWindowBasedEvaluationQueryQueryGroup {
    /**
     * Field of log query output to compare against. To be used only for logs based data
     * type when `useRowCount` is false.
     */
    field?: pulumi.Input<string>;
    /**
     * The query string to use.
     */
    query: pulumi.Input<string>;
    /**
     * The row ID to use.
     */
    rowId: pulumi.Input<string>;
    /**
     * Whether to use the row count. Defaults to false.
     */
    useRowCount: pulumi.Input<boolean>;
}
