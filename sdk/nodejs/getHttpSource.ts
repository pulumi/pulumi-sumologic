// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getHttpSource(args?: GetHttpSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetHttpSourceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("sumologic:index/getHttpSource:getHttpSource", {
        "collectorId": args.collectorId,
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getHttpSource.
 */
export interface GetHttpSourceArgs {
    collectorId?: number;
    id?: number;
    name?: string;
}

/**
 * A collection of values returned by getHttpSource.
 */
export interface GetHttpSourceResult {
    readonly category: string;
    readonly collectorId?: number;
    readonly description: string;
    readonly id: number;
    readonly multiline: boolean;
    readonly name?: string;
    readonly timezone: string;
    readonly url: string;
}

export function getHttpSourceOutput(args?: GetHttpSourceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHttpSourceResult> {
    return pulumi.output(args).apply(a => getHttpSource(a, opts))
}

/**
 * A collection of arguments for invoking getHttpSource.
 */
export interface GetHttpSourceOutputArgs {
    collectorId?: pulumi.Input<number>;
    id?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
}
