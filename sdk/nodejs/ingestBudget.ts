// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a [Sumologic Ingest Budget](https://help.sumologic.com/Manage/Ingestion-and-Volume/Ingest_Budgets). To assign an Ingest Budget to the Collector use the field `_budget` with the Field Value of the Ingest Budget to assign.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const budget = new sumologic.IngestBudget("budget", {
 *     capacityBytes: 30000000000,
 *     description: "For testing purposes",
 *     fieldValue: "test",
 * });
 * const collector = new sumologic.Collector("collector", {
 *     fields: {
 *         _budget: budget.fieldValue,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Ingest budgets can be imported using the name, e.g.hcl
 *
 * ```sh
 *  $ pulumi import sumologic:index/ingestBudget:IngestBudget budget budgetName
 * ```
 *
 *  [1]https://help.sumologic.com/Manage/Ingestion-and-Volume/Ingest_Budgets [2]https://en.wikipedia.org/wiki/Tz_database
 */
export class IngestBudget extends pulumi.CustomResource {
    /**
     * Get an existing IngestBudget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IngestBudgetState, opts?: pulumi.CustomResourceOptions): IngestBudget {
        return new IngestBudget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/ingestBudget:IngestBudget';

    /**
     * Returns true if the given object is an instance of IngestBudget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IngestBudget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IngestBudget.__pulumiType;
    }

    /**
     * Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are `stopCollecting` and `keepCollecting`.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * Capacity of the ingest budget, in bytes.
     */
    public readonly capacityBytes!: pulumi.Output<number>;
    /**
     * Description of the ingest budget.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Custom field value that is used to assign Collectors to the ingest budget.
     */
    public readonly fieldValue!: pulumi.Output<string>;
    /**
     * Display name of the ingest budget. This must be unique across all of the ingest budgets
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Reset time of the ingest budget in HH:MM format. Defaults to `00:00`
     */
    public readonly resetTime!: pulumi.Output<string | undefined>;
    /**
     * The time zone to use for this collector. The value follows the [tzdata](https://en.wikipedia.org/wiki/Tz_database) naming convention. Defaults to `Etc/UTC`
     */
    public readonly timezone!: pulumi.Output<string | undefined>;

    /**
     * Create a IngestBudget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IngestBudgetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IngestBudgetArgs | IngestBudgetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IngestBudgetState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["capacityBytes"] = state ? state.capacityBytes : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fieldValue"] = state ? state.fieldValue : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resetTime"] = state ? state.resetTime : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as IngestBudgetArgs | undefined;
            if ((!args || args.capacityBytes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacityBytes'");
            }
            if ((!args || args.fieldValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fieldValue'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["capacityBytes"] = args ? args.capacityBytes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["fieldValue"] = args ? args.fieldValue : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resetTime"] = args ? args.resetTime : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IngestBudget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IngestBudget resources.
 */
export interface IngestBudgetState {
    /**
     * Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are `stopCollecting` and `keepCollecting`.
     */
    action?: pulumi.Input<string>;
    /**
     * Capacity of the ingest budget, in bytes.
     */
    capacityBytes?: pulumi.Input<number>;
    /**
     * Description of the ingest budget.
     */
    description?: pulumi.Input<string>;
    /**
     * Custom field value that is used to assign Collectors to the ingest budget.
     */
    fieldValue?: pulumi.Input<string>;
    /**
     * Display name of the ingest budget. This must be unique across all of the ingest budgets
     */
    name?: pulumi.Input<string>;
    /**
     * Reset time of the ingest budget in HH:MM format. Defaults to `00:00`
     */
    resetTime?: pulumi.Input<string>;
    /**
     * The time zone to use for this collector. The value follows the [tzdata](https://en.wikipedia.org/wiki/Tz_database) naming convention. Defaults to `Etc/UTC`
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IngestBudget resource.
 */
export interface IngestBudgetArgs {
    /**
     * Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are `stopCollecting` and `keepCollecting`.
     */
    action?: pulumi.Input<string>;
    /**
     * Capacity of the ingest budget, in bytes.
     */
    capacityBytes: pulumi.Input<number>;
    /**
     * Description of the ingest budget.
     */
    description?: pulumi.Input<string>;
    /**
     * Custom field value that is used to assign Collectors to the ingest budget.
     */
    fieldValue: pulumi.Input<string>;
    /**
     * Display name of the ingest budget. This must be unique across all of the ingest budgets
     */
    name?: pulumi.Input<string>;
    /**
     * Reset time of the ingest budget in HH:MM format. Defaults to `00:00`
     */
    resetTime?: pulumi.Input<string>;
    /**
     * The time zone to use for this collector. The value follows the [tzdata](https://en.wikipedia.org/wiki/Tz_database) naming convention. Defaults to `Etc/UTC`
     */
    timezone?: pulumi.Input<string>;
}
