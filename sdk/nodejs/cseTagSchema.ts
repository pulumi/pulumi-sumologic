// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Sumologic CSE Tag Schema.
 *
 * ## Import
 *
 * Tag Schema can be imported using the field id, e.g.:
 *
 *  hcl
 *
 * ```sh
 * $ pulumi import sumologic:index/cseTagSchema:CseTagSchema tag_schema id
 * ```
 */
export class CseTagSchema extends pulumi.CustomResource {
    /**
     * Get an existing CseTagSchema resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CseTagSchemaState, opts?: pulumi.CustomResourceOptions): CseTagSchema {
        return new CseTagSchema(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/cseTagSchema:CseTagSchema';

    /**
     * Returns true if the given object is an instance of CseTagSchema.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CseTagSchema {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CseTagSchema.__pulumiType;
    }

    /**
     * Applicable content types. Valid values: "customInsight", "entity", "rule", "threatIntelligence".
     */
    public readonly contentTypes!: pulumi.Output<string[] | undefined>;
    /**
     * Whether the tag schema accepts free form custom values.
     */
    public readonly freeForm!: pulumi.Output<boolean>;
    /**
     * Tag Schema key.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * Value option label.
     */
    public readonly label!: pulumi.Output<string>;
    public readonly valueOptions!: pulumi.Output<outputs.CseTagSchemaValueOption[] | undefined>;

    /**
     * Create a CseTagSchema resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CseTagSchemaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CseTagSchemaArgs | CseTagSchemaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CseTagSchemaState | undefined;
            resourceInputs["contentTypes"] = state ? state.contentTypes : undefined;
            resourceInputs["freeForm"] = state ? state.freeForm : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["valueOptions"] = state ? state.valueOptions : undefined;
        } else {
            const args = argsOrState as CseTagSchemaArgs | undefined;
            if ((!args || args.freeForm === undefined) && !opts.urn) {
                throw new Error("Missing required property 'freeForm'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.label === undefined) && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            resourceInputs["contentTypes"] = args ? args.contentTypes : undefined;
            resourceInputs["freeForm"] = args ? args.freeForm : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["valueOptions"] = args ? args.valueOptions : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CseTagSchema.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CseTagSchema resources.
 */
export interface CseTagSchemaState {
    /**
     * Applicable content types. Valid values: "customInsight", "entity", "rule", "threatIntelligence".
     */
    contentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the tag schema accepts free form custom values.
     */
    freeForm?: pulumi.Input<boolean>;
    /**
     * Tag Schema key.
     */
    key?: pulumi.Input<string>;
    /**
     * Value option label.
     */
    label?: pulumi.Input<string>;
    valueOptions?: pulumi.Input<pulumi.Input<inputs.CseTagSchemaValueOption>[]>;
}

/**
 * The set of arguments for constructing a CseTagSchema resource.
 */
export interface CseTagSchemaArgs {
    /**
     * Applicable content types. Valid values: "customInsight", "entity", "rule", "threatIntelligence".
     */
    contentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the tag schema accepts free form custom values.
     */
    freeForm: pulumi.Input<boolean>;
    /**
     * Tag Schema key.
     */
    key: pulumi.Input<string>;
    /**
     * Value option label.
     */
    label: pulumi.Input<string>;
    valueOptions?: pulumi.Input<pulumi.Input<inputs.CseTagSchemaValueOption>[]>;
}
