// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Content extends pulumi.CustomResource {
    /**
     * Get an existing Content resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContentState, opts?: pulumi.CustomResourceOptions): Content {
        return new Content(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/content:Content';

    /**
     * Returns true if the given object is an instance of Content.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Content {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Content.__pulumiType;
    }

    /**
     * JSON block for the content to import. NOTE: Updating the name will create a new object and leave a untracked content item (delete the existing content item and create a new content item if you want to update the name).
     */
    public readonly config!: pulumi.Output<string>;
    /**
     * The identifier of the folder to import into. Identifiers from the Library in the Sumo user interface are provided in decimal format which is incompatible with this provider. The identifier needs to be in hexadecimal format.
     */
    public readonly parentId!: pulumi.Output<string>;

    /**
     * Create a Content resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContentArgs | ContentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContentState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
        } else {
            const args = argsOrState as ContentArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.parentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentId'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Content.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Content resources.
 */
export interface ContentState {
    /**
     * JSON block for the content to import. NOTE: Updating the name will create a new object and leave a untracked content item (delete the existing content item and create a new content item if you want to update the name).
     */
    config?: pulumi.Input<string>;
    /**
     * The identifier of the folder to import into. Identifiers from the Library in the Sumo user interface are provided in decimal format which is incompatible with this provider. The identifier needs to be in hexadecimal format.
     */
    parentId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Content resource.
 */
export interface ContentArgs {
    /**
     * JSON block for the content to import. NOTE: Updating the name will create a new object and leave a untracked content item (delete the existing content item and create a new content item if you want to update the name).
     */
    config: pulumi.Input<string>;
    /**
     * The identifier of the folder to import into. Identifiers from the Library in the Sumo user interface are provided in decimal format which is incompatible with this provider. The identifier needs to be in hexadecimal format.
     */
    parentId: pulumi.Input<string>;
}
