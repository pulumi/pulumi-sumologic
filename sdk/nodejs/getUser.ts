// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const this = sumologic.getUser({
 *     id: "1234567890",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const that = sumologic.getUser({
 *     email: "user@example.com",
 * });
 * ```
 *
 * A user can be looked up by either `id` or `email`. One of those attributes needs to be specified.
 *
 * If both `id` and `email` have been specified, `id` takes precedence.
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * - `id` - The internal ID of the user.
 * - `email` - (Required) Email of the user.
 * - `firstName` - (Required) First name of the user.
 * - `lastName` - (Required) Last name of the user.
 * - `isActive` - (Required) This has the value true if the user is active and false if they have been deactivated.
 * - `roleIds` - (Required) List of roleIds associated with the user.
 */
export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("sumologic:index/getUser:getUser", {
        "email": args.email,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    email?: string;
    id?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly email: string;
    readonly firstName: string;
    readonly id: string;
    readonly isActive: boolean;
    readonly lastName: string;
    readonly roleIds: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const this = sumologic.getUser({
 *     id: "1234567890",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const that = sumologic.getUser({
 *     email: "user@example.com",
 * });
 * ```
 *
 * A user can be looked up by either `id` or `email`. One of those attributes needs to be specified.
 *
 * If both `id` and `email` have been specified, `id` takes precedence.
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * - `id` - The internal ID of the user.
 * - `email` - (Required) Email of the user.
 * - `firstName` - (Required) First name of the user.
 * - `lastName` - (Required) Last name of the user.
 * - `isActive` - (Required) This has the value true if the user is active and false if they have been deactivated.
 * - `roleIds` - (Required) List of roleIds associated with the user.
 */
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    email?: pulumi.Input<string>;
    id?: pulumi.Input<string>;
}
