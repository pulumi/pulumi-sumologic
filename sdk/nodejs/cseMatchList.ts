// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a Sumologic CSE Match List.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sumologic from "@pulumi/sumologic";
 *
 * const matchList = new sumologic.CseMatchList("match_list", {
 *     defaultTtl: 10800,
 *     description: "Match list description",
 *     items: [{
 *         description: "IP address",
 *         expiration: "2022-02-27T04:00:00",
 *         value: "192.168.0.1",
 *     }],
 *     targetColumn: "SrcIp",
 * });
 * ```
 *
 * ## Import
 *
 * Match List can be imported using the field id, e.g.hcl
 *
 * ```sh
 *  $ pulumi import sumologic:index/cseMatchList:CseMatchList match_list id
 * ```
 */
export class CseMatchList extends pulumi.CustomResource {
    /**
     * Get an existing CseMatchList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CseMatchListState, opts?: pulumi.CustomResourceOptions): CseMatchList {
        return new CseMatchList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sumologic:index/cseMatchList:CseMatchList';

    /**
     * Returns true if the given object is an instance of CseMatchList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CseMatchList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CseMatchList.__pulumiType;
    }

    public /*out*/ readonly created!: pulumi.Output<string>;
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * The default time to live for match list items added through the UI. Specified in seconds.
     */
    public readonly defaultTtl!: pulumi.Output<number | undefined>;
    /**
     * Match list item description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * List of match list items. See matchListItem schema for details.
     */
    public readonly items!: pulumi.Output<outputs.CseMatchListItem[] | undefined>;
    public /*out*/ readonly lastUpdated!: pulumi.Output<string>;
    public /*out*/ readonly lastUpdatedBy!: pulumi.Output<string>;
    /**
     * Match list name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Target column. (possible values: Hostname, FileHash, Url, SrcIp, DstIp, Domain, Username, Ip, Asn, Isp, Org, SrcAsn, SrcIsp, SrcOrg, DstAsn, DstIsp, DstOrg or any custom column.)
     */
    public readonly targetColumn!: pulumi.Output<string>;

    /**
     * Create a CseMatchList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CseMatchListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CseMatchListArgs | CseMatchListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CseMatchListState | undefined;
            resourceInputs["created"] = state ? state.created : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["defaultTtl"] = state ? state.defaultTtl : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["items"] = state ? state.items : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["lastUpdatedBy"] = state ? state.lastUpdatedBy : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["targetColumn"] = state ? state.targetColumn : undefined;
        } else {
            const args = argsOrState as CseMatchListArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.targetColumn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetColumn'");
            }
            resourceInputs["defaultTtl"] = args ? args.defaultTtl : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["items"] = args ? args.items : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["targetColumn"] = args ? args.targetColumn : undefined;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["lastUpdatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CseMatchList.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CseMatchList resources.
 */
export interface CseMatchListState {
    created?: pulumi.Input<string>;
    createdBy?: pulumi.Input<string>;
    /**
     * The default time to live for match list items added through the UI. Specified in seconds.
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Match list item description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of match list items. See matchListItem schema for details.
     */
    items?: pulumi.Input<pulumi.Input<inputs.CseMatchListItem>[]>;
    lastUpdated?: pulumi.Input<string>;
    lastUpdatedBy?: pulumi.Input<string>;
    /**
     * Match list name.
     */
    name?: pulumi.Input<string>;
    /**
     * Target column. (possible values: Hostname, FileHash, Url, SrcIp, DstIp, Domain, Username, Ip, Asn, Isp, Org, SrcAsn, SrcIsp, SrcOrg, DstAsn, DstIsp, DstOrg or any custom column.)
     */
    targetColumn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CseMatchList resource.
 */
export interface CseMatchListArgs {
    /**
     * The default time to live for match list items added through the UI. Specified in seconds.
     */
    defaultTtl?: pulumi.Input<number>;
    /**
     * Match list item description.
     */
    description: pulumi.Input<string>;
    /**
     * List of match list items. See matchListItem schema for details.
     */
    items?: pulumi.Input<pulumi.Input<inputs.CseMatchListItem>[]>;
    /**
     * Match list name.
     */
    name?: pulumi.Input<string>;
    /**
     * Target column. (possible values: Hostname, FileHash, Url, SrcIp, DstIp, Domain, Username, Ip, Asn, Isp, Org, SrcAsn, SrcIsp, SrcOrg, DstAsn, DstIsp, DstOrg or any custom column.)
     */
    targetColumn: pulumi.Input<string>;
}
