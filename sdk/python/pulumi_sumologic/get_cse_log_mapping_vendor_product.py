# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetCseLogMappingVendorProductResult',
    'AwaitableGetCseLogMappingVendorProductResult',
    'get_cse_log_mapping_vendor_product',
    'get_cse_log_mapping_vendor_product_output',
]

@pulumi.output_type
class GetCseLogMappingVendorProductResult:
    """
    A collection of values returned by getCseLogMappingVendorProduct.
    """
    def __init__(__self__, guid=None, id=None, product=None, vendor=None):
        if guid and not isinstance(guid, str):
            raise TypeError("Expected argument 'guid' to be a str")
        pulumi.set(__self__, "guid", guid)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if product and not isinstance(product, str):
            raise TypeError("Expected argument 'product' to be a str")
        pulumi.set(__self__, "product", product)
        if vendor and not isinstance(vendor, str):
            raise TypeError("Expected argument 'vendor' to be a str")
        pulumi.set(__self__, "vendor", vendor)

    @property
    @pulumi.getter
    def guid(self) -> str:
        return pulumi.get(self, "guid")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def product(self) -> str:
        return pulumi.get(self, "product")

    @property
    @pulumi.getter
    def vendor(self) -> str:
        return pulumi.get(self, "vendor")


class AwaitableGetCseLogMappingVendorProductResult(GetCseLogMappingVendorProductResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCseLogMappingVendorProductResult(
            guid=self.guid,
            id=self.id,
            product=self.product,
            vendor=self.vendor)


def get_cse_log_mapping_vendor_product(guid: Optional[str] = None,
                                       product: Optional[str] = None,
                                       vendor: Optional[str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCseLogMappingVendorProductResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_sumologic as sumologic

    web_gateway = sumologic.get_cse_log_mapping_vendor_product(product="Web Gateway",
        vendor="McAfee")
    ```

    A Log mapping vendor product can be looked up by providing values of `product` and `vendor`
    Both `product` and `vendor` values are mandatory. If not provided an error will be generated.
    ## Attributes reference

    The following attributes are exported:

    - `guid` - The internal GUID of the log mapping vendor product.
    - `product` - The name of the product.
    - `vendor` - The name of the vendor.
    """
    __args__ = dict()
    __args__['guid'] = guid
    __args__['product'] = product
    __args__['vendor'] = vendor
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sumologic:index/getCseLogMappingVendorProduct:getCseLogMappingVendorProduct', __args__, opts=opts, typ=GetCseLogMappingVendorProductResult).value

    return AwaitableGetCseLogMappingVendorProductResult(
        guid=pulumi.get(__ret__, 'guid'),
        id=pulumi.get(__ret__, 'id'),
        product=pulumi.get(__ret__, 'product'),
        vendor=pulumi.get(__ret__, 'vendor'))


@_utilities.lift_output_func(get_cse_log_mapping_vendor_product)
def get_cse_log_mapping_vendor_product_output(guid: Optional[pulumi.Input[Optional[str]]] = None,
                                              product: Optional[pulumi.Input[str]] = None,
                                              vendor: Optional[pulumi.Input[str]] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCseLogMappingVendorProductResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_sumologic as sumologic

    web_gateway = sumologic.get_cse_log_mapping_vendor_product(product="Web Gateway",
        vendor="McAfee")
    ```

    A Log mapping vendor product can be looked up by providing values of `product` and `vendor`
    Both `product` and `vendor` values are mandatory. If not provided an error will be generated.
    ## Attributes reference

    The following attributes are exported:

    - `guid` - The internal GUID of the log mapping vendor product.
    - `product` - The name of the product.
    - `vendor` - The name of the vendor.
    """
    ...
