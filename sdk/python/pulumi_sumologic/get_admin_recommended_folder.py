# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetAdminRecommendedFolderResult',
    'AwaitableGetAdminRecommendedFolderResult',
    'get_admin_recommended_folder',
    'get_admin_recommended_folder_output',
]

@pulumi.output_type
class GetAdminRecommendedFolderResult:
    """
    A collection of values returned by getAdminRecommendedFolder.
    """
    def __init__(__self__, description=None, id=None, name=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


class AwaitableGetAdminRecommendedFolderResult(GetAdminRecommendedFolderResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAdminRecommendedFolderResult(
            description=self.description,
            id=self.id,
            name=self.name)


def get_admin_recommended_folder(description: Optional[str] = None,
                                 id: Optional[str] = None,
                                 name: Optional[str] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAdminRecommendedFolderResult:
    """
    Provides an easy way to retrieve the Admin Recommended Folder.

    In order to use the Admin Recommended Folder, you should configure the provider to run in admin mode.
    Please refer to the Example Usage section below for more details.

    ## Attributes reference

    The following attributes are exported:

    - `id` - The ID of the Admin Recommended Folder.
    - `name` - The name of the Admin Recommended Folder.
    - `description` - The description of the Admin Recommended Folder.
    """
    __args__ = dict()
    __args__['description'] = description
    __args__['id'] = id
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('sumologic:index/getAdminRecommendedFolder:getAdminRecommendedFolder', __args__, opts=opts, typ=GetAdminRecommendedFolderResult).value

    return AwaitableGetAdminRecommendedFolderResult(
        description=pulumi.get(__ret__, 'description'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'))


@_utilities.lift_output_func(get_admin_recommended_folder)
def get_admin_recommended_folder_output(description: Optional[pulumi.Input[Optional[str]]] = None,
                                        id: Optional[pulumi.Input[Optional[str]]] = None,
                                        name: Optional[pulumi.Input[Optional[str]]] = None,
                                        opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAdminRecommendedFolderResult]:
    """
    Provides an easy way to retrieve the Admin Recommended Folder.

    In order to use the Admin Recommended Folder, you should configure the provider to run in admin mode.
    Please refer to the Example Usage section below for more details.

    ## Attributes reference

    The following attributes are exported:

    - `id` - The ID of the Admin Recommended Folder.
    - `name` - The name of the Admin Recommended Folder.
    - `description` - The description of the Admin Recommended Folder.
    """
    ...
