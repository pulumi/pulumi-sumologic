// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provider to manage [Sumologic Data Forwarding Rule](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3)
    /// 
    /// ## Example Usage
    /// 
    /// For Partitions
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testPartition = new SumoLogic.Partition("test_partition", new()
    ///     {
    ///         Name = "testing_rule_partitions",
    ///         RoutingExpression = "_sourcecategory=abc/Terraform",
    ///         IsCompliant = false,
    ///         RetentionPeriod = 30,
    ///         AnalyticsTier = "flex",
    ///     });
    /// 
    ///     var exampleDataForwardingRule = new SumoLogic.DataForwardingRule("example_data_forwarding_rule", new()
    ///     {
    ///         IndexId = testPartition.Id,
    ///         DestinationId = "00000000000732AA",
    ///         Enabled = true,
    ///         FileFormat = "test/{index}/{day}/{hour}/{minute}",
    ///         PayloadSchema = "builtInFields",
    ///         Format = "json",
    ///     });
    /// 
    /// });
    /// ```
    /// For Scheduled Views
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var failedConnections = new SumoLogic.ScheduledView("failed_connections", new()
    ///     {
    ///         IndexName = "failed_connections",
    ///         Query = "_sourceCategory=fire | count",
    ///         StartTime = "2024-09-01T00:00:00Z",
    ///         RetentionPeriod = 1,
    ///     });
    /// 
    ///     var testRuleSv = new SumoLogic.DataForwardingRule("test_rule_sv", new()
    ///     {
    ///         IndexId = failedConnections.IndexId,
    ///         DestinationId = testDestination.Id,
    ///         Enabled = false,
    ///         FileFormat = "test/{index}",
    ///         PayloadSchema = "raw",
    ///         Format = "text",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SumoLogicResourceType("sumologic:index/dataForwardingRule:DataForwardingRule")]
    public partial class DataForwardingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The data forwarding destination id.
        /// </summary>
        [Output("destinationId")]
        public Output<string> DestinationId { get; private set; } = null!;

        /// <summary>
        /// True when the data forwarding rule is enabled. Will be treated as _false_ if left blank.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Specify the path prefix to a directory in the S3 bucket and how to format the file name. For possible values, kindly refer the point 6 in the [documentation](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3).
        /// </summary>
        [Output("fileFormat")]
        public Output<string?> FileFormat { get; private set; } = null!;

        /// <summary>
        /// Format of the payload. Default format will be _csv_. 
        /// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
        /// 
        /// The following attributes are exported:
        /// </summary>
        [Output("format")]
        public Output<string?> Format { get; private set; } = null!;

        /// <summary>
        /// The *id* of the Partition or *index_id* of the Scheduled View the rule applies to.
        /// </summary>
        [Output("indexId")]
        public Output<string> IndexId { get; private set; } = null!;

        /// <summary>
        /// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
        /// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
        /// </summary>
        [Output("payloadSchema")]
        public Output<string?> PayloadSchema { get; private set; } = null!;


        /// <summary>
        /// Create a DataForwardingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataForwardingRule(string name, DataForwardingRuleArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/dataForwardingRule:DataForwardingRule", name, args ?? new DataForwardingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataForwardingRule(string name, Input<string> id, DataForwardingRuleState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/dataForwardingRule:DataForwardingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataForwardingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataForwardingRule Get(string name, Input<string> id, DataForwardingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new DataForwardingRule(name, id, state, options);
        }
    }

    public sealed class DataForwardingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data forwarding destination id.
        /// </summary>
        [Input("destinationId", required: true)]
        public Input<string> DestinationId { get; set; } = null!;

        /// <summary>
        /// True when the data forwarding rule is enabled. Will be treated as _false_ if left blank.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specify the path prefix to a directory in the S3 bucket and how to format the file name. For possible values, kindly refer the point 6 in the [documentation](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3).
        /// </summary>
        [Input("fileFormat")]
        public Input<string>? FileFormat { get; set; }

        /// <summary>
        /// Format of the payload. Default format will be _csv_. 
        /// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
        /// 
        /// The following attributes are exported:
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// The *id* of the Partition or *index_id* of the Scheduled View the rule applies to.
        /// </summary>
        [Input("indexId", required: true)]
        public Input<string> IndexId { get; set; } = null!;

        /// <summary>
        /// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
        /// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
        /// </summary>
        [Input("payloadSchema")]
        public Input<string>? PayloadSchema { get; set; }

        public DataForwardingRuleArgs()
        {
        }
        public static new DataForwardingRuleArgs Empty => new DataForwardingRuleArgs();
    }

    public sealed class DataForwardingRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data forwarding destination id.
        /// </summary>
        [Input("destinationId")]
        public Input<string>? DestinationId { get; set; }

        /// <summary>
        /// True when the data forwarding rule is enabled. Will be treated as _false_ if left blank.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specify the path prefix to a directory in the S3 bucket and how to format the file name. For possible values, kindly refer the point 6 in the [documentation](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3).
        /// </summary>
        [Input("fileFormat")]
        public Input<string>? FileFormat { get; set; }

        /// <summary>
        /// Format of the payload. Default format will be _csv_. 
        /// _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
        /// 
        /// The following attributes are exported:
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// The *id* of the Partition or *index_id* of the Scheduled View the rule applies to.
        /// </summary>
        [Input("indexId")]
        public Input<string>? IndexId { get; set; }

        /// <summary>
        /// Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
        /// _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
        /// </summary>
        [Input("payloadSchema")]
        public Input<string>? PayloadSchema { get; set; }

        public DataForwardingRuleState()
        {
        }
        public static new DataForwardingRuleState Empty => new DataForwardingRuleState();
    }
}
