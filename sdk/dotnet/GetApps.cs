// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    public static class GetApps
    {
        /// <summary>
        /// Provides an easy way to retrieve all Sumo Logic v2 apps.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = SumoLogic.GetApps.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = SumoLogic.GetApps.Invoke(new()
        ///     {
        ///         Name = "MySQL - OpenTelemetry",
        ///         Author = "Sumo Logic",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `uuid` - UUID of the app.
        /// - `name` - Name of the app.
        /// - `description` - Description of the app.
        /// - `latest_version` - Latest version of the app.
        /// - `icon` - URL of the icon for the app.
        /// - `author` - Author of the app.
        /// - `account_types` - URL of the icon for the app
        /// - `log_analytics_filter` - The search filter which would be applied on partitions which belong to Log Analytics product area.
        /// - `beta` - URL of the icon for the app.
        /// - `installs` - Number of times the app was installed.
        /// - `appType` - Type of an app.
        /// - `attributes` - A map of attributes for this app. Attributes allow to group apps based on different criteria.
        /// ### Values in attributes type are : 
        ///   - `category` 
        ///   - `use_case`
        ///   - `collection`
        /// - `family` - Provides a mechanism to link different apps.
        /// - `installable` - Whether the app is installable or not as not all apps are installable.
        /// - `show_on_marketplace` - Whether the app should show up on sumologic.com/applications webpage.
        /// </summary>
        public static Task<GetAppsResult> InvokeAsync(GetAppsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppsResult>("sumologic:index/getApps:getApps", args ?? new GetAppsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an easy way to retrieve all Sumo Logic v2 apps.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = SumoLogic.GetApps.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = SumoLogic.GetApps.Invoke(new()
        ///     {
        ///         Name = "MySQL - OpenTelemetry",
        ///         Author = "Sumo Logic",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `uuid` - UUID of the app.
        /// - `name` - Name of the app.
        /// - `description` - Description of the app.
        /// - `latest_version` - Latest version of the app.
        /// - `icon` - URL of the icon for the app.
        /// - `author` - Author of the app.
        /// - `account_types` - URL of the icon for the app
        /// - `log_analytics_filter` - The search filter which would be applied on partitions which belong to Log Analytics product area.
        /// - `beta` - URL of the icon for the app.
        /// - `installs` - Number of times the app was installed.
        /// - `appType` - Type of an app.
        /// - `attributes` - A map of attributes for this app. Attributes allow to group apps based on different criteria.
        /// ### Values in attributes type are : 
        ///   - `category` 
        ///   - `use_case`
        ///   - `collection`
        /// - `family` - Provides a mechanism to link different apps.
        /// - `installable` - Whether the app is installable or not as not all apps are installable.
        /// - `show_on_marketplace` - Whether the app should show up on sumologic.com/applications webpage.
        /// </summary>
        public static Output<GetAppsResult> Invoke(GetAppsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsResult>("sumologic:index/getApps:getApps", args ?? new GetAppsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an easy way to retrieve all Sumo Logic v2 apps.
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = SumoLogic.GetApps.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = SumoLogic.GetApps.Invoke(new()
        ///     {
        ///         Name = "MySQL - OpenTelemetry",
        ///         Author = "Sumo Logic",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `uuid` - UUID of the app.
        /// - `name` - Name of the app.
        /// - `description` - Description of the app.
        /// - `latest_version` - Latest version of the app.
        /// - `icon` - URL of the icon for the app.
        /// - `author` - Author of the app.
        /// - `account_types` - URL of the icon for the app
        /// - `log_analytics_filter` - The search filter which would be applied on partitions which belong to Log Analytics product area.
        /// - `beta` - URL of the icon for the app.
        /// - `installs` - Number of times the app was installed.
        /// - `appType` - Type of an app.
        /// - `attributes` - A map of attributes for this app. Attributes allow to group apps based on different criteria.
        /// ### Values in attributes type are : 
        ///   - `category` 
        ///   - `use_case`
        ///   - `collection`
        /// - `family` - Provides a mechanism to link different apps.
        /// - `installable` - Whether the app is installable or not as not all apps are installable.
        /// - `show_on_marketplace` - Whether the app should show up on sumologic.com/applications webpage.
        /// </summary>
        public static Output<GetAppsResult> Invoke(GetAppsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppsResult>("sumologic:index/getApps:getApps", args ?? new GetAppsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppsArgs : global::Pulumi.InvokeArgs
    {
        [Input("author")]
        public string? Author { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetAppsArgs()
        {
        }
        public static new GetAppsArgs Empty => new GetAppsArgs();
    }

    public sealed class GetAppsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("author")]
        public Input<string>? Author { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetAppsInvokeArgs()
        {
        }
        public static new GetAppsInvokeArgs Empty => new GetAppsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppsResult
    {
        public readonly ImmutableArray<Outputs.GetAppsAppResult> Apps;
        public readonly string? Author;
        public readonly string Id;
        public readonly string? Name;

        [OutputConstructor]
        private GetAppsResult(
            ImmutableArray<Outputs.GetAppsAppResult> apps,

            string? author,

            string id,

            string? name)
        {
            Apps = apps;
            Author = author;
            Id = id;
            Name = name;
        }
    }
}
