// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provider to manage Sumologic Role v2
    /// </summary>
    [SumoLogicResourceType("sumologic:index/roleV2:RoleV2")]
    public partial class RoleV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A search filter which would be applied on partitions which belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/).
        /// </summary>
        [Output("auditDataFilter")]
        public Output<string?> AuditDataFilter { get; private set; } = null!;

        /// <summary>
        /// List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/) associated with this role.
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// Description of the role.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A search filter which would be applied on partitions which belong to Log Analytics product area.
        /// </summary>
        [Output("logAnalyticsFilter")]
        public Output<string?> LogAnalyticsFilter { get; private set; } = null!;

        /// <summary>
        /// Name of the role.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A search filter which would be applied on partitions which belong to Security Data product area.
        /// </summary>
        [Output("securityDataFilter")]
        public Output<string?> SecurityDataFilter { get; private set; } = null!;

        /// <summary>
        /// List of views with specific view level filters in accordance to the selectionType chosen.
        /// </summary>
        [Output("selectedViews")]
        public Output<ImmutableArray<Outputs.RoleV2SelectedView>> SelectedViews { get; private set; } = null!;

        /// <summary>
        /// Describes the Permission Construct for the list of views in "selectedViews" parameter.
        /// </summary>
        [Output("selectionType")]
        public Output<string?> SelectionType { get; private set; } = null!;


        /// <summary>
        /// Create a RoleV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RoleV2(string name, RoleV2Args? args = null, CustomResourceOptions? options = null)
            : base("sumologic:index/roleV2:RoleV2", name, args ?? new RoleV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private RoleV2(string name, Input<string> id, RoleV2State? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/roleV2:RoleV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RoleV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RoleV2 Get(string name, Input<string> id, RoleV2State? state = null, CustomResourceOptions? options = null)
        {
            return new RoleV2(name, id, state, options);
        }
    }

    public sealed class RoleV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A search filter which would be applied on partitions which belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/).
        /// </summary>
        [Input("auditDataFilter")]
        public Input<string>? AuditDataFilter { get; set; }

        [Input("capabilities")]
        private InputList<string>? _capabilities;

        /// <summary>
        /// List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/) associated with this role.
        /// </summary>
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        /// <summary>
        /// Description of the role.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A search filter which would be applied on partitions which belong to Log Analytics product area.
        /// </summary>
        [Input("logAnalyticsFilter")]
        public Input<string>? LogAnalyticsFilter { get; set; }

        /// <summary>
        /// Name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A search filter which would be applied on partitions which belong to Security Data product area.
        /// </summary>
        [Input("securityDataFilter")]
        public Input<string>? SecurityDataFilter { get; set; }

        [Input("selectedViews")]
        private InputList<Inputs.RoleV2SelectedViewArgs>? _selectedViews;

        /// <summary>
        /// List of views with specific view level filters in accordance to the selectionType chosen.
        /// </summary>
        public InputList<Inputs.RoleV2SelectedViewArgs> SelectedViews
        {
            get => _selectedViews ?? (_selectedViews = new InputList<Inputs.RoleV2SelectedViewArgs>());
            set => _selectedViews = value;
        }

        /// <summary>
        /// Describes the Permission Construct for the list of views in "selectedViews" parameter.
        /// </summary>
        [Input("selectionType")]
        public Input<string>? SelectionType { get; set; }

        public RoleV2Args()
        {
        }
        public static new RoleV2Args Empty => new RoleV2Args();
    }

    public sealed class RoleV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A search filter which would be applied on partitions which belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/).
        /// </summary>
        [Input("auditDataFilter")]
        public Input<string>? AuditDataFilter { get; set; }

        [Input("capabilities")]
        private InputList<string>? _capabilities;

        /// <summary>
        /// List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/) associated with this role.
        /// </summary>
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        /// <summary>
        /// Description of the role.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A search filter which would be applied on partitions which belong to Log Analytics product area.
        /// </summary>
        [Input("logAnalyticsFilter")]
        public Input<string>? LogAnalyticsFilter { get; set; }

        /// <summary>
        /// Name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A search filter which would be applied on partitions which belong to Security Data product area.
        /// </summary>
        [Input("securityDataFilter")]
        public Input<string>? SecurityDataFilter { get; set; }

        [Input("selectedViews")]
        private InputList<Inputs.RoleV2SelectedViewGetArgs>? _selectedViews;

        /// <summary>
        /// List of views with specific view level filters in accordance to the selectionType chosen.
        /// </summary>
        public InputList<Inputs.RoleV2SelectedViewGetArgs> SelectedViews
        {
            get => _selectedViews ?? (_selectedViews = new InputList<Inputs.RoleV2SelectedViewGetArgs>());
            set => _selectedViews = value;
        }

        /// <summary>
        /// Describes the Permission Construct for the list of views in "selectedViews" parameter.
        /// </summary>
        [Input("selectionType")]
        public Input<string>? SelectionType { get; set; }

        public RoleV2State()
        {
        }
        public static new RoleV2State Empty => new RoleV2State();
    }
}
