// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Outputs
{

    [OutputType]
    public sealed class LogSearchScheduleNotificationWebhookSearchNotification
    {
        /// <summary>
        /// If set to true, one webhook per result will be sent when the trigger conditions are met.
        /// </summary>
        public readonly bool? ItemizeAlerts;
        /// <summary>
        /// The maximum number of results for which we send separate alerts.
        /// </summary>
        public readonly int? MaxItemizedAlerts;
        /// <summary>
        /// A JSON object in the format required by the target WebHook URL.
        /// </summary>
        public readonly string? Payload;
        /// <summary>
        /// Identifier of the webhook connection.
        /// </summary>
        public readonly string WebhookId;

        [OutputConstructor]
        private LogSearchScheduleNotificationWebhookSearchNotification(
            bool? itemizeAlerts,

            int? maxItemizedAlerts,

            string? payload,

            string webhookId)
        {
            ItemizeAlerts = itemizeAlerts;
            MaxItemizedAlerts = maxItemizedAlerts;
            Payload = payload;
            WebhookId = webhookId;
        }
    }
}
