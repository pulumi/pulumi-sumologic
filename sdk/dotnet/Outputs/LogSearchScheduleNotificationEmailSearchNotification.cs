// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Outputs
{

    [OutputType]
    public sealed class LogSearchScheduleNotificationEmailSearchNotification
    {
        /// <summary>
        /// If the search results should be included in the notification email
        /// as a CSV attachment.
        /// </summary>
        public readonly bool? IncludeCsvAttachment;
        /// <summary>
        /// If the search result histogram should be included in the notification email.
        /// </summary>
        public readonly bool? IncludeHistogram;
        /// <summary>
        /// If the search query should be included in the notification email.
        /// </summary>
        public readonly bool? IncludeQuery;
        /// <summary>
        /// If the search result set should be included in the notification email.
        /// </summary>
        public readonly bool? IncludeResultSet;
        /// <summary>
        /// Subject of the email. If the notification is scheduled with a threshold,
        /// the default subject template will be `Search Alert: {{AlertCondition}} results found for {{SearchName}}`.
        /// For email notifications without a threshold, the default subject template is `Search Results: {{SearchName}}`.
        /// </summary>
        public readonly string? SubjectTemplate;
        /// <summary>
        /// A list of email recipients.
        /// </summary>
        public readonly ImmutableArray<string> ToLists;

        [OutputConstructor]
        private LogSearchScheduleNotificationEmailSearchNotification(
            bool? includeCsvAttachment,

            bool? includeHistogram,

            bool? includeQuery,

            bool? includeResultSet,

            string? subjectTemplate,

            ImmutableArray<string> toLists)
        {
            IncludeCsvAttachment = includeCsvAttachment;
            IncludeHistogram = includeHistogram;
            IncludeQuery = includeQuery;
            IncludeResultSet = includeResultSet;
            SubjectTemplate = subjectTemplate;
            ToLists = toLists;
        }
    }
}
