// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Outputs
{

    [OutputType]
    public sealed class MonitorNotificationNotification
    {
        public readonly string? ActionType;
        public readonly string? ConnectionId;
        public readonly string? ConnectionType;
        public readonly string? MessageBody;
        public readonly string? PayloadOverride;
        public readonly ImmutableArray<string> Recipients;
        public readonly string? ResolutionPayloadOverride;
        public readonly string? Subject;
        public readonly string? TimeZone;

        [OutputConstructor]
        private MonitorNotificationNotification(
            string? actionType,

            string? connectionId,

            string? connectionType,

            string? messageBody,

            string? payloadOverride,

            ImmutableArray<string> recipients,

            string? resolutionPayloadOverride,

            string? subject,

            string? timeZone)
        {
            ActionType = actionType;
            ConnectionId = connectionId;
            ConnectionType = connectionType;
            MessageBody = messageBody;
            PayloadOverride = payloadOverride;
            Recipients = recipients;
            ResolutionPayloadOverride = resolutionPayloadOverride;
            Subject = subject;
            TimeZone = timeZone;
        }
    }
}
