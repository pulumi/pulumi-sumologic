// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Outputs
{

    [OutputType]
    public sealed class SloIndicatorWindowBasedEvaluation
    {
        /// <summary>
        /// Aggregation function applied over each window to arrive at SLI. Valid values are `Avg`
        /// , `Sum`, `Count`, `Max`, `Min` and `p[1-99]`.
        /// </summary>
        public readonly string? Aggregation;
        /// <summary>
        /// The operator used to define a successful window. Valid values are `LessThan`
        /// , `LessThanOrEqual`, `GreaterThan`
        /// , `GreaterThanOrEqual`.
        /// </summary>
        public readonly string Op;
        /// <summary>
        /// The queries to use.
        /// </summary>
        public readonly ImmutableArray<Outputs.SloIndicatorWindowBasedEvaluationQuery> Queries;
        /// <summary>
        /// The type of query to use. Valid values are `Metrics` or `Logs`.
        /// </summary>
        public readonly string QueryType;
        /// <summary>
        /// The size of the window to use, minimum of `1m` and maximum of `1h`. Only applicable for Window
        /// based evaluation.
        /// </summary>
        public readonly string Size;
        /// <summary>
        /// Threshold for classifying window as successful or unsuccessful, i.e. the minimum value
        /// for `(good windows / total windows) * 100`.
        /// </summary>
        public readonly double Threshold;

        [OutputConstructor]
        private SloIndicatorWindowBasedEvaluation(
            string? aggregation,

            string op,

            ImmutableArray<Outputs.SloIndicatorWindowBasedEvaluationQuery> queries,

            string queryType,

            string size,

            double threshold)
        {
            Aggregation = aggregation;
            Op = op;
            Queries = queries;
            QueryType = queryType;
            Size = size;
            Threshold = threshold;
        }
    }
}
