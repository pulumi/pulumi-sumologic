// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Outputs
{

    [OutputType]
    public sealed class AzureEventHubLogSourceAuthentication
    {
        public readonly string? AccessKey;
        public readonly string? AuthProviderX509CertUrl;
        public readonly string? AuthUri;
        public readonly string? ClientEmail;
        public readonly string? ClientId;
        public readonly string? ClientX509CertUrl;
        public readonly string? PrivateKey;
        public readonly string? PrivateKeyId;
        public readonly string? ProjectId;
        public readonly string? Region;
        public readonly string? RoleArn;
        public readonly string? SecretKey;
        /// <summary>
        /// Your shared access policy key.
        /// </summary>
        public readonly string? SharedAccessPolicyKey;
        /// <summary>
        /// Your shared access policy name.
        /// </summary>
        public readonly string? SharedAccessPolicyName;
        public readonly string? TokenUri;
        /// <summary>
        /// Must be `AzureEventHubAuthentication`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private AzureEventHubLogSourceAuthentication(
            string? accessKey,

            string? authProviderX509CertUrl,

            string? authUri,

            string? clientEmail,

            string? clientId,

            string? clientX509CertUrl,

            string? privateKey,

            string? privateKeyId,

            string? projectId,

            string? region,

            string? roleArn,

            string? secretKey,

            string? sharedAccessPolicyKey,

            string? sharedAccessPolicyName,

            string? tokenUri,

            string type)
        {
            AccessKey = accessKey;
            AuthProviderX509CertUrl = authProviderX509CertUrl;
            AuthUri = authUri;
            ClientEmail = clientEmail;
            ClientId = clientId;
            ClientX509CertUrl = clientX509CertUrl;
            PrivateKey = privateKey;
            PrivateKeyId = privateKeyId;
            ProjectId = projectId;
            Region = region;
            RoleArn = roleArn;
            SecretKey = secretKey;
            SharedAccessPolicyKey = sharedAccessPolicyKey;
            SharedAccessPolicyName = sharedAccessPolicyName;
            TokenUri = tokenUri;
            Type = type;
        }
    }
}
