// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Outputs
{

    [OutputType]
    public sealed class LogSearchSchedule
    {
        /// <summary>
        /// Cron-like expression specifying the search's schedule. `schedule_type` must be set
        /// to "Custom", otherwise, `schedule_type` takes precedence over `cron_expression`.
        /// </summary>
        public readonly string? CronExpression;
        /// <summary>
        /// If enabled, emails are not sent out in case of errors with the search.
        /// </summary>
        public readonly bool? MuteErrorEmails;
        /// <summary>
        /// Notification of the log search. See
        /// notification schema
        /// </summary>
        public readonly Outputs.LogSearchScheduleNotification Notification;
        public readonly ImmutableArray<Outputs.LogSearchScheduleParameter> Parameters;
        /// <summary>
        /// Time range of the scheduled log search. See
        /// time range schema
        /// </summary>
        public readonly Outputs.LogSearchScheduleParseableTimeRange ParseableTimeRange;
        /// <summary>
        /// Run schedule of the scheduled search. Set to "Custom" to specify the schedule with
        /// a CRON expression. Possible schedule types are: `15Minutes`, `1Hour`, `2Hours`, `4Hours`, `6Hours`,
        /// `8Hours`, `12Hours`, `1Day`, `1Week`, `Custom`.
        /// 
        /// &gt; With `Custom`, `1Day` and `1Week` schedule types you need to provide the corresponding cron expression
        /// to determine when to actually run the search. E.g. valid cron for `1Day` is `0 0 16 ? * 2-6 *`.
        /// </summary>
        public readonly string ScheduleType;
        /// <summary>
        /// Threshold for when to send notification. See
        /// threshold schema
        /// </summary>
        public readonly Outputs.LogSearchScheduleThreshold? Threshold;
        /// <summary>
        /// Time zone for the scheduled log search. Either an abbreviation such as "PST",
        /// a full name such as "America/Los_Angeles", or a custom ID such as "GMT-8:00". Note that the support of
        /// abbreviations is for JDK 1.1.x compatibility only and full names should be used.
        /// </summary>
        public readonly string TimeZone;

        [OutputConstructor]
        private LogSearchSchedule(
            string? cronExpression,

            bool? muteErrorEmails,

            Outputs.LogSearchScheduleNotification notification,

            ImmutableArray<Outputs.LogSearchScheduleParameter> parameters,

            Outputs.LogSearchScheduleParseableTimeRange parseableTimeRange,

            string scheduleType,

            Outputs.LogSearchScheduleThreshold? threshold,

            string timeZone)
        {
            CronExpression = cronExpression;
            MuteErrorEmails = muteErrorEmails;
            Notification = notification;
            Parameters = parameters;
            ParseableTimeRange = parseableTimeRange;
            ScheduleType = scheduleType;
            Threshold = threshold;
            TimeZone = timeZone;
        }
    }
}
