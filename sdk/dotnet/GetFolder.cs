// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    public static class GetFolder
    {
        /// <summary>
        /// Provides an easy way to retrieve a folder.
        /// 
        /// You must specify the absolute path of the folder to retrieve. The content library has "Library"
        /// folder at the root level. For items in "Personal" folder, the base path is "/Library/Users/user@sumologic.com"
        /// where "user@sumologic.com" is the email address of the user. For example, if a user with email address
        /// `wile@acme.com` has `Rockets` folder inside Personal folder, the path of Rockets folder will be
        /// `/Library/Users/wile@acme.com/Rockets`.
        /// 
        /// For items in "Admin Recommended" folder, the base path is "/Library/Admin Recommended". For example,
        /// given a folder `Acme` in Admin Recommended folder, the path will be `/Library/Admin Recommended/Acme`.
        /// 
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `id` - The ID of the folder.
        /// - `name` - The name of the folder.
        /// </summary>
        public static Task<GetFolderResult> InvokeAsync(GetFolderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFolderResult>("sumologic:index/getFolder:getFolder", args ?? new GetFolderArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an easy way to retrieve a folder.
        /// 
        /// You must specify the absolute path of the folder to retrieve. The content library has "Library"
        /// folder at the root level. For items in "Personal" folder, the base path is "/Library/Users/user@sumologic.com"
        /// where "user@sumologic.com" is the email address of the user. For example, if a user with email address
        /// `wile@acme.com` has `Rockets` folder inside Personal folder, the path of Rockets folder will be
        /// `/Library/Users/wile@acme.com/Rockets`.
        /// 
        /// For items in "Admin Recommended" folder, the base path is "/Library/Admin Recommended". For example,
        /// given a folder `Acme` in Admin Recommended folder, the path will be `/Library/Admin Recommended/Acme`.
        /// 
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `id` - The ID of the folder.
        /// - `name` - The name of the folder.
        /// </summary>
        public static Output<GetFolderResult> Invoke(GetFolderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFolderResult>("sumologic:index/getFolder:getFolder", args ?? new GetFolderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFolderArgs : global::Pulumi.InvokeArgs
    {
        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        public GetFolderArgs()
        {
        }
        public static new GetFolderArgs Empty => new GetFolderArgs();
    }

    public sealed class GetFolderInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public GetFolderInvokeArgs()
        {
        }
        public static new GetFolderInvokeArgs Empty => new GetFolderInvokeArgs();
    }


    [OutputType]
    public sealed class GetFolderResult
    {
        public readonly string Id;
        public readonly string Name;
        public readonly string Path;

        [OutputConstructor]
        private GetFolderResult(
            string id,

            string name,

            string path)
        {
            Id = id;
            Name = name;
            Path = path;
        }
    }
}
