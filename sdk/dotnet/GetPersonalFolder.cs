// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    public static class GetPersonalFolder
    {
        /// <summary>
        /// Provides an easy way to retrieve the Personal Folder.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var personalFolder = SumoLogic.GetPersonalFolder.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `id` - The ID of the Personal Folder.
        /// - `name` - The name of the Personal Folder.
        /// - `description` - The description of the Personal Folder.
        /// </summary>
        public static Task<GetPersonalFolderResult> InvokeAsync(GetPersonalFolderArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPersonalFolderResult>("sumologic:index/getPersonalFolder:getPersonalFolder", args ?? new GetPersonalFolderArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an easy way to retrieve the Personal Folder.
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using SumoLogic = Pulumi.SumoLogic;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var personalFolder = SumoLogic.GetPersonalFolder.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// - `id` - The ID of the Personal Folder.
        /// - `name` - The name of the Personal Folder.
        /// - `description` - The description of the Personal Folder.
        /// </summary>
        public static Output<GetPersonalFolderResult> Invoke(GetPersonalFolderInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPersonalFolderResult>("sumologic:index/getPersonalFolder:getPersonalFolder", args ?? new GetPersonalFolderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPersonalFolderArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetPersonalFolderArgs()
        {
        }
        public static new GetPersonalFolderArgs Empty => new GetPersonalFolderArgs();
    }

    public sealed class GetPersonalFolderInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetPersonalFolderInvokeArgs()
        {
        }
        public static new GetPersonalFolderInvokeArgs Empty => new GetPersonalFolderInvokeArgs();
    }


    [OutputType]
    public sealed class GetPersonalFolderResult
    {
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetPersonalFolderResult(
            string description,

            string id,

            string name)
        {
            Description = description;
            Id = id;
            Name = name;
        }
    }
}
