// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides a Sumologic CSE Entity Criticality Configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var entityCriticalityConfig = new SumoLogic.CseEntityCriticalityConfig("entityCriticalityConfig", new()
    ///     {
    ///         SeverityExpression = "severity + 2",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Entity criticality configuration can be imported using the field id, e.g.hcl
    /// 
    /// ```sh
    ///  $ pulumi import sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig entity_criticality_config id
    /// ```
    /// </summary>
    [SumoLogicResourceType("sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig")]
    public partial class CseEntityCriticalityConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
        /// </summary>
        [Output("severityExpression")]
        public Output<string> SeverityExpression { get; private set; } = null!;


        /// <summary>
        /// Create a CseEntityCriticalityConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CseEntityCriticalityConfig(string name, CseEntityCriticalityConfigArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig", name, args ?? new CseEntityCriticalityConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CseEntityCriticalityConfig(string name, Input<string> id, CseEntityCriticalityConfigState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/cseEntityCriticalityConfig:CseEntityCriticalityConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CseEntityCriticalityConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CseEntityCriticalityConfig Get(string name, Input<string> id, CseEntityCriticalityConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new CseEntityCriticalityConfig(name, id, state, options);
        }
    }

    public sealed class CseEntityCriticalityConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
        /// </summary>
        [Input("severityExpression", required: true)]
        public Input<string> SeverityExpression { get; set; } = null!;

        public CseEntityCriticalityConfigArgs()
        {
        }
        public static new CseEntityCriticalityConfigArgs Empty => new CseEntityCriticalityConfigArgs();
    }

    public sealed class CseEntityCriticalityConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Human friendly and unique name. Examples: "Executive Laptop", "Bastion Host".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Algebraic expression representing this entity\'s criticality. Examples: "severity * 2", "severity - 5", "severity / 3".
        /// </summary>
        [Input("severityExpression")]
        public Input<string>? SeverityExpression { get; set; }

        public CseEntityCriticalityConfigState()
        {
        }
        public static new CseEntityCriticalityConfigState Empty => new CseEntityCriticalityConfigState();
    }
}
