// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides a [Sumologic Subdomain](https://help.sumologic.com/Manage/01Account_Usage/05Manage_Organization#change-account-subdomain).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleSubdomain = new SumoLogic.Subdomain("exampleSubdomain", new()
    ///     {
    ///         SubdomainName = "my-company",
    ///     });
    /// 
    /// });
    /// ```
    /// ## Attributes reference
    /// 
    /// The following attributes are exported:
    /// 
    /// - `id` - Unique identifier for the subdomain.
    /// 
    /// [1]: https://help.sumologic.com/Manage/01Account_Usage/05Manage_Organization#change-account-subdomain
    /// </summary>
    [SumoLogicResourceType("sumologic:index/subdomain:Subdomain")]
    public partial class Subdomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The subdomain.
        /// </summary>
        [Output("subdomain")]
        public Output<string> SubdomainName { get; private set; } = null!;


        /// <summary>
        /// Create a Subdomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Subdomain(string name, SubdomainArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/subdomain:Subdomain", name, args ?? new SubdomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Subdomain(string name, Input<string> id, SubdomainState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/subdomain:Subdomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Subdomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Subdomain Get(string name, Input<string> id, SubdomainState? state = null, CustomResourceOptions? options = null)
        {
            return new Subdomain(name, id, state, options);
        }
    }

    public sealed class SubdomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The subdomain.
        /// </summary>
        [Input("subdomain", required: true)]
        public Input<string> SubdomainName { get; set; } = null!;

        public SubdomainArgs()
        {
        }
        public static new SubdomainArgs Empty => new SubdomainArgs();
    }

    public sealed class SubdomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The subdomain.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? SubdomainName { get; set; }

        public SubdomainState()
        {
        }
        public static new SubdomainState Empty => new SubdomainState();
    }
}
