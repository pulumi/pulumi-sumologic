// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides the Sumologic CSE Insights Configuration for the whole organization. There can be only one configuration per organization.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var insightsConfiguration = new SumoLogic.CseInsightsConfiguration("insightsConfiguration", new()
    ///     {
    ///         LookbackDays = 13,
    ///         Threshold = 12,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Insights Configuration can be imported using the id `cse-insights-configuration`hcl
    /// 
    /// ```sh
    ///  $ pulumi import sumologic:index/cseInsightsConfiguration:CseInsightsConfiguration insights_configuration cse-insights-configuration
    /// ```
    /// </summary>
    [SumoLogicResourceType("sumologic:index/cseInsightsConfiguration:CseInsightsConfiguration")]
    public partial class CseInsightsConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Detection window expressed in days.
        /// </summary>
        [Output("lookbackDays")]
        public Output<double?> LookbackDays { get; private set; } = null!;

        /// <summary>
        /// Detection threshold activity score.
        /// </summary>
        [Output("threshold")]
        public Output<double?> Threshold { get; private set; } = null!;


        /// <summary>
        /// Create a CseInsightsConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CseInsightsConfiguration(string name, CseInsightsConfigurationArgs? args = null, CustomResourceOptions? options = null)
            : base("sumologic:index/cseInsightsConfiguration:CseInsightsConfiguration", name, args ?? new CseInsightsConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CseInsightsConfiguration(string name, Input<string> id, CseInsightsConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/cseInsightsConfiguration:CseInsightsConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CseInsightsConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CseInsightsConfiguration Get(string name, Input<string> id, CseInsightsConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new CseInsightsConfiguration(name, id, state, options);
        }
    }

    public sealed class CseInsightsConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Detection window expressed in days.
        /// </summary>
        [Input("lookbackDays")]
        public Input<double>? LookbackDays { get; set; }

        /// <summary>
        /// Detection threshold activity score.
        /// </summary>
        [Input("threshold")]
        public Input<double>? Threshold { get; set; }

        public CseInsightsConfigurationArgs()
        {
        }
        public static new CseInsightsConfigurationArgs Empty => new CseInsightsConfigurationArgs();
    }

    public sealed class CseInsightsConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Detection window expressed in days.
        /// </summary>
        [Input("lookbackDays")]
        public Input<double>? LookbackDays { get; set; }

        /// <summary>
        /// Detection threshold activity score.
        /// </summary>
        [Input("threshold")]
        public Input<double>? Threshold { get; set; }

        public CseInsightsConfigurationState()
        {
        }
        public static new CseInsightsConfigurationState Empty => new CseInsightsConfigurationState();
    }
}
