// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides a [Sumologic Scheduled View](https://help.sumologic.com/Manage/Scheduled-Views).
    /// 
    /// ## Import
    /// 
    /// Scheduled Views can can be imported using the id. The list of scheduled views and their ids can be obtained using the Sumologic [scheduled views api][2]. hcl
    /// 
    /// ```sh
    ///  $ pulumi import sumologic:index/scheduledView:ScheduledView failed_connections 1234567890
    /// ```
    /// 
    ///  [1]https://help.sumologic.com/Manage/Scheduled-Views [2]https://api.sumologic.com/docs/#operation/listScheduledViews
    /// </summary>
    [SumoLogicResourceType("sumologic:index/scheduledView:ScheduledView")]
    public partial class ScheduledView : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An optional ID of a data forwarding configuration to be used by the scheduled view.
        /// </summary>
        [Output("dataForwardingId")]
        public Output<string?> DataForwardingId { get; private set; } = null!;

        /// <summary>
        /// Name of the index (scheduled view).
        /// </summary>
        [Output("indexName")]
        public Output<string> IndexName { get; private set; } = null!;

        /// <summary>
        /// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
        /// </summary>
        [Output("parsingMode")]
        public Output<string?> ParsingMode { get; private set; } = null!;

        /// <summary>
        /// Log query defining the scheduled view.
        /// </summary>
        [Output("query")]
        public Output<string> Query { get; private set; } = null!;

        /// <summary>
        /// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
        /// </summary>
        [Output("reduceRetentionPeriodImmediately")]
        public Output<bool?> ReduceRetentionPeriodImmediately { get; private set; } = null!;

        /// <summary>
        /// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
        /// </summary>
        [Output("retentionPeriod")]
        public Output<int?> RetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// Start timestamp in UTC in RFC3339 format.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;


        /// <summary>
        /// Create a ScheduledView resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScheduledView(string name, ScheduledViewArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/scheduledView:ScheduledView", name, args ?? new ScheduledViewArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScheduledView(string name, Input<string> id, ScheduledViewState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/scheduledView:ScheduledView", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScheduledView resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScheduledView Get(string name, Input<string> id, ScheduledViewState? state = null, CustomResourceOptions? options = null)
        {
            return new ScheduledView(name, id, state, options);
        }
    }

    public sealed class ScheduledViewArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional ID of a data forwarding configuration to be used by the scheduled view.
        /// </summary>
        [Input("dataForwardingId")]
        public Input<string>? DataForwardingId { get; set; }

        /// <summary>
        /// Name of the index (scheduled view).
        /// </summary>
        [Input("indexName", required: true)]
        public Input<string> IndexName { get; set; } = null!;

        /// <summary>
        /// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
        /// </summary>
        [Input("parsingMode")]
        public Input<string>? ParsingMode { get; set; }

        /// <summary>
        /// Log query defining the scheduled view.
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        /// <summary>
        /// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
        /// </summary>
        [Input("reduceRetentionPeriodImmediately")]
        public Input<bool>? ReduceRetentionPeriodImmediately { get; set; }

        /// <summary>
        /// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
        /// </summary>
        [Input("retentionPeriod")]
        public Input<int>? RetentionPeriod { get; set; }

        /// <summary>
        /// Start timestamp in UTC in RFC3339 format.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public ScheduledViewArgs()
        {
        }
        public static new ScheduledViewArgs Empty => new ScheduledViewArgs();
    }

    public sealed class ScheduledViewState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional ID of a data forwarding configuration to be used by the scheduled view.
        /// </summary>
        [Input("dataForwardingId")]
        public Input<string>? DataForwardingId { get; set; }

        /// <summary>
        /// Name of the index (scheduled view).
        /// </summary>
        [Input("indexName")]
        public Input<string>? IndexName { get; set; }

        /// <summary>
        /// Default to `Manual`. Define the parsing mode to scan the JSON format log messages. Possible values are: `AutoParse` - In AutoParse mode, the system automatically figures out fields to parse based on the search query. `Manual` - While in the Manual mode, no fields are parsed out automatically. For more information see Dynamic Parsing.
        /// </summary>
        [Input("parsingMode")]
        public Input<string>? ParsingMode { get; set; }

        /// <summary>
        /// Log query defining the scheduled view.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
        /// </summary>
        [Input("reduceRetentionPeriodImmediately")]
        public Input<bool>? ReduceRetentionPeriodImmediately { get; set; }

        /// <summary>
        /// The number of days to retain data in the scheduled view, or -1 to use the default value for your account. Only relevant if your account has multi-retention. enabled.
        /// </summary>
        [Input("retentionPeriod")]
        public Input<int>? RetentionPeriod { get; set; }

        /// <summary>
        /// Start timestamp in UTC in RFC3339 format.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public ScheduledViewState()
        {
        }
        public static new ScheduledViewState Empty => new ScheduledViewState();
    }
}
