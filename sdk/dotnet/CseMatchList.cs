// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides a Sumologic CSE Match List.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var matchList = new SumoLogic.CseMatchList("matchList", new()
    ///     {
    ///         DefaultTtl = 10800,
    ///         Description = "Match list description",
    ///         Items = new[]
    ///         {
    ///             new SumoLogic.Inputs.CseMatchListItemArgs
    ///             {
    ///                 Description = "IP address",
    ///                 Expiration = "2022-02-27T04:00:00",
    ///                 Value = "192.168.0.1",
    ///             },
    ///         },
    ///         TargetColumn = "SrcIp",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Match List can be imported using the field id, e.g.hcl
    /// 
    /// ```sh
    ///  $ pulumi import sumologic:index/cseMatchList:CseMatchList match_list id
    /// ```
    /// </summary>
    [SumoLogicResourceType("sumologic:index/cseMatchList:CseMatchList")]
    public partial class CseMatchList : global::Pulumi.CustomResource
    {
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The default time to live for match list items added through the UI. Specified in seconds.
        /// </summary>
        [Output("defaultTtl")]
        public Output<int?> DefaultTtl { get; private set; } = null!;

        /// <summary>
        /// Match list description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of match list items. See match_list_item schema for details.
        /// </summary>
        [Output("items")]
        public Output<ImmutableArray<Outputs.CseMatchListItem>> Items { get; private set; } = null!;

        [Output("lastUpdated")]
        public Output<string> LastUpdated { get; private set; } = null!;

        [Output("lastUpdatedBy")]
        public Output<string> LastUpdatedBy { get; private set; } = null!;

        /// <summary>
        /// Match list name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Target column. (possible values: Hostname, FileHash, Url, SrcIp, DstIp, Domain, Username, Ip, Asn, Isp, Org, SrcAsn, SrcIsp, SrcOrg, DstAsn, DstIsp, DstOrg or any custom column.)
        /// </summary>
        [Output("targetColumn")]
        public Output<string> TargetColumn { get; private set; } = null!;


        /// <summary>
        /// Create a CseMatchList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CseMatchList(string name, CseMatchListArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/cseMatchList:CseMatchList", name, args ?? new CseMatchListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CseMatchList(string name, Input<string> id, CseMatchListState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/cseMatchList:CseMatchList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CseMatchList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CseMatchList Get(string name, Input<string> id, CseMatchListState? state = null, CustomResourceOptions? options = null)
        {
            return new CseMatchList(name, id, state, options);
        }
    }

    public sealed class CseMatchListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default time to live for match list items added through the UI. Specified in seconds.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Match list description.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("items")]
        private InputList<Inputs.CseMatchListItemArgs>? _items;

        /// <summary>
        /// List of match list items. See match_list_item schema for details.
        /// </summary>
        public InputList<Inputs.CseMatchListItemArgs> Items
        {
            get => _items ?? (_items = new InputList<Inputs.CseMatchListItemArgs>());
            set => _items = value;
        }

        /// <summary>
        /// Match list name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Target column. (possible values: Hostname, FileHash, Url, SrcIp, DstIp, Domain, Username, Ip, Asn, Isp, Org, SrcAsn, SrcIsp, SrcOrg, DstAsn, DstIsp, DstOrg or any custom column.)
        /// </summary>
        [Input("targetColumn", required: true)]
        public Input<string> TargetColumn { get; set; } = null!;

        public CseMatchListArgs()
        {
        }
        public static new CseMatchListArgs Empty => new CseMatchListArgs();
    }

    public sealed class CseMatchListState : global::Pulumi.ResourceArgs
    {
        [Input("created")]
        public Input<string>? Created { get; set; }

        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The default time to live for match list items added through the UI. Specified in seconds.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Match list description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("items")]
        private InputList<Inputs.CseMatchListItemGetArgs>? _items;

        /// <summary>
        /// List of match list items. See match_list_item schema for details.
        /// </summary>
        public InputList<Inputs.CseMatchListItemGetArgs> Items
        {
            get => _items ?? (_items = new InputList<Inputs.CseMatchListItemGetArgs>());
            set => _items = value;
        }

        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        [Input("lastUpdatedBy")]
        public Input<string>? LastUpdatedBy { get; set; }

        /// <summary>
        /// Match list name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Target column. (possible values: Hostname, FileHash, Url, SrcIp, DstIp, Domain, Username, Ip, Asn, Isp, Org, SrcAsn, SrcIsp, SrcOrg, DstAsn, DstIsp, DstOrg or any custom column.)
        /// </summary>
        [Input("targetColumn")]
        public Input<string>? TargetColumn { get; set; }

        public CseMatchListState()
        {
        }
        public static new CseMatchListState Empty => new CseMatchListState();
    }
}
