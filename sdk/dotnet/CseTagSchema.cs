// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// Provides a Sumologic CSE Tag Schema.
    /// 
    /// ## Import
    /// 
    /// Tag Schema can be imported using the field id, e.g.:
    /// 
    /// hcl
    /// 
    /// ```sh
    /// $ pulumi import sumologic:index/cseTagSchema:CseTagSchema tag_schema id
    /// ```
    /// </summary>
    [SumoLogicResourceType("sumologic:index/cseTagSchema:CseTagSchema")]
    public partial class CseTagSchema : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Applicable content types. Valid values: "customInsight", "entity", "rule", "threatIntelligence".
        /// </summary>
        [Output("contentTypes")]
        public Output<ImmutableArray<string>> ContentTypes { get; private set; } = null!;

        /// <summary>
        /// Whether the tag schema accepts free form custom values.
        /// </summary>
        [Output("freeForm")]
        public Output<bool> FreeForm { get; private set; } = null!;

        /// <summary>
        /// Tag Schema key.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Value option label.
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        [Output("valueOptions")]
        public Output<ImmutableArray<Outputs.CseTagSchemaValueOption>> ValueOptions { get; private set; } = null!;


        /// <summary>
        /// Create a CseTagSchema resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CseTagSchema(string name, CseTagSchemaArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/cseTagSchema:CseTagSchema", name, args ?? new CseTagSchemaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CseTagSchema(string name, Input<string> id, CseTagSchemaState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/cseTagSchema:CseTagSchema", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CseTagSchema resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CseTagSchema Get(string name, Input<string> id, CseTagSchemaState? state = null, CustomResourceOptions? options = null)
        {
            return new CseTagSchema(name, id, state, options);
        }
    }

    public sealed class CseTagSchemaArgs : global::Pulumi.ResourceArgs
    {
        [Input("contentTypes")]
        private InputList<string>? _contentTypes;

        /// <summary>
        /// Applicable content types. Valid values: "customInsight", "entity", "rule", "threatIntelligence".
        /// </summary>
        public InputList<string> ContentTypes
        {
            get => _contentTypes ?? (_contentTypes = new InputList<string>());
            set => _contentTypes = value;
        }

        /// <summary>
        /// Whether the tag schema accepts free form custom values.
        /// </summary>
        [Input("freeForm", required: true)]
        public Input<bool> FreeForm { get; set; } = null!;

        /// <summary>
        /// Tag Schema key.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Value option label.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        [Input("valueOptions")]
        private InputList<Inputs.CseTagSchemaValueOptionArgs>? _valueOptions;
        public InputList<Inputs.CseTagSchemaValueOptionArgs> ValueOptions
        {
            get => _valueOptions ?? (_valueOptions = new InputList<Inputs.CseTagSchemaValueOptionArgs>());
            set => _valueOptions = value;
        }

        public CseTagSchemaArgs()
        {
        }
        public static new CseTagSchemaArgs Empty => new CseTagSchemaArgs();
    }

    public sealed class CseTagSchemaState : global::Pulumi.ResourceArgs
    {
        [Input("contentTypes")]
        private InputList<string>? _contentTypes;

        /// <summary>
        /// Applicable content types. Valid values: "customInsight", "entity", "rule", "threatIntelligence".
        /// </summary>
        public InputList<string> ContentTypes
        {
            get => _contentTypes ?? (_contentTypes = new InputList<string>());
            set => _contentTypes = value;
        }

        /// <summary>
        /// Whether the tag schema accepts free form custom values.
        /// </summary>
        [Input("freeForm")]
        public Input<bool>? FreeForm { get; set; }

        /// <summary>
        /// Tag Schema key.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Value option label.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("valueOptions")]
        private InputList<Inputs.CseTagSchemaValueOptionGetArgs>? _valueOptions;
        public InputList<Inputs.CseTagSchemaValueOptionGetArgs> ValueOptions
        {
            get => _valueOptions ?? (_valueOptions = new InputList<Inputs.CseTagSchemaValueOptionGetArgs>());
            set => _valueOptions = value;
        }

        public CseTagSchemaState()
        {
        }
        public static new CseTagSchemaState Empty => new CseTagSchemaState();
    }
}
