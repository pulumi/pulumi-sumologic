// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Inputs
{

    public sealed class LogSearchScheduleNotificationWebhookSearchNotificationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to true, one webhook per result will be sent when the trigger conditions are met.
        /// </summary>
        [Input("itemizeAlerts")]
        public Input<bool>? ItemizeAlerts { get; set; }

        /// <summary>
        /// The maximum number of results for which we send separate alerts.
        /// </summary>
        [Input("maxItemizedAlerts")]
        public Input<int>? MaxItemizedAlerts { get; set; }

        /// <summary>
        /// A JSON object in the format required by the target WebHook URL.
        /// </summary>
        [Input("payload")]
        public Input<string>? Payload { get; set; }

        /// <summary>
        /// Identifier of the webhook connection.
        /// </summary>
        [Input("webhookId", required: true)]
        public Input<string> WebhookId { get; set; } = null!;

        public LogSearchScheduleNotificationWebhookSearchNotificationArgs()
        {
        }
        public static new LogSearchScheduleNotificationWebhookSearchNotificationArgs Empty => new LogSearchScheduleNotificationWebhookSearchNotificationArgs();
    }
}
