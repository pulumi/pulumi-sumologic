// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Inputs
{

    public sealed class MetadataSourcePathArgs : global::Pulumi.ResourceArgs
    {
        [Input("limitToNamespaces")]
        private InputList<string>? _limitToNamespaces;

        /// <summary>
        /// List of namespaces. For `AwsMetadataPath` the only valid namespace is `AWS/EC2`.
        /// </summary>
        public InputList<string> LimitToNamespaces
        {
            get => _limitToNamespaces ?? (_limitToNamespaces = new InputList<string>());
            set => _limitToNamespaces = value;
        }

        [Input("limitToRegions")]
        private InputList<string>? _limitToRegions;

        /// <summary>
        /// List of Amazon regions.
        /// </summary>
        public InputList<string> LimitToRegions
        {
            get => _limitToRegions ?? (_limitToRegions = new InputList<string>());
            set => _limitToRegions = value;
        }

        [Input("tagFilters")]
        private InputList<string>? _tagFilters;

        /// <summary>
        /// Leave this field blank to collect all tags configured for the EC2 instance. To collect a subset of tags, follow the instructions in [Define EC2 tag filters][2]
        /// </summary>
        public InputList<string> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<string>());
            set => _tagFilters = value;
        }

        /// <summary>
        /// type of polling source. Only allowed value is `AwsMetadataPath`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public MetadataSourcePathArgs()
        {
        }
        public static new MetadataSourcePathArgs Empty => new MetadataSourcePathArgs();
    }
}
