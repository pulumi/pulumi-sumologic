// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Inputs
{

    public sealed class S3AuditSourcePathArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("customServices")]
        private InputList<Inputs.S3AuditSourcePathCustomServiceArgs>? _customServices;
        public InputList<Inputs.S3AuditSourcePathCustomServiceArgs> CustomServices
        {
            get => _customServices ?? (_customServices = new InputList<Inputs.S3AuditSourcePathCustomServiceArgs>());
            set => _customServices = value;
        }

        [Input("limitToNamespaces")]
        private InputList<string>? _limitToNamespaces;
        public InputList<string> LimitToNamespaces
        {
            get => _limitToNamespaces ?? (_limitToNamespaces = new InputList<string>());
            set => _limitToNamespaces = value;
        }

        [Input("limitToRegions")]
        private InputList<string>? _limitToRegions;
        public InputList<string> LimitToRegions
        {
            get => _limitToRegions ?? (_limitToRegions = new InputList<string>());
            set => _limitToRegions = value;
        }

        [Input("limitToServices")]
        private InputList<string>? _limitToServices;
        public InputList<string> LimitToServices
        {
            get => _limitToServices ?? (_limitToServices = new InputList<string>());
            set => _limitToServices = value;
        }

        /// <summary>
        /// The path to the data.
        /// </summary>
        [Input("pathExpression")]
        public Input<string>? PathExpression { get; set; }

        [Input("snsTopicOrSubscriptionArns")]
        private InputList<Inputs.S3AuditSourcePathSnsTopicOrSubscriptionArnArgs>? _snsTopicOrSubscriptionArns;

        /// <summary>
        /// This is a computed field for SNS topic/subscription ARN.
        /// </summary>
        public InputList<Inputs.S3AuditSourcePathSnsTopicOrSubscriptionArnArgs> SnsTopicOrSubscriptionArns
        {
            get => _snsTopicOrSubscriptionArns ?? (_snsTopicOrSubscriptionArns = new InputList<Inputs.S3AuditSourcePathSnsTopicOrSubscriptionArnArgs>());
            set => _snsTopicOrSubscriptionArns = value;
        }

        [Input("tagFilters")]
        private InputList<Inputs.S3AuditSourcePathTagFilterArgs>? _tagFilters;
        public InputList<Inputs.S3AuditSourcePathTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.S3AuditSourcePathTagFilterArgs>());
            set => _tagFilters = value;
        }

        /// <summary>
        /// type of polling source. This has to be `S3BucketPathExpression` for `S3 Audit source`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("useVersionedApi")]
        public Input<bool>? UseVersionedApi { get; set; }

        public S3AuditSourcePathArgs()
        {
        }
        public static new S3AuditSourcePathArgs Empty => new S3AuditSourcePathArgs();
    }
}
