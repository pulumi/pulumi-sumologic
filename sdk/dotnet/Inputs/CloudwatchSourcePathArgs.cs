// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Inputs
{

    public sealed class CloudwatchSourcePathArgs : global::Pulumi.ResourceArgs
    {
        [Input("azureTagFilters")]
        private InputList<Inputs.CloudwatchSourcePathAzureTagFilterArgs>? _azureTagFilters;
        public InputList<Inputs.CloudwatchSourcePathAzureTagFilterArgs> AzureTagFilters
        {
            get => _azureTagFilters ?? (_azureTagFilters = new InputList<Inputs.CloudwatchSourcePathAzureTagFilterArgs>());
            set => _azureTagFilters = value;
        }

        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("consumerGroup")]
        public Input<string>? ConsumerGroup { get; set; }

        [Input("customServices")]
        private InputList<Inputs.CloudwatchSourcePathCustomServiceArgs>? _customServices;
        public InputList<Inputs.CloudwatchSourcePathCustomServiceArgs> CustomServices
        {
            get => _customServices ?? (_customServices = new InputList<Inputs.CloudwatchSourcePathCustomServiceArgs>());
            set => _customServices = value;
        }

        [Input("environment")]
        public Input<string>? Environment { get; set; }

        [Input("eventHubName")]
        public Input<string>? EventHubName { get; set; }

        [Input("limitToNamespaces")]
        private InputList<string>? _limitToNamespaces;

        /// <summary>
        /// List of namespaces. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace.
        /// </summary>
        public InputList<string> LimitToNamespaces
        {
            get => _limitToNamespaces ?? (_limitToNamespaces = new InputList<string>());
            set => _limitToNamespaces = value;
        }

        [Input("limitToRegions")]
        private InputList<string>? _limitToRegions;

        /// <summary>
        /// List of Amazon regions.
        /// </summary>
        public InputList<string> LimitToRegions
        {
            get => _limitToRegions ?? (_limitToRegions = new InputList<string>());
            set => _limitToRegions = value;
        }

        [Input("limitToServices")]
        private InputList<string>? _limitToServices;
        public InputList<string> LimitToServices
        {
            get => _limitToServices ?? (_limitToServices = new InputList<string>());
            set => _limitToServices = value;
        }

        /// <summary>
        /// Namespace for which you want to define the tag filters. Use  value as `All` to apply the tag filter for all namespaces.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("pathExpression")]
        public Input<string>? PathExpression { get; set; }

        /// <summary>
        /// Your AWS Bucket region.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("snsTopicOrSubscriptionArns")]
        private InputList<Inputs.CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs>? _snsTopicOrSubscriptionArns;
        public InputList<Inputs.CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs> SnsTopicOrSubscriptionArns
        {
            get => _snsTopicOrSubscriptionArns ?? (_snsTopicOrSubscriptionArns = new InputList<Inputs.CloudwatchSourcePathSnsTopicOrSubscriptionArnArgs>());
            set => _snsTopicOrSubscriptionArns = value;
        }

        [Input("tagFilters")]
        private InputList<Inputs.CloudwatchSourcePathTagFilterArgs>? _tagFilters;

        /// <summary>
        /// Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
        /// </summary>
        public InputList<Inputs.CloudwatchSourcePathTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.CloudwatchSourcePathTagFilterArgs>());
            set => _tagFilters = value;
        }

        /// <summary>
        /// type of polling source. This has to be `CloudWatchPath` for CloudWatch source.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("useVersionedApi")]
        public Input<bool>? UseVersionedApi { get; set; }

        public CloudwatchSourcePathArgs()
        {
        }
        public static new CloudwatchSourcePathArgs Empty => new CloudwatchSourcePathArgs();
    }
}
