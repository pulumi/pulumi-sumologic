// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Inputs
{

    public sealed class AwsInventorySourcePathArgs : Pulumi.ResourceArgs
    {
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("customServices")]
        private InputList<Inputs.AwsInventorySourcePathCustomServiceArgs>? _customServices;
        public InputList<Inputs.AwsInventorySourcePathCustomServiceArgs> CustomServices
        {
            get => _customServices ?? (_customServices = new InputList<Inputs.AwsInventorySourcePathCustomServiceArgs>());
            set => _customServices = value;
        }

        [Input("limitToNamespaces")]
        private InputList<string>? _limitToNamespaces;

        /// <summary>
        /// List of namespaces. By default all namespaces are selected. You can also choose a subset from
        /// + AWS/EC2
        /// + AWS/AutoScaling
        /// + AWS/EBS
        /// + AWS/ELB
        /// + AWS/ApplicationELB
        /// + AWS/NetworkELB
        /// + AWS/Lambda
        /// + AWS/RDS
        /// + AWS/Dynamodb
        /// + AWS/ECS
        /// + AWS/Elasticache
        /// + AWS/Redshift
        /// + AWS/Kinesis
        /// </summary>
        public InputList<string> LimitToNamespaces
        {
            get => _limitToNamespaces ?? (_limitToNamespaces = new InputList<string>());
            set => _limitToNamespaces = value;
        }

        [Input("limitToRegions")]
        private InputList<string>? _limitToRegions;

        /// <summary>
        /// List of Amazon regions.
        /// </summary>
        public InputList<string> LimitToRegions
        {
            get => _limitToRegions ?? (_limitToRegions = new InputList<string>());
            set => _limitToRegions = value;
        }

        [Input("limitToServices")]
        private InputList<string>? _limitToServices;
        public InputList<string> LimitToServices
        {
            get => _limitToServices ?? (_limitToServices = new InputList<string>());
            set => _limitToServices = value;
        }

        [Input("pathExpression")]
        public Input<string>? PathExpression { get; set; }

        [Input("snsTopicOrSubscriptionArns")]
        private InputList<Inputs.AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs>? _snsTopicOrSubscriptionArns;
        public InputList<Inputs.AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs> SnsTopicOrSubscriptionArns
        {
            get => _snsTopicOrSubscriptionArns ?? (_snsTopicOrSubscriptionArns = new InputList<Inputs.AwsInventorySourcePathSnsTopicOrSubscriptionArnArgs>());
            set => _snsTopicOrSubscriptionArns = value;
        }

        [Input("tagFilters")]
        private InputList<Inputs.AwsInventorySourcePathTagFilterArgs>? _tagFilters;
        public InputList<Inputs.AwsInventorySourcePathTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.AwsInventorySourcePathTagFilterArgs>());
            set => _tagFilters = value;
        }

        /// <summary>
        /// type of polling source. This has to be `AwsInventoryPath` for AWS Inventory source.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("useVersionedApi")]
        public Input<bool>? UseVersionedApi { get; set; }

        public AwsInventorySourcePathArgs()
        {
        }
    }
}
