// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic.Inputs
{

    public sealed class AzureMetricsSourcePathGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("azureTagFilters")]
        private InputList<Inputs.AzureMetricsSourcePathAzureTagFilterGetArgs>? _azureTagFilters;

        /// <summary>
        /// Tag filters allow you to filter the Azure metrics by the tags you have assigned to your Azure resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for namespaces you configured for the source above.
        /// </summary>
        public InputList<Inputs.AzureMetricsSourcePathAzureTagFilterGetArgs> AzureTagFilters
        {
            get => _azureTagFilters ?? (_azureTagFilters = new InputList<Inputs.AzureMetricsSourcePathAzureTagFilterGetArgs>());
            set => _azureTagFilters = value;
        }

        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("consumerGroup")]
        public Input<string>? ConsumerGroup { get; set; }

        [Input("customServices")]
        private InputList<Inputs.AzureMetricsSourcePathCustomServiceGetArgs>? _customServices;
        public InputList<Inputs.AzureMetricsSourcePathCustomServiceGetArgs> CustomServices
        {
            get => _customServices ?? (_customServices = new InputList<Inputs.AzureMetricsSourcePathCustomServiceGetArgs>());
            set => _customServices = value;
        }

        /// <summary>
        /// The  environment to collect Azure metrics.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        [Input("eventHubName")]
        public Input<string>? EventHubName { get; set; }

        [Input("limitToNamespaces")]
        private InputList<string>? _limitToNamespaces;

        /// <summary>
        /// The list of namespaces to collect metrics. By default all namespaces are selected.
        /// </summary>
        public InputList<string> LimitToNamespaces
        {
            get => _limitToNamespaces ?? (_limitToNamespaces = new InputList<string>());
            set => _limitToNamespaces = value;
        }

        [Input("limitToRegions")]
        private InputList<string>? _limitToRegions;
        public InputList<string> LimitToRegions
        {
            get => _limitToRegions ?? (_limitToRegions = new InputList<string>());
            set => _limitToRegions = value;
        }

        [Input("limitToServices")]
        private InputList<string>? _limitToServices;
        public InputList<string> LimitToServices
        {
            get => _limitToServices ?? (_limitToServices = new InputList<string>());
            set => _limitToServices = value;
        }

        /// <summary>
        /// Namespace for which you want to define the tag filters.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        [Input("pathExpression")]
        public Input<string>? PathExpression { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("snsTopicOrSubscriptionArns")]
        private InputList<Inputs.AzureMetricsSourcePathSnsTopicOrSubscriptionArnGetArgs>? _snsTopicOrSubscriptionArns;
        public InputList<Inputs.AzureMetricsSourcePathSnsTopicOrSubscriptionArnGetArgs> SnsTopicOrSubscriptionArns
        {
            get => _snsTopicOrSubscriptionArns ?? (_snsTopicOrSubscriptionArns = new InputList<Inputs.AzureMetricsSourcePathSnsTopicOrSubscriptionArnGetArgs>());
            set => _snsTopicOrSubscriptionArns = value;
        }

        [Input("tagFilters")]
        private InputList<Inputs.AzureMetricsSourcePathTagFilterGetArgs>? _tagFilters;
        public InputList<Inputs.AzureMetricsSourcePathTagFilterGetArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.AzureMetricsSourcePathTagFilterGetArgs>());
            set => _tagFilters = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("useVersionedApi")]
        public Input<bool>? UseVersionedApi { get; set; }

        public AzureMetricsSourcePathGetArgs()
        {
        }
        public static new AzureMetricsSourcePathGetArgs Empty => new AzureMetricsSourcePathGetArgs();
    }
}
