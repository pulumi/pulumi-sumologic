// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SumoLogic
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using SumoLogic = Pulumi.SumoLogic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var installedCollector = new SumoLogic.InstalledCollector("installed_collector", new()
    ///     {
    ///         Name = "test-mac",
    ///         Category = "macos/test",
    ///         Ephemeral = true,
    ///         Fields = 
    ///         {
    ///             { "key", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Collectors can be imported using the collector id, e.g.:
    /// 
    /// hcl
    /// 
    /// ```sh
    /// $ pulumi import sumologic:index/installedCollector:InstalledCollector test 1234567890
    /// ```
    /// 
    /// Collectors can also be imported using the collector name, which is unique per Sumo Logic account, e.g.:
    /// 
    /// hcl
    /// 
    /// ```sh
    /// $ pulumi import sumologic:index/installedCollector:InstalledCollector test my_test_collector
    /// ```
    /// 
    /// [1]: https://help.sumologic.com/03Send-Data/Installed-Collectors/01About-Installed-Collectors
    /// 
    /// [2]: https://en.wikipedia.org/wiki/Tz_database
    /// 
    /// [3]: https://help.sumologic.com/Manage/Fields
    /// 
    /// [4]: https://www.terraform.io/docs/configuration/resources.html#prevent_destroy
    /// 
    /// [5]:https://help.sumologic.com/03Send-Data/Installed-Collectors/05Reference-Information-for-Collector-Installation/11Set-a-Collector-as-Ephemeral
    /// </summary>
    [SumoLogicResourceType("sumologic:index/installedCollector:InstalledCollector")]
    public partial class InstalledCollector : global::Pulumi.CustomResource
    {
        [Output("alive")]
        public Output<bool> Alive { get; private set; } = null!;

        [Output("category")]
        public Output<string?> Category { get; private set; } = null!;

        [Output("collectorVersion")]
        public Output<string> CollectorVersion { get; private set; } = null!;

        [Output("cutoffTimestamp")]
        public Output<int?> CutoffTimestamp { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("ephemeral")]
        public Output<bool> Ephemeral { get; private set; } = null!;

        [Output("fields")]
        public Output<ImmutableDictionary<string, string>?> Fields { get; private set; } = null!;

        [Output("hostName")]
        public Output<string?> HostName { get; private set; } = null!;

        [Output("lastSeenAlive")]
        public Output<int> LastSeenAlive { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("sourceSyncMode")]
        public Output<string?> SourceSyncMode { get; private set; } = null!;

        [Output("targetCpu")]
        public Output<int?> TargetCpu { get; private set; } = null!;

        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a InstalledCollector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstalledCollector(string name, InstalledCollectorArgs args, CustomResourceOptions? options = null)
            : base("sumologic:index/installedCollector:InstalledCollector", name, args ?? new InstalledCollectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstalledCollector(string name, Input<string> id, InstalledCollectorState? state = null, CustomResourceOptions? options = null)
            : base("sumologic:index/installedCollector:InstalledCollector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstalledCollector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstalledCollector Get(string name, Input<string> id, InstalledCollectorState? state = null, CustomResourceOptions? options = null)
        {
            return new InstalledCollector(name, id, state, options);
        }
    }

    public sealed class InstalledCollectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("cutoffTimestamp")]
        public Input<int>? CutoffTimestamp { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ephemeral", required: true)]
        public Input<bool> Ephemeral { get; set; } = null!;

        [Input("fields")]
        private InputMap<string>? _fields;
        public InputMap<string> Fields
        {
            get => _fields ?? (_fields = new InputMap<string>());
            set => _fields = value;
        }

        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sourceSyncMode")]
        public Input<string>? SourceSyncMode { get; set; }

        [Input("targetCpu")]
        public Input<int>? TargetCpu { get; set; }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public InstalledCollectorArgs()
        {
        }
        public static new InstalledCollectorArgs Empty => new InstalledCollectorArgs();
    }

    public sealed class InstalledCollectorState : global::Pulumi.ResourceArgs
    {
        [Input("alive")]
        public Input<bool>? Alive { get; set; }

        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("collectorVersion")]
        public Input<string>? CollectorVersion { get; set; }

        [Input("cutoffTimestamp")]
        public Input<int>? CutoffTimestamp { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ephemeral")]
        public Input<bool>? Ephemeral { get; set; }

        [Input("fields")]
        private InputMap<string>? _fields;
        public InputMap<string> Fields
        {
            get => _fields ?? (_fields = new InputMap<string>());
            set => _fields = value;
        }

        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        [Input("lastSeenAlive")]
        public Input<int>? LastSeenAlive { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sourceSyncMode")]
        public Input<string>? SourceSyncMode { get; set; }

        [Input("targetCpu")]
        public Input<int>? TargetCpu { get; set; }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public InstalledCollectorState()
        {
        }
        public static new InstalledCollectorState Empty => new InstalledCollectorState();
    }
}
