// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MutingScheduleSchedule {
    private Integer duration;
    private @Nullable String rrule;
    private String startDate;
    private String startTime;
    private String timezone;

    private MutingScheduleSchedule() {}
    public Integer duration() {
        return this.duration;
    }
    public Optional<String> rrule() {
        return Optional.ofNullable(this.rrule);
    }
    public String startDate() {
        return this.startDate;
    }
    public String startTime() {
        return this.startTime;
    }
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MutingScheduleSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer duration;
        private @Nullable String rrule;
        private String startDate;
        private String startTime;
        private String timezone;
        public Builder() {}
        public Builder(MutingScheduleSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.rrule = defaults.rrule;
    	      this.startDate = defaults.startDate;
    	      this.startTime = defaults.startTime;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder duration(Integer duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("MutingScheduleSchedule", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder rrule(@Nullable String rrule) {

            this.rrule = rrule;
            return this;
        }
        @CustomType.Setter
        public Builder startDate(String startDate) {
            if (startDate == null) {
              throw new MissingRequiredPropertyException("MutingScheduleSchedule", "startDate");
            }
            this.startDate = startDate;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("MutingScheduleSchedule", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("MutingScheduleSchedule", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        public MutingScheduleSchedule build() {
            final var _resultValue = new MutingScheduleSchedule();
            _resultValue.duration = duration;
            _resultValue.rrule = rrule;
            _resultValue.startDate = startDate;
            _resultValue.startTime = startTime;
            _resultValue.timezone = timezone;
            return _resultValue;
        }
    }
}
