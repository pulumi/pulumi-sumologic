// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SloIndicatorRequestBasedEvaluationQueryQueryGroup {
    /**
     * @return Field of log query output to compare against. To be used only for logs based data
     * type when `use_row_count` is false.
     * 
     */
    private final @Nullable String field;
    /**
     * @return The query string to use.
     * 
     */
    private final String query;
    /**
     * @return The row ID to use.
     * 
     */
    private final String rowId;
    /**
     * @return Whether to use the row count. Defaults to false.
     * 
     */
    private final Boolean useRowCount;

    @CustomType.Constructor
    private SloIndicatorRequestBasedEvaluationQueryQueryGroup(
        @CustomType.Parameter("field") @Nullable String field,
        @CustomType.Parameter("query") String query,
        @CustomType.Parameter("rowId") String rowId,
        @CustomType.Parameter("useRowCount") Boolean useRowCount) {
        this.field = field;
        this.query = query;
        this.rowId = rowId;
        this.useRowCount = useRowCount;
    }

    /**
     * @return Field of log query output to compare against. To be used only for logs based data
     * type when `use_row_count` is false.
     * 
     */
    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }
    /**
     * @return The query string to use.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return The row ID to use.
     * 
     */
    public String rowId() {
        return this.rowId;
    }
    /**
     * @return Whether to use the row count. Defaults to false.
     * 
     */
    public Boolean useRowCount() {
        return this.useRowCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SloIndicatorRequestBasedEvaluationQueryQueryGroup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String field;
        private String query;
        private String rowId;
        private Boolean useRowCount;

        public Builder() {
    	      // Empty
        }

        public Builder(SloIndicatorRequestBasedEvaluationQueryQueryGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.field = defaults.field;
    	      this.query = defaults.query;
    	      this.rowId = defaults.rowId;
    	      this.useRowCount = defaults.useRowCount;
        }

        public Builder field(@Nullable String field) {
            this.field = field;
            return this;
        }
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        public Builder rowId(String rowId) {
            this.rowId = Objects.requireNonNull(rowId);
            return this;
        }
        public Builder useRowCount(Boolean useRowCount) {
            this.useRowCount = Objects.requireNonNull(useRowCount);
            return this;
        }        public SloIndicatorRequestBasedEvaluationQueryQueryGroup build() {
            return new SloIndicatorRequestBasedEvaluationQueryQueryGroup(field, query, rowId, useRowCount);
        }
    }
}
