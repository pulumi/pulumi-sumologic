// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CollectorIngestBudgetAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollectorIngestBudgetAssignmentArgs Empty = new CollectorIngestBudgetAssignmentArgs();

    @Import(name="collectorId", required=true)
    private Output<String> collectorId;

    public Output<String> collectorId() {
        return this.collectorId;
    }

    @Import(name="ingestBudgetId", required=true)
    private Output<String> ingestBudgetId;

    public Output<String> ingestBudgetId() {
        return this.ingestBudgetId;
    }

    private CollectorIngestBudgetAssignmentArgs() {}

    private CollectorIngestBudgetAssignmentArgs(CollectorIngestBudgetAssignmentArgs $) {
        this.collectorId = $.collectorId;
        this.ingestBudgetId = $.ingestBudgetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectorIngestBudgetAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectorIngestBudgetAssignmentArgs $;

        public Builder() {
            $ = new CollectorIngestBudgetAssignmentArgs();
        }

        public Builder(CollectorIngestBudgetAssignmentArgs defaults) {
            $ = new CollectorIngestBudgetAssignmentArgs(Objects.requireNonNull(defaults));
        }

        public Builder collectorId(Output<String> collectorId) {
            $.collectorId = collectorId;
            return this;
        }

        public Builder collectorId(String collectorId) {
            return collectorId(Output.of(collectorId));
        }

        public Builder ingestBudgetId(Output<String> ingestBudgetId) {
            $.ingestBudgetId = ingestBudgetId;
            return this;
        }

        public Builder ingestBudgetId(String ingestBudgetId) {
            return ingestBudgetId(Output.of(ingestBudgetId));
        }

        public CollectorIngestBudgetAssignmentArgs build() {
            $.collectorId = Objects.requireNonNull($.collectorId, "expected parameter 'collectorId' to be non-null");
            $.ingestBudgetId = Objects.requireNonNull($.ingestBudgetId, "expected parameter 'ingestBudgetId' to be non-null");
            return $;
        }
    }

}
