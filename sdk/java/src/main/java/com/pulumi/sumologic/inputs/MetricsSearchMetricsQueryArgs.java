// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MetricsSearchMetricsQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsSearchMetricsQueryArgs Empty = new MetricsSearchMetricsQueryArgs();

    /**
     * A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
     * Strictly speaking, both filters and operators are optional.
     * Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
     * In practice, your metric queries will almost always contain filters that narrow the scope of your query.
     * For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
     * 
     */
    @Import(name="query", required=true)
    private Output<String> query;

    /**
     * @return A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
     * Strictly speaking, both filters and operators are optional.
     * Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
     * In practice, your metric queries will almost always contain filters that narrow the scope of your query.
     * For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
     * 
     */
    public Output<String> query() {
        return this.query;
    }

    /**
     * Row id for the query row, A to Z letter.
     * 
     */
    @Import(name="rowId", required=true)
    private Output<String> rowId;

    /**
     * @return Row id for the query row, A to Z letter.
     * 
     */
    public Output<String> rowId() {
        return this.rowId;
    }

    private MetricsSearchMetricsQueryArgs() {}

    private MetricsSearchMetricsQueryArgs(MetricsSearchMetricsQueryArgs $) {
        this.query = $.query;
        this.rowId = $.rowId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsSearchMetricsQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsSearchMetricsQueryArgs $;

        public Builder() {
            $ = new MetricsSearchMetricsQueryArgs();
        }

        public Builder(MetricsSearchMetricsQueryArgs defaults) {
            $ = new MetricsSearchMetricsQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param query A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
         * Strictly speaking, both filters and operators are optional.
         * Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
         * In practice, your metric queries will almost always contain filters that narrow the scope of your query.
         * For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
         * 
         * @return builder
         * 
         */
        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144).
         * Strictly speaking, both filters and operators are optional.
         * Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.
         * In practice, your metric queries will almost always contain filters that narrow the scope of your query.
         * For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        /**
         * @param rowId Row id for the query row, A to Z letter.
         * 
         * @return builder
         * 
         */
        public Builder rowId(Output<String> rowId) {
            $.rowId = rowId;
            return this;
        }

        /**
         * @param rowId Row id for the query row, A to Z letter.
         * 
         * @return builder
         * 
         */
        public Builder rowId(String rowId) {
            return rowId(Output.of(rowId));
        }

        public MetricsSearchMetricsQueryArgs build() {
            if ($.query == null) {
                throw new MissingRequiredPropertyException("MetricsSearchMetricsQueryArgs", "query");
            }
            if ($.rowId == null) {
                throw new MissingRequiredPropertyException("MetricsSearchMetricsQueryArgs", "rowId");
            }
            return $;
        }
    }

}
