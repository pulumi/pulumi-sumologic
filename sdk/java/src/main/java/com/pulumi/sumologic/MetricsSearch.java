// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.MetricsSearchArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.MetricsSearchState;
import com.pulumi.sumologic.outputs.MetricsSearchMetricsQuery;
import com.pulumi.sumologic.outputs.MetricsSearchTimeRange;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * (Deprecated) Please use Metrics Search V2 instead.
 * Provides a [Sumologic Metrics Search](https://help.sumologic.com/docs/metrics/metrics-queries/metrics-explorer/).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.SumologicFunctions;
 * import com.pulumi.sumologic.inputs.GetPersonalFolderArgs;
 * import com.pulumi.sumologic.MetricsSearch;
 * import com.pulumi.sumologic.MetricsSearchArgs;
 * import com.pulumi.sumologic.inputs.MetricsSearchMetricsQueryArgs;
 * import com.pulumi.sumologic.inputs.MetricsSearchTimeRangeArgs;
 * import com.pulumi.sumologic.inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeArgs;
 * import com.pulumi.sumologic.inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs;
 * import com.pulumi.sumologic.inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var personalFolder = SumologicFunctions.getPersonalFolder(GetPersonalFolderArgs.builder()
 *             .build());
 * 
 *         var exampleMetricsSearch = new MetricsSearch("exampleMetricsSearch", MetricsSearchArgs.builder()
 *             .title("Demo Metrics Search")
 *             .description("Demo search description")
 *             .parentId(personalFolder.id())
 *             .metricsQueries(MetricsSearchMetricsQueryArgs.builder()
 *                 .rowId("A")
 *                 .query("metric=cpu_idle | avg")
 *                 .build())
 *             .desiredQuantizationInSecs(0)
 *             .timeRange(MetricsSearchTimeRangeArgs.builder()
 *                 .beginBoundedTimeRange(MetricsSearchTimeRangeBeginBoundedTimeRangeArgs.builder()
 *                     .from(MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs.builder()
 *                         .relativeTimeRange(MetricsSearchTimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs.builder()
 *                             .relativeTime("-30m")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Attributes reference
 * 
 * In addition to all arguments above, the following attributes are exported:
 * 
 * - `id` - The ID of the log search.
 * 
 * ## Import
 * 
 * A metrics search can be imported using it&#39;s identifier, e.g.:
 * 
 * hcl
 * 
 * ```sh
 * $ pulumi import sumologic:index/metricsSearch:MetricsSearch example_search 0000000007FFD79D
 * ```
 * 
 * [1]: https://help.sumologic.com/docs/metrics/metrics-queries/metrics-explorer/
 * 
 */
@ResourceType(type="sumologic:index/metricsSearch:MetricsSearch")
public class MetricsSearch extends com.pulumi.resources.CustomResource {
    /**
     * Description of the search.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Description of the search.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Desired quantization in seconds. Default value is `0`.
     * 
     */
    @Export(name="desiredQuantizationInSecs", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> desiredQuantizationInSecs;

    /**
     * @return Desired quantization in seconds. Default value is `0`.
     * 
     */
    public Output<Optional<Integer>> desiredQuantizationInSecs() {
        return Codegen.optional(this.desiredQuantizationInSecs);
    }
    /**
     * Log query used to add an overlay to the chart.
     * 
     */
    @Export(name="logQuery", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logQuery;

    /**
     * @return Log query used to add an overlay to the chart.
     * 
     */
    public Output<Optional<String>> logQuery() {
        return Codegen.optional(this.logQuery);
    }
    /**
     * Array of objects MetricsSearchQuery. Metrics queries, up to the maximum of six.
     * 
     */
    @Export(name="metricsQueries", refs={List.class,MetricsSearchMetricsQuery.class}, tree="[0,1]")
    private Output<List<MetricsSearchMetricsQuery>> metricsQueries;

    /**
     * @return Array of objects MetricsSearchQuery. Metrics queries, up to the maximum of six.
     * 
     */
    public Output<List<MetricsSearchMetricsQuery>> metricsQueries() {
        return this.metricsQueries;
    }
    /**
     * The identifier of the folder to create the log search in.
     * 
     */
    @Export(name="parentId", refs={String.class}, tree="[0]")
    private Output<String> parentId;

    /**
     * @return The identifier of the folder to create the log search in.
     * 
     */
    public Output<String> parentId() {
        return this.parentId;
    }
    /**
     * Time range of the log search. See time range schema
     * 
     */
    @Export(name="timeRange", refs={MetricsSearchTimeRange.class}, tree="[0]")
    private Output<MetricsSearchTimeRange> timeRange;

    /**
     * @return Time range of the log search. See time range schema
     * 
     */
    public Output<MetricsSearchTimeRange> timeRange() {
        return this.timeRange;
    }
    /**
     * Title of the search.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return Title of the search.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricsSearch(java.lang.String name) {
        this(name, MetricsSearchArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricsSearch(java.lang.String name, MetricsSearchArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricsSearch(java.lang.String name, MetricsSearchArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/metricsSearch:MetricsSearch", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MetricsSearch(java.lang.String name, Output<java.lang.String> id, @Nullable MetricsSearchState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/metricsSearch:MetricsSearch", name, state, makeResourceOptions(options, id), false);
    }

    private static MetricsSearchArgs makeArgs(MetricsSearchArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MetricsSearchArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricsSearch get(java.lang.String name, Output<java.lang.String> id, @Nullable MetricsSearchState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricsSearch(name, id, state, options);
    }
}
