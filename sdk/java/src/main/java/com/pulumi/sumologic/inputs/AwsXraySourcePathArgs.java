// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.AwsXraySourcePathCustomServiceArgs;
import com.pulumi.sumologic.inputs.AwsXraySourcePathSnsTopicOrSubscriptionArnArgs;
import com.pulumi.sumologic.inputs.AwsXraySourcePathTagFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsXraySourcePathArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsXraySourcePathArgs Empty = new AwsXraySourcePathArgs();

    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    @Import(name="customServices")
    private @Nullable Output<List<AwsXraySourcePathCustomServiceArgs>> customServices;

    public Optional<Output<List<AwsXraySourcePathCustomServiceArgs>>> customServices() {
        return Optional.ofNullable(this.customServices);
    }

    @Import(name="limitToNamespaces")
    private @Nullable Output<List<String>> limitToNamespaces;

    public Optional<Output<List<String>>> limitToNamespaces() {
        return Optional.ofNullable(this.limitToNamespaces);
    }

    /**
     * List of Amazon regions.
     * 
     */
    @Import(name="limitToRegions")
    private @Nullable Output<List<String>> limitToRegions;

    /**
     * @return List of Amazon regions.
     * 
     */
    public Optional<Output<List<String>>> limitToRegions() {
        return Optional.ofNullable(this.limitToRegions);
    }

    @Import(name="limitToServices")
    private @Nullable Output<List<String>> limitToServices;

    public Optional<Output<List<String>>> limitToServices() {
        return Optional.ofNullable(this.limitToServices);
    }

    @Import(name="pathExpression")
    private @Nullable Output<String> pathExpression;

    public Optional<Output<String>> pathExpression() {
        return Optional.ofNullable(this.pathExpression);
    }

    @Import(name="snsTopicOrSubscriptionArns")
    private @Nullable Output<List<AwsXraySourcePathSnsTopicOrSubscriptionArnArgs>> snsTopicOrSubscriptionArns;

    public Optional<Output<List<AwsXraySourcePathSnsTopicOrSubscriptionArnArgs>>> snsTopicOrSubscriptionArns() {
        return Optional.ofNullable(this.snsTopicOrSubscriptionArns);
    }

    @Import(name="tagFilters")
    private @Nullable Output<List<AwsXraySourcePathTagFilterArgs>> tagFilters;

    public Optional<Output<List<AwsXraySourcePathTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    /**
     * type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    @Import(name="useVersionedApi")
    private @Nullable Output<Boolean> useVersionedApi;

    public Optional<Output<Boolean>> useVersionedApi() {
        return Optional.ofNullable(this.useVersionedApi);
    }

    private AwsXraySourcePathArgs() {}

    private AwsXraySourcePathArgs(AwsXraySourcePathArgs $) {
        this.bucketName = $.bucketName;
        this.customServices = $.customServices;
        this.limitToNamespaces = $.limitToNamespaces;
        this.limitToRegions = $.limitToRegions;
        this.limitToServices = $.limitToServices;
        this.pathExpression = $.pathExpression;
        this.snsTopicOrSubscriptionArns = $.snsTopicOrSubscriptionArns;
        this.tagFilters = $.tagFilters;
        this.type = $.type;
        this.useVersionedApi = $.useVersionedApi;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsXraySourcePathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsXraySourcePathArgs $;

        public Builder() {
            $ = new AwsXraySourcePathArgs();
        }

        public Builder(AwsXraySourcePathArgs defaults) {
            $ = new AwsXraySourcePathArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        public Builder customServices(@Nullable Output<List<AwsXraySourcePathCustomServiceArgs>> customServices) {
            $.customServices = customServices;
            return this;
        }

        public Builder customServices(List<AwsXraySourcePathCustomServiceArgs> customServices) {
            return customServices(Output.of(customServices));
        }

        public Builder customServices(AwsXraySourcePathCustomServiceArgs... customServices) {
            return customServices(List.of(customServices));
        }

        public Builder limitToNamespaces(@Nullable Output<List<String>> limitToNamespaces) {
            $.limitToNamespaces = limitToNamespaces;
            return this;
        }

        public Builder limitToNamespaces(List<String> limitToNamespaces) {
            return limitToNamespaces(Output.of(limitToNamespaces));
        }

        public Builder limitToNamespaces(String... limitToNamespaces) {
            return limitToNamespaces(List.of(limitToNamespaces));
        }

        /**
         * @param limitToRegions List of Amazon regions.
         * 
         * @return builder
         * 
         */
        public Builder limitToRegions(@Nullable Output<List<String>> limitToRegions) {
            $.limitToRegions = limitToRegions;
            return this;
        }

        /**
         * @param limitToRegions List of Amazon regions.
         * 
         * @return builder
         * 
         */
        public Builder limitToRegions(List<String> limitToRegions) {
            return limitToRegions(Output.of(limitToRegions));
        }

        /**
         * @param limitToRegions List of Amazon regions.
         * 
         * @return builder
         * 
         */
        public Builder limitToRegions(String... limitToRegions) {
            return limitToRegions(List.of(limitToRegions));
        }

        public Builder limitToServices(@Nullable Output<List<String>> limitToServices) {
            $.limitToServices = limitToServices;
            return this;
        }

        public Builder limitToServices(List<String> limitToServices) {
            return limitToServices(Output.of(limitToServices));
        }

        public Builder limitToServices(String... limitToServices) {
            return limitToServices(List.of(limitToServices));
        }

        public Builder pathExpression(@Nullable Output<String> pathExpression) {
            $.pathExpression = pathExpression;
            return this;
        }

        public Builder pathExpression(String pathExpression) {
            return pathExpression(Output.of(pathExpression));
        }

        public Builder snsTopicOrSubscriptionArns(@Nullable Output<List<AwsXraySourcePathSnsTopicOrSubscriptionArnArgs>> snsTopicOrSubscriptionArns) {
            $.snsTopicOrSubscriptionArns = snsTopicOrSubscriptionArns;
            return this;
        }

        public Builder snsTopicOrSubscriptionArns(List<AwsXraySourcePathSnsTopicOrSubscriptionArnArgs> snsTopicOrSubscriptionArns) {
            return snsTopicOrSubscriptionArns(Output.of(snsTopicOrSubscriptionArns));
        }

        public Builder snsTopicOrSubscriptionArns(AwsXraySourcePathSnsTopicOrSubscriptionArnArgs... snsTopicOrSubscriptionArns) {
            return snsTopicOrSubscriptionArns(List.of(snsTopicOrSubscriptionArns));
        }

        public Builder tagFilters(@Nullable Output<List<AwsXraySourcePathTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(List<AwsXraySourcePathTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        public Builder tagFilters(AwsXraySourcePathTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        /**
         * @param type type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type type of polling source. This has to be `AwsXRayPath` for AWS XRay source.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder useVersionedApi(@Nullable Output<Boolean> useVersionedApi) {
            $.useVersionedApi = useVersionedApi;
            return this;
        }

        public Builder useVersionedApi(Boolean useVersionedApi) {
            return useVersionedApi(Output.of(useVersionedApi));
        }

        public AwsXraySourcePathArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
