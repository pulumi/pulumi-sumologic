// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.CseLogMappingArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.CseLogMappingState;
import com.pulumi.sumologic.outputs.CseLogMappingField;
import com.pulumi.sumologic.outputs.CseLogMappingStructuredInput;
import com.pulumi.sumologic.outputs.CseLogMappingUnstructuredFields;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Sumologic CSE Log Mapping.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.CseLogMapping;
 * import com.pulumi.sumologic.CseLogMappingArgs;
 * import com.pulumi.sumologic.inputs.CseLogMappingFieldArgs;
 * import com.pulumi.sumologic.inputs.CseLogMappingStructuredInputArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var logMapping = new CseLogMapping("logMapping", CseLogMappingArgs.builder()
 *             .name("New Log Mapping")
 *             .productGuid("003d35b3-3ba8-4e93-8776-e5810b4e243e")
 *             .recordType("Audit")
 *             .enabled(true)
 *             .relatesEntities(true)
 *             .skippedValues("skipped")
 *             .fields(CseLogMappingFieldArgs.builder()
 *                 .name("action")
 *                 .value("action")
 *                 .valueType("constant")
 *                 .skippedValues("-")
 *                 .defaultValue("")
 *                 .format("JSON")
 *                 .caseInsensitive(false)
 *                 .alternateValues("altValue")
 *                 .timeZone("UTC")
 *                 .splitDelimiter(",")
 *                 .splitIndex("0")
 *                 .fieldJoins("and")
 *                 .joinDelimiter("")
 *                 .formatParameters("param")
 *                 .lookups(CseLogMappingFieldLookupArgs.builder()
 *                     .key("tunnel-up")
 *                     .value("true")
 *                     .build())
 *                 .build())
 *             .structuredInputs(CseLogMappingStructuredInputArgs.builder()
 *                 .eventIdPattern("vpn")
 *                 .logFormat("JSON")
 *                 .product("fortinate")
 *                 .vendor("fortinate")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Log Mapping can be imported using the field id, e.g.:
 * 
 * hcl
 * 
 * ```sh
 * $ pulumi import sumologic:index/cseLogMapping:CseLogMapping log_mapping id
 * ```
 * 
 */
@ResourceType(type="sumologic:index/cseLogMapping:CseLogMapping")
public class CseLogMapping extends com.pulumi.resources.CustomResource {
    /**
     * Enabled flag.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Enabled flag.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * List of fields for the new log mapping. See field_schema for details.
     * 
     */
    @Export(name="fields", refs={List.class,CseLogMappingField.class}, tree="[0,1]")
    private Output<List<CseLogMappingField>> fields;

    /**
     * @return List of fields for the new log mapping. See field_schema for details.
     * 
     */
    public Output<List<CseLogMappingField>> fields() {
        return this.fields;
    }
    /**
     * The name of the log mapping.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the log mapping.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The id of the parent log mapping.
     * 
     */
    @Export(name="parentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parentId;

    /**
     * @return The id of the parent log mapping.
     * 
     */
    public Output<Optional<String>> parentId() {
        return Codegen.optional(this.parentId);
    }
    /**
     * Product GUID.
     * 
     */
    @Export(name="productGuid", refs={String.class}, tree="[0]")
    private Output<String> productGuid;

    /**
     * @return Product GUID.
     * 
     */
    public Output<String> productGuid() {
        return this.productGuid;
    }
    /**
     * The record type to be created. (possible values: Audit, AuditChange, AuditFile, AuditResourceAccess, Authentication, AuthenticationPrivilegeEscalation, Canary, Email, Endpoint, EndpointModuleLoad, EndpointProcess, Network, NetworkDHCP, NetworkDNS, NetworkFlow, NetworkHTTP, NetworkProxy, Notification, NotificationVulnerability)
     * 
     */
    @Export(name="recordType", refs={String.class}, tree="[0]")
    private Output<String> recordType;

    /**
     * @return The record type to be created. (possible values: Audit, AuditChange, AuditFile, AuditResourceAccess, Authentication, AuthenticationPrivilegeEscalation, Canary, Email, Endpoint, EndpointModuleLoad, EndpointProcess, Network, NetworkDHCP, NetworkDNS, NetworkFlow, NetworkHTTP, NetworkProxy, Notification, NotificationVulnerability)
     * 
     */
    public Output<String> recordType() {
        return this.recordType;
    }
    /**
     * Set to true to relate entities.
     * 
     */
    @Export(name="relatesEntities", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> relatesEntities;

    /**
     * @return Set to true to relate entities.
     * 
     */
    public Output<Optional<Boolean>> relatesEntities() {
        return Codegen.optional(this.relatesEntities);
    }
    /**
     * List of skipped values.
     * 
     */
    @Export(name="skippedValues", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> skippedValues;

    /**
     * @return List of skipped values.
     * 
     */
    public Output<Optional<List<String>>> skippedValues() {
        return Codegen.optional(this.skippedValues);
    }
    /**
     * List of structured inputs for the new log mapping. See structured_input_schema for details.
     * 
     */
    @Export(name="structuredInputs", refs={List.class,CseLogMappingStructuredInput.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CseLogMappingStructuredInput>> structuredInputs;

    /**
     * @return List of structured inputs for the new log mapping. See structured_input_schema for details.
     * 
     */
    public Output<Optional<List<CseLogMappingStructuredInput>>> structuredInputs() {
        return Codegen.optional(this.structuredInputs);
    }
    /**
     * Unstructured fields for the new log mapping. See unstructured_field_schema for details.
     * 
     */
    @Export(name="unstructuredFields", refs={CseLogMappingUnstructuredFields.class}, tree="[0]")
    private Output</* @Nullable */ CseLogMappingUnstructuredFields> unstructuredFields;

    /**
     * @return Unstructured fields for the new log mapping. See unstructured_field_schema for details.
     * 
     */
    public Output<Optional<CseLogMappingUnstructuredFields>> unstructuredFields() {
        return Codegen.optional(this.unstructuredFields);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CseLogMapping(java.lang.String name) {
        this(name, CseLogMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CseLogMapping(java.lang.String name, CseLogMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CseLogMapping(java.lang.String name, CseLogMappingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/cseLogMapping:CseLogMapping", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CseLogMapping(java.lang.String name, Output<java.lang.String> id, @Nullable CseLogMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/cseLogMapping:CseLogMapping", name, state, makeResourceOptions(options, id), false);
    }

    private static CseLogMappingArgs makeArgs(CseLogMappingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CseLogMappingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CseLogMapping get(java.lang.String name, Output<java.lang.String> id, @Nullable CseLogMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CseLogMapping(name, id, state, options);
    }
}
