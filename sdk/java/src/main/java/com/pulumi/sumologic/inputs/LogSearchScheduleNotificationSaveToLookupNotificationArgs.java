// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class LogSearchScheduleNotificationSaveToLookupNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogSearchScheduleNotificationSaveToLookupNotificationArgs Empty = new LogSearchScheduleNotificationSaveToLookupNotificationArgs();

    @Import(name="isLookupMergeOperation", required=true)
    private Output<Boolean> isLookupMergeOperation;

    public Output<Boolean> isLookupMergeOperation() {
        return this.isLookupMergeOperation;
    }

    @Import(name="lookupFilePath", required=true)
    private Output<String> lookupFilePath;

    public Output<String> lookupFilePath() {
        return this.lookupFilePath;
    }

    private LogSearchScheduleNotificationSaveToLookupNotificationArgs() {}

    private LogSearchScheduleNotificationSaveToLookupNotificationArgs(LogSearchScheduleNotificationSaveToLookupNotificationArgs $) {
        this.isLookupMergeOperation = $.isLookupMergeOperation;
        this.lookupFilePath = $.lookupFilePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogSearchScheduleNotificationSaveToLookupNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogSearchScheduleNotificationSaveToLookupNotificationArgs $;

        public Builder() {
            $ = new LogSearchScheduleNotificationSaveToLookupNotificationArgs();
        }

        public Builder(LogSearchScheduleNotificationSaveToLookupNotificationArgs defaults) {
            $ = new LogSearchScheduleNotificationSaveToLookupNotificationArgs(Objects.requireNonNull(defaults));
        }

        public Builder isLookupMergeOperation(Output<Boolean> isLookupMergeOperation) {
            $.isLookupMergeOperation = isLookupMergeOperation;
            return this;
        }

        public Builder isLookupMergeOperation(Boolean isLookupMergeOperation) {
            return isLookupMergeOperation(Output.of(isLookupMergeOperation));
        }

        public Builder lookupFilePath(Output<String> lookupFilePath) {
            $.lookupFilePath = lookupFilePath;
            return this;
        }

        public Builder lookupFilePath(String lookupFilePath) {
            return lookupFilePath(Output.of(lookupFilePath));
        }

        public LogSearchScheduleNotificationSaveToLookupNotificationArgs build() {
            if ($.isLookupMergeOperation == null) {
                throw new MissingRequiredPropertyException("LogSearchScheduleNotificationSaveToLookupNotificationArgs", "isLookupMergeOperation");
            }
            if ($.lookupFilePath == null) {
                throw new MissingRequiredPropertyException("LogSearchScheduleNotificationSaveToLookupNotificationArgs", "lookupFilePath");
            }
            return $;
        }
    }

}
