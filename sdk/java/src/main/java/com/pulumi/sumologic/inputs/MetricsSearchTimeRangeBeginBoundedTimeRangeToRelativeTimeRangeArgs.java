// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs Empty = new MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs();

    /**
     * Relative time as a string consisting of following elements:
     * 
     */
    @Import(name="relativeTime", required=true)
    private Output<String> relativeTime;

    /**
     * @return Relative time as a string consisting of following elements:
     * 
     */
    public Output<String> relativeTime() {
        return this.relativeTime;
    }

    private MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs() {}

    private MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs $) {
        this.relativeTime = $.relativeTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs $;

        public Builder() {
            $ = new MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs();
        }

        public Builder(MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs defaults) {
            $ = new MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param relativeTime Relative time as a string consisting of following elements:
         * 
         * @return builder
         * 
         */
        public Builder relativeTime(Output<String> relativeTime) {
            $.relativeTime = relativeTime;
            return this;
        }

        /**
         * @param relativeTime Relative time as a string consisting of following elements:
         * 
         * @return builder
         * 
         */
        public Builder relativeTime(String relativeTime) {
            return relativeTime(Output.of(relativeTime));
        }

        public MetricsSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs build() {
            $.relativeTime = Objects.requireNonNull($.relativeTime, "expected parameter 'relativeTime' to be non-null");
            return $;
        }
    }

}
