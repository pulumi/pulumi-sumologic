// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.SourceTemplateArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.SourceTemplateState;
import com.pulumi.sumologic.outputs.SourceTemplateSchemaRef;
import com.pulumi.sumologic.outputs.SourceTemplateSelector;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="sumologic:index/sourceTemplate:SourceTemplate")
public class SourceTemplate extends com.pulumi.resources.CustomResource {
    @Export(name="config", refs={String.class}, tree="[0]")
    private Output<String> config;

    public Output<String> config() {
        return this.config;
    }
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    public Output<String> createdAt() {
        return this.createdAt;
    }
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * inputJson of source template
     * 
     */
    @Export(name="inputJson", refs={String.class}, tree="[0]")
    private Output<String> inputJson;

    /**
     * @return inputJson of source template
     * 
     */
    public Output<String> inputJson() {
        return this.inputJson;
    }
    @Export(name="modifiedAt", refs={String.class}, tree="[0]")
    private Output<String> modifiedAt;

    public Output<String> modifiedAt() {
        return this.modifiedAt;
    }
    @Export(name="modifiedBy", refs={String.class}, tree="[0]")
    private Output<String> modifiedBy;

    public Output<String> modifiedBy() {
        return this.modifiedBy;
    }
    /**
     * schema reference for source template.
     * 
     */
    @Export(name="schemaRef", refs={SourceTemplateSchemaRef.class}, tree="[0]")
    private Output<SourceTemplateSchemaRef> schemaRef;

    /**
     * @return schema reference for source template.
     * 
     */
    public Output<SourceTemplateSchemaRef> schemaRef() {
        return this.schemaRef;
    }
    /**
     * Agent selector conditions
     * 
     */
    @Export(name="selectors", refs={List.class,SourceTemplateSelector.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SourceTemplateSelector>> selectors;

    /**
     * @return Agent selector conditions
     * 
     */
    public Output<Optional<List<SourceTemplateSelector>>> selectors() {
        return Codegen.optional(this.selectors);
    }
    @Export(name="totalCollectorLinked", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalCollectorLinked;

    public Output<Integer> totalCollectorLinked() {
        return this.totalCollectorLinked;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SourceTemplate(java.lang.String name) {
        this(name, SourceTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SourceTemplate(java.lang.String name, SourceTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SourceTemplate(java.lang.String name, SourceTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/sourceTemplate:SourceTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SourceTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable SourceTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/sourceTemplate:SourceTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static SourceTemplateArgs makeArgs(SourceTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SourceTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SourceTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable SourceTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SourceTemplate(name, id, state, options);
    }
}
