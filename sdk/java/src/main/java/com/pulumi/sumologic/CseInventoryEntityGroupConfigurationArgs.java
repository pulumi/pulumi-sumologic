// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CseInventoryEntityGroupConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CseInventoryEntityGroupConfigurationArgs Empty = new CseInventoryEntityGroupConfigurationArgs();

    /**
     * The entity group configuration criticality Examples: &#34;HIGH&#34;, &#34;CRITICALITY&#34;.
     * 
     */
    @Import(name="criticality")
    private @Nullable Output<String> criticality;

    /**
     * @return The entity group configuration criticality Examples: &#34;HIGH&#34;, &#34;CRITICALITY&#34;.
     * 
     */
    public Optional<Output<String>> criticality() {
        return Optional.ofNullable(this.criticality);
    }

    /**
     * The entity group configuration description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The entity group configuration description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * If dynamic tags are enabled for configuration.
     * 
     */
    @Import(name="dynamicTags")
    private @Nullable Output<Boolean> dynamicTags;

    /**
     * @return If dynamic tags are enabled for configuration.
     * 
     */
    public Optional<Output<Boolean>> dynamicTags() {
        return Optional.ofNullable(this.dynamicTags);
    }

    /**
     * (Deprecated) The entity group configuration inventory group. The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value`  instead.
     * 
     * @deprecated
     * The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead.
     * 
     */
    @Deprecated /* The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead. */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return (Deprecated) The entity group configuration inventory group. The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value`  instead.
     * 
     * @deprecated
     * The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead.
     * 
     */
    @Deprecated /* The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead. */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The inventory key to apply configuration Examples: &#34;groups&#34;, &#34;normalizedHostname&#34;, &#34;normalizedComputerName&#34;.
     * 
     */
    @Import(name="inventoryKey")
    private @Nullable Output<String> inventoryKey;

    /**
     * @return The inventory key to apply configuration Examples: &#34;groups&#34;, &#34;normalizedHostname&#34;, &#34;normalizedComputerName&#34;.
     * 
     */
    public Optional<Output<String>> inventoryKey() {
        return Optional.ofNullable(this.inventoryKey);
    }

    /**
     * The inventory source Examples: &#34;Active Directory&#34;, &#34;Okta&#34;.
     * 
     */
    @Import(name="inventorySource", required=true)
    private Output<String> inventorySource;

    /**
     * @return The inventory source Examples: &#34;Active Directory&#34;, &#34;Okta&#34;.
     * 
     */
    public Output<String> inventorySource() {
        return this.inventorySource;
    }

    /**
     * The inventory type Examples: &#34;computer&#34;, &#34;username&#34;.
     * 
     */
    @Import(name="inventoryType", required=true)
    private Output<String> inventoryType;

    /**
     * @return The inventory type Examples: &#34;computer&#34;, &#34;username&#34;.
     * 
     */
    public Output<String> inventoryType() {
        return this.inventoryType;
    }

    /**
     * The inventory value to match.
     * 
     */
    @Import(name="inventoryValue")
    private @Nullable Output<String> inventoryValue;

    /**
     * @return The inventory value to match.
     * 
     */
    public Optional<Output<String>> inventoryValue() {
        return Optional.ofNullable(this.inventoryValue);
    }

    /**
     * The entity group configuration name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The entity group configuration name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="suppressed")
    private @Nullable Output<Boolean> suppressed;

    public Optional<Output<Boolean>> suppressed() {
        return Optional.ofNullable(this.suppressed);
    }

    /**
     * The tag schema to be used for dynamic tags.
     * 
     */
    @Import(name="tagSchema")
    private @Nullable Output<String> tagSchema;

    /**
     * @return The tag schema to be used for dynamic tags.
     * 
     */
    public Optional<Output<String>> tagSchema() {
        return Optional.ofNullable(this.tagSchema);
    }

    /**
     * The entity group configuration tags list.
     * 
     * The following attributes are exported:
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The entity group configuration tags list.
     * 
     * The following attributes are exported:
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CseInventoryEntityGroupConfigurationArgs() {}

    private CseInventoryEntityGroupConfigurationArgs(CseInventoryEntityGroupConfigurationArgs $) {
        this.criticality = $.criticality;
        this.description = $.description;
        this.dynamicTags = $.dynamicTags;
        this.group = $.group;
        this.inventoryKey = $.inventoryKey;
        this.inventorySource = $.inventorySource;
        this.inventoryType = $.inventoryType;
        this.inventoryValue = $.inventoryValue;
        this.name = $.name;
        this.suppressed = $.suppressed;
        this.tagSchema = $.tagSchema;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CseInventoryEntityGroupConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CseInventoryEntityGroupConfigurationArgs $;

        public Builder() {
            $ = new CseInventoryEntityGroupConfigurationArgs();
        }

        public Builder(CseInventoryEntityGroupConfigurationArgs defaults) {
            $ = new CseInventoryEntityGroupConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param criticality The entity group configuration criticality Examples: &#34;HIGH&#34;, &#34;CRITICALITY&#34;.
         * 
         * @return builder
         * 
         */
        public Builder criticality(@Nullable Output<String> criticality) {
            $.criticality = criticality;
            return this;
        }

        /**
         * @param criticality The entity group configuration criticality Examples: &#34;HIGH&#34;, &#34;CRITICALITY&#34;.
         * 
         * @return builder
         * 
         */
        public Builder criticality(String criticality) {
            return criticality(Output.of(criticality));
        }

        /**
         * @param description The entity group configuration description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The entity group configuration description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dynamicTags If dynamic tags are enabled for configuration.
         * 
         * @return builder
         * 
         */
        public Builder dynamicTags(@Nullable Output<Boolean> dynamicTags) {
            $.dynamicTags = dynamicTags;
            return this;
        }

        /**
         * @param dynamicTags If dynamic tags are enabled for configuration.
         * 
         * @return builder
         * 
         */
        public Builder dynamicTags(Boolean dynamicTags) {
            return dynamicTags(Output.of(dynamicTags));
        }

        /**
         * @param group (Deprecated) The entity group configuration inventory group. The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value`  instead.
         * 
         * @return builder
         * 
         * @deprecated
         * The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead.
         * 
         */
        @Deprecated /* The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead. */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group (Deprecated) The entity group configuration inventory group. The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value`  instead.
         * 
         * @return builder
         * 
         * @deprecated
         * The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead.
         * 
         */
        @Deprecated /* The field `group` is deprecated and will be removed in a future release of the provider -- please make usage of `inventory_key`, `inventory_value` instead. */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param inventoryKey The inventory key to apply configuration Examples: &#34;groups&#34;, &#34;normalizedHostname&#34;, &#34;normalizedComputerName&#34;.
         * 
         * @return builder
         * 
         */
        public Builder inventoryKey(@Nullable Output<String> inventoryKey) {
            $.inventoryKey = inventoryKey;
            return this;
        }

        /**
         * @param inventoryKey The inventory key to apply configuration Examples: &#34;groups&#34;, &#34;normalizedHostname&#34;, &#34;normalizedComputerName&#34;.
         * 
         * @return builder
         * 
         */
        public Builder inventoryKey(String inventoryKey) {
            return inventoryKey(Output.of(inventoryKey));
        }

        /**
         * @param inventorySource The inventory source Examples: &#34;Active Directory&#34;, &#34;Okta&#34;.
         * 
         * @return builder
         * 
         */
        public Builder inventorySource(Output<String> inventorySource) {
            $.inventorySource = inventorySource;
            return this;
        }

        /**
         * @param inventorySource The inventory source Examples: &#34;Active Directory&#34;, &#34;Okta&#34;.
         * 
         * @return builder
         * 
         */
        public Builder inventorySource(String inventorySource) {
            return inventorySource(Output.of(inventorySource));
        }

        /**
         * @param inventoryType The inventory type Examples: &#34;computer&#34;, &#34;username&#34;.
         * 
         * @return builder
         * 
         */
        public Builder inventoryType(Output<String> inventoryType) {
            $.inventoryType = inventoryType;
            return this;
        }

        /**
         * @param inventoryType The inventory type Examples: &#34;computer&#34;, &#34;username&#34;.
         * 
         * @return builder
         * 
         */
        public Builder inventoryType(String inventoryType) {
            return inventoryType(Output.of(inventoryType));
        }

        /**
         * @param inventoryValue The inventory value to match.
         * 
         * @return builder
         * 
         */
        public Builder inventoryValue(@Nullable Output<String> inventoryValue) {
            $.inventoryValue = inventoryValue;
            return this;
        }

        /**
         * @param inventoryValue The inventory value to match.
         * 
         * @return builder
         * 
         */
        public Builder inventoryValue(String inventoryValue) {
            return inventoryValue(Output.of(inventoryValue));
        }

        /**
         * @param name The entity group configuration name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The entity group configuration name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder suppressed(@Nullable Output<Boolean> suppressed) {
            $.suppressed = suppressed;
            return this;
        }

        public Builder suppressed(Boolean suppressed) {
            return suppressed(Output.of(suppressed));
        }

        /**
         * @param tagSchema The tag schema to be used for dynamic tags.
         * 
         * @return builder
         * 
         */
        public Builder tagSchema(@Nullable Output<String> tagSchema) {
            $.tagSchema = tagSchema;
            return this;
        }

        /**
         * @param tagSchema The tag schema to be used for dynamic tags.
         * 
         * @return builder
         * 
         */
        public Builder tagSchema(String tagSchema) {
            return tagSchema(Output.of(tagSchema));
        }

        /**
         * @param tags The entity group configuration tags list.
         * 
         * The following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The entity group configuration tags list.
         * 
         * The following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The entity group configuration tags list.
         * 
         * The following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public CseInventoryEntityGroupConfigurationArgs build() {
            if ($.inventorySource == null) {
                throw new MissingRequiredPropertyException("CseInventoryEntityGroupConfigurationArgs", "inventorySource");
            }
            if ($.inventoryType == null) {
                throw new MissingRequiredPropertyException("CseInventoryEntityGroupConfigurationArgs", "inventoryType");
            }
            return $;
        }
    }

}
