// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsAnomalyConditionCritical;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditionsLogsAnomalyCondition {
    private String anomalyDetectorType;
    private MonitorTriggerConditionsLogsAnomalyConditionCritical critical;
    private @Nullable String direction;
    private String field;

    private MonitorTriggerConditionsLogsAnomalyCondition() {}
    public String anomalyDetectorType() {
        return this.anomalyDetectorType;
    }
    public MonitorTriggerConditionsLogsAnomalyConditionCritical critical() {
        return this.critical;
    }
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    public String field() {
        return this.field;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditionsLogsAnomalyCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String anomalyDetectorType;
        private MonitorTriggerConditionsLogsAnomalyConditionCritical critical;
        private @Nullable String direction;
        private String field;
        public Builder() {}
        public Builder(MonitorTriggerConditionsLogsAnomalyCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.anomalyDetectorType = defaults.anomalyDetectorType;
    	      this.critical = defaults.critical;
    	      this.direction = defaults.direction;
    	      this.field = defaults.field;
        }

        @CustomType.Setter
        public Builder anomalyDetectorType(String anomalyDetectorType) {
            if (anomalyDetectorType == null) {
              throw new MissingRequiredPropertyException("MonitorTriggerConditionsLogsAnomalyCondition", "anomalyDetectorType");
            }
            this.anomalyDetectorType = anomalyDetectorType;
            return this;
        }
        @CustomType.Setter
        public Builder critical(MonitorTriggerConditionsLogsAnomalyConditionCritical critical) {
            if (critical == null) {
              throw new MissingRequiredPropertyException("MonitorTriggerConditionsLogsAnomalyCondition", "critical");
            }
            this.critical = critical;
            return this;
        }
        @CustomType.Setter
        public Builder direction(@Nullable String direction) {

            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder field(String field) {
            if (field == null) {
              throw new MissingRequiredPropertyException("MonitorTriggerConditionsLogsAnomalyCondition", "field");
            }
            this.field = field;
            return this;
        }
        public MonitorTriggerConditionsLogsAnomalyCondition build() {
            final var _resultValue = new MonitorTriggerConditionsLogsAnomalyCondition();
            _resultValue.anomalyDetectorType = anomalyDetectorType;
            _resultValue.critical = critical;
            _resultValue.direction = direction;
            _resultValue.field = field;
            return _resultValue;
        }
    }
}
