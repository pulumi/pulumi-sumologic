// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.FieldExtractionRuleArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.FieldExtractionRuleState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a [Sumologic Field Extraction Rule](https://help.sumologic.com/Manage/Field-Extractions).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.FieldExtractionRule;
 * import com.pulumi.sumologic.FieldExtractionRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var fieldExtractionRule = new FieldExtractionRule(&#34;fieldExtractionRule&#34;, FieldExtractionRuleArgs.builder()        
 *             .enabled(true)
 *             .parseExpression(&#34;csv _raw extract 1 as f1&#34;)
 *             .scope(&#34;_sourceHost=127.0.0.1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Attributes reference
 * 
 * The following attributes are exported:
 * 
 * - `id` - Unique identifier for the field extraction rule.
 * 
 * ## Import
 * 
 * Extraction Rules can be imported using the extraction rule id, e.g.hcl
 * 
 * ```sh
 *  $ pulumi import sumologic:index/fieldExtractionRule:FieldExtractionRule fieldExtractionRule id
 * ```
 * 
 *  [1]https://help.sumologic.com/Manage/Field-Extractions
 * 
 */
@ResourceType(type="sumologic:index/fieldExtractionRule:FieldExtractionRule")
public class FieldExtractionRule extends com.pulumi.resources.CustomResource {
    /**
     * Is the field extraction rule enabled.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output<Boolean> enabled;

    /**
     * @return Is the field extraction rule enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Name of the field extraction rule. Use a name that makes it easy to identify the rule.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the field extraction rule. Use a name that makes it easy to identify the rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Describes the fields to be parsed.
     * 
     */
    @Export(name="parseExpression", type=String.class, parameters={})
    private Output<String> parseExpression;

    /**
     * @return Describes the fields to be parsed.
     * 
     */
    public Output<String> parseExpression() {
        return this.parseExpression;
    }
    /**
     * Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You&#39;ll use the Scope to run a search against the rule.
     * 
     */
    @Export(name="scope", type=String.class, parameters={})
    private Output<String> scope;

    /**
     * @return Scope of the field extraction rule. This could be a sourceCategory, sourceHost, or any other metadata that describes the data you want to extract from. Think of the Scope as the first portion of an ad hoc search, before the first pipe ( | ). You&#39;ll use the Scope to run a search against the rule.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FieldExtractionRule(String name) {
        this(name, FieldExtractionRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FieldExtractionRule(String name, FieldExtractionRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FieldExtractionRule(String name, FieldExtractionRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/fieldExtractionRule:FieldExtractionRule", name, args == null ? FieldExtractionRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FieldExtractionRule(String name, Output<String> id, @Nullable FieldExtractionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/fieldExtractionRule:FieldExtractionRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FieldExtractionRule get(String name, Output<String> id, @Nullable FieldExtractionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FieldExtractionRule(name, id, state, options);
    }
}
