// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsOutlierConditionCritical;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsOutlierConditionWarning;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditionsLogsOutlierCondition {
    private final @Nullable MonitorTriggerConditionsLogsOutlierConditionCritical critical;
    private final @Nullable String direction;
    private final @Nullable String field;
    private final @Nullable MonitorTriggerConditionsLogsOutlierConditionWarning warning;

    @CustomType.Constructor
    private MonitorTriggerConditionsLogsOutlierCondition(
        @CustomType.Parameter("critical") @Nullable MonitorTriggerConditionsLogsOutlierConditionCritical critical,
        @CustomType.Parameter("direction") @Nullable String direction,
        @CustomType.Parameter("field") @Nullable String field,
        @CustomType.Parameter("warning") @Nullable MonitorTriggerConditionsLogsOutlierConditionWarning warning) {
        this.critical = critical;
        this.direction = direction;
        this.field = field;
        this.warning = warning;
    }

    public Optional<MonitorTriggerConditionsLogsOutlierConditionCritical> critical() {
        return Optional.ofNullable(this.critical);
    }
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }
    public Optional<MonitorTriggerConditionsLogsOutlierConditionWarning> warning() {
        return Optional.ofNullable(this.warning);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditionsLogsOutlierCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable MonitorTriggerConditionsLogsOutlierConditionCritical critical;
        private @Nullable String direction;
        private @Nullable String field;
        private @Nullable MonitorTriggerConditionsLogsOutlierConditionWarning warning;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitorTriggerConditionsLogsOutlierCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.critical = defaults.critical;
    	      this.direction = defaults.direction;
    	      this.field = defaults.field;
    	      this.warning = defaults.warning;
        }

        public Builder critical(@Nullable MonitorTriggerConditionsLogsOutlierConditionCritical critical) {
            this.critical = critical;
            return this;
        }
        public Builder direction(@Nullable String direction) {
            this.direction = direction;
            return this;
        }
        public Builder field(@Nullable String field) {
            this.field = field;
            return this;
        }
        public Builder warning(@Nullable MonitorTriggerConditionsLogsOutlierConditionWarning warning) {
            this.warning = warning;
            return this;
        }        public MonitorTriggerConditionsLogsOutlierCondition build() {
            return new MonitorTriggerConditionsLogsOutlierCondition(critical, direction, field, warning);
        }
    }
}
