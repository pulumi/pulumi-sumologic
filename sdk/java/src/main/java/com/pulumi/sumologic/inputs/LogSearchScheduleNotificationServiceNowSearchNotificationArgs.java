// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.inputs.LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogSearchScheduleNotificationServiceNowSearchNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogSearchScheduleNotificationServiceNowSearchNotificationArgs Empty = new LogSearchScheduleNotificationServiceNowSearchNotificationArgs();

    @Import(name="externalId", required=true)
    private Output<String> externalId;

    public Output<String> externalId() {
        return this.externalId;
    }

    @Import(name="fields")
    private @Nullable Output<LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs> fields;

    public Optional<Output<LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs>> fields() {
        return Optional.ofNullable(this.fields);
    }

    private LogSearchScheduleNotificationServiceNowSearchNotificationArgs() {}

    private LogSearchScheduleNotificationServiceNowSearchNotificationArgs(LogSearchScheduleNotificationServiceNowSearchNotificationArgs $) {
        this.externalId = $.externalId;
        this.fields = $.fields;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogSearchScheduleNotificationServiceNowSearchNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogSearchScheduleNotificationServiceNowSearchNotificationArgs $;

        public Builder() {
            $ = new LogSearchScheduleNotificationServiceNowSearchNotificationArgs();
        }

        public Builder(LogSearchScheduleNotificationServiceNowSearchNotificationArgs defaults) {
            $ = new LogSearchScheduleNotificationServiceNowSearchNotificationArgs(Objects.requireNonNull(defaults));
        }

        public Builder externalId(Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        public Builder fields(@Nullable Output<LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs> fields) {
            $.fields = fields;
            return this;
        }

        public Builder fields(LogSearchScheduleNotificationServiceNowSearchNotificationFieldsArgs fields) {
            return fields(Output.of(fields));
        }

        public LogSearchScheduleNotificationServiceNowSearchNotificationArgs build() {
            if ($.externalId == null) {
                throw new MissingRequiredPropertyException("LogSearchScheduleNotificationServiceNowSearchNotificationArgs", "externalId");
            }
            return $;
        }
    }

}
