// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRoleResult {
    private final List<String> capabilities;
    private final String description;
    private final String filterPredicate;
    private final String id;
    private final String name;

    @CustomType.Constructor
    private GetRoleResult(
        @CustomType.Parameter("capabilities") List<String> capabilities,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("filterPredicate") String filterPredicate,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name) {
        this.capabilities = capabilities;
        this.description = description;
        this.filterPredicate = filterPredicate;
        this.id = id;
        this.name = name;
    }

    public List<String> capabilities() {
        return this.capabilities;
    }
    public String description() {
        return this.description;
    }
    public String filterPredicate() {
        return this.filterPredicate;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> capabilities;
        private String description;
        private String filterPredicate;
        private String id;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capabilities = defaults.capabilities;
    	      this.description = defaults.description;
    	      this.filterPredicate = defaults.filterPredicate;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        public Builder capabilities(List<String> capabilities) {
            this.capabilities = Objects.requireNonNull(capabilities);
            return this;
        }
        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder filterPredicate(String filterPredicate) {
            this.filterPredicate = Objects.requireNonNull(filterPredicate);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public GetRoleResult build() {
            return new GetRoleResult(capabilities, description, filterPredicate, id, name);
        }
    }
}
