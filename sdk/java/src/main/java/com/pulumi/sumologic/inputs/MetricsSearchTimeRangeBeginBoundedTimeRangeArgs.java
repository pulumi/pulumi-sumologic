// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs;
import com.pulumi.sumologic.inputs.MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricsSearchTimeRangeBeginBoundedTimeRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsSearchTimeRangeBeginBoundedTimeRangeArgs Empty = new MetricsSearchTimeRangeBeginBoundedTimeRangeArgs();

    /**
     * Start boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    @Import(name="from", required=true)
    private Output<MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs> from;

    /**
     * @return Start boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    public Output<MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs> from() {
        return this.from;
    }

    /**
     * End boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    @Import(name="to")
    private @Nullable Output<MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs> to;

    /**
     * @return End boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    public Optional<Output<MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs>> to() {
        return Optional.ofNullable(this.to);
    }

    private MetricsSearchTimeRangeBeginBoundedTimeRangeArgs() {}

    private MetricsSearchTimeRangeBeginBoundedTimeRangeArgs(MetricsSearchTimeRangeBeginBoundedTimeRangeArgs $) {
        this.from = $.from;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsSearchTimeRangeBeginBoundedTimeRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsSearchTimeRangeBeginBoundedTimeRangeArgs $;

        public Builder() {
            $ = new MetricsSearchTimeRangeBeginBoundedTimeRangeArgs();
        }

        public Builder(MetricsSearchTimeRangeBeginBoundedTimeRangeArgs defaults) {
            $ = new MetricsSearchTimeRangeBeginBoundedTimeRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param from Start boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder from(Output<MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs> from) {
            $.from = from;
            return this;
        }

        /**
         * @param from Start boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder from(MetricsSearchTimeRangeBeginBoundedTimeRangeFromArgs from) {
            return from(Output.of(from));
        }

        /**
         * @param to End boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder to(@Nullable Output<MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs> to) {
            $.to = to;
            return this;
        }

        /**
         * @param to End boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder to(MetricsSearchTimeRangeBeginBoundedTimeRangeToArgs to) {
            return to(Output.of(to));
        }

        public MetricsSearchTimeRangeBeginBoundedTimeRangeArgs build() {
            $.from = Objects.requireNonNull($.from, "expected parameter 'from' to be non-null");
            return $;
        }
    }

}
