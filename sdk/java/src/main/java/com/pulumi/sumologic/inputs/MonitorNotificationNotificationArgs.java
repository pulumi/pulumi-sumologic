// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorNotificationNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorNotificationNotificationArgs Empty = new MonitorNotificationNotificationArgs();

    /**
     * @deprecated
     * The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
     * 
     */
    @Deprecated /* The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead. */
    @Import(name="actionType")
    private @Nullable Output<String> actionType;

    /**
     * @deprecated
     * The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
     * 
     */
    @Deprecated /* The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead. */
    public Optional<Output<String>> actionType() {
        return Optional.ofNullable(this.actionType);
    }

    @Import(name="connectionId")
    private @Nullable Output<String> connectionId;

    public Optional<Output<String>> connectionId() {
        return Optional.ofNullable(this.connectionId);
    }

    @Import(name="connectionType")
    private @Nullable Output<String> connectionType;

    public Optional<Output<String>> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }

    @Import(name="messageBody")
    private @Nullable Output<String> messageBody;

    public Optional<Output<String>> messageBody() {
        return Optional.ofNullable(this.messageBody);
    }

    @Import(name="payloadOverride")
    private @Nullable Output<String> payloadOverride;

    public Optional<Output<String>> payloadOverride() {
        return Optional.ofNullable(this.payloadOverride);
    }

    @Import(name="recipients")
    private @Nullable Output<List<String>> recipients;

    public Optional<Output<List<String>>> recipients() {
        return Optional.ofNullable(this.recipients);
    }

    @Import(name="subject")
    private @Nullable Output<String> subject;

    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private MonitorNotificationNotificationArgs() {}

    private MonitorNotificationNotificationArgs(MonitorNotificationNotificationArgs $) {
        this.actionType = $.actionType;
        this.connectionId = $.connectionId;
        this.connectionType = $.connectionType;
        this.messageBody = $.messageBody;
        this.payloadOverride = $.payloadOverride;
        this.recipients = $.recipients;
        this.subject = $.subject;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorNotificationNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorNotificationNotificationArgs $;

        public Builder() {
            $ = new MonitorNotificationNotificationArgs();
        }

        public Builder(MonitorNotificationNotificationArgs defaults) {
            $ = new MonitorNotificationNotificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
         * 
         */
        @Deprecated /* The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead. */
        public Builder actionType(@Nullable Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead.
         * 
         */
        @Deprecated /* The field `action_type` is deprecated and will be removed in a future release of the provider - please use `connection_type` instead. */
        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        public Builder connectionId(@Nullable Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        public Builder connectionType(@Nullable Output<String> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        public Builder connectionType(String connectionType) {
            return connectionType(Output.of(connectionType));
        }

        public Builder messageBody(@Nullable Output<String> messageBody) {
            $.messageBody = messageBody;
            return this;
        }

        public Builder messageBody(String messageBody) {
            return messageBody(Output.of(messageBody));
        }

        public Builder payloadOverride(@Nullable Output<String> payloadOverride) {
            $.payloadOverride = payloadOverride;
            return this;
        }

        public Builder payloadOverride(String payloadOverride) {
            return payloadOverride(Output.of(payloadOverride));
        }

        public Builder recipients(@Nullable Output<List<String>> recipients) {
            $.recipients = recipients;
            return this;
        }

        public Builder recipients(List<String> recipients) {
            return recipients(Output.of(recipients));
        }

        public Builder recipients(String... recipients) {
            return recipients(List.of(recipients));
        }

        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public MonitorNotificationNotificationArgs build() {
            return $;
        }
    }

}
