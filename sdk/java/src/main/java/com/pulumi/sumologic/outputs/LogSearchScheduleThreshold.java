// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LogSearchScheduleThreshold {
    /**
     * @return Expected result count.
     * 
     */
    private Integer count;
    /**
     * @return Criterion to be applied when comparing actual result count with expected count. Possible
     * values are: `eq`, `gt`, `ge`, `lt`, and `le`.
     * 
     */
    private String operator;
    /**
     * @return Threshold type for the scheduled log search. Possible values are: `message` and `group`.
     * Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it
     * to `message`.
     * 
     */
    private String thresholdType;

    private LogSearchScheduleThreshold() {}
    /**
     * @return Expected result count.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return Criterion to be applied when comparing actual result count with expected count. Possible
     * values are: `eq`, `gt`, `ge`, `lt`, and `le`.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return Threshold type for the scheduled log search. Possible values are: `message` and `group`.
     * Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it
     * to `message`.
     * 
     */
    public String thresholdType() {
        return this.thresholdType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogSearchScheduleThreshold defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private String operator;
        private String thresholdType;
        public Builder() {}
        public Builder(LogSearchScheduleThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.operator = defaults.operator;
    	      this.thresholdType = defaults.thresholdType;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder thresholdType(String thresholdType) {
            this.thresholdType = Objects.requireNonNull(thresholdType);
            return this;
        }
        public LogSearchScheduleThreshold build() {
            final var o = new LogSearchScheduleThreshold();
            o.count = count;
            o.operator = operator;
            o.thresholdType = thresholdType;
            return o;
        }
    }
}
