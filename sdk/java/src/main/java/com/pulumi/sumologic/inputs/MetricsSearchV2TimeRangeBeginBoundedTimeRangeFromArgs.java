// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs;
import com.pulumi.sumologic.inputs.MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs;
import com.pulumi.sumologic.inputs.MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs;
import com.pulumi.sumologic.inputs.MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs Empty = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs();

    /**
     * Time since the epoch.
     * 
     */
    @Import(name="epochTimeRange")
    private @Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs> epochTimeRange;

    /**
     * @return Time since the epoch.
     * 
     */
    public Optional<Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs>> epochTimeRange() {
        return Optional.ofNullable(this.epochTimeRange);
    }

    /**
     * Time in ISO 8601 format.
     * 
     */
    @Import(name="iso8601TimeRange")
    private @Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs> iso8601TimeRange;

    /**
     * @return Time in ISO 8601 format.
     * 
     */
    public Optional<Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs>> iso8601TimeRange() {
        return Optional.ofNullable(this.iso8601TimeRange);
    }

    /**
     * Time in literal format.
     * 
     */
    @Import(name="literalTimeRange")
    private @Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs> literalTimeRange;

    /**
     * @return Time in literal format.
     * 
     */
    public Optional<Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs>> literalTimeRange() {
        return Optional.ofNullable(this.literalTimeRange);
    }

    /**
     * Time in relative format.
     * 
     */
    @Import(name="relativeTimeRange")
    private @Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs> relativeTimeRange;

    /**
     * @return Time in relative format.
     * 
     */
    public Optional<Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs>> relativeTimeRange() {
        return Optional.ofNullable(this.relativeTimeRange);
    }

    private MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs() {}

    private MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs $) {
        this.epochTimeRange = $.epochTimeRange;
        this.iso8601TimeRange = $.iso8601TimeRange;
        this.literalTimeRange = $.literalTimeRange;
        this.relativeTimeRange = $.relativeTimeRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs $;

        public Builder() {
            $ = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs();
        }

        public Builder(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs defaults) {
            $ = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param epochTimeRange Time since the epoch.
         * 
         * @return builder
         * 
         */
        public Builder epochTimeRange(@Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs> epochTimeRange) {
            $.epochTimeRange = epochTimeRange;
            return this;
        }

        /**
         * @param epochTimeRange Time since the epoch.
         * 
         * @return builder
         * 
         */
        public Builder epochTimeRange(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromEpochTimeRangeArgs epochTimeRange) {
            return epochTimeRange(Output.of(epochTimeRange));
        }

        /**
         * @param iso8601TimeRange Time in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder iso8601TimeRange(@Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs> iso8601TimeRange) {
            $.iso8601TimeRange = iso8601TimeRange;
            return this;
        }

        /**
         * @param iso8601TimeRange Time in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder iso8601TimeRange(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromIso8601TimeRangeArgs iso8601TimeRange) {
            return iso8601TimeRange(Output.of(iso8601TimeRange));
        }

        /**
         * @param literalTimeRange Time in literal format.
         * 
         * @return builder
         * 
         */
        public Builder literalTimeRange(@Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs> literalTimeRange) {
            $.literalTimeRange = literalTimeRange;
            return this;
        }

        /**
         * @param literalTimeRange Time in literal format.
         * 
         * @return builder
         * 
         */
        public Builder literalTimeRange(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromLiteralTimeRangeArgs literalTimeRange) {
            return literalTimeRange(Output.of(literalTimeRange));
        }

        /**
         * @param relativeTimeRange Time in relative format.
         * 
         * @return builder
         * 
         */
        public Builder relativeTimeRange(@Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs> relativeTimeRange) {
            $.relativeTimeRange = relativeTimeRange;
            return this;
        }

        /**
         * @param relativeTimeRange Time in relative format.
         * 
         * @return builder
         * 
         */
        public Builder relativeTimeRange(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromRelativeTimeRangeArgs relativeTimeRange) {
            return relativeTimeRange(Output.of(relativeTimeRange));
        }

        public MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs build() {
            return $;
        }
    }

}
