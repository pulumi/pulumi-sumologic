// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsAnomalyCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsMissingDataCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsOutlierCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsStaticCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsMetricsMissingDataCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsMetricsOutlierCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsMetricsStaticCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloBurnRateCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloSliCondition;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditions {
    private @Nullable MonitorTriggerConditionsLogsAnomalyCondition logsAnomalyCondition;
    private @Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition;
    private @Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition;
    private @Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition;
    private @Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition;
    private @Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition;
    private @Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition;
    private @Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition;
    private @Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition;

    private MonitorTriggerConditions() {}
    public Optional<MonitorTriggerConditionsLogsAnomalyCondition> logsAnomalyCondition() {
        return Optional.ofNullable(this.logsAnomalyCondition);
    }
    public Optional<MonitorTriggerConditionsLogsMissingDataCondition> logsMissingDataCondition() {
        return Optional.ofNullable(this.logsMissingDataCondition);
    }
    public Optional<MonitorTriggerConditionsLogsOutlierCondition> logsOutlierCondition() {
        return Optional.ofNullable(this.logsOutlierCondition);
    }
    public Optional<MonitorTriggerConditionsLogsStaticCondition> logsStaticCondition() {
        return Optional.ofNullable(this.logsStaticCondition);
    }
    public Optional<MonitorTriggerConditionsMetricsMissingDataCondition> metricsMissingDataCondition() {
        return Optional.ofNullable(this.metricsMissingDataCondition);
    }
    public Optional<MonitorTriggerConditionsMetricsOutlierCondition> metricsOutlierCondition() {
        return Optional.ofNullable(this.metricsOutlierCondition);
    }
    public Optional<MonitorTriggerConditionsMetricsStaticCondition> metricsStaticCondition() {
        return Optional.ofNullable(this.metricsStaticCondition);
    }
    public Optional<MonitorTriggerConditionsSloBurnRateCondition> sloBurnRateCondition() {
        return Optional.ofNullable(this.sloBurnRateCondition);
    }
    public Optional<MonitorTriggerConditionsSloSliCondition> sloSliCondition() {
        return Optional.ofNullable(this.sloSliCondition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MonitorTriggerConditionsLogsAnomalyCondition logsAnomalyCondition;
        private @Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition;
        private @Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition;
        private @Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition;
        private @Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition;
        private @Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition;
        private @Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition;
        private @Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition;
        private @Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition;
        public Builder() {}
        public Builder(MonitorTriggerConditions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logsAnomalyCondition = defaults.logsAnomalyCondition;
    	      this.logsMissingDataCondition = defaults.logsMissingDataCondition;
    	      this.logsOutlierCondition = defaults.logsOutlierCondition;
    	      this.logsStaticCondition = defaults.logsStaticCondition;
    	      this.metricsMissingDataCondition = defaults.metricsMissingDataCondition;
    	      this.metricsOutlierCondition = defaults.metricsOutlierCondition;
    	      this.metricsStaticCondition = defaults.metricsStaticCondition;
    	      this.sloBurnRateCondition = defaults.sloBurnRateCondition;
    	      this.sloSliCondition = defaults.sloSliCondition;
        }

        @CustomType.Setter
        public Builder logsAnomalyCondition(@Nullable MonitorTriggerConditionsLogsAnomalyCondition logsAnomalyCondition) {

            this.logsAnomalyCondition = logsAnomalyCondition;
            return this;
        }
        @CustomType.Setter
        public Builder logsMissingDataCondition(@Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition) {

            this.logsMissingDataCondition = logsMissingDataCondition;
            return this;
        }
        @CustomType.Setter
        public Builder logsOutlierCondition(@Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition) {

            this.logsOutlierCondition = logsOutlierCondition;
            return this;
        }
        @CustomType.Setter
        public Builder logsStaticCondition(@Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition) {

            this.logsStaticCondition = logsStaticCondition;
            return this;
        }
        @CustomType.Setter
        public Builder metricsMissingDataCondition(@Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition) {

            this.metricsMissingDataCondition = metricsMissingDataCondition;
            return this;
        }
        @CustomType.Setter
        public Builder metricsOutlierCondition(@Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition) {

            this.metricsOutlierCondition = metricsOutlierCondition;
            return this;
        }
        @CustomType.Setter
        public Builder metricsStaticCondition(@Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition) {

            this.metricsStaticCondition = metricsStaticCondition;
            return this;
        }
        @CustomType.Setter
        public Builder sloBurnRateCondition(@Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition) {

            this.sloBurnRateCondition = sloBurnRateCondition;
            return this;
        }
        @CustomType.Setter
        public Builder sloSliCondition(@Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition) {

            this.sloSliCondition = sloSliCondition;
            return this;
        }
        public MonitorTriggerConditions build() {
            final var _resultValue = new MonitorTriggerConditions();
            _resultValue.logsAnomalyCondition = logsAnomalyCondition;
            _resultValue.logsMissingDataCondition = logsMissingDataCondition;
            _resultValue.logsOutlierCondition = logsOutlierCondition;
            _resultValue.logsStaticCondition = logsStaticCondition;
            _resultValue.metricsMissingDataCondition = metricsMissingDataCondition;
            _resultValue.metricsOutlierCondition = metricsOutlierCondition;
            _resultValue.metricsStaticCondition = metricsStaticCondition;
            _resultValue.sloBurnRateCondition = sloBurnRateCondition;
            _resultValue.sloSliCondition = sloSliCondition;
            return _resultValue;
        }
    }
}
