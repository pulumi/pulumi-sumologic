// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsMissingDataCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsOutlierCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsLogsStaticCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsMetricsMissingDataCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsMetricsOutlierCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsMetricsStaticCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloBurnRateCondition;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloSliCondition;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditions {
    private final @Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition;
    private final @Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition;
    private final @Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition;
    private final @Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition;
    private final @Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition;
    private final @Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition;
    private final @Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition;
    private final @Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition;

    @CustomType.Constructor
    private MonitorTriggerConditions(
        @CustomType.Parameter("logsMissingDataCondition") @Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition,
        @CustomType.Parameter("logsOutlierCondition") @Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition,
        @CustomType.Parameter("logsStaticCondition") @Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition,
        @CustomType.Parameter("metricsMissingDataCondition") @Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition,
        @CustomType.Parameter("metricsOutlierCondition") @Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition,
        @CustomType.Parameter("metricsStaticCondition") @Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition,
        @CustomType.Parameter("sloBurnRateCondition") @Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition,
        @CustomType.Parameter("sloSliCondition") @Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition) {
        this.logsMissingDataCondition = logsMissingDataCondition;
        this.logsOutlierCondition = logsOutlierCondition;
        this.logsStaticCondition = logsStaticCondition;
        this.metricsMissingDataCondition = metricsMissingDataCondition;
        this.metricsOutlierCondition = metricsOutlierCondition;
        this.metricsStaticCondition = metricsStaticCondition;
        this.sloBurnRateCondition = sloBurnRateCondition;
        this.sloSliCondition = sloSliCondition;
    }

    public Optional<MonitorTriggerConditionsLogsMissingDataCondition> logsMissingDataCondition() {
        return Optional.ofNullable(this.logsMissingDataCondition);
    }
    public Optional<MonitorTriggerConditionsLogsOutlierCondition> logsOutlierCondition() {
        return Optional.ofNullable(this.logsOutlierCondition);
    }
    public Optional<MonitorTriggerConditionsLogsStaticCondition> logsStaticCondition() {
        return Optional.ofNullable(this.logsStaticCondition);
    }
    public Optional<MonitorTriggerConditionsMetricsMissingDataCondition> metricsMissingDataCondition() {
        return Optional.ofNullable(this.metricsMissingDataCondition);
    }
    public Optional<MonitorTriggerConditionsMetricsOutlierCondition> metricsOutlierCondition() {
        return Optional.ofNullable(this.metricsOutlierCondition);
    }
    public Optional<MonitorTriggerConditionsMetricsStaticCondition> metricsStaticCondition() {
        return Optional.ofNullable(this.metricsStaticCondition);
    }
    public Optional<MonitorTriggerConditionsSloBurnRateCondition> sloBurnRateCondition() {
        return Optional.ofNullable(this.sloBurnRateCondition);
    }
    public Optional<MonitorTriggerConditionsSloSliCondition> sloSliCondition() {
        return Optional.ofNullable(this.sloSliCondition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition;
        private @Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition;
        private @Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition;
        private @Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition;
        private @Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition;
        private @Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition;
        private @Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition;
        private @Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitorTriggerConditions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logsMissingDataCondition = defaults.logsMissingDataCondition;
    	      this.logsOutlierCondition = defaults.logsOutlierCondition;
    	      this.logsStaticCondition = defaults.logsStaticCondition;
    	      this.metricsMissingDataCondition = defaults.metricsMissingDataCondition;
    	      this.metricsOutlierCondition = defaults.metricsOutlierCondition;
    	      this.metricsStaticCondition = defaults.metricsStaticCondition;
    	      this.sloBurnRateCondition = defaults.sloBurnRateCondition;
    	      this.sloSliCondition = defaults.sloSliCondition;
        }

        public Builder logsMissingDataCondition(@Nullable MonitorTriggerConditionsLogsMissingDataCondition logsMissingDataCondition) {
            this.logsMissingDataCondition = logsMissingDataCondition;
            return this;
        }
        public Builder logsOutlierCondition(@Nullable MonitorTriggerConditionsLogsOutlierCondition logsOutlierCondition) {
            this.logsOutlierCondition = logsOutlierCondition;
            return this;
        }
        public Builder logsStaticCondition(@Nullable MonitorTriggerConditionsLogsStaticCondition logsStaticCondition) {
            this.logsStaticCondition = logsStaticCondition;
            return this;
        }
        public Builder metricsMissingDataCondition(@Nullable MonitorTriggerConditionsMetricsMissingDataCondition metricsMissingDataCondition) {
            this.metricsMissingDataCondition = metricsMissingDataCondition;
            return this;
        }
        public Builder metricsOutlierCondition(@Nullable MonitorTriggerConditionsMetricsOutlierCondition metricsOutlierCondition) {
            this.metricsOutlierCondition = metricsOutlierCondition;
            return this;
        }
        public Builder metricsStaticCondition(@Nullable MonitorTriggerConditionsMetricsStaticCondition metricsStaticCondition) {
            this.metricsStaticCondition = metricsStaticCondition;
            return this;
        }
        public Builder sloBurnRateCondition(@Nullable MonitorTriggerConditionsSloBurnRateCondition sloBurnRateCondition) {
            this.sloBurnRateCondition = sloBurnRateCondition;
            return this;
        }
        public Builder sloSliCondition(@Nullable MonitorTriggerConditionsSloSliCondition sloSliCondition) {
            this.sloSliCondition = sloSliCondition;
            return this;
        }        public MonitorTriggerConditions build() {
            return new MonitorTriggerConditions(logsMissingDataCondition, logsOutlierCondition, logsStaticCondition, metricsMissingDataCondition, metricsOutlierCondition, metricsStaticCondition, sloBurnRateCondition, sloSliCondition);
        }
    }
}
