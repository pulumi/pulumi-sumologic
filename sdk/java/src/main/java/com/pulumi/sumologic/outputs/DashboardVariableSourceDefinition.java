// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.DashboardVariableSourceDefinitionCsvVariableSourceDefinition;
import com.pulumi.sumologic.outputs.DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition;
import com.pulumi.sumologic.outputs.DashboardVariableSourceDefinitionMetadataVariableSourceDefinition;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardVariableSourceDefinition {
    private @Nullable DashboardVariableSourceDefinitionCsvVariableSourceDefinition csvVariableSourceDefinition;
    private @Nullable DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition logQueryVariableSourceDefinition;
    private @Nullable DashboardVariableSourceDefinitionMetadataVariableSourceDefinition metadataVariableSourceDefinition;

    private DashboardVariableSourceDefinition() {}
    public Optional<DashboardVariableSourceDefinitionCsvVariableSourceDefinition> csvVariableSourceDefinition() {
        return Optional.ofNullable(this.csvVariableSourceDefinition);
    }
    public Optional<DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition> logQueryVariableSourceDefinition() {
        return Optional.ofNullable(this.logQueryVariableSourceDefinition);
    }
    public Optional<DashboardVariableSourceDefinitionMetadataVariableSourceDefinition> metadataVariableSourceDefinition() {
        return Optional.ofNullable(this.metadataVariableSourceDefinition);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardVariableSourceDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardVariableSourceDefinitionCsvVariableSourceDefinition csvVariableSourceDefinition;
        private @Nullable DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition logQueryVariableSourceDefinition;
        private @Nullable DashboardVariableSourceDefinitionMetadataVariableSourceDefinition metadataVariableSourceDefinition;
        public Builder() {}
        public Builder(DashboardVariableSourceDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.csvVariableSourceDefinition = defaults.csvVariableSourceDefinition;
    	      this.logQueryVariableSourceDefinition = defaults.logQueryVariableSourceDefinition;
    	      this.metadataVariableSourceDefinition = defaults.metadataVariableSourceDefinition;
        }

        @CustomType.Setter
        public Builder csvVariableSourceDefinition(@Nullable DashboardVariableSourceDefinitionCsvVariableSourceDefinition csvVariableSourceDefinition) {
            this.csvVariableSourceDefinition = csvVariableSourceDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder logQueryVariableSourceDefinition(@Nullable DashboardVariableSourceDefinitionLogQueryVariableSourceDefinition logQueryVariableSourceDefinition) {
            this.logQueryVariableSourceDefinition = logQueryVariableSourceDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder metadataVariableSourceDefinition(@Nullable DashboardVariableSourceDefinitionMetadataVariableSourceDefinition metadataVariableSourceDefinition) {
            this.metadataVariableSourceDefinition = metadataVariableSourceDefinition;
            return this;
        }
        public DashboardVariableSourceDefinition build() {
            final var o = new DashboardVariableSourceDefinition();
            o.csvVariableSourceDefinition = csvVariableSourceDefinition;
            o.logQueryVariableSourceDefinition = logQueryVariableSourceDefinition;
            o.metadataVariableSourceDefinition = metadataVariableSourceDefinition;
            return o;
        }
    }
}
