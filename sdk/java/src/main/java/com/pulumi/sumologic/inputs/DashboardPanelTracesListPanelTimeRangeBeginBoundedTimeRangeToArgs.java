// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs;
import com.pulumi.sumologic.inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs;
import com.pulumi.sumologic.inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs;
import com.pulumi.sumologic.inputs.DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs Empty = new DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs();

    @Import(name="epochTimeRange")
    private @Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs> epochTimeRange;

    public Optional<Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs>> epochTimeRange() {
        return Optional.ofNullable(this.epochTimeRange);
    }

    @Import(name="iso8601TimeRange")
    private @Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs> iso8601TimeRange;

    public Optional<Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs>> iso8601TimeRange() {
        return Optional.ofNullable(this.iso8601TimeRange);
    }

    @Import(name="literalTimeRange")
    private @Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs> literalTimeRange;

    public Optional<Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs>> literalTimeRange() {
        return Optional.ofNullable(this.literalTimeRange);
    }

    @Import(name="relativeTimeRange")
    private @Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs> relativeTimeRange;

    public Optional<Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs>> relativeTimeRange() {
        return Optional.ofNullable(this.relativeTimeRange);
    }

    private DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs() {}

    private DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs $) {
        this.epochTimeRange = $.epochTimeRange;
        this.iso8601TimeRange = $.iso8601TimeRange;
        this.literalTimeRange = $.literalTimeRange;
        this.relativeTimeRange = $.relativeTimeRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs $;

        public Builder() {
            $ = new DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs();
        }

        public Builder(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs defaults) {
            $ = new DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs(Objects.requireNonNull(defaults));
        }

        public Builder epochTimeRange(@Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs> epochTimeRange) {
            $.epochTimeRange = epochTimeRange;
            return this;
        }

        public Builder epochTimeRange(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs epochTimeRange) {
            return epochTimeRange(Output.of(epochTimeRange));
        }

        public Builder iso8601TimeRange(@Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs> iso8601TimeRange) {
            $.iso8601TimeRange = iso8601TimeRange;
            return this;
        }

        public Builder iso8601TimeRange(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToIso8601TimeRangeArgs iso8601TimeRange) {
            return iso8601TimeRange(Output.of(iso8601TimeRange));
        }

        public Builder literalTimeRange(@Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs> literalTimeRange) {
            $.literalTimeRange = literalTimeRange;
            return this;
        }

        public Builder literalTimeRange(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToLiteralTimeRangeArgs literalTimeRange) {
            return literalTimeRange(Output.of(literalTimeRange));
        }

        public Builder relativeTimeRange(@Nullable Output<DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs> relativeTimeRange) {
            $.relativeTimeRange = relativeTimeRange;
            return this;
        }

        public Builder relativeTimeRange(DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToRelativeTimeRangeArgs relativeTimeRange) {
            return relativeTimeRange(Output.of(relativeTimeRange));
        }

        public DashboardPanelTracesListPanelTimeRangeBeginBoundedTimeRangeToArgs build() {
            return $;
        }
    }

}
