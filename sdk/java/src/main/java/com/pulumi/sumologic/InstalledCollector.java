// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.InstalledCollectorArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.InstalledCollectorState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.InstalledCollector;
 * import com.pulumi.sumologic.InstalledCollectorArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var installedCollector = new InstalledCollector("installedCollector", InstalledCollectorArgs.builder()
 *             .name("test-mac")
 *             .category("macos/test")
 *             .ephemeral(true)
 *             .fields(Map.of("key", "value"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Collectors can be imported using the collector id, e.g.:
 * 
 * hcl
 * 
 * ```sh
 * $ pulumi import sumologic:index/installedCollector:InstalledCollector test 1234567890
 * ```
 * 
 * Collectors can also be imported using the collector name, which is unique per Sumo Logic account, e.g.:
 * 
 * hcl
 * 
 * ```sh
 * $ pulumi import sumologic:index/installedCollector:InstalledCollector test my_test_collector
 * ```
 * 
 * [1]: https://help.sumologic.com/03Send-Data/Installed-Collectors/01About-Installed-Collectors
 * 
 * [2]: https://en.wikipedia.org/wiki/Tz_database
 * 
 * [3]: https://help.sumologic.com/Manage/Fields
 * 
 * [4]: https://www.terraform.io/docs/configuration/resources.html#prevent_destroy
 * 
 * [5]:https://help.sumologic.com/03Send-Data/Installed-Collectors/05Reference-Information-for-Collector-Installation/11Set-a-Collector-as-Ephemeral
 * 
 */
@ResourceType(type="sumologic:index/installedCollector:InstalledCollector")
public class InstalledCollector extends com.pulumi.resources.CustomResource {
    @Export(name="alive", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> alive;

    public Output<Boolean> alive() {
        return this.alive;
    }
    @Export(name="category", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> category;

    public Output<Optional<String>> category() {
        return Codegen.optional(this.category);
    }
    @Export(name="collectorVersion", refs={String.class}, tree="[0]")
    private Output<String> collectorVersion;

    public Output<String> collectorVersion() {
        return this.collectorVersion;
    }
    @Export(name="cutoffTimestamp", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cutoffTimestamp;

    public Output<Optional<Integer>> cutoffTimestamp() {
        return Codegen.optional(this.cutoffTimestamp);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="ephemeral", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ephemeral;

    public Output<Boolean> ephemeral() {
        return this.ephemeral;
    }
    @Export(name="fields", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> fields;

    public Output<Optional<Map<String,String>>> fields() {
        return Codegen.optional(this.fields);
    }
    @Export(name="hostName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hostName;

    public Output<Optional<String>> hostName() {
        return Codegen.optional(this.hostName);
    }
    @Export(name="lastSeenAlive", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastSeenAlive;

    public Output<Integer> lastSeenAlive() {
        return this.lastSeenAlive;
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="sourceSyncMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceSyncMode;

    public Output<Optional<String>> sourceSyncMode() {
        return Codegen.optional(this.sourceSyncMode);
    }
    @Export(name="targetCpu", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> targetCpu;

    public Output<Optional<Integer>> targetCpu() {
        return Codegen.optional(this.targetCpu);
    }
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezone;

    public Output<Optional<String>> timezone() {
        return Codegen.optional(this.timezone);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstalledCollector(String name) {
        this(name, InstalledCollectorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstalledCollector(String name, InstalledCollectorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstalledCollector(String name, InstalledCollectorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/installedCollector:InstalledCollector", name, args == null ? InstalledCollectorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstalledCollector(String name, Output<String> id, @Nullable InstalledCollectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/installedCollector:InstalledCollector", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstalledCollector get(String name, Output<String> id, @Nullable InstalledCollectorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstalledCollector(name, id, state, options);
    }
}
