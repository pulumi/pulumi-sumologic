// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.SourceTemplateSchemaRefArgs;
import com.pulumi.sumologic.inputs.SourceTemplateSelectorArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final SourceTemplateState Empty = new SourceTemplateState();

    @Import(name="config")
    private @Nullable Output<String> config;

    public Optional<Output<String>> config() {
        return Optional.ofNullable(this.config);
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * inputJson of source template
     * 
     */
    @Import(name="inputJson")
    private @Nullable Output<String> inputJson;

    /**
     * @return inputJson of source template
     * 
     */
    public Optional<Output<String>> inputJson() {
        return Optional.ofNullable(this.inputJson);
    }

    @Import(name="modifiedAt")
    private @Nullable Output<String> modifiedAt;

    public Optional<Output<String>> modifiedAt() {
        return Optional.ofNullable(this.modifiedAt);
    }

    @Import(name="modifiedBy")
    private @Nullable Output<String> modifiedBy;

    public Optional<Output<String>> modifiedBy() {
        return Optional.ofNullable(this.modifiedBy);
    }

    /**
     * schema reference for source template.
     * 
     */
    @Import(name="schemaRef")
    private @Nullable Output<SourceTemplateSchemaRefArgs> schemaRef;

    /**
     * @return schema reference for source template.
     * 
     */
    public Optional<Output<SourceTemplateSchemaRefArgs>> schemaRef() {
        return Optional.ofNullable(this.schemaRef);
    }

    /**
     * Agent selector conditions
     * 
     */
    @Import(name="selectors")
    private @Nullable Output<List<SourceTemplateSelectorArgs>> selectors;

    /**
     * @return Agent selector conditions
     * 
     */
    public Optional<Output<List<SourceTemplateSelectorArgs>>> selectors() {
        return Optional.ofNullable(this.selectors);
    }

    @Import(name="totalCollectorLinked")
    private @Nullable Output<Integer> totalCollectorLinked;

    public Optional<Output<Integer>> totalCollectorLinked() {
        return Optional.ofNullable(this.totalCollectorLinked);
    }

    private SourceTemplateState() {}

    private SourceTemplateState(SourceTemplateState $) {
        this.config = $.config;
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.inputJson = $.inputJson;
        this.modifiedAt = $.modifiedAt;
        this.modifiedBy = $.modifiedBy;
        this.schemaRef = $.schemaRef;
        this.selectors = $.selectors;
        this.totalCollectorLinked = $.totalCollectorLinked;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceTemplateState $;

        public Builder() {
            $ = new SourceTemplateState();
        }

        public Builder(SourceTemplateState defaults) {
            $ = new SourceTemplateState(Objects.requireNonNull(defaults));
        }

        public Builder config(@Nullable Output<String> config) {
            $.config = config;
            return this;
        }

        public Builder config(String config) {
            return config(Output.of(config));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param inputJson inputJson of source template
         * 
         * @return builder
         * 
         */
        public Builder inputJson(@Nullable Output<String> inputJson) {
            $.inputJson = inputJson;
            return this;
        }

        /**
         * @param inputJson inputJson of source template
         * 
         * @return builder
         * 
         */
        public Builder inputJson(String inputJson) {
            return inputJson(Output.of(inputJson));
        }

        public Builder modifiedAt(@Nullable Output<String> modifiedAt) {
            $.modifiedAt = modifiedAt;
            return this;
        }

        public Builder modifiedAt(String modifiedAt) {
            return modifiedAt(Output.of(modifiedAt));
        }

        public Builder modifiedBy(@Nullable Output<String> modifiedBy) {
            $.modifiedBy = modifiedBy;
            return this;
        }

        public Builder modifiedBy(String modifiedBy) {
            return modifiedBy(Output.of(modifiedBy));
        }

        /**
         * @param schemaRef schema reference for source template.
         * 
         * @return builder
         * 
         */
        public Builder schemaRef(@Nullable Output<SourceTemplateSchemaRefArgs> schemaRef) {
            $.schemaRef = schemaRef;
            return this;
        }

        /**
         * @param schemaRef schema reference for source template.
         * 
         * @return builder
         * 
         */
        public Builder schemaRef(SourceTemplateSchemaRefArgs schemaRef) {
            return schemaRef(Output.of(schemaRef));
        }

        /**
         * @param selectors Agent selector conditions
         * 
         * @return builder
         * 
         */
        public Builder selectors(@Nullable Output<List<SourceTemplateSelectorArgs>> selectors) {
            $.selectors = selectors;
            return this;
        }

        /**
         * @param selectors Agent selector conditions
         * 
         * @return builder
         * 
         */
        public Builder selectors(List<SourceTemplateSelectorArgs> selectors) {
            return selectors(Output.of(selectors));
        }

        /**
         * @param selectors Agent selector conditions
         * 
         * @return builder
         * 
         */
        public Builder selectors(SourceTemplateSelectorArgs... selectors) {
            return selectors(List.of(selectors));
        }

        public Builder totalCollectorLinked(@Nullable Output<Integer> totalCollectorLinked) {
            $.totalCollectorLinked = totalCollectorLinked;
            return this;
        }

        public Builder totalCollectorLinked(Integer totalCollectorLinked) {
            return totalCollectorLinked(Output.of(totalCollectorLinked));
        }

        public SourceTemplateState build() {
            return $;
        }
    }

}
