// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SloIndicatorWindowBasedEvaluationQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloIndicatorWindowBasedEvaluationQueryArgs Empty = new SloIndicatorWindowBasedEvaluationQueryArgs();

    /**
     * The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
     * , `Threshold`.
     * 
     */
    @Import(name="queryGroupType", required=true)
    private Output<String> queryGroupType;

    /**
     * @return The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
     * , `Threshold`.
     * 
     */
    public Output<String> queryGroupType() {
        return this.queryGroupType;
    }

    /**
     * List of queries to use.
     * 
     */
    @Import(name="queryGroups", required=true)
    private Output<List<SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs>> queryGroups;

    /**
     * @return List of queries to use.
     * 
     */
    public Output<List<SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs>> queryGroups() {
        return this.queryGroups;
    }

    private SloIndicatorWindowBasedEvaluationQueryArgs() {}

    private SloIndicatorWindowBasedEvaluationQueryArgs(SloIndicatorWindowBasedEvaluationQueryArgs $) {
        this.queryGroupType = $.queryGroupType;
        this.queryGroups = $.queryGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloIndicatorWindowBasedEvaluationQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloIndicatorWindowBasedEvaluationQueryArgs $;

        public Builder() {
            $ = new SloIndicatorWindowBasedEvaluationQueryArgs();
        }

        public Builder(SloIndicatorWindowBasedEvaluationQueryArgs defaults) {
            $ = new SloIndicatorWindowBasedEvaluationQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param queryGroupType The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
         * , `Threshold`.
         * 
         * @return builder
         * 
         */
        public Builder queryGroupType(Output<String> queryGroupType) {
            $.queryGroupType = queryGroupType;
            return this;
        }

        /**
         * @param queryGroupType The type of query. Valid values are `Successful`, `Unsuccessful`, `Total`
         * , `Threshold`.
         * 
         * @return builder
         * 
         */
        public Builder queryGroupType(String queryGroupType) {
            return queryGroupType(Output.of(queryGroupType));
        }

        /**
         * @param queryGroups List of queries to use.
         * 
         * @return builder
         * 
         */
        public Builder queryGroups(Output<List<SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs>> queryGroups) {
            $.queryGroups = queryGroups;
            return this;
        }

        /**
         * @param queryGroups List of queries to use.
         * 
         * @return builder
         * 
         */
        public Builder queryGroups(List<SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs> queryGroups) {
            return queryGroups(Output.of(queryGroups));
        }

        /**
         * @param queryGroups List of queries to use.
         * 
         * @return builder
         * 
         */
        public Builder queryGroups(SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs... queryGroups) {
            return queryGroups(List.of(queryGroups));
        }

        public SloIndicatorWindowBasedEvaluationQueryArgs build() {
            $.queryGroupType = Objects.requireNonNull($.queryGroupType, "expected parameter 'queryGroupType' to be non-null");
            $.queryGroups = Objects.requireNonNull($.queryGroups, "expected parameter 'queryGroups' to be non-null");
            return $;
        }
    }

}
