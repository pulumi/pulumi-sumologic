// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SloIndicatorWindowBasedEvaluationQueryQueryGroup {
    private @Nullable String field;
    private String query;
    private String rowId;
    private Boolean useRowCount;

    private SloIndicatorWindowBasedEvaluationQueryQueryGroup() {}
    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }
    public String query() {
        return this.query;
    }
    public String rowId() {
        return this.rowId;
    }
    public Boolean useRowCount() {
        return this.useRowCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SloIndicatorWindowBasedEvaluationQueryQueryGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String field;
        private String query;
        private String rowId;
        private Boolean useRowCount;
        public Builder() {}
        public Builder(SloIndicatorWindowBasedEvaluationQueryQueryGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.field = defaults.field;
    	      this.query = defaults.query;
    	      this.rowId = defaults.rowId;
    	      this.useRowCount = defaults.useRowCount;
        }

        @CustomType.Setter
        public Builder field(@Nullable String field) {

            this.field = field;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("SloIndicatorWindowBasedEvaluationQueryQueryGroup", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder rowId(String rowId) {
            if (rowId == null) {
              throw new MissingRequiredPropertyException("SloIndicatorWindowBasedEvaluationQueryQueryGroup", "rowId");
            }
            this.rowId = rowId;
            return this;
        }
        @CustomType.Setter
        public Builder useRowCount(Boolean useRowCount) {
            if (useRowCount == null) {
              throw new MissingRequiredPropertyException("SloIndicatorWindowBasedEvaluationQueryQueryGroup", "useRowCount");
            }
            this.useRowCount = useRowCount;
            return this;
        }
        public SloIndicatorWindowBasedEvaluationQueryQueryGroup build() {
            final var _resultValue = new SloIndicatorWindowBasedEvaluationQueryQueryGroup();
            _resultValue.field = field;
            _resultValue.query = query;
            _resultValue.rowId = rowId;
            _resultValue.useRowCount = useRowCount;
            return _resultValue;
        }
    }
}
