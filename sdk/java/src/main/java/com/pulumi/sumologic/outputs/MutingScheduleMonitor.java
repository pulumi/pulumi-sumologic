// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MutingScheduleMonitor {
    /**
     * @return True if the schedule applies to all monitors
     * 
     * [1]: https://help.sumologic.com/docs/alerts/monitors/muting-schedules/
     * 
     */
    private @Nullable Boolean all;
    /**
     * @return List of monitor Ids in hex. Must be empty if `all` is true.
     * 
     */
    private @Nullable List<String> ids;

    private MutingScheduleMonitor() {}
    /**
     * @return True if the schedule applies to all monitors
     * 
     * [1]: https://help.sumologic.com/docs/alerts/monitors/muting-schedules/
     * 
     */
    public Optional<Boolean> all() {
        return Optional.ofNullable(this.all);
    }
    /**
     * @return List of monitor Ids in hex. Must be empty if `all` is true.
     * 
     */
    public List<String> ids() {
        return this.ids == null ? List.of() : this.ids;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MutingScheduleMonitor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean all;
        private @Nullable List<String> ids;
        public Builder() {}
        public Builder(MutingScheduleMonitor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.ids = defaults.ids;
        }

        @CustomType.Setter
        public Builder all(@Nullable Boolean all) {

            this.all = all;
            return this;
        }
        @CustomType.Setter
        public Builder ids(@Nullable List<String> ids) {

            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public MutingScheduleMonitor build() {
            final var _resultValue = new MutingScheduleMonitor();
            _resultValue.all = all;
            _resultValue.ids = ids;
            return _resultValue;
        }
    }
}
