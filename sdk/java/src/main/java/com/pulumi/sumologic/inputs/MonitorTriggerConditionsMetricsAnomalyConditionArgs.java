// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsMetricsAnomalyConditionCriticalArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorTriggerConditionsMetricsAnomalyConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorTriggerConditionsMetricsAnomalyConditionArgs Empty = new MonitorTriggerConditionsMetricsAnomalyConditionArgs();

    @Import(name="anomalyDetectorType", required=true)
    private Output<String> anomalyDetectorType;

    public Output<String> anomalyDetectorType() {
        return this.anomalyDetectorType;
    }

    @Import(name="critical", required=true)
    private Output<MonitorTriggerConditionsMetricsAnomalyConditionCriticalArgs> critical;

    public Output<MonitorTriggerConditionsMetricsAnomalyConditionCriticalArgs> critical() {
        return this.critical;
    }

    @Import(name="direction")
    private @Nullable Output<String> direction;

    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    private MonitorTriggerConditionsMetricsAnomalyConditionArgs() {}

    private MonitorTriggerConditionsMetricsAnomalyConditionArgs(MonitorTriggerConditionsMetricsAnomalyConditionArgs $) {
        this.anomalyDetectorType = $.anomalyDetectorType;
        this.critical = $.critical;
        this.direction = $.direction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorTriggerConditionsMetricsAnomalyConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorTriggerConditionsMetricsAnomalyConditionArgs $;

        public Builder() {
            $ = new MonitorTriggerConditionsMetricsAnomalyConditionArgs();
        }

        public Builder(MonitorTriggerConditionsMetricsAnomalyConditionArgs defaults) {
            $ = new MonitorTriggerConditionsMetricsAnomalyConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder anomalyDetectorType(Output<String> anomalyDetectorType) {
            $.anomalyDetectorType = anomalyDetectorType;
            return this;
        }

        public Builder anomalyDetectorType(String anomalyDetectorType) {
            return anomalyDetectorType(Output.of(anomalyDetectorType));
        }

        public Builder critical(Output<MonitorTriggerConditionsMetricsAnomalyConditionCriticalArgs> critical) {
            $.critical = critical;
            return this;
        }

        public Builder critical(MonitorTriggerConditionsMetricsAnomalyConditionCriticalArgs critical) {
            return critical(Output.of(critical));
        }

        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        public MonitorTriggerConditionsMetricsAnomalyConditionArgs build() {
            if ($.anomalyDetectorType == null) {
                throw new MissingRequiredPropertyException("MonitorTriggerConditionsMetricsAnomalyConditionArgs", "anomalyDetectorType");
            }
            if ($.critical == null) {
                throw new MissingRequiredPropertyException("MonitorTriggerConditionsMetricsAnomalyConditionArgs", "critical");
            }
            return $;
        }
    }

}
