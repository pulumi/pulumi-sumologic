// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.DashboardPanelSumoSearchPanelColoringRule;
import com.pulumi.sumologic.outputs.DashboardPanelSumoSearchPanelLinkedDashboard;
import com.pulumi.sumologic.outputs.DashboardPanelSumoSearchPanelQuery;
import com.pulumi.sumologic.outputs.DashboardPanelSumoSearchPanelTimeRange;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardPanelSumoSearchPanel {
    private final @Nullable DashboardPanelSumoSearchPanelColoringRule coloringRule;
    /**
     * @return Description of the dashboard.
     * 
     */
    private final @Nullable String description;
    private final @Nullable String id;
    private final @Nullable Boolean keepVisualSettingsConsistentWithParent;
    private final String key;
    private final @Nullable DashboardPanelSumoSearchPanelLinkedDashboard linkedDashboard;
    private final @Nullable List<DashboardPanelSumoSearchPanelQuery> queries;
    /**
     * @return Time range of the dashboard. See time range schema
     * for details.
     * 
     */
    private final @Nullable DashboardPanelSumoSearchPanelTimeRange timeRange;
    /**
     * @return Title of the dashboard.
     * 
     */
    private final @Nullable String title;
    private final @Nullable String visualSettings;

    @CustomType.Constructor
    private DashboardPanelSumoSearchPanel(
        @CustomType.Parameter("coloringRule") @Nullable DashboardPanelSumoSearchPanelColoringRule coloringRule,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("keepVisualSettingsConsistentWithParent") @Nullable Boolean keepVisualSettingsConsistentWithParent,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("linkedDashboard") @Nullable DashboardPanelSumoSearchPanelLinkedDashboard linkedDashboard,
        @CustomType.Parameter("queries") @Nullable List<DashboardPanelSumoSearchPanelQuery> queries,
        @CustomType.Parameter("timeRange") @Nullable DashboardPanelSumoSearchPanelTimeRange timeRange,
        @CustomType.Parameter("title") @Nullable String title,
        @CustomType.Parameter("visualSettings") @Nullable String visualSettings) {
        this.coloringRule = coloringRule;
        this.description = description;
        this.id = id;
        this.keepVisualSettingsConsistentWithParent = keepVisualSettingsConsistentWithParent;
        this.key = key;
        this.linkedDashboard = linkedDashboard;
        this.queries = queries;
        this.timeRange = timeRange;
        this.title = title;
        this.visualSettings = visualSettings;
    }

    public Optional<DashboardPanelSumoSearchPanelColoringRule> coloringRule() {
        return Optional.ofNullable(this.coloringRule);
    }
    /**
     * @return Description of the dashboard.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> keepVisualSettingsConsistentWithParent() {
        return Optional.ofNullable(this.keepVisualSettingsConsistentWithParent);
    }
    public String key() {
        return this.key;
    }
    public Optional<DashboardPanelSumoSearchPanelLinkedDashboard> linkedDashboard() {
        return Optional.ofNullable(this.linkedDashboard);
    }
    public List<DashboardPanelSumoSearchPanelQuery> queries() {
        return this.queries == null ? List.of() : this.queries;
    }
    /**
     * @return Time range of the dashboard. See time range schema
     * for details.
     * 
     */
    public Optional<DashboardPanelSumoSearchPanelTimeRange> timeRange() {
        return Optional.ofNullable(this.timeRange);
    }
    /**
     * @return Title of the dashboard.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> visualSettings() {
        return Optional.ofNullable(this.visualSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardPanelSumoSearchPanel defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DashboardPanelSumoSearchPanelColoringRule coloringRule;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable Boolean keepVisualSettingsConsistentWithParent;
        private String key;
        private @Nullable DashboardPanelSumoSearchPanelLinkedDashboard linkedDashboard;
        private @Nullable List<DashboardPanelSumoSearchPanelQuery> queries;
        private @Nullable DashboardPanelSumoSearchPanelTimeRange timeRange;
        private @Nullable String title;
        private @Nullable String visualSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardPanelSumoSearchPanel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coloringRule = defaults.coloringRule;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.keepVisualSettingsConsistentWithParent = defaults.keepVisualSettingsConsistentWithParent;
    	      this.key = defaults.key;
    	      this.linkedDashboard = defaults.linkedDashboard;
    	      this.queries = defaults.queries;
    	      this.timeRange = defaults.timeRange;
    	      this.title = defaults.title;
    	      this.visualSettings = defaults.visualSettings;
        }

        public Builder coloringRule(@Nullable DashboardPanelSumoSearchPanelColoringRule coloringRule) {
            this.coloringRule = coloringRule;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder keepVisualSettingsConsistentWithParent(@Nullable Boolean keepVisualSettingsConsistentWithParent) {
            this.keepVisualSettingsConsistentWithParent = keepVisualSettingsConsistentWithParent;
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder linkedDashboard(@Nullable DashboardPanelSumoSearchPanelLinkedDashboard linkedDashboard) {
            this.linkedDashboard = linkedDashboard;
            return this;
        }
        public Builder queries(@Nullable List<DashboardPanelSumoSearchPanelQuery> queries) {
            this.queries = queries;
            return this;
        }
        public Builder queries(DashboardPanelSumoSearchPanelQuery... queries) {
            return queries(List.of(queries));
        }
        public Builder timeRange(@Nullable DashboardPanelSumoSearchPanelTimeRange timeRange) {
            this.timeRange = timeRange;
            return this;
        }
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        public Builder visualSettings(@Nullable String visualSettings) {
            this.visualSettings = visualSettings;
            return this;
        }        public DashboardPanelSumoSearchPanel build() {
            return new DashboardPanelSumoSearchPanel(coloringRule, description, id, keepVisualSettingsConsistentWithParent, key, linkedDashboard, queries, timeRange, title, visualSettings);
        }
    }
}
