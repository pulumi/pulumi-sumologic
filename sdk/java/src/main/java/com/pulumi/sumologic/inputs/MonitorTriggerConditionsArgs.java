// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsLogsMissingDataConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsLogsOutlierConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsLogsStaticConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsMetricsMissingDataConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsMetricsOutlierConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsMetricsStaticConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsSloBurnRateConditionArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsSloSliConditionArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorTriggerConditionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorTriggerConditionsArgs Empty = new MonitorTriggerConditionsArgs();

    @Import(name="logsMissingDataCondition")
    private @Nullable Output<MonitorTriggerConditionsLogsMissingDataConditionArgs> logsMissingDataCondition;

    public Optional<Output<MonitorTriggerConditionsLogsMissingDataConditionArgs>> logsMissingDataCondition() {
        return Optional.ofNullable(this.logsMissingDataCondition);
    }

    @Import(name="logsOutlierCondition")
    private @Nullable Output<MonitorTriggerConditionsLogsOutlierConditionArgs> logsOutlierCondition;

    public Optional<Output<MonitorTriggerConditionsLogsOutlierConditionArgs>> logsOutlierCondition() {
        return Optional.ofNullable(this.logsOutlierCondition);
    }

    @Import(name="logsStaticCondition")
    private @Nullable Output<MonitorTriggerConditionsLogsStaticConditionArgs> logsStaticCondition;

    public Optional<Output<MonitorTriggerConditionsLogsStaticConditionArgs>> logsStaticCondition() {
        return Optional.ofNullable(this.logsStaticCondition);
    }

    @Import(name="metricsMissingDataCondition")
    private @Nullable Output<MonitorTriggerConditionsMetricsMissingDataConditionArgs> metricsMissingDataCondition;

    public Optional<Output<MonitorTriggerConditionsMetricsMissingDataConditionArgs>> metricsMissingDataCondition() {
        return Optional.ofNullable(this.metricsMissingDataCondition);
    }

    @Import(name="metricsOutlierCondition")
    private @Nullable Output<MonitorTriggerConditionsMetricsOutlierConditionArgs> metricsOutlierCondition;

    public Optional<Output<MonitorTriggerConditionsMetricsOutlierConditionArgs>> metricsOutlierCondition() {
        return Optional.ofNullable(this.metricsOutlierCondition);
    }

    @Import(name="metricsStaticCondition")
    private @Nullable Output<MonitorTriggerConditionsMetricsStaticConditionArgs> metricsStaticCondition;

    public Optional<Output<MonitorTriggerConditionsMetricsStaticConditionArgs>> metricsStaticCondition() {
        return Optional.ofNullable(this.metricsStaticCondition);
    }

    @Import(name="sloBurnRateCondition")
    private @Nullable Output<MonitorTriggerConditionsSloBurnRateConditionArgs> sloBurnRateCondition;

    public Optional<Output<MonitorTriggerConditionsSloBurnRateConditionArgs>> sloBurnRateCondition() {
        return Optional.ofNullable(this.sloBurnRateCondition);
    }

    @Import(name="sloSliCondition")
    private @Nullable Output<MonitorTriggerConditionsSloSliConditionArgs> sloSliCondition;

    public Optional<Output<MonitorTriggerConditionsSloSliConditionArgs>> sloSliCondition() {
        return Optional.ofNullable(this.sloSliCondition);
    }

    private MonitorTriggerConditionsArgs() {}

    private MonitorTriggerConditionsArgs(MonitorTriggerConditionsArgs $) {
        this.logsMissingDataCondition = $.logsMissingDataCondition;
        this.logsOutlierCondition = $.logsOutlierCondition;
        this.logsStaticCondition = $.logsStaticCondition;
        this.metricsMissingDataCondition = $.metricsMissingDataCondition;
        this.metricsOutlierCondition = $.metricsOutlierCondition;
        this.metricsStaticCondition = $.metricsStaticCondition;
        this.sloBurnRateCondition = $.sloBurnRateCondition;
        this.sloSliCondition = $.sloSliCondition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorTriggerConditionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorTriggerConditionsArgs $;

        public Builder() {
            $ = new MonitorTriggerConditionsArgs();
        }

        public Builder(MonitorTriggerConditionsArgs defaults) {
            $ = new MonitorTriggerConditionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder logsMissingDataCondition(@Nullable Output<MonitorTriggerConditionsLogsMissingDataConditionArgs> logsMissingDataCondition) {
            $.logsMissingDataCondition = logsMissingDataCondition;
            return this;
        }

        public Builder logsMissingDataCondition(MonitorTriggerConditionsLogsMissingDataConditionArgs logsMissingDataCondition) {
            return logsMissingDataCondition(Output.of(logsMissingDataCondition));
        }

        public Builder logsOutlierCondition(@Nullable Output<MonitorTriggerConditionsLogsOutlierConditionArgs> logsOutlierCondition) {
            $.logsOutlierCondition = logsOutlierCondition;
            return this;
        }

        public Builder logsOutlierCondition(MonitorTriggerConditionsLogsOutlierConditionArgs logsOutlierCondition) {
            return logsOutlierCondition(Output.of(logsOutlierCondition));
        }

        public Builder logsStaticCondition(@Nullable Output<MonitorTriggerConditionsLogsStaticConditionArgs> logsStaticCondition) {
            $.logsStaticCondition = logsStaticCondition;
            return this;
        }

        public Builder logsStaticCondition(MonitorTriggerConditionsLogsStaticConditionArgs logsStaticCondition) {
            return logsStaticCondition(Output.of(logsStaticCondition));
        }

        public Builder metricsMissingDataCondition(@Nullable Output<MonitorTriggerConditionsMetricsMissingDataConditionArgs> metricsMissingDataCondition) {
            $.metricsMissingDataCondition = metricsMissingDataCondition;
            return this;
        }

        public Builder metricsMissingDataCondition(MonitorTriggerConditionsMetricsMissingDataConditionArgs metricsMissingDataCondition) {
            return metricsMissingDataCondition(Output.of(metricsMissingDataCondition));
        }

        public Builder metricsOutlierCondition(@Nullable Output<MonitorTriggerConditionsMetricsOutlierConditionArgs> metricsOutlierCondition) {
            $.metricsOutlierCondition = metricsOutlierCondition;
            return this;
        }

        public Builder metricsOutlierCondition(MonitorTriggerConditionsMetricsOutlierConditionArgs metricsOutlierCondition) {
            return metricsOutlierCondition(Output.of(metricsOutlierCondition));
        }

        public Builder metricsStaticCondition(@Nullable Output<MonitorTriggerConditionsMetricsStaticConditionArgs> metricsStaticCondition) {
            $.metricsStaticCondition = metricsStaticCondition;
            return this;
        }

        public Builder metricsStaticCondition(MonitorTriggerConditionsMetricsStaticConditionArgs metricsStaticCondition) {
            return metricsStaticCondition(Output.of(metricsStaticCondition));
        }

        public Builder sloBurnRateCondition(@Nullable Output<MonitorTriggerConditionsSloBurnRateConditionArgs> sloBurnRateCondition) {
            $.sloBurnRateCondition = sloBurnRateCondition;
            return this;
        }

        public Builder sloBurnRateCondition(MonitorTriggerConditionsSloBurnRateConditionArgs sloBurnRateCondition) {
            return sloBurnRateCondition(Output.of(sloBurnRateCondition));
        }

        public Builder sloSliCondition(@Nullable Output<MonitorTriggerConditionsSloSliConditionArgs> sloSliCondition) {
            $.sloSliCondition = sloSliCondition;
            return this;
        }

        public Builder sloSliCondition(MonitorTriggerConditionsSloSliConditionArgs sloSliCondition) {
            return sloSliCondition(Output.of(sloSliCondition));
        }

        public MonitorTriggerConditionsArgs build() {
            return $;
        }
    }

}
