// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.PoliciesArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.PoliciesState;
import com.pulumi.sumologic.outputs.PoliciesUserConcurrentSessionsLimit;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Sets the Sumologic Policies. Since each policy is global for the entire organization, please ensure that only a single
 * instance of this resource is defined. The behavior for defining more than one policies resource is undefined.
 * 
 * The following policies are supported:
 * - [Audit Policy](https://help.sumologic.com/Manage/Security/Audit-Index)
 * - [Data Access Level Policy](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards)
 * - [Maximum Web Session Timeout Policy](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout)
 * - [Search Audit Policy](https://help.sumologic.com/Manage/Security/Search_Audit_Index)
 * - [Share a Dashboard Outside Organization Policy](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org)
 * - [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.Policies;
 * import com.pulumi.sumologic.PoliciesArgs;
 * import com.pulumi.sumologic.inputs.PoliciesUserConcurrentSessionsLimitArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var examplePolicies = new Policies(&#34;examplePolicies&#34;, PoliciesArgs.builder()        
 *             .audit(false)
 *             .dataAccessLevel(false)
 *             .maxUserSessionTimeout(&#34;7d&#34;)
 *             .searchAudit(false)
 *             .shareDashboardsOutsideOrganization(false)
 *             .userConcurrentSessionsLimit(PoliciesUserConcurrentSessionsLimitArgs.builder()
 *                 .enabled(false)
 *                 .maxConcurrentSessions(100)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Policies can be imported using the id `org-policies`. hcl
 * 
 * ```sh
 *  $ pulumi import sumologic:index/policies:Policies example_policies org-policies
 * ```
 * 
 *  [1]https://help.sumologic.com/Manage/Security/Audit-Index [2]https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards [3]https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout [4]https://help.sumologic.com/Manage/Security/Search_Audit_Index [5]https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org [6]https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions
 * 
 */
@ResourceType(type="sumologic:index/policies:Policies")
public class Policies extends com.pulumi.resources.CustomResource {
    /**
     * Whether the [Audit Policy](https://help.sumologic.com/Manage/Security/Audit-Index) is enabled.
     * 
     */
    @Export(name="audit", type=Boolean.class, parameters={})
    private Output<Boolean> audit;

    /**
     * @return Whether the [Audit Policy](https://help.sumologic.com/Manage/Security/Audit-Index) is enabled.
     * 
     */
    public Output<Boolean> audit() {
        return this.audit;
    }
    /**
     * Whether the [Data Access Level Policy](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards) is enabled.
     * 
     */
    @Export(name="dataAccessLevel", type=Boolean.class, parameters={})
    private Output<Boolean> dataAccessLevel;

    /**
     * @return Whether the [Data Access Level Policy](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards) is enabled.
     * 
     */
    public Output<Boolean> dataAccessLevel() {
        return this.dataAccessLevel;
    }
    /**
     * The [maximum web session timeout](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout) users are able to configure within their user preferences.
     * 
     */
    @Export(name="maxUserSessionTimeout", type=String.class, parameters={})
    private Output<String> maxUserSessionTimeout;

    /**
     * @return The [maximum web session timeout](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout) users are able to configure within their user preferences.
     * 
     */
    public Output<String> maxUserSessionTimeout() {
        return this.maxUserSessionTimeout;
    }
    /**
     * Whether the [Search Audit Policy](https://help.sumologic.com/Manage/Security/Search_Audit_Index) is enabled.
     * 
     */
    @Export(name="searchAudit", type=Boolean.class, parameters={})
    private Output<Boolean> searchAudit;

    /**
     * @return Whether the [Search Audit Policy](https://help.sumologic.com/Manage/Security/Search_Audit_Index) is enabled.
     * 
     */
    public Output<Boolean> searchAudit() {
        return this.searchAudit;
    }
    /**
     * Whether the [Share a Dashboard Outside Organization Policy](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org) is enabled.
     * 
     */
    @Export(name="shareDashboardsOutsideOrganization", type=Boolean.class, parameters={})
    private Output<Boolean> shareDashboardsOutsideOrganization;

    /**
     * @return Whether the [Share a Dashboard Outside Organization Policy](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org) is enabled.
     * 
     */
    public Output<Boolean> shareDashboardsOutsideOrganization() {
        return this.shareDashboardsOutsideOrganization;
    }
    /**
     * The [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions). See user_concurrent_sessions_limit schema for details.
     * 
     */
    @Export(name="userConcurrentSessionsLimit", type=PoliciesUserConcurrentSessionsLimit.class, parameters={})
    private Output<PoliciesUserConcurrentSessionsLimit> userConcurrentSessionsLimit;

    /**
     * @return The [User Concurrent Sessions Limit Policy](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions). See user_concurrent_sessions_limit schema for details.
     * 
     */
    public Output<PoliciesUserConcurrentSessionsLimit> userConcurrentSessionsLimit() {
        return this.userConcurrentSessionsLimit;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Policies(String name) {
        this(name, PoliciesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Policies(String name, PoliciesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Policies(String name, PoliciesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/policies:Policies", name, args == null ? PoliciesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Policies(String name, Output<String> id, @Nullable PoliciesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/policies:Policies", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Policies get(String name, Output<String> id, @Nullable PoliciesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Policies(name, id, state, options);
    }
}
