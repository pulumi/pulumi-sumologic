// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class CseMatchRuleSeverityMappingMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final CseMatchRuleSeverityMappingMappingArgs Empty = new CseMatchRuleSeverityMappingMappingArgs();

    @Import(name="from", required=true)
    private Output<String> from;

    public Output<String> from() {
        return this.from;
    }

    @Import(name="to", required=true)
    private Output<Integer> to;

    public Output<Integer> to() {
        return this.to;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private CseMatchRuleSeverityMappingMappingArgs() {}

    private CseMatchRuleSeverityMappingMappingArgs(CseMatchRuleSeverityMappingMappingArgs $) {
        this.from = $.from;
        this.to = $.to;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CseMatchRuleSeverityMappingMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CseMatchRuleSeverityMappingMappingArgs $;

        public Builder() {
            $ = new CseMatchRuleSeverityMappingMappingArgs();
        }

        public Builder(CseMatchRuleSeverityMappingMappingArgs defaults) {
            $ = new CseMatchRuleSeverityMappingMappingArgs(Objects.requireNonNull(defaults));
        }

        public Builder from(Output<String> from) {
            $.from = from;
            return this;
        }

        public Builder from(String from) {
            return from(Output.of(from));
        }

        public Builder to(Output<Integer> to) {
            $.to = to;
            return this;
        }

        public Builder to(Integer to) {
            return to(Output.of(to));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CseMatchRuleSeverityMappingMappingArgs build() {
            if ($.from == null) {
                throw new MissingRequiredPropertyException("CseMatchRuleSeverityMappingMappingArgs", "from");
            }
            if ($.to == null) {
                throw new MissingRequiredPropertyException("CseMatchRuleSeverityMappingMappingArgs", "to");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("CseMatchRuleSeverityMappingMappingArgs", "type");
            }
            return $;
        }
    }

}
