// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KinesisLogSourcePath {
    /**
     * @return The name of the bucket. This is needed if using type `KinesisLogPath`.
     * 
     */
    private @Nullable String bucketName;
    /**
     * @return The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must include `http-endpoint-failed/`.
     * 
     */
    private @Nullable String pathExpression;
    /**
     * @return The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
     * 
     */
    private @Nullable Integer scanInterval;
    /**
     * @return Must be either `KinesisLogPath` or `NoPathExpression`
     * 
     */
    private @Nullable String type;

    private KinesisLogSourcePath() {}
    /**
     * @return The name of the bucket. This is needed if using type `KinesisLogPath`.
     * 
     */
    public Optional<String> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    /**
     * @return The path to the data. This is needed if using type `KinesisLogPath`. For Kinesis log source, it must include `http-endpoint-failed/`.
     * 
     */
    public Optional<String> pathExpression() {
        return Optional.ofNullable(this.pathExpression);
    }
    /**
     * @return The Time interval in milliseconds of scans for new data. The default is 300000 and the minimum value is 1000 milliseconds.
     * 
     */
    public Optional<Integer> scanInterval() {
        return Optional.ofNullable(this.scanInterval);
    }
    /**
     * @return Must be either `KinesisLogPath` or `NoPathExpression`
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KinesisLogSourcePath defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucketName;
        private @Nullable String pathExpression;
        private @Nullable Integer scanInterval;
        private @Nullable String type;
        public Builder() {}
        public Builder(KinesisLogSourcePath defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.pathExpression = defaults.pathExpression;
    	      this.scanInterval = defaults.scanInterval;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder bucketName(@Nullable String bucketName) {

            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder pathExpression(@Nullable String pathExpression) {

            this.pathExpression = pathExpression;
            return this;
        }
        @CustomType.Setter
        public Builder scanInterval(@Nullable Integer scanInterval) {

            this.scanInterval = scanInterval;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public KinesisLogSourcePath build() {
            final var _resultValue = new KinesisLogSourcePath();
            _resultValue.bucketName = bucketName;
            _resultValue.pathExpression = pathExpression;
            _resultValue.scanInterval = scanInterval;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
