// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ContentPermissionPermissionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentPermissionPermissionArgs Empty = new ContentPermissionPermissionArgs();

    @Import(name="permissionName", required=true)
    private Output<String> permissionName;

    public Output<String> permissionName() {
        return this.permissionName;
    }

    @Import(name="sourceId", required=true)
    private Output<String> sourceId;

    public Output<String> sourceId() {
        return this.sourceId;
    }

    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    public Output<String> sourceType() {
        return this.sourceType;
    }

    private ContentPermissionPermissionArgs() {}

    private ContentPermissionPermissionArgs(ContentPermissionPermissionArgs $) {
        this.permissionName = $.permissionName;
        this.sourceId = $.sourceId;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentPermissionPermissionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentPermissionPermissionArgs $;

        public Builder() {
            $ = new ContentPermissionPermissionArgs();
        }

        public Builder(ContentPermissionPermissionArgs defaults) {
            $ = new ContentPermissionPermissionArgs(Objects.requireNonNull(defaults));
        }

        public Builder permissionName(Output<String> permissionName) {
            $.permissionName = permissionName;
            return this;
        }

        public Builder permissionName(String permissionName) {
            return permissionName(Output.of(permissionName));
        }

        public Builder sourceId(Output<String> sourceId) {
            $.sourceId = sourceId;
            return this;
        }

        public Builder sourceId(String sourceId) {
            return sourceId(Output.of(sourceId));
        }

        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public ContentPermissionPermissionArgs build() {
            if ($.permissionName == null) {
                throw new MissingRequiredPropertyException("ContentPermissionPermissionArgs", "permissionName");
            }
            if ($.sourceId == null) {
                throw new MissingRequiredPropertyException("ContentPermissionPermissionArgs", "sourceId");
            }
            if ($.sourceType == null) {
                throw new MissingRequiredPropertyException("ContentPermissionPermissionArgs", "sourceType");
            }
            return $;
        }
    }

}
