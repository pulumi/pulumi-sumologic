// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs;
import com.pulumi.sumologic.inputs.MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs;
import java.lang.String;
import java.util.Objects;


public final class MonitorTriggerConditionsLogsStaticConditionWarningArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorTriggerConditionsLogsStaticConditionWarningArgs Empty = new MonitorTriggerConditionsLogsStaticConditionWarningArgs();

    @Import(name="alert", required=true)
    private Output<MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs> alert;

    public Output<MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs> alert() {
        return this.alert;
    }

    @Import(name="resolution", required=true)
    private Output<MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs> resolution;

    public Output<MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs> resolution() {
        return this.resolution;
    }

    @Import(name="timeRange", required=true)
    private Output<String> timeRange;

    public Output<String> timeRange() {
        return this.timeRange;
    }

    private MonitorTriggerConditionsLogsStaticConditionWarningArgs() {}

    private MonitorTriggerConditionsLogsStaticConditionWarningArgs(MonitorTriggerConditionsLogsStaticConditionWarningArgs $) {
        this.alert = $.alert;
        this.resolution = $.resolution;
        this.timeRange = $.timeRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorTriggerConditionsLogsStaticConditionWarningArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorTriggerConditionsLogsStaticConditionWarningArgs $;

        public Builder() {
            $ = new MonitorTriggerConditionsLogsStaticConditionWarningArgs();
        }

        public Builder(MonitorTriggerConditionsLogsStaticConditionWarningArgs defaults) {
            $ = new MonitorTriggerConditionsLogsStaticConditionWarningArgs(Objects.requireNonNull(defaults));
        }

        public Builder alert(Output<MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs> alert) {
            $.alert = alert;
            return this;
        }

        public Builder alert(MonitorTriggerConditionsLogsStaticConditionWarningAlertArgs alert) {
            return alert(Output.of(alert));
        }

        public Builder resolution(Output<MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs> resolution) {
            $.resolution = resolution;
            return this;
        }

        public Builder resolution(MonitorTriggerConditionsLogsStaticConditionWarningResolutionArgs resolution) {
            return resolution(Output.of(resolution));
        }

        public Builder timeRange(Output<String> timeRange) {
            $.timeRange = timeRange;
            return this;
        }

        public Builder timeRange(String timeRange) {
            return timeRange(Output.of(timeRange));
        }

        public MonitorTriggerConditionsLogsStaticConditionWarningArgs build() {
            $.alert = Objects.requireNonNull($.alert, "expected parameter 'alert' to be non-null");
            $.resolution = Objects.requireNonNull($.resolution, "expected parameter 'resolution' to be non-null");
            $.timeRange = Objects.requireNonNull($.timeRange, "expected parameter 'timeRange' to be non-null");
            return $;
        }
    }

}
