// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditionsLogsOutlierConditionCritical {
    private @Nullable Integer consecutive;
    private @Nullable Double threshold;
    private @Nullable Integer window;

    private MonitorTriggerConditionsLogsOutlierConditionCritical() {}
    public Optional<Integer> consecutive() {
        return Optional.ofNullable(this.consecutive);
    }
    public Optional<Double> threshold() {
        return Optional.ofNullable(this.threshold);
    }
    public Optional<Integer> window() {
        return Optional.ofNullable(this.window);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditionsLogsOutlierConditionCritical defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer consecutive;
        private @Nullable Double threshold;
        private @Nullable Integer window;
        public Builder() {}
        public Builder(MonitorTriggerConditionsLogsOutlierConditionCritical defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consecutive = defaults.consecutive;
    	      this.threshold = defaults.threshold;
    	      this.window = defaults.window;
        }

        @CustomType.Setter
        public Builder consecutive(@Nullable Integer consecutive) {
            this.consecutive = consecutive;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(@Nullable Double threshold) {
            this.threshold = threshold;
            return this;
        }
        @CustomType.Setter
        public Builder window(@Nullable Integer window) {
            this.window = window;
            return this;
        }
        public MonitorTriggerConditionsLogsOutlierConditionCritical build() {
            final var o = new MonitorTriggerConditionsLogsOutlierConditionCritical();
            o.consecutive = consecutive;
            o.threshold = threshold;
            o.window = window;
            return o;
        }
    }
}
