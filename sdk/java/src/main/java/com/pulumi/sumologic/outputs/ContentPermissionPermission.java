// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ContentPermissionPermission {
    /**
     * @return Content permission name. Valid values are `View`, `GrantView`,
     * `Edit`, `GrantEdit`, `Manage`, and `GrantManage`. You can read more about permission levels
     * [here](https://help.sumologic.com/Manage/Content_Sharing/Share-Content#available-permission-levels).
     * 
     */
    private String permissionName;
    /**
     * @return An identifier that belongs to the source type chosen above. For example,
     * if the `sourceType` is set to `user`, `sourceId` should be identifier of the user you want to share
     * content with (same goes for role and org source type).
     * 
     */
    private String sourceId;
    /**
     * @return Type of source for the permission. Valid values are `user`, `role`,
     * and `org`.
     * 
     */
    private String sourceType;

    private ContentPermissionPermission() {}
    /**
     * @return Content permission name. Valid values are `View`, `GrantView`,
     * `Edit`, `GrantEdit`, `Manage`, and `GrantManage`. You can read more about permission levels
     * [here](https://help.sumologic.com/Manage/Content_Sharing/Share-Content#available-permission-levels).
     * 
     */
    public String permissionName() {
        return this.permissionName;
    }
    /**
     * @return An identifier that belongs to the source type chosen above. For example,
     * if the `sourceType` is set to `user`, `sourceId` should be identifier of the user you want to share
     * content with (same goes for role and org source type).
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }
    /**
     * @return Type of source for the permission. Valid values are `user`, `role`,
     * and `org`.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentPermissionPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String permissionName;
        private String sourceId;
        private String sourceType;
        public Builder() {}
        public Builder(ContentPermissionPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.permissionName = defaults.permissionName;
    	      this.sourceId = defaults.sourceId;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder permissionName(String permissionName) {
            this.permissionName = Objects.requireNonNull(permissionName);
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            this.sourceId = Objects.requireNonNull(sourceId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public ContentPermissionPermission build() {
            final var o = new ContentPermissionPermission();
            o.permissionName = permissionName;
            o.sourceId = sourceId;
            o.sourceType = sourceType;
            return o;
        }
    }
}
