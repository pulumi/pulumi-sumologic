// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PollingSourceAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PollingSourceAuthenticationArgs Empty = new PollingSourceAuthenticationArgs();

    /**
     * Your AWS access key if using type `S3BucketAuthentication`
     * 
     */
    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    /**
     * @return Your AWS access key if using type `S3BucketAuthentication`
     * 
     */
    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    /**
     * Your AWS role ARN if using type `AWSRoleBasedAuthentication`
     * 
     */
    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    /**
     * @return Your AWS role ARN if using type `AWSRoleBasedAuthentication`
     * 
     */
    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    /**
     * Your AWS secret key if using type `S3BucketAuthentication`
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return Your AWS secret key if using type `S3BucketAuthentication`
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * This value has to be set to `TagFilters`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return This value has to be set to `TagFilters`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PollingSourceAuthenticationArgs() {}

    private PollingSourceAuthenticationArgs(PollingSourceAuthenticationArgs $) {
        this.accessKey = $.accessKey;
        this.roleArn = $.roleArn;
        this.secretKey = $.secretKey;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PollingSourceAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PollingSourceAuthenticationArgs $;

        public Builder() {
            $ = new PollingSourceAuthenticationArgs();
        }

        public Builder(PollingSourceAuthenticationArgs defaults) {
            $ = new PollingSourceAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey Your AWS access key if using type `S3BucketAuthentication`
         * 
         * @return builder
         * 
         */
        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey Your AWS access key if using type `S3BucketAuthentication`
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param roleArn Your AWS role ARN if using type `AWSRoleBasedAuthentication`
         * 
         * @return builder
         * 
         */
        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        /**
         * @param roleArn Your AWS role ARN if using type `AWSRoleBasedAuthentication`
         * 
         * @return builder
         * 
         */
        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        /**
         * @param secretKey Your AWS secret key if using type `S3BucketAuthentication`
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey Your AWS secret key if using type `S3BucketAuthentication`
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param type This value has to be set to `TagFilters`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type This value has to be set to `TagFilters`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PollingSourceAuthenticationArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
