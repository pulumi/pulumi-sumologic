// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CloudfrontSourceAuthentication {
    /**
     * @return Your AWS access key if using type `S3BucketAuthentication`
     * 
     */
    private @Nullable String accessKey;
    private @Nullable String authProviderX509CertUrl;
    private @Nullable String authUri;
    private @Nullable String clientEmail;
    private @Nullable String clientId;
    private @Nullable String clientX509CertUrl;
    private @Nullable String privateKey;
    private @Nullable String privateKeyId;
    private @Nullable String projectId;
    /**
     * @return Your AWS Bucket region.
     * 
     */
    private @Nullable String region;
    /**
     * @return Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     * 
     */
    private @Nullable String roleArn;
    /**
     * @return Your AWS secret key if using type `S3BucketAuthentication`
     * 
     */
    private @Nullable String secretKey;
    private @Nullable String tokenUri;
    /**
     * @return type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
     * 
     */
    private String type;

    private CloudfrontSourceAuthentication() {}
    /**
     * @return Your AWS access key if using type `S3BucketAuthentication`
     * 
     */
    public Optional<String> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }
    public Optional<String> authProviderX509CertUrl() {
        return Optional.ofNullable(this.authProviderX509CertUrl);
    }
    public Optional<String> authUri() {
        return Optional.ofNullable(this.authUri);
    }
    public Optional<String> clientEmail() {
        return Optional.ofNullable(this.clientEmail);
    }
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    public Optional<String> clientX509CertUrl() {
        return Optional.ofNullable(this.clientX509CertUrl);
    }
    public Optional<String> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }
    public Optional<String> privateKeyId() {
        return Optional.ofNullable(this.privateKeyId);
    }
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Your AWS Bucket region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return Your AWS role ARN if using type `AWSRoleBasedAuthentication`. This is not supported for AWS China regions.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    /**
     * @return Your AWS secret key if using type `S3BucketAuthentication`
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }
    public Optional<String> tokenUri() {
        return Optional.ofNullable(this.tokenUri);
    }
    /**
     * @return type of polling source. This has to be `S3BucketPathExpression` for `CloudFront` source.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudfrontSourceAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKey;
        private @Nullable String authProviderX509CertUrl;
        private @Nullable String authUri;
        private @Nullable String clientEmail;
        private @Nullable String clientId;
        private @Nullable String clientX509CertUrl;
        private @Nullable String privateKey;
        private @Nullable String privateKeyId;
        private @Nullable String projectId;
        private @Nullable String region;
        private @Nullable String roleArn;
        private @Nullable String secretKey;
        private @Nullable String tokenUri;
        private String type;
        public Builder() {}
        public Builder(CloudfrontSourceAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.authProviderX509CertUrl = defaults.authProviderX509CertUrl;
    	      this.authUri = defaults.authUri;
    	      this.clientEmail = defaults.clientEmail;
    	      this.clientId = defaults.clientId;
    	      this.clientX509CertUrl = defaults.clientX509CertUrl;
    	      this.privateKey = defaults.privateKey;
    	      this.privateKeyId = defaults.privateKeyId;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.roleArn = defaults.roleArn;
    	      this.secretKey = defaults.secretKey;
    	      this.tokenUri = defaults.tokenUri;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessKey(@Nullable String accessKey) {
            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder authProviderX509CertUrl(@Nullable String authProviderX509CertUrl) {
            this.authProviderX509CertUrl = authProviderX509CertUrl;
            return this;
        }
        @CustomType.Setter
        public Builder authUri(@Nullable String authUri) {
            this.authUri = authUri;
            return this;
        }
        @CustomType.Setter
        public Builder clientEmail(@Nullable String clientEmail) {
            this.clientEmail = clientEmail;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientX509CertUrl(@Nullable String clientX509CertUrl) {
            this.clientX509CertUrl = clientX509CertUrl;
            return this;
        }
        @CustomType.Setter
        public Builder privateKey(@Nullable String privateKey) {
            this.privateKey = privateKey;
            return this;
        }
        @CustomType.Setter
        public Builder privateKeyId(@Nullable String privateKeyId) {
            this.privateKeyId = privateKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {
            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder tokenUri(@Nullable String tokenUri) {
            this.tokenUri = tokenUri;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public CloudfrontSourceAuthentication build() {
            final var o = new CloudfrontSourceAuthentication();
            o.accessKey = accessKey;
            o.authProviderX509CertUrl = authProviderX509CertUrl;
            o.authUri = authUri;
            o.clientEmail = clientEmail;
            o.clientId = clientId;
            o.clientX509CertUrl = clientX509CertUrl;
            o.privateKey = privateKey;
            o.privateKeyId = privateKeyId;
            o.projectId = projectId;
            o.region = region;
            o.roleArn = roleArn;
            o.secretKey = secretKey;
            o.tokenUri = tokenUri;
            o.type = type;
            return o;
        }
    }
}
