// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.UserArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.UserState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a [Sumologic User](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Users).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.Role;
 * import com.pulumi.sumologic.RoleArgs;
 * import com.pulumi.sumologic.User;
 * import com.pulumi.sumologic.UserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleRole = new Role(&#34;exampleRole&#34;, RoleArgs.builder()        
 *             .description(&#34;Testing resource sumologic_role&#34;)
 *             .build());
 * 
 *         var exampleUser1 = new User(&#34;exampleUser1&#34;, UserArgs.builder()        
 *             .firstName(&#34;Jon&#34;)
 *             .lastName(&#34;Doe&#34;)
 *             .email(&#34;jon.doe@gmail.com&#34;)
 *             .isActive(true)
 *             .roleIds(exampleRole.id())
 *             .transferTo(&#34;&#34;)
 *             .build());
 * 
 *         var exampleUser2 = new User(&#34;exampleUser2&#34;, UserArgs.builder()        
 *             .firstName(&#34;Jane&#34;)
 *             .lastName(&#34;Smith&#34;)
 *             .email(&#34;jane.smith@gmail.com&#34;)
 *             .roleIds(exampleRole.id())
 *             .transferTo(exampleUser1.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Users can be imported using the user id, e.g.hcl
 * 
 * ```sh
 *  $ pulumi import sumologic:index/user:User user 1234567890
 * ```
 * 
 *  [1]https://help.sumologic.com/Manage/Users-and-Roles/Manage-Users
 * 
 */
@ResourceType(type="sumologic:index/user:User")
public class User extends com.pulumi.resources.CustomResource {
    /**
     * Email of the user.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output<String> email;

    /**
     * @return Email of the user.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * First name of the user.
     * 
     */
    @Export(name="firstName", type=String.class, parameters={})
    private Output<String> firstName;

    /**
     * @return First name of the user.
     * 
     */
    public Output<String> firstName() {
        return this.firstName;
    }
    /**
     * This has the value true if the user is active and false if they have been deactivated.
     * 
     */
    @Export(name="isActive", type=Boolean.class, parameters={})
    private Output<Boolean> isActive;

    /**
     * @return This has the value true if the user is active and false if they have been deactivated.
     * 
     */
    public Output<Boolean> isActive() {
        return this.isActive;
    }
    /**
     * Last name of the user.
     * 
     */
    @Export(name="lastName", type=String.class, parameters={})
    private Output<String> lastName;

    /**
     * @return Last name of the user.
     * 
     */
    public Output<String> lastName() {
        return this.lastName;
    }
    /**
     * List of roleIds associated with the user.
     * 
     */
    @Export(name="roleIds", type=List.class, parameters={String.class})
    private Output<List<String>> roleIds;

    /**
     * @return List of roleIds associated with the user.
     * 
     */
    public Output<List<String>> roleIds() {
        return this.roleIds;
    }
    /**
     * UserId of user to transfer this user&#39;s content to on deletion, can be empty. Must be applied prior to deletion to take effect.
     * 
     */
    @Export(name="transferTo", type=String.class, parameters={})
    private Output<String> transferTo;

    /**
     * @return UserId of user to transfer this user&#39;s content to on deletion, can be empty. Must be applied prior to deletion to take effect.
     * 
     */
    public Output<String> transferTo() {
        return this.transferTo;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public User(String name) {
        this(name, UserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public User(String name, UserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public User(String name, UserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/user:User", name, args == null ? UserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private User(String name, Output<String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/user:User", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static User get(String name, Output<String> id, @Nullable UserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new User(name, id, state, options);
    }
}
