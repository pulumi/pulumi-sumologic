// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CseLogMappingStructuredInput {
    private String eventIdPattern;
    private String logFormat;
    private String product;
    private String vendor;

    private CseLogMappingStructuredInput() {}
    public String eventIdPattern() {
        return this.eventIdPattern;
    }
    public String logFormat() {
        return this.logFormat;
    }
    public String product() {
        return this.product;
    }
    public String vendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CseLogMappingStructuredInput defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String eventIdPattern;
        private String logFormat;
        private String product;
        private String vendor;
        public Builder() {}
        public Builder(CseLogMappingStructuredInput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventIdPattern = defaults.eventIdPattern;
    	      this.logFormat = defaults.logFormat;
    	      this.product = defaults.product;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder eventIdPattern(String eventIdPattern) {
            if (eventIdPattern == null) {
              throw new MissingRequiredPropertyException("CseLogMappingStructuredInput", "eventIdPattern");
            }
            this.eventIdPattern = eventIdPattern;
            return this;
        }
        @CustomType.Setter
        public Builder logFormat(String logFormat) {
            if (logFormat == null) {
              throw new MissingRequiredPropertyException("CseLogMappingStructuredInput", "logFormat");
            }
            this.logFormat = logFormat;
            return this;
        }
        @CustomType.Setter
        public Builder product(String product) {
            if (product == null) {
              throw new MissingRequiredPropertyException("CseLogMappingStructuredInput", "product");
            }
            this.product = product;
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            if (vendor == null) {
              throw new MissingRequiredPropertyException("CseLogMappingStructuredInput", "vendor");
            }
            this.vendor = vendor;
            return this;
        }
        public CseLogMappingStructuredInput build() {
            final var _resultValue = new CseLogMappingStructuredInput();
            _resultValue.eventIdPattern = eventIdPattern;
            _resultValue.logFormat = logFormat;
            _resultValue.product = product;
            _resultValue.vendor = vendor;
            return _resultValue;
        }
    }
}
