// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs Empty = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs();

    /**
     * Time as a number of milliseconds since the epoch.
     * 
     */
    @Import(name="epochMillis", required=true)
    private Output<Integer> epochMillis;

    /**
     * @return Time as a number of milliseconds since the epoch.
     * 
     */
    public Output<Integer> epochMillis() {
        return this.epochMillis;
    }

    private MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs() {}

    private MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs(MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs $) {
        this.epochMillis = $.epochMillis;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs $;

        public Builder() {
            $ = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs();
        }

        public Builder(MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs defaults) {
            $ = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param epochMillis Time as a number of milliseconds since the epoch.
         * 
         * @return builder
         * 
         */
        public Builder epochMillis(Output<Integer> epochMillis) {
            $.epochMillis = epochMillis;
            return this;
        }

        /**
         * @param epochMillis Time as a number of milliseconds since the epoch.
         * 
         * @return builder
         * 
         */
        public Builder epochMillis(Integer epochMillis) {
            return epochMillis(Output.of(epochMillis));
        }

        public MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs build() {
            if ($.epochMillis == null) {
                throw new MissingRequiredPropertyException("MetricsSearchV2TimeRangeBeginBoundedTimeRangeToEpochTimeRangeArgs", "epochMillis");
            }
            return $;
        }
    }

}
