// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.PartitionArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.PartitionState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a [Sumologic Partition](https://help.sumologic.com/docs/manage/partitions/data-tiers/).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.Partition;
 * import com.pulumi.sumologic.PartitionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var examplePartition = new Partition("examplePartition", PartitionArgs.builder()
 *             .name("examplePartition")
 *             .routingExpression("_sourcecategory=*}&#47;{@code IAC")
 *             .analyticsTier("continuous")
 *             .isCompliant(false)
 *             .isIncludedInDefaultSearch(true)
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Attributes reference
 * 
 * The following attributes are exported:
 * 
 * - `id` - Unique identifier for the partition.
 * 
 * ## Import
 * 
 * Partitions can can be imported using the id. The list of partitions and their ids can be obtained using the Sumologic [partions api][2].
 * 
 * hcl
 * 
 * ```sh
 * $ pulumi import sumologic:index/partition:Partition partition 1234567890
 * ```
 * 
 * [1]: https://help.sumologic.com/docs/manage/partitions/data-tiers/
 * 
 * [2]: https://api.sumologic.com/docs/#operation/listPartitions
 * 
 */
@ResourceType(type="sumologic:index/partition:Partition")
public class Partition extends com.pulumi.resources.CustomResource {
    @Export(name="analyticsTier", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> analyticsTier;

    public Output<Optional<String>> analyticsTier() {
        return Codegen.optional(this.analyticsTier);
    }
    @Export(name="dataForwardingId", refs={String.class}, tree="[0]")
    private Output<String> dataForwardingId;

    public Output<String> dataForwardingId() {
        return this.dataForwardingId;
    }
    @Export(name="indexType", refs={String.class}, tree="[0]")
    private Output<String> indexType;

    public Output<String> indexType() {
        return this.indexType;
    }
    @Export(name="isActive", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isActive;

    public Output<Boolean> isActive() {
        return this.isActive;
    }
    /**
     * Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later.
     * 
     */
    @Export(name="isCompliant", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isCompliant;

    /**
     * @return Whether the partition is compliant or not. Mark a partition as compliant if it contains data used for compliance or audit purpose. Retention for a compliant partition can only be increased and cannot be reduced after the partition is marked compliant. A partition once marked compliant, cannot be marked non-compliant later.
     * 
     */
    public Output<Optional<Boolean>> isCompliant() {
        return Codegen.optional(this.isCompliant);
    }
    /**
     * Indicates whether the partition is included in the default search scope. When executing a query such as &#34;error | count,&#34; certain partitions are automatically part of the search scope. However, for specific partitions, the user must explicitly mention the partition using the _index term, as in &#34;_index=webApp error | count&#34;. This property governs the default inclusion of the partition in the search scope. Configuring this property is exclusively permitted for flex partitions.
     * 
     */
    @Export(name="isIncludedInDefaultSearch", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isIncludedInDefaultSearch;

    /**
     * @return Indicates whether the partition is included in the default search scope. When executing a query such as &#34;error | count,&#34; certain partitions are automatically part of the search scope. However, for specific partitions, the user must explicitly mention the partition using the _index term, as in &#34;_index=webApp error | count&#34;. This property governs the default inclusion of the partition in the search scope. Configuring this property is exclusively permitted for flex partitions.
     * 
     */
    public Output<Optional<Boolean>> isIncludedInDefaultSearch() {
        return Codegen.optional(this.isIncludedInDefaultSearch);
    }
    /**
     * The name of the partition.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the partition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
     * 
     */
    @Export(name="reduceRetentionPeriodImmediately", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> reduceRetentionPeriodImmediately;

    /**
     * @return This is required on update if the newly specified retention period is less than the existing retention period. In such a situation, a value of true says that data between the existing retention period and the new retention period should be deleted immediately; if false, such data will be deleted after seven days. This property is optional and ignored if the specified retentionPeriod is greater than or equal to the current retention period.
     * 
     */
    public Output<Optional<Boolean>> reduceRetentionPeriodImmediately() {
        return Codegen.optional(this.reduceRetentionPeriodImmediately);
    }
    /**
     * The number of days to retain data in the partition, or -1 to use the default value for your account. Only relevant if your account has variable retention enabled.
     * 
     */
    @Export(name="retentionPeriod", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retentionPeriod;

    /**
     * @return The number of days to retain data in the partition, or -1 to use the default value for your account. Only relevant if your account has variable retention enabled.
     * 
     */
    public Output<Optional<Integer>> retentionPeriod() {
        return Codegen.optional(this.retentionPeriod);
    }
    /**
     * The query that defines the data to be included in the partition.
     * 
     */
    @Export(name="routingExpression", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routingExpression;

    /**
     * @return The query that defines the data to be included in the partition.
     * 
     */
    public Output<Optional<String>> routingExpression() {
        return Codegen.optional(this.routingExpression);
    }
    @Export(name="totalBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalBytes;

    public Output<Integer> totalBytes() {
        return this.totalBytes;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Partition(java.lang.String name) {
        this(name, PartitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Partition(java.lang.String name, @Nullable PartitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Partition(java.lang.String name, @Nullable PartitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/partition:Partition", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Partition(java.lang.String name, Output<java.lang.String> id, @Nullable PartitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/partition:Partition", name, state, makeResourceOptions(options, id), false);
    }

    private static PartitionArgs makeArgs(@Nullable PartitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PartitionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Partition get(java.lang.String name, Output<java.lang.String> id, @Nullable PartitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Partition(name, id, state, options);
    }
}
