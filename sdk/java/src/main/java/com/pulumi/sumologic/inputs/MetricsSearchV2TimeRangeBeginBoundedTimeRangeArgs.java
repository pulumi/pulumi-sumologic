// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.inputs.MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs;
import com.pulumi.sumologic.inputs.MetricsSearchV2TimeRangeBeginBoundedTimeRangeToArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs Empty = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs();

    /**
     * Start boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    @Import(name="from", required=true)
    private Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs> from;

    /**
     * @return Start boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    public Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs> from() {
        return this.from;
    }

    /**
     * End boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    @Import(name="to")
    private @Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeToArgs> to;

    /**
     * @return End boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    public Optional<Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeToArgs>> to() {
        return Optional.ofNullable(this.to);
    }

    private MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs() {}

    private MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs(MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs $) {
        this.from = $.from;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs $;

        public Builder() {
            $ = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs();
        }

        public Builder(MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs defaults) {
            $ = new MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param from Start boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder from(Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs> from) {
            $.from = from;
            return this;
        }

        /**
         * @param from Start boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder from(MetricsSearchV2TimeRangeBeginBoundedTimeRangeFromArgs from) {
            return from(Output.of(from));
        }

        /**
         * @param to End boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder to(@Nullable Output<MetricsSearchV2TimeRangeBeginBoundedTimeRangeToArgs> to) {
            $.to = to;
            return this;
        }

        /**
         * @param to End boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder to(MetricsSearchV2TimeRangeBeginBoundedTimeRangeToArgs to) {
            return to(Output.of(to));
        }

        public MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs build() {
            if ($.from == null) {
                throw new MissingRequiredPropertyException("MetricsSearchV2TimeRangeBeginBoundedTimeRangeArgs", "from");
            }
            return $;
        }
    }

}
