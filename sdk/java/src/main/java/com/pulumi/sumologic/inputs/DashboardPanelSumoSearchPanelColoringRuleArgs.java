// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardPanelSumoSearchPanelColoringRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardPanelSumoSearchPanelColoringRuleArgs Empty = new DashboardPanelSumoSearchPanelColoringRuleArgs();

    @Import(name="colorThresholds")
    private @Nullable Output<List<DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs>> colorThresholds;

    public Optional<Output<List<DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs>>> colorThresholds() {
        return Optional.ofNullable(this.colorThresholds);
    }

    @Import(name="multipleSeriesAggregateFunction", required=true)
    private Output<String> multipleSeriesAggregateFunction;

    public Output<String> multipleSeriesAggregateFunction() {
        return this.multipleSeriesAggregateFunction;
    }

    @Import(name="scope", required=true)
    private Output<String> scope;

    public Output<String> scope() {
        return this.scope;
    }

    @Import(name="singleSeriesAggregateFunction", required=true)
    private Output<String> singleSeriesAggregateFunction;

    public Output<String> singleSeriesAggregateFunction() {
        return this.singleSeriesAggregateFunction;
    }

    private DashboardPanelSumoSearchPanelColoringRuleArgs() {}

    private DashboardPanelSumoSearchPanelColoringRuleArgs(DashboardPanelSumoSearchPanelColoringRuleArgs $) {
        this.colorThresholds = $.colorThresholds;
        this.multipleSeriesAggregateFunction = $.multipleSeriesAggregateFunction;
        this.scope = $.scope;
        this.singleSeriesAggregateFunction = $.singleSeriesAggregateFunction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardPanelSumoSearchPanelColoringRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardPanelSumoSearchPanelColoringRuleArgs $;

        public Builder() {
            $ = new DashboardPanelSumoSearchPanelColoringRuleArgs();
        }

        public Builder(DashboardPanelSumoSearchPanelColoringRuleArgs defaults) {
            $ = new DashboardPanelSumoSearchPanelColoringRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder colorThresholds(@Nullable Output<List<DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs>> colorThresholds) {
            $.colorThresholds = colorThresholds;
            return this;
        }

        public Builder colorThresholds(List<DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs> colorThresholds) {
            return colorThresholds(Output.of(colorThresholds));
        }

        public Builder colorThresholds(DashboardPanelSumoSearchPanelColoringRuleColorThresholdArgs... colorThresholds) {
            return colorThresholds(List.of(colorThresholds));
        }

        public Builder multipleSeriesAggregateFunction(Output<String> multipleSeriesAggregateFunction) {
            $.multipleSeriesAggregateFunction = multipleSeriesAggregateFunction;
            return this;
        }

        public Builder multipleSeriesAggregateFunction(String multipleSeriesAggregateFunction) {
            return multipleSeriesAggregateFunction(Output.of(multipleSeriesAggregateFunction));
        }

        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public Builder singleSeriesAggregateFunction(Output<String> singleSeriesAggregateFunction) {
            $.singleSeriesAggregateFunction = singleSeriesAggregateFunction;
            return this;
        }

        public Builder singleSeriesAggregateFunction(String singleSeriesAggregateFunction) {
            return singleSeriesAggregateFunction(Output.of(singleSeriesAggregateFunction));
        }

        public DashboardPanelSumoSearchPanelColoringRuleArgs build() {
            $.multipleSeriesAggregateFunction = Objects.requireNonNull($.multipleSeriesAggregateFunction, "expected parameter 'multipleSeriesAggregateFunction' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            $.singleSeriesAggregateFunction = Objects.requireNonNull($.singleSeriesAggregateFunction, "expected parameter 'singleSeriesAggregateFunction' to be non-null");
            return $;
        }
    }

}
