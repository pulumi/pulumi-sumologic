// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceTemplateSchemaRefArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceTemplateSchemaRefArgs Empty = new SourceTemplateSchemaRefArgs();

    @Import(name="latestVersion")
    private @Nullable Output<String> latestVersion;

    public Optional<Output<String>> latestVersion() {
        return Optional.ofNullable(this.latestVersion);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="version")
    private @Nullable Output<String> version;

    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private SourceTemplateSchemaRefArgs() {}

    private SourceTemplateSchemaRefArgs(SourceTemplateSchemaRefArgs $) {
        this.latestVersion = $.latestVersion;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceTemplateSchemaRefArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceTemplateSchemaRefArgs $;

        public Builder() {
            $ = new SourceTemplateSchemaRefArgs();
        }

        public Builder(SourceTemplateSchemaRefArgs defaults) {
            $ = new SourceTemplateSchemaRefArgs(Objects.requireNonNull(defaults));
        }

        public Builder latestVersion(@Nullable Output<String> latestVersion) {
            $.latestVersion = latestVersion;
            return this;
        }

        public Builder latestVersion(String latestVersion) {
            return latestVersion(Output.of(latestVersion));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public SourceTemplateSchemaRefArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("SourceTemplateSchemaRefArgs", "type");
            }
            return $;
        }
    }

}
