// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.GcpMetricsSourcePathCustomService;
import com.pulumi.sumologic.outputs.GcpMetricsSourcePathSnsTopicOrSubscriptionArn;
import com.pulumi.sumologic.outputs.GcpMetricsSourcePathTagFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GcpMetricsSourcePath {
    private @Nullable String bucketName;
    /**
     * @return Sumoloigc provides list of services that can be used in limit_to_services for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
     * 
     */
    private @Nullable List<GcpMetricsSourcePathCustomService> customServices;
    private @Nullable List<String> limitToNamespaces;
    /**
     * @return List of regions for which metrics would be collected (Empty to collect from all regions)
     * 
     */
    private @Nullable List<String> limitToRegions;
    /**
     * @return List of services from which metrics would be collected
     * 
     */
    private @Nullable List<String> limitToServices;
    private @Nullable String pathExpression;
    private @Nullable List<GcpMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns;
    private @Nullable List<GcpMetricsSourcePathTagFilter> tagFilters;
    /**
     * @return Type of polling source. This has to be `GcpMetricsPath`.
     * 
     */
    private String type;
    private @Nullable Boolean useVersionedApi;

    private GcpMetricsSourcePath() {}
    public Optional<String> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    /**
     * @return Sumoloigc provides list of services that can be used in limit_to_services for which metrics would be collected. Custom Services allow you to define your own service w.r.t. metric collection. You can provide list of metric prefixes that should be collected as part of the custom service. This provides fine-grain control w.r.t. what all metrics are ingested by sumologic.
     * 
     */
    public List<GcpMetricsSourcePathCustomService> customServices() {
        return this.customServices == null ? List.of() : this.customServices;
    }
    public List<String> limitToNamespaces() {
        return this.limitToNamespaces == null ? List.of() : this.limitToNamespaces;
    }
    /**
     * @return List of regions for which metrics would be collected (Empty to collect from all regions)
     * 
     */
    public List<String> limitToRegions() {
        return this.limitToRegions == null ? List.of() : this.limitToRegions;
    }
    /**
     * @return List of services from which metrics would be collected
     * 
     */
    public List<String> limitToServices() {
        return this.limitToServices == null ? List.of() : this.limitToServices;
    }
    public Optional<String> pathExpression() {
        return Optional.ofNullable(this.pathExpression);
    }
    public List<GcpMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns() {
        return this.snsTopicOrSubscriptionArns == null ? List.of() : this.snsTopicOrSubscriptionArns;
    }
    public List<GcpMetricsSourcePathTagFilter> tagFilters() {
        return this.tagFilters == null ? List.of() : this.tagFilters;
    }
    /**
     * @return Type of polling source. This has to be `GcpMetricsPath`.
     * 
     */
    public String type() {
        return this.type;
    }
    public Optional<Boolean> useVersionedApi() {
        return Optional.ofNullable(this.useVersionedApi);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GcpMetricsSourcePath defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucketName;
        private @Nullable List<GcpMetricsSourcePathCustomService> customServices;
        private @Nullable List<String> limitToNamespaces;
        private @Nullable List<String> limitToRegions;
        private @Nullable List<String> limitToServices;
        private @Nullable String pathExpression;
        private @Nullable List<GcpMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns;
        private @Nullable List<GcpMetricsSourcePathTagFilter> tagFilters;
        private String type;
        private @Nullable Boolean useVersionedApi;
        public Builder() {}
        public Builder(GcpMetricsSourcePath defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.customServices = defaults.customServices;
    	      this.limitToNamespaces = defaults.limitToNamespaces;
    	      this.limitToRegions = defaults.limitToRegions;
    	      this.limitToServices = defaults.limitToServices;
    	      this.pathExpression = defaults.pathExpression;
    	      this.snsTopicOrSubscriptionArns = defaults.snsTopicOrSubscriptionArns;
    	      this.tagFilters = defaults.tagFilters;
    	      this.type = defaults.type;
    	      this.useVersionedApi = defaults.useVersionedApi;
        }

        @CustomType.Setter
        public Builder bucketName(@Nullable String bucketName) {
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder customServices(@Nullable List<GcpMetricsSourcePathCustomService> customServices) {
            this.customServices = customServices;
            return this;
        }
        public Builder customServices(GcpMetricsSourcePathCustomService... customServices) {
            return customServices(List.of(customServices));
        }
        @CustomType.Setter
        public Builder limitToNamespaces(@Nullable List<String> limitToNamespaces) {
            this.limitToNamespaces = limitToNamespaces;
            return this;
        }
        public Builder limitToNamespaces(String... limitToNamespaces) {
            return limitToNamespaces(List.of(limitToNamespaces));
        }
        @CustomType.Setter
        public Builder limitToRegions(@Nullable List<String> limitToRegions) {
            this.limitToRegions = limitToRegions;
            return this;
        }
        public Builder limitToRegions(String... limitToRegions) {
            return limitToRegions(List.of(limitToRegions));
        }
        @CustomType.Setter
        public Builder limitToServices(@Nullable List<String> limitToServices) {
            this.limitToServices = limitToServices;
            return this;
        }
        public Builder limitToServices(String... limitToServices) {
            return limitToServices(List.of(limitToServices));
        }
        @CustomType.Setter
        public Builder pathExpression(@Nullable String pathExpression) {
            this.pathExpression = pathExpression;
            return this;
        }
        @CustomType.Setter
        public Builder snsTopicOrSubscriptionArns(@Nullable List<GcpMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns) {
            this.snsTopicOrSubscriptionArns = snsTopicOrSubscriptionArns;
            return this;
        }
        public Builder snsTopicOrSubscriptionArns(GcpMetricsSourcePathSnsTopicOrSubscriptionArn... snsTopicOrSubscriptionArns) {
            return snsTopicOrSubscriptionArns(List.of(snsTopicOrSubscriptionArns));
        }
        @CustomType.Setter
        public Builder tagFilters(@Nullable List<GcpMetricsSourcePathTagFilter> tagFilters) {
            this.tagFilters = tagFilters;
            return this;
        }
        public Builder tagFilters(GcpMetricsSourcePathTagFilter... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder useVersionedApi(@Nullable Boolean useVersionedApi) {
            this.useVersionedApi = useVersionedApi;
            return this;
        }
        public GcpMetricsSourcePath build() {
            final var o = new GcpMetricsSourcePath();
            o.bucketName = bucketName;
            o.customServices = customServices;
            o.limitToNamespaces = limitToNamespaces;
            o.limitToRegions = limitToRegions;
            o.limitToServices = limitToServices;
            o.pathExpression = pathExpression;
            o.snsTopicOrSubscriptionArns = snsTopicOrSubscriptionArns;
            o.tagFilters = tagFilters;
            o.type = type;
            o.useVersionedApi = useVersionedApi;
            return o;
        }
    }
}
