// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditionsMetricsAnomalyConditionCritical {
    private @Nullable Integer minAnomalyCount;
    private @Nullable Double sensitivity;
    private String timeRange;

    private MonitorTriggerConditionsMetricsAnomalyConditionCritical() {}
    public Optional<Integer> minAnomalyCount() {
        return Optional.ofNullable(this.minAnomalyCount);
    }
    public Optional<Double> sensitivity() {
        return Optional.ofNullable(this.sensitivity);
    }
    public String timeRange() {
        return this.timeRange;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditionsMetricsAnomalyConditionCritical defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer minAnomalyCount;
        private @Nullable Double sensitivity;
        private String timeRange;
        public Builder() {}
        public Builder(MonitorTriggerConditionsMetricsAnomalyConditionCritical defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minAnomalyCount = defaults.minAnomalyCount;
    	      this.sensitivity = defaults.sensitivity;
    	      this.timeRange = defaults.timeRange;
        }

        @CustomType.Setter
        public Builder minAnomalyCount(@Nullable Integer minAnomalyCount) {

            this.minAnomalyCount = minAnomalyCount;
            return this;
        }
        @CustomType.Setter
        public Builder sensitivity(@Nullable Double sensitivity) {

            this.sensitivity = sensitivity;
            return this;
        }
        @CustomType.Setter
        public Builder timeRange(String timeRange) {
            if (timeRange == null) {
              throw new MissingRequiredPropertyException("MonitorTriggerConditionsMetricsAnomalyConditionCritical", "timeRange");
            }
            this.timeRange = timeRange;
            return this;
        }
        public MonitorTriggerConditionsMetricsAnomalyConditionCritical build() {
            final var _resultValue = new MonitorTriggerConditionsMetricsAnomalyConditionCritical();
            _resultValue.minAnomalyCount = minAnomalyCount;
            _resultValue.sensitivity = sensitivity;
            _resultValue.timeRange = timeRange;
            return _resultValue;
        }
    }
}
