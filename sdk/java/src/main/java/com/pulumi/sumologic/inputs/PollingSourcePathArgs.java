// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.PollingSourcePathTagFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PollingSourcePathArgs extends com.pulumi.resources.ResourceArgs {

    public static final PollingSourcePathArgs Empty = new PollingSourcePathArgs();

    /**
     * The name of the bucket. This is needed if using type `S3BucketPathExpression`.
     * 
     */
    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    /**
     * @return The name of the bucket. This is needed if using type `S3BucketPathExpression`.
     * 
     */
    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    /**
     * List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
     * 
     */
    @Import(name="limitToNamespaces")
    private @Nullable Output<List<String>> limitToNamespaces;

    /**
     * @return List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
     * 
     */
    public Optional<Output<List<String>>> limitToNamespaces() {
        return Optional.ofNullable(this.limitToNamespaces);
    }

    /**
     * List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
     * 
     */
    @Import(name="limitToRegions")
    private @Nullable Output<List<String>> limitToRegions;

    /**
     * @return List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
     * 
     */
    public Optional<Output<List<String>>> limitToRegions() {
        return Optional.ofNullable(this.limitToRegions);
    }

    /**
     * The path to the data. This is needed if using type `S3BucketPathExpression`.
     * 
     */
    @Import(name="pathExpression")
    private @Nullable Output<String> pathExpression;

    /**
     * @return The path to the data. This is needed if using type `S3BucketPathExpression`.
     * 
     */
    public Optional<Output<String>> pathExpression() {
        return Optional.ofNullable(this.pathExpression);
    }

    /**
     * Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
     * 
     */
    @Import(name="tagFilters")
    private @Nullable Output<List<PollingSourcePathTagFilterArgs>> tagFilters;

    /**
     * @return Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
     * 
     */
    public Optional<Output<List<PollingSourcePathTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    /**
     * This value has to be set to `TagFilters`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return This value has to be set to `TagFilters`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PollingSourcePathArgs() {}

    private PollingSourcePathArgs(PollingSourcePathArgs $) {
        this.bucketName = $.bucketName;
        this.limitToNamespaces = $.limitToNamespaces;
        this.limitToRegions = $.limitToRegions;
        this.pathExpression = $.pathExpression;
        this.tagFilters = $.tagFilters;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PollingSourcePathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PollingSourcePathArgs $;

        public Builder() {
            $ = new PollingSourcePathArgs();
        }

        public Builder(PollingSourcePathArgs defaults) {
            $ = new PollingSourcePathArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName The name of the bucket. This is needed if using type `S3BucketPathExpression`.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName The name of the bucket. This is needed if using type `S3BucketPathExpression`.
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param limitToNamespaces List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
         * 
         * @return builder
         * 
         */
        public Builder limitToNamespaces(@Nullable Output<List<String>> limitToNamespaces) {
            $.limitToNamespaces = limitToNamespaces;
            return this;
        }

        /**
         * @param limitToNamespaces List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
         * 
         * @return builder
         * 
         */
        public Builder limitToNamespaces(List<String> limitToNamespaces) {
            return limitToNamespaces(Output.of(limitToNamespaces));
        }

        /**
         * @param limitToNamespaces List of namespaces to limit metrics collection. By default all namespaces are selected. Details can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#aws%C2%A0tag-filtering-namespace-support). You can also  specify custom namespace. This is a valid parameter if using type `CloudWatchPath`.
         * 
         * @return builder
         * 
         */
        public Builder limitToNamespaces(String... limitToNamespaces) {
            return limitToNamespaces(List.of(limitToNamespaces));
        }

        /**
         * @param limitToRegions List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
         * 
         * @return builder
         * 
         */
        public Builder limitToRegions(@Nullable Output<List<String>> limitToRegions) {
            $.limitToRegions = limitToRegions;
            return this;
        }

        /**
         * @param limitToRegions List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
         * 
         * @return builder
         * 
         */
        public Builder limitToRegions(List<String> limitToRegions) {
            return limitToRegions(Output.of(limitToRegions));
        }

        /**
         * @param limitToRegions List of Amazon regions to limit metricscollection. This is a valid parameter if  using type `CloudWatchPath`.
         * 
         * @return builder
         * 
         */
        public Builder limitToRegions(String... limitToRegions) {
            return limitToRegions(List.of(limitToRegions));
        }

        /**
         * @param pathExpression The path to the data. This is needed if using type `S3BucketPathExpression`.
         * 
         * @return builder
         * 
         */
        public Builder pathExpression(@Nullable Output<String> pathExpression) {
            $.pathExpression = pathExpression;
            return this;
        }

        /**
         * @param pathExpression The path to the data. This is needed if using type `S3BucketPathExpression`.
         * 
         * @return builder
         * 
         */
        public Builder pathExpression(String pathExpression) {
            return pathExpression(Output.of(pathExpression));
        }

        /**
         * @param tagFilters Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
         * 
         * @return builder
         * 
         */
        public Builder tagFilters(@Nullable Output<List<PollingSourcePathTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        /**
         * @param tagFilters Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
         * 
         * @return builder
         * 
         */
        public Builder tagFilters(List<PollingSourcePathTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        /**
         * @param tagFilters Tag filters allow you to filter the CloudWatch metrics you collect by the AWS tags you have assigned to your AWS resources. You can define tag filters for each supported namespace. If you do not define any tag filters, all metrics will be collected for the regions and namespaces you configured for the source above. This is a valid parameter if using type `CloudWatchPath` More info on tag filters can be found [here](https://help.sumologic.com/03Send-Data/Sources/02Sources-for-Hosted-Collectors/Amazon-Web-Services/Amazon-CloudWatch-Source-for-Metrics#about-aws-tag-filtering)
         * 
         * @return builder
         * 
         */
        public Builder tagFilters(PollingSourcePathTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        /**
         * @param type This value has to be set to `TagFilters`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type This value has to be set to `TagFilters`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PollingSourcePathArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
