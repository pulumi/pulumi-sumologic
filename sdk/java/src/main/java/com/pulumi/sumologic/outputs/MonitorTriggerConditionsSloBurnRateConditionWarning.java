// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditionsSloBurnRateConditionWarning {
    private @Nullable Double burnRateThreshold;
    private @Nullable List<MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate> burnRates;
    private @Nullable String timeRange;

    private MonitorTriggerConditionsSloBurnRateConditionWarning() {}
    public Optional<Double> burnRateThreshold() {
        return Optional.ofNullable(this.burnRateThreshold);
    }
    public List<MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate> burnRates() {
        return this.burnRates == null ? List.of() : this.burnRates;
    }
    public Optional<String> timeRange() {
        return Optional.ofNullable(this.timeRange);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditionsSloBurnRateConditionWarning defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double burnRateThreshold;
        private @Nullable List<MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate> burnRates;
        private @Nullable String timeRange;
        public Builder() {}
        public Builder(MonitorTriggerConditionsSloBurnRateConditionWarning defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.burnRateThreshold = defaults.burnRateThreshold;
    	      this.burnRates = defaults.burnRates;
    	      this.timeRange = defaults.timeRange;
        }

        @CustomType.Setter
        public Builder burnRateThreshold(@Nullable Double burnRateThreshold) {

            this.burnRateThreshold = burnRateThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder burnRates(@Nullable List<MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate> burnRates) {

            this.burnRates = burnRates;
            return this;
        }
        public Builder burnRates(MonitorTriggerConditionsSloBurnRateConditionWarningBurnRate... burnRates) {
            return burnRates(List.of(burnRates));
        }
        @CustomType.Setter
        public Builder timeRange(@Nullable String timeRange) {

            this.timeRange = timeRange;
            return this;
        }
        public MonitorTriggerConditionsSloBurnRateConditionWarning build() {
            final var _resultValue = new MonitorTriggerConditionsSloBurnRateConditionWarning();
            _resultValue.burnRateThreshold = burnRateThreshold;
            _resultValue.burnRates = burnRates;
            _resultValue.timeRange = timeRange;
            return _resultValue;
        }
    }
}
