// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class MonitorObjPermission {
    /**
     * @return A Set of Permissions. Valid Permission Values:
     * - `Read`
     * - `Update`
     * - `Delete`
     * - `Manage`
     * 
     */
    private final List<String> permissions;
    /**
     * @return A Role ID or the Org ID of the account
     * 
     */
    private final String subjectId;
    /**
     * @return Valid values:
     * - `role`
     * - `org`
     * 
     */
    private final String subjectType;

    @CustomType.Constructor
    private MonitorObjPermission(
        @CustomType.Parameter("permissions") List<String> permissions,
        @CustomType.Parameter("subjectId") String subjectId,
        @CustomType.Parameter("subjectType") String subjectType) {
        this.permissions = permissions;
        this.subjectId = subjectId;
        this.subjectType = subjectType;
    }

    /**
     * @return A Set of Permissions. Valid Permission Values:
     * - `Read`
     * - `Update`
     * - `Delete`
     * - `Manage`
     * 
     */
    public List<String> permissions() {
        return this.permissions;
    }
    /**
     * @return A Role ID or the Org ID of the account
     * 
     */
    public String subjectId() {
        return this.subjectId;
    }
    /**
     * @return Valid values:
     * - `role`
     * - `org`
     * 
     */
    public String subjectType() {
        return this.subjectType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorObjPermission defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> permissions;
        private String subjectId;
        private String subjectType;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitorObjPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.permissions = defaults.permissions;
    	      this.subjectId = defaults.subjectId;
    	      this.subjectType = defaults.subjectType;
        }

        public Builder permissions(List<String> permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }
        public Builder subjectId(String subjectId) {
            this.subjectId = Objects.requireNonNull(subjectId);
            return this;
        }
        public Builder subjectType(String subjectType) {
            this.subjectType = Objects.requireNonNull(subjectType);
            return this;
        }        public MonitorObjPermission build() {
            return new MonitorObjPermission(permissions, subjectId, subjectType);
        }
    }
}
