// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs Empty = new SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs();

    @Import(name="field")
    private @Nullable Output<String> field;

    public Optional<Output<String>> field() {
        return Optional.ofNullable(this.field);
    }

    @Import(name="query", required=true)
    private Output<String> query;

    public Output<String> query() {
        return this.query;
    }

    @Import(name="rowId", required=true)
    private Output<String> rowId;

    public Output<String> rowId() {
        return this.rowId;
    }

    @Import(name="useRowCount", required=true)
    private Output<Boolean> useRowCount;

    public Output<Boolean> useRowCount() {
        return this.useRowCount;
    }

    private SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs() {}

    private SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs(SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs $) {
        this.field = $.field;
        this.query = $.query;
        this.rowId = $.rowId;
        this.useRowCount = $.useRowCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs $;

        public Builder() {
            $ = new SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs();
        }

        public Builder(SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs defaults) {
            $ = new SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs(Objects.requireNonNull(defaults));
        }

        public Builder field(@Nullable Output<String> field) {
            $.field = field;
            return this;
        }

        public Builder field(String field) {
            return field(Output.of(field));
        }

        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public Builder rowId(Output<String> rowId) {
            $.rowId = rowId;
            return this;
        }

        public Builder rowId(String rowId) {
            return rowId(Output.of(rowId));
        }

        public Builder useRowCount(Output<Boolean> useRowCount) {
            $.useRowCount = useRowCount;
            return this;
        }

        public Builder useRowCount(Boolean useRowCount) {
            return useRowCount(Output.of(useRowCount));
        }

        public SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs build() {
            if ($.query == null) {
                throw new MissingRequiredPropertyException("SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs", "query");
            }
            if ($.rowId == null) {
                throw new MissingRequiredPropertyException("SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs", "rowId");
            }
            if ($.useRowCount == null) {
                throw new MissingRequiredPropertyException("SloIndicatorWindowBasedEvaluationQueryQueryGroupArgs", "useRowCount");
            }
            return $;
        }
    }

}
