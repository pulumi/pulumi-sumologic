// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.CseCustomInsightArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.CseCustomInsightState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Sumo Logic CSE Custom Insight.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.CseCustomInsight;
 * import com.pulumi.sumologic.CseCustomInsightArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var customInsight = new CseCustomInsight(&#34;customInsight&#34;, CseCustomInsightArgs.builder()        
 *             .description(&#34;Insight description&#34;)
 *             .enabled(true)
 *             .ordered(true)
 *             .ruleIds(            
 *                 &#34;MATCH-S00001&#34;,
 *                 &#34;THRESHOLD-U00005&#34;)
 *             .severity(&#34;HIGH&#34;)
 *             .signalNames(            
 *                 &#34;Some Signal Name&#34;,
 *                 &#34;Wildcard Signal Name *&#34;)
 *             .tags(&#34;_mitreAttackTactic:TA0009&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Custom Insights can be imported using the field id, e.g.hcl
 * 
 * ```sh
 *  $ pulumi import sumologic:index/cseCustomInsight:CseCustomInsight custom_insight id
 * ```
 * 
 */
@ResourceType(type="sumologic:index/cseCustomInsight:CseCustomInsight")
public class CseCustomInsight extends com.pulumi.resources.CustomResource {
    /**
     * The description of the generated Insights
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return The description of the generated Insights
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Whether the Custom Insight should generate Insights
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output<Boolean> enabled;

    /**
     * @return Whether the Custom Insight should generate Insights
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * The name of the Custom Insight and the generated Insights
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Custom Insight and the generated Insights
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether the signals matching the rule IDs/signal names must be in the same chronological order as they are listed in the Custom Insight
     * 
     */
    @Export(name="ordered", type=Boolean.class, parameters={})
    private Output<Boolean> ordered;

    /**
     * @return Whether the signals matching the rule IDs/signal names must be in the same chronological order as they are listed in the Custom Insight
     * 
     */
    public Output<Boolean> ordered() {
        return this.ordered;
    }
    /**
     * The Rule IDs to match to generate an Insight (exactly one of rule_ids or signal_names must be specified)
     * 
     */
    @Export(name="ruleIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> ruleIds;

    /**
     * @return The Rule IDs to match to generate an Insight (exactly one of rule_ids or signal_names must be specified)
     * 
     */
    public Output<Optional<List<String>>> ruleIds() {
        return Codegen.optional(this.ruleIds);
    }
    /**
     * The severity of the generated Insights (HIGH, MEDIUM, or LOW)
     * 
     */
    @Export(name="severity", type=String.class, parameters={})
    private Output<String> severity;

    /**
     * @return The severity of the generated Insights (HIGH, MEDIUM, or LOW)
     * 
     */
    public Output<String> severity() {
        return this.severity;
    }
    /**
     * The Signal names to match to generate an Insight (exactly one of rule_ids or signal_names must be specified)
     * 
     */
    @Export(name="signalNames", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> signalNames;

    /**
     * @return The Signal names to match to generate an Insight (exactly one of rule_ids or signal_names must be specified)
     * 
     */
    public Output<Optional<List<String>>> signalNames() {
        return Codegen.optional(this.signalNames);
    }
    /**
     * The tags of the generated Insights
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    /**
     * @return The tags of the generated Insights
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CseCustomInsight(String name) {
        this(name, CseCustomInsightArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CseCustomInsight(String name, CseCustomInsightArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CseCustomInsight(String name, CseCustomInsightArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/cseCustomInsight:CseCustomInsight", name, args == null ? CseCustomInsightArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CseCustomInsight(String name, Output<String> id, @Nullable CseCustomInsightState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/cseCustomInsight:CseCustomInsight", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CseCustomInsight get(String name, Output<String> id, @Nullable CseCustomInsightState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CseCustomInsight(name, id, state, options);
    }
}
