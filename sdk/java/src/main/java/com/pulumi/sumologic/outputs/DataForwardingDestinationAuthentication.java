// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataForwardingDestinationAuthentication {
    private @Nullable String accessKey;
    /**
     * @return The AWS Role ARN to access the S3 bucket.
     * 
     */
    private @Nullable String roleArn;
    private @Nullable String secretKey;
    private String type;

    private DataForwardingDestinationAuthentication() {}
    public Optional<String> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }
    /**
     * @return The AWS Role ARN to access the S3 bucket.
     * 
     */
    public Optional<String> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataForwardingDestinationAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKey;
        private @Nullable String roleArn;
        private @Nullable String secretKey;
        private String type;
        public Builder() {}
        public Builder(DataForwardingDestinationAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.roleArn = defaults.roleArn;
    	      this.secretKey = defaults.secretKey;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessKey(@Nullable String accessKey) {

            this.accessKey = accessKey;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(@Nullable String roleArn) {

            this.roleArn = roleArn;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {

            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DataForwardingDestinationAuthentication", "type");
            }
            this.type = type;
            return this;
        }
        public DataForwardingDestinationAuthentication build() {
            final var _resultValue = new DataForwardingDestinationAuthentication();
            _resultValue.accessKey = accessKey;
            _resultValue.roleArn = roleArn;
            _resultValue.secretKey = secretKey;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
