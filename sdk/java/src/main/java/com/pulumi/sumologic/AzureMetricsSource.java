// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.AzureMetricsSourceArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.AzureMetricsSourceState;
import com.pulumi.sumologic.outputs.AzureMetricsSourceAuthentication;
import com.pulumi.sumologic.outputs.AzureMetricsSourceDefaultDateFormat;
import com.pulumi.sumologic.outputs.AzureMetricsSourceFilter;
import com.pulumi.sumologic.outputs.AzureMetricsSourcePath;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a [Sumologic Azure Metrics Source](https://help.sumologic.com/docs/send-data/hosted-collectors/microsoft-source/azure-metrics-source/)
 * 
 * __IMPORTANT:__ The Azure Event Hub credentials are stored in plain-text in the state. This is a potential security issue.
 * 
 */
@ResourceType(type="sumologic:index/azureMetricsSource:AzureMetricsSource")
public class AzureMetricsSource extends com.pulumi.resources.CustomResource {
    /**
     * Authentication details for connecting to ingest metrics from Azure.
     * 
     */
    @Export(name="authentication", refs={AzureMetricsSourceAuthentication.class}, tree="[0]")
    private Output<AzureMetricsSourceAuthentication> authentication;

    /**
     * @return Authentication details for connecting to ingest metrics from Azure.
     * 
     */
    public Output<AzureMetricsSourceAuthentication> authentication() {
        return this.authentication;
    }
    @Export(name="automaticDateParsing", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automaticDateParsing;

    public Output<Optional<Boolean>> automaticDateParsing() {
        return Codegen.optional(this.automaticDateParsing);
    }
    @Export(name="category", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> category;

    public Output<Optional<String>> category() {
        return Codegen.optional(this.category);
    }
    @Export(name="collectorId", refs={Integer.class}, tree="[0]")
    private Output<Integer> collectorId;

    public Output<Integer> collectorId() {
        return this.collectorId;
    }
    /**
     * Must be `AzureMetrics`.
     * 
     */
    @Export(name="contentType", refs={String.class}, tree="[0]")
    private Output<String> contentType;

    /**
     * @return Must be `AzureMetrics`.
     * 
     */
    public Output<String> contentType() {
        return this.contentType;
    }
    @Export(name="cutoffRelativeTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cutoffRelativeTime;

    public Output<Optional<String>> cutoffRelativeTime() {
        return Codegen.optional(this.cutoffRelativeTime);
    }
    @Export(name="cutoffTimestamp", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cutoffTimestamp;

    public Output<Optional<Integer>> cutoffTimestamp() {
        return Codegen.optional(this.cutoffTimestamp);
    }
    @Export(name="defaultDateFormats", refs={List.class,AzureMetricsSourceDefaultDateFormat.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AzureMetricsSourceDefaultDateFormat>> defaultDateFormats;

    public Output<Optional<List<AzureMetricsSourceDefaultDateFormat>>> defaultDateFormats() {
        return Codegen.optional(this.defaultDateFormats);
    }
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    @Export(name="fields", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> fields;

    public Output<Optional<Map<String,String>>> fields() {
        return Codegen.optional(this.fields);
    }
    @Export(name="filters", refs={List.class,AzureMetricsSourceFilter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AzureMetricsSourceFilter>> filters;

    public Output<Optional<List<AzureMetricsSourceFilter>>> filters() {
        return Codegen.optional(this.filters);
    }
    @Export(name="forceTimezone", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceTimezone;

    public Output<Optional<Boolean>> forceTimezone() {
        return Codegen.optional(this.forceTimezone);
    }
    @Export(name="hashAlgorithm", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hashAlgorithm;

    public Output<Optional<String>> hashAlgorithm() {
        return Codegen.optional(this.hashAlgorithm);
    }
    @Export(name="hostName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hostName;

    public Output<Optional<String>> hostName() {
        return Codegen.optional(this.hostName);
    }
    @Export(name="manualPrefixRegexp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> manualPrefixRegexp;

    public Output<Optional<String>> manualPrefixRegexp() {
        return Codegen.optional(this.manualPrefixRegexp);
    }
    @Export(name="multilineProcessingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> multilineProcessingEnabled;

    public Output<Optional<Boolean>> multilineProcessingEnabled() {
        return Codegen.optional(this.multilineProcessingEnabled);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="path", refs={AzureMetricsSourcePath.class}, tree="[0]")
    private Output<AzureMetricsSourcePath> path;

    public Output<AzureMetricsSourcePath> path() {
        return this.path;
    }
    @Export(name="paused", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> paused;

    public Output<Optional<Boolean>> paused() {
        return Codegen.optional(this.paused);
    }
    @Export(name="scanInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> scanInterval;

    public Output<Optional<Integer>> scanInterval() {
        return Codegen.optional(this.scanInterval);
    }
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezone;

    public Output<Optional<String>> timezone() {
        return Codegen.optional(this.timezone);
    }
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }
    @Export(name="useAutolineMatching", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useAutolineMatching;

    public Output<Optional<Boolean>> useAutolineMatching() {
        return Codegen.optional(this.useAutolineMatching);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AzureMetricsSource(java.lang.String name) {
        this(name, AzureMetricsSourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AzureMetricsSource(java.lang.String name, AzureMetricsSourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AzureMetricsSource(java.lang.String name, AzureMetricsSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/azureMetricsSource:AzureMetricsSource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AzureMetricsSource(java.lang.String name, Output<java.lang.String> id, @Nullable AzureMetricsSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/azureMetricsSource:AzureMetricsSource", name, state, makeResourceOptions(options, id), false);
    }

    private static AzureMetricsSourceArgs makeArgs(AzureMetricsSourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AzureMetricsSourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AzureMetricsSource get(java.lang.String name, Output<java.lang.String> id, @Nullable AzureMetricsSourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AzureMetricsSource(name, id, state, options);
    }
}
