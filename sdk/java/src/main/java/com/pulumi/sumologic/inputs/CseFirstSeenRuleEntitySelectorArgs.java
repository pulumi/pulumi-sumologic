// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CseFirstSeenRuleEntitySelectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final CseFirstSeenRuleEntitySelectorArgs Empty = new CseFirstSeenRuleEntitySelectorArgs();

    @Import(name="entityType", required=true)
    private Output<String> entityType;

    public Output<String> entityType() {
        return this.entityType;
    }

    /**
     * The expression or field name to generate the Signal on
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return The expression or field name to generate the Signal on
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    private CseFirstSeenRuleEntitySelectorArgs() {}

    private CseFirstSeenRuleEntitySelectorArgs(CseFirstSeenRuleEntitySelectorArgs $) {
        this.entityType = $.entityType;
        this.expression = $.expression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CseFirstSeenRuleEntitySelectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CseFirstSeenRuleEntitySelectorArgs $;

        public Builder() {
            $ = new CseFirstSeenRuleEntitySelectorArgs();
        }

        public Builder(CseFirstSeenRuleEntitySelectorArgs defaults) {
            $ = new CseFirstSeenRuleEntitySelectorArgs(Objects.requireNonNull(defaults));
        }

        public Builder entityType(Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        /**
         * @param expression The expression or field name to generate the Signal on
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression The expression or field name to generate the Signal on
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        public CseFirstSeenRuleEntitySelectorArgs build() {
            if ($.entityType == null) {
                throw new MissingRequiredPropertyException("CseFirstSeenRuleEntitySelectorArgs", "entityType");
            }
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("CseFirstSeenRuleEntitySelectorArgs", "expression");
            }
            return $;
        }
    }

}
