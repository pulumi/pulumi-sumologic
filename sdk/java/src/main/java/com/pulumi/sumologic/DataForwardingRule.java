// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.DataForwardingRuleArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.DataForwardingRuleState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provider to manage [Sumologic Data Forwarding Rule](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3)
 * 
 * ## Example Usage
 * 
 * For Partitions
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.Partition;
 * import com.pulumi.sumologic.PartitionArgs;
 * import com.pulumi.sumologic.DataForwardingRule;
 * import com.pulumi.sumologic.DataForwardingRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testPartition = new Partition("testPartition", PartitionArgs.builder()
 *             .name("testing_rule_partitions")
 *             .routingExpression("_sourcecategory=abc/Terraform")
 *             .isCompliant(false)
 *             .retentionPeriod(30)
 *             .analyticsTier("flex")
 *             .build());
 * 
 *         var exampleDataForwardingRule = new DataForwardingRule("exampleDataForwardingRule", DataForwardingRuleArgs.builder()
 *             .indexId(testPartition.id())
 *             .destinationId("00000000000732AA")
 *             .enabled(true)
 *             .fileFormat("test/{index}/{day}/{hour}/{minute}")
 *             .payloadSchema("builtInFields")
 *             .format("json")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * For Scheduled Views
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.ScheduledView;
 * import com.pulumi.sumologic.ScheduledViewArgs;
 * import com.pulumi.sumologic.DataForwardingRule;
 * import com.pulumi.sumologic.DataForwardingRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var failedConnections = new ScheduledView("failedConnections", ScheduledViewArgs.builder()
 *             .indexName("failed_connections")
 *             .query("_sourceCategory=fire | count")
 *             .startTime("2024-09-01T00:00:00Z")
 *             .retentionPeriod(1)
 *             .build());
 * 
 *         var testRuleSv = new DataForwardingRule("testRuleSv", DataForwardingRuleArgs.builder()
 *             .indexId(failedConnections.indexId())
 *             .destinationId(testDestination.id())
 *             .enabled(false)
 *             .fileFormat("test/{index}")
 *             .payloadSchema("raw")
 *             .format("text")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="sumologic:index/dataForwardingRule:DataForwardingRule")
public class DataForwardingRule extends com.pulumi.resources.CustomResource {
    /**
     * The data forwarding destination id.
     * 
     */
    @Export(name="destinationId", refs={String.class}, tree="[0]")
    private Output<String> destinationId;

    /**
     * @return The data forwarding destination id.
     * 
     */
    public Output<String> destinationId() {
        return this.destinationId;
    }
    /**
     * True when the data forwarding rule is enabled. Will be treated as _false_ if left blank.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return True when the data forwarding rule is enabled. Will be treated as _false_ if left blank.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Specify the path prefix to a directory in the S3 bucket and how to format the file name. For possible values, kindly refer the point 6 in the [documentation](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3).
     * 
     */
    @Export(name="fileFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fileFormat;

    /**
     * @return Specify the path prefix to a directory in the S3 bucket and how to format the file name. For possible values, kindly refer the point 6 in the [documentation](https://help.sumologic.com/docs/manage/data-forwarding/amazon-s3-bucket/#forward-datato-s3).
     * 
     */
    public Output<Optional<String>> fileFormat() {
        return Codegen.optional(this.fileFormat);
    }
    /**
     * Format of the payload. Default format will be _csv_.
     * _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
     * 
     * The following attributes are exported:
     * 
     */
    @Export(name="format", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> format;

    /**
     * @return Format of the payload. Default format will be _csv_.
     * _text_ format should be used in conjunction with _raw_ payloadSchema and vice versa.
     * 
     * The following attributes are exported:
     * 
     */
    public Output<Optional<String>> format() {
        return Codegen.optional(this.format);
    }
    /**
     * The *id* of the Partition or *index_id* of the Scheduled View the rule applies to.
     * 
     */
    @Export(name="indexId", refs={String.class}, tree="[0]")
    private Output<String> indexId;

    /**
     * @return The *id* of the Partition or *index_id* of the Scheduled View the rule applies to.
     * 
     */
    public Output<String> indexId() {
        return this.indexId;
    }
    /**
     * Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
     * _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
     * 
     */
    @Export(name="payloadSchema", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> payloadSchema;

    /**
     * @return Schema for the payload. Default value of the payload schema is _allFields_ for scheduled view, and _builtInFields_ for partition.
     * _raw_ payloadSchema should be used in conjunction with _text_ format and vice versa.
     * 
     */
    public Output<Optional<String>> payloadSchema() {
        return Codegen.optional(this.payloadSchema);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataForwardingRule(java.lang.String name) {
        this(name, DataForwardingRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataForwardingRule(java.lang.String name, DataForwardingRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataForwardingRule(java.lang.String name, DataForwardingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/dataForwardingRule:DataForwardingRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataForwardingRule(java.lang.String name, Output<java.lang.String> id, @Nullable DataForwardingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/dataForwardingRule:DataForwardingRule", name, state, makeResourceOptions(options, id), false);
    }

    private static DataForwardingRuleArgs makeArgs(DataForwardingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataForwardingRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataForwardingRule get(java.lang.String name, Output<java.lang.String> id, @Nullable DataForwardingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataForwardingRule(name, id, state, options);
    }
}
