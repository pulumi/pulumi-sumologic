// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.CseMatchRuleArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.CseMatchRuleState;
import com.pulumi.sumologic.outputs.CseMatchRuleEntitySelector;
import com.pulumi.sumologic.outputs.CseMatchRuleSeverityMapping;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Sumo Logic CSE [Match Rule](https://help.sumologic.com/Cloud_SIEM_Enterprise/CSE_Rules/03_Write_a_Match_Rule).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.CseMatchRule;
 * import com.pulumi.sumologic.CseMatchRuleArgs;
 * import com.pulumi.sumologic.inputs.CseMatchRuleEntitySelectorArgs;
 * import com.pulumi.sumologic.inputs.CseMatchRuleSeverityMappingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var matchRule = new CseMatchRule(&#34;matchRule&#34;, CseMatchRuleArgs.builder()        
 *             .descriptionExpression(&#34;Signal description&#34;)
 *             .enabled(true)
 *             .entitySelectors(CseMatchRuleEntitySelectorArgs.builder()
 *                 .entityType(&#34;_ip&#34;)
 *                 .expression(&#34;srcDevice_ip&#34;)
 *                 .build())
 *             .expression(&#34;objectType = \&#34;Network\&#34;&#34;)
 *             .isPrototype(false)
 *             .nameExpression(&#34;Signal name&#34;)
 *             .severityMapping(CseMatchRuleSeverityMappingArgs.builder()
 *                 .default_(5)
 *                 .type(&#34;constant&#34;)
 *                 .build())
 *             .summaryExpression(&#34;Signal summary&#34;)
 *             .tags(&#34;_mitreAttackTactic:TA0009&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Match Rules can be imported using the field id, e.g.hcl
 * 
 * ```sh
 *  $ pulumi import sumologic:index/cseMatchRule:CseMatchRule match_rule id
 * ```
 * 
 */
@ResourceType(type="sumologic:index/cseMatchRule:CseMatchRule")
public class CseMatchRule extends com.pulumi.resources.CustomResource {
    /**
     * The description of the generated Signals
     * 
     */
    @Export(name="descriptionExpression", type=String.class, parameters={})
    private Output<String> descriptionExpression;

    /**
     * @return The description of the generated Signals
     * 
     */
    public Output<String> descriptionExpression() {
        return this.descriptionExpression;
    }
    /**
     * Whether the rule should generate Signals
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output<Boolean> enabled;

    /**
     * @return Whether the rule should generate Signals
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * The entities to generate Signals on
     * 
     */
    @Export(name="entitySelectors", type=List.class, parameters={CseMatchRuleEntitySelector.class})
    private Output<List<CseMatchRuleEntitySelector>> entitySelectors;

    /**
     * @return The entities to generate Signals on
     * 
     */
    public Output<List<CseMatchRuleEntitySelector>> entitySelectors() {
        return this.entitySelectors;
    }
    /**
     * The expression for which records to match on
     * 
     */
    @Export(name="expression", type=String.class, parameters={})
    private Output<String> expression;

    /**
     * @return The expression for which records to match on
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }
    /**
     * Whether the generated Signals should be prototype Signals
     * 
     */
    @Export(name="isPrototype", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isPrototype;

    /**
     * @return Whether the generated Signals should be prototype Signals
     * 
     */
    public Output<Optional<Boolean>> isPrototype() {
        return Codegen.optional(this.isPrototype);
    }
    /**
     * The name of the Rule
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Rule
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the generated Signals
     * 
     */
    @Export(name="nameExpression", type=String.class, parameters={})
    private Output<String> nameExpression;

    /**
     * @return The name of the generated Signals
     * 
     */
    public Output<String> nameExpression() {
        return this.nameExpression;
    }
    /**
     * The configuration of how the severity of the Signals should be mapped from the Records
     * 
     */
    @Export(name="severityMapping", type=CseMatchRuleSeverityMapping.class, parameters={})
    private Output<CseMatchRuleSeverityMapping> severityMapping;

    /**
     * @return The configuration of how the severity of the Signals should be mapped from the Records
     * 
     */
    public Output<CseMatchRuleSeverityMapping> severityMapping() {
        return this.severityMapping;
    }
    /**
     * The summary of the generated Signals
     * 
     */
    @Export(name="summaryExpression", type=String.class, parameters={})
    private Output</* @Nullable */ String> summaryExpression;

    /**
     * @return The summary of the generated Signals
     * 
     */
    public Output<Optional<String>> summaryExpression() {
        return Codegen.optional(this.summaryExpression);
    }
    /**
     * The tags of the generated Signals
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return The tags of the generated Signals
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CseMatchRule(String name) {
        this(name, CseMatchRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CseMatchRule(String name, CseMatchRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CseMatchRule(String name, CseMatchRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/cseMatchRule:CseMatchRule", name, args == null ? CseMatchRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CseMatchRule(String name, Output<String> id, @Nullable CseMatchRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/cseMatchRule:CseMatchRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CseMatchRule get(String name, Output<String> id, @Nullable CseMatchRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CseMatchRule(name, id, state, options);
    }
}
