// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.DashboardTimeRangeBeginBoundedTimeRangeFrom;
import com.pulumi.sumologic.outputs.DashboardTimeRangeBeginBoundedTimeRangeTo;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardTimeRangeBeginBoundedTimeRange {
    private DashboardTimeRangeBeginBoundedTimeRangeFrom from;
    private @Nullable DashboardTimeRangeBeginBoundedTimeRangeTo to;

    private DashboardTimeRangeBeginBoundedTimeRange() {}
    public DashboardTimeRangeBeginBoundedTimeRangeFrom from() {
        return this.from;
    }
    public Optional<DashboardTimeRangeBeginBoundedTimeRangeTo> to() {
        return Optional.ofNullable(this.to);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardTimeRangeBeginBoundedTimeRange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DashboardTimeRangeBeginBoundedTimeRangeFrom from;
        private @Nullable DashboardTimeRangeBeginBoundedTimeRangeTo to;
        public Builder() {}
        public Builder(DashboardTimeRangeBeginBoundedTimeRange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.from = defaults.from;
    	      this.to = defaults.to;
        }

        @CustomType.Setter
        public Builder from(DashboardTimeRangeBeginBoundedTimeRangeFrom from) {
            this.from = Objects.requireNonNull(from);
            return this;
        }
        @CustomType.Setter
        public Builder to(@Nullable DashboardTimeRangeBeginBoundedTimeRangeTo to) {
            this.to = to;
            return this;
        }
        public DashboardTimeRangeBeginBoundedTimeRange build() {
            final var o = new DashboardTimeRangeBeginBoundedTimeRange();
            o.from = from;
            o.to = to;
            return o;
        }
    }
}
