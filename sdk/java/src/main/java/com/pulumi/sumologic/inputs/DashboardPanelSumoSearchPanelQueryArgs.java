// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.inputs.DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardPanelSumoSearchPanelQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardPanelSumoSearchPanelQueryArgs Empty = new DashboardPanelSumoSearchPanelQueryArgs();

    @Import(name="metricsQueryData")
    private @Nullable Output<DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs> metricsQueryData;

    public Optional<Output<DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs>> metricsQueryData() {
        return Optional.ofNullable(this.metricsQueryData);
    }

    @Import(name="metricsQueryMode")
    private @Nullable Output<String> metricsQueryMode;

    public Optional<Output<String>> metricsQueryMode() {
        return Optional.ofNullable(this.metricsQueryMode);
    }

    @Import(name="outputCardinalityLimit")
    private @Nullable Output<Integer> outputCardinalityLimit;

    public Optional<Output<Integer>> outputCardinalityLimit() {
        return Optional.ofNullable(this.outputCardinalityLimit);
    }

    @Import(name="parseMode")
    private @Nullable Output<String> parseMode;

    public Optional<Output<String>> parseMode() {
        return Optional.ofNullable(this.parseMode);
    }

    @Import(name="queryKey", required=true)
    private Output<String> queryKey;

    public Output<String> queryKey() {
        return this.queryKey;
    }

    @Import(name="queryString", required=true)
    private Output<String> queryString;

    public Output<String> queryString() {
        return this.queryString;
    }

    @Import(name="queryType", required=true)
    private Output<String> queryType;

    public Output<String> queryType() {
        return this.queryType;
    }

    @Import(name="timeSource")
    private @Nullable Output<String> timeSource;

    public Optional<Output<String>> timeSource() {
        return Optional.ofNullable(this.timeSource);
    }

    @Import(name="transient")
    private @Nullable Output<Boolean> transient_;

    public Optional<Output<Boolean>> transient_() {
        return Optional.ofNullable(this.transient_);
    }

    private DashboardPanelSumoSearchPanelQueryArgs() {}

    private DashboardPanelSumoSearchPanelQueryArgs(DashboardPanelSumoSearchPanelQueryArgs $) {
        this.metricsQueryData = $.metricsQueryData;
        this.metricsQueryMode = $.metricsQueryMode;
        this.outputCardinalityLimit = $.outputCardinalityLimit;
        this.parseMode = $.parseMode;
        this.queryKey = $.queryKey;
        this.queryString = $.queryString;
        this.queryType = $.queryType;
        this.timeSource = $.timeSource;
        this.transient_ = $.transient_;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardPanelSumoSearchPanelQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardPanelSumoSearchPanelQueryArgs $;

        public Builder() {
            $ = new DashboardPanelSumoSearchPanelQueryArgs();
        }

        public Builder(DashboardPanelSumoSearchPanelQueryArgs defaults) {
            $ = new DashboardPanelSumoSearchPanelQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder metricsQueryData(@Nullable Output<DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs> metricsQueryData) {
            $.metricsQueryData = metricsQueryData;
            return this;
        }

        public Builder metricsQueryData(DashboardPanelSumoSearchPanelQueryMetricsQueryDataArgs metricsQueryData) {
            return metricsQueryData(Output.of(metricsQueryData));
        }

        public Builder metricsQueryMode(@Nullable Output<String> metricsQueryMode) {
            $.metricsQueryMode = metricsQueryMode;
            return this;
        }

        public Builder metricsQueryMode(String metricsQueryMode) {
            return metricsQueryMode(Output.of(metricsQueryMode));
        }

        public Builder outputCardinalityLimit(@Nullable Output<Integer> outputCardinalityLimit) {
            $.outputCardinalityLimit = outputCardinalityLimit;
            return this;
        }

        public Builder outputCardinalityLimit(Integer outputCardinalityLimit) {
            return outputCardinalityLimit(Output.of(outputCardinalityLimit));
        }

        public Builder parseMode(@Nullable Output<String> parseMode) {
            $.parseMode = parseMode;
            return this;
        }

        public Builder parseMode(String parseMode) {
            return parseMode(Output.of(parseMode));
        }

        public Builder queryKey(Output<String> queryKey) {
            $.queryKey = queryKey;
            return this;
        }

        public Builder queryKey(String queryKey) {
            return queryKey(Output.of(queryKey));
        }

        public Builder queryString(Output<String> queryString) {
            $.queryString = queryString;
            return this;
        }

        public Builder queryString(String queryString) {
            return queryString(Output.of(queryString));
        }

        public Builder queryType(Output<String> queryType) {
            $.queryType = queryType;
            return this;
        }

        public Builder queryType(String queryType) {
            return queryType(Output.of(queryType));
        }

        public Builder timeSource(@Nullable Output<String> timeSource) {
            $.timeSource = timeSource;
            return this;
        }

        public Builder timeSource(String timeSource) {
            return timeSource(Output.of(timeSource));
        }

        public Builder transient_(@Nullable Output<Boolean> transient_) {
            $.transient_ = transient_;
            return this;
        }

        public Builder transient_(Boolean transient_) {
            return transient_(Output.of(transient_));
        }

        public DashboardPanelSumoSearchPanelQueryArgs build() {
            if ($.queryKey == null) {
                throw new MissingRequiredPropertyException("DashboardPanelSumoSearchPanelQueryArgs", "queryKey");
            }
            if ($.queryString == null) {
                throw new MissingRequiredPropertyException("DashboardPanelSumoSearchPanelQueryArgs", "queryString");
            }
            if ($.queryType == null) {
                throw new MissingRequiredPropertyException("DashboardPanelSumoSearchPanelQueryArgs", "queryType");
            }
            return $;
        }
    }

}
