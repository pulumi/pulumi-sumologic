// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.DashboardVariableSourceDefinition;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardVariable {
    private final @Nullable Boolean allowMultiSelect;
    private final @Nullable String defaultValue;
    private final @Nullable String displayName;
    private final @Nullable Boolean hideFromUi;
    private final @Nullable String id;
    private final @Nullable Boolean includeAllOption;
    private final String name;
    private final DashboardVariableSourceDefinition sourceDefinition;

    @CustomType.Constructor
    private DashboardVariable(
        @CustomType.Parameter("allowMultiSelect") @Nullable Boolean allowMultiSelect,
        @CustomType.Parameter("defaultValue") @Nullable String defaultValue,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("hideFromUi") @Nullable Boolean hideFromUi,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("includeAllOption") @Nullable Boolean includeAllOption,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("sourceDefinition") DashboardVariableSourceDefinition sourceDefinition) {
        this.allowMultiSelect = allowMultiSelect;
        this.defaultValue = defaultValue;
        this.displayName = displayName;
        this.hideFromUi = hideFromUi;
        this.id = id;
        this.includeAllOption = includeAllOption;
        this.name = name;
        this.sourceDefinition = sourceDefinition;
    }

    public Optional<Boolean> allowMultiSelect() {
        return Optional.ofNullable(this.allowMultiSelect);
    }
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<Boolean> hideFromUi() {
        return Optional.ofNullable(this.hideFromUi);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> includeAllOption() {
        return Optional.ofNullable(this.includeAllOption);
    }
    public String name() {
        return this.name;
    }
    public DashboardVariableSourceDefinition sourceDefinition() {
        return this.sourceDefinition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardVariable defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allowMultiSelect;
        private @Nullable String defaultValue;
        private @Nullable String displayName;
        private @Nullable Boolean hideFromUi;
        private @Nullable String id;
        private @Nullable Boolean includeAllOption;
        private String name;
        private DashboardVariableSourceDefinition sourceDefinition;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowMultiSelect = defaults.allowMultiSelect;
    	      this.defaultValue = defaults.defaultValue;
    	      this.displayName = defaults.displayName;
    	      this.hideFromUi = defaults.hideFromUi;
    	      this.id = defaults.id;
    	      this.includeAllOption = defaults.includeAllOption;
    	      this.name = defaults.name;
    	      this.sourceDefinition = defaults.sourceDefinition;
        }

        public Builder allowMultiSelect(@Nullable Boolean allowMultiSelect) {
            this.allowMultiSelect = allowMultiSelect;
            return this;
        }
        public Builder defaultValue(@Nullable String defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder hideFromUi(@Nullable Boolean hideFromUi) {
            this.hideFromUi = hideFromUi;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder includeAllOption(@Nullable Boolean includeAllOption) {
            this.includeAllOption = includeAllOption;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder sourceDefinition(DashboardVariableSourceDefinition sourceDefinition) {
            this.sourceDefinition = Objects.requireNonNull(sourceDefinition);
            return this;
        }        public DashboardVariable build() {
            return new DashboardVariable(allowMultiSelect, defaultValue, displayName, hideFromUi, id, includeAllOption, name, sourceDefinition);
        }
    }
}
