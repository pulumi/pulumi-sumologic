// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.inputs.CloudfrontSourcePathAzureTagFilterTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudfrontSourcePathAzureTagFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudfrontSourcePathAzureTagFilterArgs Empty = new CloudfrontSourcePathAzureTagFilterArgs();

    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="tags")
    private @Nullable Output<List<CloudfrontSourcePathAzureTagFilterTagArgs>> tags;

    public Optional<Output<List<CloudfrontSourcePathAzureTagFilterTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private CloudfrontSourcePathAzureTagFilterArgs() {}

    private CloudfrontSourcePathAzureTagFilterArgs(CloudfrontSourcePathAzureTagFilterArgs $) {
        this.namespace = $.namespace;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudfrontSourcePathAzureTagFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudfrontSourcePathAzureTagFilterArgs $;

        public Builder() {
            $ = new CloudfrontSourcePathAzureTagFilterArgs();
        }

        public Builder(CloudfrontSourcePathAzureTagFilterArgs defaults) {
            $ = new CloudfrontSourcePathAzureTagFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public Builder tags(@Nullable Output<List<CloudfrontSourcePathAzureTagFilterTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<CloudfrontSourcePathAzureTagFilterTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(CloudfrontSourcePathAzureTagFilterTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CloudfrontSourcePathAzureTagFilterArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("CloudfrontSourcePathAzureTagFilterArgs", "type");
            }
            return $;
        }
    }

}
