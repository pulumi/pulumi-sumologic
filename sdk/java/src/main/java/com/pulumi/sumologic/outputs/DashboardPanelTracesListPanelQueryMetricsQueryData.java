// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.outputs.DashboardPanelTracesListPanelQueryMetricsQueryDataFilter;
import com.pulumi.sumologic.outputs.DashboardPanelTracesListPanelQueryMetricsQueryDataOperator;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardPanelTracesListPanelQueryMetricsQueryData {
    private @Nullable String aggregationType;
    private List<DashboardPanelTracesListPanelQueryMetricsQueryDataFilter> filters;
    private @Nullable String groupBy;
    private String metric;
    private @Nullable List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperator> operators;

    private DashboardPanelTracesListPanelQueryMetricsQueryData() {}
    public Optional<String> aggregationType() {
        return Optional.ofNullable(this.aggregationType);
    }
    public List<DashboardPanelTracesListPanelQueryMetricsQueryDataFilter> filters() {
        return this.filters;
    }
    public Optional<String> groupBy() {
        return Optional.ofNullable(this.groupBy);
    }
    public String metric() {
        return this.metric;
    }
    public List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperator> operators() {
        return this.operators == null ? List.of() : this.operators;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardPanelTracesListPanelQueryMetricsQueryData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregationType;
        private List<DashboardPanelTracesListPanelQueryMetricsQueryDataFilter> filters;
        private @Nullable String groupBy;
        private String metric;
        private @Nullable List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperator> operators;
        public Builder() {}
        public Builder(DashboardPanelTracesListPanelQueryMetricsQueryData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationType = defaults.aggregationType;
    	      this.filters = defaults.filters;
    	      this.groupBy = defaults.groupBy;
    	      this.metric = defaults.metric;
    	      this.operators = defaults.operators;
        }

        @CustomType.Setter
        public Builder aggregationType(@Nullable String aggregationType) {

            this.aggregationType = aggregationType;
            return this;
        }
        @CustomType.Setter
        public Builder filters(List<DashboardPanelTracesListPanelQueryMetricsQueryDataFilter> filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("DashboardPanelTracesListPanelQueryMetricsQueryData", "filters");
            }
            this.filters = filters;
            return this;
        }
        public Builder filters(DashboardPanelTracesListPanelQueryMetricsQueryDataFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder groupBy(@Nullable String groupBy) {

            this.groupBy = groupBy;
            return this;
        }
        @CustomType.Setter
        public Builder metric(String metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("DashboardPanelTracesListPanelQueryMetricsQueryData", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder operators(@Nullable List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperator> operators) {

            this.operators = operators;
            return this;
        }
        public Builder operators(DashboardPanelTracesListPanelQueryMetricsQueryDataOperator... operators) {
            return operators(List.of(operators));
        }
        public DashboardPanelTracesListPanelQueryMetricsQueryData build() {
            final var _resultValue = new DashboardPanelTracesListPanelQueryMetricsQueryData();
            _resultValue.aggregationType = aggregationType;
            _resultValue.filters = filters;
            _resultValue.groupBy = groupBy;
            _resultValue.metric = metric;
            _resultValue.operators = operators;
            return _resultValue;
        }
    }
}
