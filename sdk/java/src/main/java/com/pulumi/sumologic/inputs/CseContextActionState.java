// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CseContextActionState extends com.pulumi.resources.ResourceArgs {

    public static final CseContextActionState Empty = new CseContextActionState();

    /**
     * Use all record fields.
     * 
     */
    @Import(name="allRecordFields")
    private @Nullable Output<Boolean> allRecordFields;

    /**
     * @return Use all record fields.
     * 
     */
    public Optional<Output<Boolean>> allRecordFields() {
        return Optional.ofNullable(this.allRecordFields);
    }

    /**
     * Whether the context action is enabled.
     * 
     * The following attributes are exported:
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the context action is enabled.
     * 
     * The following attributes are exported:
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Applicable to given entity types.
     * 
     */
    @Import(name="entityTypes")
    private @Nullable Output<List<String>> entityTypes;

    /**
     * @return Applicable to given entity types.
     * 
     */
    public Optional<Output<List<String>>> entityTypes() {
        return Optional.ofNullable(this.entityTypes);
    }

    /**
     * IOC Data types. Valid values: &#34;ASN&#34;, &#34;DOMAIN&#34;, &#34;HASH&#34;, &#34;IP_ADDRESS&#34;, &#34;MAC_ADDRESS&#34;, &#34;PORT&#34;, &#34;RECORD_PROPERTY&#34;, &#34;URL&#34;.
     * 
     */
    @Import(name="iocTypes")
    private @Nullable Output<List<String>> iocTypes;

    /**
     * @return IOC Data types. Valid values: &#34;ASN&#34;, &#34;DOMAIN&#34;, &#34;HASH&#34;, &#34;IP_ADDRESS&#34;, &#34;MAC_ADDRESS&#34;, &#34;PORT&#34;, &#34;RECORD_PROPERTY&#34;, &#34;URL&#34;.
     * 
     */
    public Optional<Output<List<String>>> iocTypes() {
        return Optional.ofNullable(this.iocTypes);
    }

    /**
     * Context Action name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Context Action name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specific record fields.
     * 
     */
    @Import(name="recordFields")
    private @Nullable Output<List<String>> recordFields;

    /**
     * @return Specific record fields.
     * 
     */
    public Optional<Output<List<String>>> recordFields() {
        return Optional.ofNullable(this.recordFields);
    }

    /**
     * The URL/QUERY template.
     * 
     */
    @Import(name="template")
    private @Nullable Output<String> template;

    /**
     * @return The URL/QUERY template.
     * 
     */
    public Optional<Output<String>> template() {
        return Optional.ofNullable(this.template);
    }

    /**
     * Context Action type. Valid values: &#34;URL&#34;, &#34;QUERY&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Context Action type. Valid values: &#34;URL&#34;, &#34;QUERY&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private CseContextActionState() {}

    private CseContextActionState(CseContextActionState $) {
        this.allRecordFields = $.allRecordFields;
        this.enabled = $.enabled;
        this.entityTypes = $.entityTypes;
        this.iocTypes = $.iocTypes;
        this.name = $.name;
        this.recordFields = $.recordFields;
        this.template = $.template;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CseContextActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CseContextActionState $;

        public Builder() {
            $ = new CseContextActionState();
        }

        public Builder(CseContextActionState defaults) {
            $ = new CseContextActionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allRecordFields Use all record fields.
         * 
         * @return builder
         * 
         */
        public Builder allRecordFields(@Nullable Output<Boolean> allRecordFields) {
            $.allRecordFields = allRecordFields;
            return this;
        }

        /**
         * @param allRecordFields Use all record fields.
         * 
         * @return builder
         * 
         */
        public Builder allRecordFields(Boolean allRecordFields) {
            return allRecordFields(Output.of(allRecordFields));
        }

        /**
         * @param enabled Whether the context action is enabled.
         * 
         * The following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the context action is enabled.
         * 
         * The following attributes are exported:
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param entityTypes Applicable to given entity types.
         * 
         * @return builder
         * 
         */
        public Builder entityTypes(@Nullable Output<List<String>> entityTypes) {
            $.entityTypes = entityTypes;
            return this;
        }

        /**
         * @param entityTypes Applicable to given entity types.
         * 
         * @return builder
         * 
         */
        public Builder entityTypes(List<String> entityTypes) {
            return entityTypes(Output.of(entityTypes));
        }

        /**
         * @param entityTypes Applicable to given entity types.
         * 
         * @return builder
         * 
         */
        public Builder entityTypes(String... entityTypes) {
            return entityTypes(List.of(entityTypes));
        }

        /**
         * @param iocTypes IOC Data types. Valid values: &#34;ASN&#34;, &#34;DOMAIN&#34;, &#34;HASH&#34;, &#34;IP_ADDRESS&#34;, &#34;MAC_ADDRESS&#34;, &#34;PORT&#34;, &#34;RECORD_PROPERTY&#34;, &#34;URL&#34;.
         * 
         * @return builder
         * 
         */
        public Builder iocTypes(@Nullable Output<List<String>> iocTypes) {
            $.iocTypes = iocTypes;
            return this;
        }

        /**
         * @param iocTypes IOC Data types. Valid values: &#34;ASN&#34;, &#34;DOMAIN&#34;, &#34;HASH&#34;, &#34;IP_ADDRESS&#34;, &#34;MAC_ADDRESS&#34;, &#34;PORT&#34;, &#34;RECORD_PROPERTY&#34;, &#34;URL&#34;.
         * 
         * @return builder
         * 
         */
        public Builder iocTypes(List<String> iocTypes) {
            return iocTypes(Output.of(iocTypes));
        }

        /**
         * @param iocTypes IOC Data types. Valid values: &#34;ASN&#34;, &#34;DOMAIN&#34;, &#34;HASH&#34;, &#34;IP_ADDRESS&#34;, &#34;MAC_ADDRESS&#34;, &#34;PORT&#34;, &#34;RECORD_PROPERTY&#34;, &#34;URL&#34;.
         * 
         * @return builder
         * 
         */
        public Builder iocTypes(String... iocTypes) {
            return iocTypes(List.of(iocTypes));
        }

        /**
         * @param name Context Action name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Context Action name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recordFields Specific record fields.
         * 
         * @return builder
         * 
         */
        public Builder recordFields(@Nullable Output<List<String>> recordFields) {
            $.recordFields = recordFields;
            return this;
        }

        /**
         * @param recordFields Specific record fields.
         * 
         * @return builder
         * 
         */
        public Builder recordFields(List<String> recordFields) {
            return recordFields(Output.of(recordFields));
        }

        /**
         * @param recordFields Specific record fields.
         * 
         * @return builder
         * 
         */
        public Builder recordFields(String... recordFields) {
            return recordFields(List.of(recordFields));
        }

        /**
         * @param template The URL/QUERY template.
         * 
         * @return builder
         * 
         */
        public Builder template(@Nullable Output<String> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template The URL/QUERY template.
         * 
         * @return builder
         * 
         */
        public Builder template(String template) {
            return template(Output.of(template));
        }

        /**
         * @param type Context Action type. Valid values: &#34;URL&#34;, &#34;QUERY&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Context Action type. Valid values: &#34;URL&#34;, &#34;QUERY&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CseContextActionState build() {
            return $;
        }
    }

}
