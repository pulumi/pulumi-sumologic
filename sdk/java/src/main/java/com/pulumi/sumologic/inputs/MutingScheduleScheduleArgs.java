// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MutingScheduleScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MutingScheduleScheduleArgs Empty = new MutingScheduleScheduleArgs();

    @Import(name="duration", required=true)
    private Output<Integer> duration;

    public Output<Integer> duration() {
        return this.duration;
    }

    @Import(name="rrule")
    private @Nullable Output<String> rrule;

    public Optional<Output<String>> rrule() {
        return Optional.ofNullable(this.rrule);
    }

    @Import(name="startDate", required=true)
    private Output<String> startDate;

    public Output<String> startDate() {
        return this.startDate;
    }

    @Import(name="startTime", required=true)
    private Output<String> startTime;

    public Output<String> startTime() {
        return this.startTime;
    }

    @Import(name="timezone", required=true)
    private Output<String> timezone;

    public Output<String> timezone() {
        return this.timezone;
    }

    private MutingScheduleScheduleArgs() {}

    private MutingScheduleScheduleArgs(MutingScheduleScheduleArgs $) {
        this.duration = $.duration;
        this.rrule = $.rrule;
        this.startDate = $.startDate;
        this.startTime = $.startTime;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MutingScheduleScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MutingScheduleScheduleArgs $;

        public Builder() {
            $ = new MutingScheduleScheduleArgs();
        }

        public Builder(MutingScheduleScheduleArgs defaults) {
            $ = new MutingScheduleScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder duration(Output<Integer> duration) {
            $.duration = duration;
            return this;
        }

        public Builder duration(Integer duration) {
            return duration(Output.of(duration));
        }

        public Builder rrule(@Nullable Output<String> rrule) {
            $.rrule = rrule;
            return this;
        }

        public Builder rrule(String rrule) {
            return rrule(Output.of(rrule));
        }

        public Builder startDate(Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        public Builder startTime(Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public Builder timezone(Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public MutingScheduleScheduleArgs build() {
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("MutingScheduleScheduleArgs", "duration");
            }
            if ($.startDate == null) {
                throw new MissingRequiredPropertyException("MutingScheduleScheduleArgs", "startDate");
            }
            if ($.startTime == null) {
                throw new MissingRequiredPropertyException("MutingScheduleScheduleArgs", "startTime");
            }
            if ($.timezone == null) {
                throw new MissingRequiredPropertyException("MutingScheduleScheduleArgs", "timezone");
            }
            return $;
        }
    }

}
