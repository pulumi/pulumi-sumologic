// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class CseAggregationRuleAggregationFunction {
    /**
     * @return One or more expressions to pass as arguments to the function
     * 
     */
    private List<String> arguments;
    /**
     * @return The function to aggregate with
     * 
     */
    private String function;
    /**
     * @return The name of the Rule
     * 
     */
    private String name;

    private CseAggregationRuleAggregationFunction() {}
    /**
     * @return One or more expressions to pass as arguments to the function
     * 
     */
    public List<String> arguments() {
        return this.arguments;
    }
    /**
     * @return The function to aggregate with
     * 
     */
    public String function() {
        return this.function;
    }
    /**
     * @return The name of the Rule
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CseAggregationRuleAggregationFunction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> arguments;
        private String function;
        private String name;
        public Builder() {}
        public Builder(CseAggregationRuleAggregationFunction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.function = defaults.function;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder arguments(List<String> arguments) {
            this.arguments = Objects.requireNonNull(arguments);
            return this;
        }
        public Builder arguments(String... arguments) {
            return arguments(List.of(arguments));
        }
        @CustomType.Setter
        public Builder function(String function) {
            this.function = Objects.requireNonNull(function);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public CseAggregationRuleAggregationFunction build() {
            final var o = new CseAggregationRuleAggregationFunction();
            o.arguments = arguments;
            o.function = function;
            o.name = name;
            return o;
        }
    }
}
