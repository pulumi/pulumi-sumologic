// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloSliConditionCritical;
import com.pulumi.sumologic.outputs.MonitorTriggerConditionsSloSliConditionWarning;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitorTriggerConditionsSloSliCondition {
    private final @Nullable MonitorTriggerConditionsSloSliConditionCritical critical;
    private final @Nullable MonitorTriggerConditionsSloSliConditionWarning warning;

    @CustomType.Constructor
    private MonitorTriggerConditionsSloSliCondition(
        @CustomType.Parameter("critical") @Nullable MonitorTriggerConditionsSloSliConditionCritical critical,
        @CustomType.Parameter("warning") @Nullable MonitorTriggerConditionsSloSliConditionWarning warning) {
        this.critical = critical;
        this.warning = warning;
    }

    public Optional<MonitorTriggerConditionsSloSliConditionCritical> critical() {
        return Optional.ofNullable(this.critical);
    }
    public Optional<MonitorTriggerConditionsSloSliConditionWarning> warning() {
        return Optional.ofNullable(this.warning);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorTriggerConditionsSloSliCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable MonitorTriggerConditionsSloSliConditionCritical critical;
        private @Nullable MonitorTriggerConditionsSloSliConditionWarning warning;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitorTriggerConditionsSloSliCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.critical = defaults.critical;
    	      this.warning = defaults.warning;
        }

        public Builder critical(@Nullable MonitorTriggerConditionsSloSliConditionCritical critical) {
            this.critical = critical;
            return this;
        }
        public Builder warning(@Nullable MonitorTriggerConditionsSloSliConditionWarning warning) {
            this.warning = warning;
            return this;
        }        public MonitorTriggerConditionsSloSliCondition build() {
            return new MonitorTriggerConditionsSloSliCondition(critical, warning);
        }
    }
}
