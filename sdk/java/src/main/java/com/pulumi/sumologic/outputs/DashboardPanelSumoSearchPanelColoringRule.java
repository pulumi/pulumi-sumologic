// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.DashboardPanelSumoSearchPanelColoringRuleColorThreshold;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DashboardPanelSumoSearchPanelColoringRule {
    private final @Nullable List<DashboardPanelSumoSearchPanelColoringRuleColorThreshold> colorThresholds;
    private final String multipleSeriesAggregateFunction;
    private final String scope;
    private final String singleSeriesAggregateFunction;

    @CustomType.Constructor
    private DashboardPanelSumoSearchPanelColoringRule(
        @CustomType.Parameter("colorThresholds") @Nullable List<DashboardPanelSumoSearchPanelColoringRuleColorThreshold> colorThresholds,
        @CustomType.Parameter("multipleSeriesAggregateFunction") String multipleSeriesAggregateFunction,
        @CustomType.Parameter("scope") String scope,
        @CustomType.Parameter("singleSeriesAggregateFunction") String singleSeriesAggregateFunction) {
        this.colorThresholds = colorThresholds;
        this.multipleSeriesAggregateFunction = multipleSeriesAggregateFunction;
        this.scope = scope;
        this.singleSeriesAggregateFunction = singleSeriesAggregateFunction;
    }

    public List<DashboardPanelSumoSearchPanelColoringRuleColorThreshold> colorThresholds() {
        return this.colorThresholds == null ? List.of() : this.colorThresholds;
    }
    public String multipleSeriesAggregateFunction() {
        return this.multipleSeriesAggregateFunction;
    }
    public String scope() {
        return this.scope;
    }
    public String singleSeriesAggregateFunction() {
        return this.singleSeriesAggregateFunction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardPanelSumoSearchPanelColoringRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<DashboardPanelSumoSearchPanelColoringRuleColorThreshold> colorThresholds;
        private String multipleSeriesAggregateFunction;
        private String scope;
        private String singleSeriesAggregateFunction;

        public Builder() {
    	      // Empty
        }

        public Builder(DashboardPanelSumoSearchPanelColoringRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.colorThresholds = defaults.colorThresholds;
    	      this.multipleSeriesAggregateFunction = defaults.multipleSeriesAggregateFunction;
    	      this.scope = defaults.scope;
    	      this.singleSeriesAggregateFunction = defaults.singleSeriesAggregateFunction;
        }

        public Builder colorThresholds(@Nullable List<DashboardPanelSumoSearchPanelColoringRuleColorThreshold> colorThresholds) {
            this.colorThresholds = colorThresholds;
            return this;
        }
        public Builder colorThresholds(DashboardPanelSumoSearchPanelColoringRuleColorThreshold... colorThresholds) {
            return colorThresholds(List.of(colorThresholds));
        }
        public Builder multipleSeriesAggregateFunction(String multipleSeriesAggregateFunction) {
            this.multipleSeriesAggregateFunction = Objects.requireNonNull(multipleSeriesAggregateFunction);
            return this;
        }
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public Builder singleSeriesAggregateFunction(String singleSeriesAggregateFunction) {
            this.singleSeriesAggregateFunction = Objects.requireNonNull(singleSeriesAggregateFunction);
            return this;
        }        public DashboardPanelSumoSearchPanelColoringRule build() {
            return new DashboardPanelSumoSearchPanelColoringRule(colorThresholds, multipleSeriesAggregateFunction, scope, singleSeriesAggregateFunction);
        }
    }
}
