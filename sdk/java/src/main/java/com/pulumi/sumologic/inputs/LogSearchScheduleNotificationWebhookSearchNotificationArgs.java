// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogSearchScheduleNotificationWebhookSearchNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogSearchScheduleNotificationWebhookSearchNotificationArgs Empty = new LogSearchScheduleNotificationWebhookSearchNotificationArgs();

    @Import(name="itemizeAlerts")
    private @Nullable Output<Boolean> itemizeAlerts;

    public Optional<Output<Boolean>> itemizeAlerts() {
        return Optional.ofNullable(this.itemizeAlerts);
    }

    @Import(name="maxItemizedAlerts")
    private @Nullable Output<Integer> maxItemizedAlerts;

    public Optional<Output<Integer>> maxItemizedAlerts() {
        return Optional.ofNullable(this.maxItemizedAlerts);
    }

    @Import(name="payload")
    private @Nullable Output<String> payload;

    public Optional<Output<String>> payload() {
        return Optional.ofNullable(this.payload);
    }

    @Import(name="webhookId", required=true)
    private Output<String> webhookId;

    public Output<String> webhookId() {
        return this.webhookId;
    }

    private LogSearchScheduleNotificationWebhookSearchNotificationArgs() {}

    private LogSearchScheduleNotificationWebhookSearchNotificationArgs(LogSearchScheduleNotificationWebhookSearchNotificationArgs $) {
        this.itemizeAlerts = $.itemizeAlerts;
        this.maxItemizedAlerts = $.maxItemizedAlerts;
        this.payload = $.payload;
        this.webhookId = $.webhookId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogSearchScheduleNotificationWebhookSearchNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogSearchScheduleNotificationWebhookSearchNotificationArgs $;

        public Builder() {
            $ = new LogSearchScheduleNotificationWebhookSearchNotificationArgs();
        }

        public Builder(LogSearchScheduleNotificationWebhookSearchNotificationArgs defaults) {
            $ = new LogSearchScheduleNotificationWebhookSearchNotificationArgs(Objects.requireNonNull(defaults));
        }

        public Builder itemizeAlerts(@Nullable Output<Boolean> itemizeAlerts) {
            $.itemizeAlerts = itemizeAlerts;
            return this;
        }

        public Builder itemizeAlerts(Boolean itemizeAlerts) {
            return itemizeAlerts(Output.of(itemizeAlerts));
        }

        public Builder maxItemizedAlerts(@Nullable Output<Integer> maxItemizedAlerts) {
            $.maxItemizedAlerts = maxItemizedAlerts;
            return this;
        }

        public Builder maxItemizedAlerts(Integer maxItemizedAlerts) {
            return maxItemizedAlerts(Output.of(maxItemizedAlerts));
        }

        public Builder payload(@Nullable Output<String> payload) {
            $.payload = payload;
            return this;
        }

        public Builder payload(String payload) {
            return payload(Output.of(payload));
        }

        public Builder webhookId(Output<String> webhookId) {
            $.webhookId = webhookId;
            return this;
        }

        public Builder webhookId(String webhookId) {
            return webhookId(Output.of(webhookId));
        }

        public LogSearchScheduleNotificationWebhookSearchNotificationArgs build() {
            if ($.webhookId == null) {
                throw new MissingRequiredPropertyException("LogSearchScheduleNotificationWebhookSearchNotificationArgs", "webhookId");
            }
            return $;
        }
    }

}
