// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.CseFirstSeenRuleEntitySelectorArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CseFirstSeenRuleState extends com.pulumi.resources.ResourceArgs {

    public static final CseFirstSeenRuleState Empty = new CseFirstSeenRuleState();

    /**
     * The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
     * 
     */
    @Import(name="baselineType")
    private @Nullable Output<String> baselineType;

    /**
     * @return The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
     * 
     */
    public Optional<Output<String>> baselineType() {
        return Optional.ofNullable(this.baselineType);
    }

    /**
     * The baseline window size in milliseconds
     * 
     */
    @Import(name="baselineWindowSize")
    private @Nullable Output<String> baselineWindowSize;

    /**
     * @return The baseline window size in milliseconds
     * 
     */
    public Optional<Output<String>> baselineWindowSize() {
        return Optional.ofNullable(this.baselineWindowSize);
    }

    /**
     * The description of the generated Signals
     * 
     */
    @Import(name="descriptionExpression")
    private @Nullable Output<String> descriptionExpression;

    /**
     * @return The description of the generated Signals
     * 
     */
    public Optional<Output<String>> descriptionExpression() {
        return Optional.ofNullable(this.descriptionExpression);
    }

    /**
     * Whether the rule should generate Signals
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the rule should generate Signals
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The entities to generate Signals on
     * 
     */
    @Import(name="entitySelectors")
    private @Nullable Output<List<CseFirstSeenRuleEntitySelectorArgs>> entitySelectors;

    /**
     * @return The entities to generate Signals on
     * 
     */
    public Optional<Output<List<CseFirstSeenRuleEntitySelectorArgs>>> entitySelectors() {
        return Optional.ofNullable(this.entitySelectors);
    }

    /**
     * The expression for which records to match on
     * 
     */
    @Import(name="filterExpression")
    private @Nullable Output<String> filterExpression;

    /**
     * @return The expression for which records to match on
     * 
     */
    public Optional<Output<String>> filterExpression() {
        return Optional.ofNullable(this.filterExpression);
    }

    /**
     * A list of fields to group records by
     * 
     */
    @Import(name="groupByFields")
    private @Nullable Output<List<String>> groupByFields;

    /**
     * @return A list of fields to group records by
     * 
     */
    public Optional<Output<List<String>>> groupByFields() {
        return Optional.ofNullable(this.groupByFields);
    }

    /**
     * Whether the generated Signals should be prototype Signals
     * 
     */
    @Import(name="isPrototype")
    private @Nullable Output<Boolean> isPrototype;

    /**
     * @return Whether the generated Signals should be prototype Signals
     * 
     */
    public Optional<Output<Boolean>> isPrototype() {
        return Optional.ofNullable(this.isPrototype);
    }

    /**
     * The name of the Rule
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Rule
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the generated Signals
     * 
     */
    @Import(name="nameExpression")
    private @Nullable Output<String> nameExpression;

    /**
     * @return The name of the generated Signals
     * 
     */
    public Optional<Output<String>> nameExpression() {
        return Optional.ofNullable(this.nameExpression);
    }

    /**
     * The retention window size in milliseconds
     * 
     */
    @Import(name="retentionWindowSize")
    private @Nullable Output<String> retentionWindowSize;

    /**
     * @return The retention window size in milliseconds
     * 
     */
    public Optional<Output<String>> retentionWindowSize() {
        return Optional.ofNullable(this.retentionWindowSize);
    }

    /**
     * The severity of the generated Signals
     * 
     */
    @Import(name="severity")
    private @Nullable Output<Integer> severity;

    /**
     * @return The severity of the generated Signals
     * 
     */
    public Optional<Output<Integer>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * The summary of the generated Signals
     * 
     */
    @Import(name="summaryExpression")
    private @Nullable Output<String> summaryExpression;

    /**
     * @return The summary of the generated Signals
     * 
     */
    public Optional<Output<String>> summaryExpression() {
        return Optional.ofNullable(this.summaryExpression);
    }

    /**
     * The tags of the generated Signals
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The tags of the generated Signals
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The value fields
     * 
     */
    @Import(name="valueFields")
    private @Nullable Output<List<String>> valueFields;

    /**
     * @return The value fields
     * 
     */
    public Optional<Output<List<String>>> valueFields() {
        return Optional.ofNullable(this.valueFields);
    }

    private CseFirstSeenRuleState() {}

    private CseFirstSeenRuleState(CseFirstSeenRuleState $) {
        this.baselineType = $.baselineType;
        this.baselineWindowSize = $.baselineWindowSize;
        this.descriptionExpression = $.descriptionExpression;
        this.enabled = $.enabled;
        this.entitySelectors = $.entitySelectors;
        this.filterExpression = $.filterExpression;
        this.groupByFields = $.groupByFields;
        this.isPrototype = $.isPrototype;
        this.name = $.name;
        this.nameExpression = $.nameExpression;
        this.retentionWindowSize = $.retentionWindowSize;
        this.severity = $.severity;
        this.summaryExpression = $.summaryExpression;
        this.tags = $.tags;
        this.valueFields = $.valueFields;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CseFirstSeenRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CseFirstSeenRuleState $;

        public Builder() {
            $ = new CseFirstSeenRuleState();
        }

        public Builder(CseFirstSeenRuleState defaults) {
            $ = new CseFirstSeenRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineType The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
         * 
         * @return builder
         * 
         */
        public Builder baselineType(@Nullable Output<String> baselineType) {
            $.baselineType = baselineType;
            return this;
        }

        /**
         * @param baselineType The baseline type. Current acceptable values are GLOBAL or PER_ENTITY
         * 
         * @return builder
         * 
         */
        public Builder baselineType(String baselineType) {
            return baselineType(Output.of(baselineType));
        }

        /**
         * @param baselineWindowSize The baseline window size in milliseconds
         * 
         * @return builder
         * 
         */
        public Builder baselineWindowSize(@Nullable Output<String> baselineWindowSize) {
            $.baselineWindowSize = baselineWindowSize;
            return this;
        }

        /**
         * @param baselineWindowSize The baseline window size in milliseconds
         * 
         * @return builder
         * 
         */
        public Builder baselineWindowSize(String baselineWindowSize) {
            return baselineWindowSize(Output.of(baselineWindowSize));
        }

        /**
         * @param descriptionExpression The description of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder descriptionExpression(@Nullable Output<String> descriptionExpression) {
            $.descriptionExpression = descriptionExpression;
            return this;
        }

        /**
         * @param descriptionExpression The description of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder descriptionExpression(String descriptionExpression) {
            return descriptionExpression(Output.of(descriptionExpression));
        }

        /**
         * @param enabled Whether the rule should generate Signals
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the rule should generate Signals
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param entitySelectors The entities to generate Signals on
         * 
         * @return builder
         * 
         */
        public Builder entitySelectors(@Nullable Output<List<CseFirstSeenRuleEntitySelectorArgs>> entitySelectors) {
            $.entitySelectors = entitySelectors;
            return this;
        }

        /**
         * @param entitySelectors The entities to generate Signals on
         * 
         * @return builder
         * 
         */
        public Builder entitySelectors(List<CseFirstSeenRuleEntitySelectorArgs> entitySelectors) {
            return entitySelectors(Output.of(entitySelectors));
        }

        /**
         * @param entitySelectors The entities to generate Signals on
         * 
         * @return builder
         * 
         */
        public Builder entitySelectors(CseFirstSeenRuleEntitySelectorArgs... entitySelectors) {
            return entitySelectors(List.of(entitySelectors));
        }

        /**
         * @param filterExpression The expression for which records to match on
         * 
         * @return builder
         * 
         */
        public Builder filterExpression(@Nullable Output<String> filterExpression) {
            $.filterExpression = filterExpression;
            return this;
        }

        /**
         * @param filterExpression The expression for which records to match on
         * 
         * @return builder
         * 
         */
        public Builder filterExpression(String filterExpression) {
            return filterExpression(Output.of(filterExpression));
        }

        /**
         * @param groupByFields A list of fields to group records by
         * 
         * @return builder
         * 
         */
        public Builder groupByFields(@Nullable Output<List<String>> groupByFields) {
            $.groupByFields = groupByFields;
            return this;
        }

        /**
         * @param groupByFields A list of fields to group records by
         * 
         * @return builder
         * 
         */
        public Builder groupByFields(List<String> groupByFields) {
            return groupByFields(Output.of(groupByFields));
        }

        /**
         * @param groupByFields A list of fields to group records by
         * 
         * @return builder
         * 
         */
        public Builder groupByFields(String... groupByFields) {
            return groupByFields(List.of(groupByFields));
        }

        /**
         * @param isPrototype Whether the generated Signals should be prototype Signals
         * 
         * @return builder
         * 
         */
        public Builder isPrototype(@Nullable Output<Boolean> isPrototype) {
            $.isPrototype = isPrototype;
            return this;
        }

        /**
         * @param isPrototype Whether the generated Signals should be prototype Signals
         * 
         * @return builder
         * 
         */
        public Builder isPrototype(Boolean isPrototype) {
            return isPrototype(Output.of(isPrototype));
        }

        /**
         * @param name The name of the Rule
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameExpression The name of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder nameExpression(@Nullable Output<String> nameExpression) {
            $.nameExpression = nameExpression;
            return this;
        }

        /**
         * @param nameExpression The name of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder nameExpression(String nameExpression) {
            return nameExpression(Output.of(nameExpression));
        }

        /**
         * @param retentionWindowSize The retention window size in milliseconds
         * 
         * @return builder
         * 
         */
        public Builder retentionWindowSize(@Nullable Output<String> retentionWindowSize) {
            $.retentionWindowSize = retentionWindowSize;
            return this;
        }

        /**
         * @param retentionWindowSize The retention window size in milliseconds
         * 
         * @return builder
         * 
         */
        public Builder retentionWindowSize(String retentionWindowSize) {
            return retentionWindowSize(Output.of(retentionWindowSize));
        }

        /**
         * @param severity The severity of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<Integer> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity The severity of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder severity(Integer severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param summaryExpression The summary of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder summaryExpression(@Nullable Output<String> summaryExpression) {
            $.summaryExpression = summaryExpression;
            return this;
        }

        /**
         * @param summaryExpression The summary of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder summaryExpression(String summaryExpression) {
            return summaryExpression(Output.of(summaryExpression));
        }

        /**
         * @param tags The tags of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags of the generated Signals
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param valueFields The value fields
         * 
         * @return builder
         * 
         */
        public Builder valueFields(@Nullable Output<List<String>> valueFields) {
            $.valueFields = valueFields;
            return this;
        }

        /**
         * @param valueFields The value fields
         * 
         * @return builder
         * 
         */
        public Builder valueFields(List<String> valueFields) {
            return valueFields(Output.of(valueFields));
        }

        /**
         * @param valueFields The value fields
         * 
         * @return builder
         * 
         */
        public Builder valueFields(String... valueFields) {
            return valueFields(List.of(valueFields));
        }

        public CseFirstSeenRuleState build() {
            return $;
        }
    }

}
