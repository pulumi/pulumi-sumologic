// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.outputs.DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DashboardPanelTracesListPanelQueryMetricsQueryDataOperator {
    private String operatorName;
    private List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter> parameters;

    private DashboardPanelTracesListPanelQueryMetricsQueryDataOperator() {}
    public String operatorName() {
        return this.operatorName;
    }
    public List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter> parameters() {
        return this.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardPanelTracesListPanelQueryMetricsQueryDataOperator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String operatorName;
        private List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter> parameters;
        public Builder() {}
        public Builder(DashboardPanelTracesListPanelQueryMetricsQueryDataOperator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operatorName = defaults.operatorName;
    	      this.parameters = defaults.parameters;
        }

        @CustomType.Setter
        public Builder operatorName(String operatorName) {
            if (operatorName == null) {
              throw new MissingRequiredPropertyException("DashboardPanelTracesListPanelQueryMetricsQueryDataOperator", "operatorName");
            }
            this.operatorName = operatorName;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(List<DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter> parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("DashboardPanelTracesListPanelQueryMetricsQueryDataOperator", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        public Builder parameters(DashboardPanelTracesListPanelQueryMetricsQueryDataOperatorParameter... parameters) {
            return parameters(List.of(parameters));
        }
        public DashboardPanelTracesListPanelQueryMetricsQueryDataOperator build() {
            final var _resultValue = new DashboardPanelTracesListPanelQueryMetricsQueryDataOperator();
            _resultValue.operatorName = operatorName;
            _resultValue.parameters = parameters;
            return _resultValue;
        }
    }
}
