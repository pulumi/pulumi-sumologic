// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardColoringRuleColorThreshold {
    private String color;
    private @Nullable Double max;
    private @Nullable Double min;

    private DashboardColoringRuleColorThreshold() {}
    public String color() {
        return this.color;
    }
    public Optional<Double> max() {
        return Optional.ofNullable(this.max);
    }
    public Optional<Double> min() {
        return Optional.ofNullable(this.min);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardColoringRuleColorThreshold defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String color;
        private @Nullable Double max;
        private @Nullable Double min;
        public Builder() {}
        public Builder(DashboardColoringRuleColorThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.max = defaults.max;
    	      this.min = defaults.min;
        }

        @CustomType.Setter
        public Builder color(String color) {
            this.color = Objects.requireNonNull(color);
            return this;
        }
        @CustomType.Setter
        public Builder max(@Nullable Double max) {
            this.max = max;
            return this;
        }
        @CustomType.Setter
        public Builder min(@Nullable Double min) {
            this.min = min;
            return this;
        }
        public DashboardColoringRuleColorThreshold build() {
            final var o = new DashboardColoringRuleColorThreshold();
            o.color = color;
            o.max = max;
            o.min = min;
            return o;
        }
    }
}
