// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CseCustomInsightDynamicSeverity {
    /**
     * @return The severity of the generated Insight (CRITICAL, HIGH, MEDIUM, or LOW)
     * 
     */
    private String insightSeverity;
    /**
     * @return minimum Signal severity as the threshold for an Insight severity level
     * 
     */
    private Integer minimumSignalSeverity;

    private CseCustomInsightDynamicSeverity() {}
    /**
     * @return The severity of the generated Insight (CRITICAL, HIGH, MEDIUM, or LOW)
     * 
     */
    public String insightSeverity() {
        return this.insightSeverity;
    }
    /**
     * @return minimum Signal severity as the threshold for an Insight severity level
     * 
     */
    public Integer minimumSignalSeverity() {
        return this.minimumSignalSeverity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CseCustomInsightDynamicSeverity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String insightSeverity;
        private Integer minimumSignalSeverity;
        public Builder() {}
        public Builder(CseCustomInsightDynamicSeverity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.insightSeverity = defaults.insightSeverity;
    	      this.minimumSignalSeverity = defaults.minimumSignalSeverity;
        }

        @CustomType.Setter
        public Builder insightSeverity(String insightSeverity) {
            if (insightSeverity == null) {
              throw new MissingRequiredPropertyException("CseCustomInsightDynamicSeverity", "insightSeverity");
            }
            this.insightSeverity = insightSeverity;
            return this;
        }
        @CustomType.Setter
        public Builder minimumSignalSeverity(Integer minimumSignalSeverity) {
            if (minimumSignalSeverity == null) {
              throw new MissingRequiredPropertyException("CseCustomInsightDynamicSeverity", "minimumSignalSeverity");
            }
            this.minimumSignalSeverity = minimumSignalSeverity;
            return this;
        }
        public CseCustomInsightDynamicSeverity build() {
            final var _resultValue = new CseCustomInsightDynamicSeverity();
            _resultValue.insightSeverity = insightSeverity;
            _resultValue.minimumSignalSeverity = minimumSignalSeverity;
            return _resultValue;
        }
    }
}
