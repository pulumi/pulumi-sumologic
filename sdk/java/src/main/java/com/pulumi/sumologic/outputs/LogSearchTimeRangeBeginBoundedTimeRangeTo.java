// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange;
import com.pulumi.sumologic.outputs.LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange;
import com.pulumi.sumologic.outputs.LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange;
import com.pulumi.sumologic.outputs.LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogSearchTimeRangeBeginBoundedTimeRangeTo {
    /**
     * @return (Block List, Optional) Time since the epoch.
     * 
     */
    private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange epochTimeRange;
    /**
     * @return (Block List, Optional) Time in ISO 8601 format.
     * 
     */
    private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange iso8601TimeRange;
    /**
     * @return (Block List, Optional) Time in literal format.
     * 
     */
    private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange literalTimeRange;
    /**
     * @return (Block List, Optional) Time in relative format.
     * 
     */
    private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange relativeTimeRange;

    private LogSearchTimeRangeBeginBoundedTimeRangeTo() {}
    /**
     * @return (Block List, Optional) Time since the epoch.
     * 
     */
    public Optional<LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange> epochTimeRange() {
        return Optional.ofNullable(this.epochTimeRange);
    }
    /**
     * @return (Block List, Optional) Time in ISO 8601 format.
     * 
     */
    public Optional<LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange> iso8601TimeRange() {
        return Optional.ofNullable(this.iso8601TimeRange);
    }
    /**
     * @return (Block List, Optional) Time in literal format.
     * 
     */
    public Optional<LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange> literalTimeRange() {
        return Optional.ofNullable(this.literalTimeRange);
    }
    /**
     * @return (Block List, Optional) Time in relative format.
     * 
     */
    public Optional<LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange> relativeTimeRange() {
        return Optional.ofNullable(this.relativeTimeRange);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogSearchTimeRangeBeginBoundedTimeRangeTo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange epochTimeRange;
        private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange iso8601TimeRange;
        private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange literalTimeRange;
        private @Nullable LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange relativeTimeRange;
        public Builder() {}
        public Builder(LogSearchTimeRangeBeginBoundedTimeRangeTo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.epochTimeRange = defaults.epochTimeRange;
    	      this.iso8601TimeRange = defaults.iso8601TimeRange;
    	      this.literalTimeRange = defaults.literalTimeRange;
    	      this.relativeTimeRange = defaults.relativeTimeRange;
        }

        @CustomType.Setter
        public Builder epochTimeRange(@Nullable LogSearchTimeRangeBeginBoundedTimeRangeToEpochTimeRange epochTimeRange) {
            this.epochTimeRange = epochTimeRange;
            return this;
        }
        @CustomType.Setter
        public Builder iso8601TimeRange(@Nullable LogSearchTimeRangeBeginBoundedTimeRangeToIso8601TimeRange iso8601TimeRange) {
            this.iso8601TimeRange = iso8601TimeRange;
            return this;
        }
        @CustomType.Setter
        public Builder literalTimeRange(@Nullable LogSearchTimeRangeBeginBoundedTimeRangeToLiteralTimeRange literalTimeRange) {
            this.literalTimeRange = literalTimeRange;
            return this;
        }
        @CustomType.Setter
        public Builder relativeTimeRange(@Nullable LogSearchTimeRangeBeginBoundedTimeRangeToRelativeTimeRange relativeTimeRange) {
            this.relativeTimeRange = relativeTimeRange;
            return this;
        }
        public LogSearchTimeRangeBeginBoundedTimeRangeTo build() {
            final var o = new LogSearchTimeRangeBeginBoundedTimeRangeTo();
            o.epochTimeRange = epochTimeRange;
            o.iso8601TimeRange = iso8601TimeRange;
            o.literalTimeRange = literalTimeRange;
            o.relativeTimeRange = relativeTimeRange;
            return o;
        }
    }
}
