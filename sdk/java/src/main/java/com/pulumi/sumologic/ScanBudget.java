// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.ScanBudgetArgs;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.ScanBudgetState;
import com.pulumi.sumologic.outputs.ScanBudgetScope;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a [Sumologic Scan Budget](https://help.sumologic.com/docs/manage/manage-subscription/usage-management/).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.sumologic.ScanBudget;
 * import com.pulumi.sumologic.ScanBudgetArgs;
 * import com.pulumi.sumologic.inputs.ScanBudgetScopeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var budget = new ScanBudget("budget", ScanBudgetArgs.builder()
 *             .name("TestBudget")
 *             .capacity(10)
 *             .unit("GB")
 *             .budgetType("ScanBudget")
 *             .window("Query")
 *             .applicableOn("PerEntity")
 *             .groupBy("User")
 *             .action("StopScan")
 *             .status("active")
 *             .scope(ScanBudgetScopeArgs.builder()
 *                 .includedUsers("000000000000011C")
 *                 .excludedUsers()
 *                 .includedRoles()
 *                 .excludedRoles("0000000000000196")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Scan budgets can be imported using the budget ID, e.g.:
 * 
 * hcl
 * 
 * ```sh
 * $ pulumi import sumologic:index/scanBudget:ScanBudget budget 00000000000123AB
 * ```
 * 
 * [1]: https://help.sumologic.com/docs/manage/manage-subscription/usage-management/
 * 
 */
@ResourceType(type="sumologic:index/scanBudget:ScanBudget")
public class ScanBudget extends com.pulumi.resources.CustomResource {
    /**
     * Action to be taken if the budget is breached. Supported values are: `StopForeGroundScan` and `Warn`.
     * 
     */
    @Export(name="action", refs={String.class}, tree="[0]")
    private Output<String> action;

    /**
     * @return Action to be taken if the budget is breached. Supported values are: `StopForeGroundScan` and `Warn`.
     * 
     */
    public Output<String> action() {
        return this.action;
    }
    /**
     * Grouping of the budget. Supported values are: `PerEntity` and `Sum`.
     * 
     */
    @Export(name="applicableOn", refs={String.class}, tree="[0]")
    private Output<String> applicableOn;

    /**
     * @return Grouping of the budget. Supported values are: `PerEntity` and `Sum`.
     * 
     */
    public Output<String> applicableOn() {
        return this.applicableOn;
    }
    /**
     * Type of the budget. Supported values are: `ScanBudget`.
     * 
     */
    @Export(name="budgetType", refs={String.class}, tree="[0]")
    private Output<String> budgetType;

    /**
     * @return Type of the budget. Supported values are: `ScanBudget`.
     * 
     */
    public Output<String> budgetType() {
        return this.budgetType;
    }
    /**
     * Capacity of the scan budget. Only whole numbers are supported.
     * 
     */
    @Export(name="capacity", refs={Integer.class}, tree="[0]")
    private Output<Integer> capacity;

    /**
     * @return Capacity of the scan budget. Only whole numbers are supported.
     * 
     */
    public Output<Integer> capacity() {
        return this.capacity;
    }
    /**
     * Grouping Entity of the budget. Supported values are: `User`.
     * 
     */
    @Export(name="groupBy", refs={String.class}, tree="[0]")
    private Output<String> groupBy;

    /**
     * @return Grouping Entity of the budget. Supported values are: `User`.
     * 
     */
    public Output<String> groupBy() {
        return this.groupBy;
    }
    /**
     * Display name of the scan budget. This must be unique across all the scan budgets.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Display name of the scan budget. This must be unique across all the scan budgets.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Scope of the budget.
     * 
     */
    @Export(name="scope", refs={ScanBudgetScope.class}, tree="[0]")
    private Output<ScanBudgetScope> scope;

    /**
     * @return Scope of the budget.
     * 
     */
    public Output<ScanBudgetScope> scope() {
        return this.scope;
    }
    /**
     * Signifies the state of the budget. Supported values are: `active` and `inactive`.
     * 
     * The following attributes are exported:
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Signifies the state of the budget. Supported values are: `active` and `inactive`.
     * 
     * The following attributes are exported:
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Unit of the capacity. Supported values are: `MB`, `GB` and `TB`.
     * 
     */
    @Export(name="unit", refs={String.class}, tree="[0]")
    private Output<String> unit;

    /**
     * @return Unit of the capacity. Supported values are: `MB`, `GB` and `TB`.
     * 
     */
    public Output<String> unit() {
        return this.unit;
    }
    /**
     * Window of the budget. Supported values are: `Query`, `Daily`, `Weekly` and `Monthly`.
     * 
     */
    @Export(name="window", refs={String.class}, tree="[0]")
    private Output<String> window;

    /**
     * @return Window of the budget. Supported values are: `Query`, `Daily`, `Weekly` and `Monthly`.
     * 
     */
    public Output<String> window() {
        return this.window;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScanBudget(java.lang.String name) {
        this(name, ScanBudgetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScanBudget(java.lang.String name, ScanBudgetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScanBudget(java.lang.String name, ScanBudgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/scanBudget:ScanBudget", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ScanBudget(java.lang.String name, Output<java.lang.String> id, @Nullable ScanBudgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/scanBudget:ScanBudget", name, state, makeResourceOptions(options, id), false);
    }

    private static ScanBudgetArgs makeArgs(ScanBudgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ScanBudgetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScanBudget get(java.lang.String name, Output<java.lang.String> id, @Nullable ScanBudgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScanBudget(name, id, state, options);
    }
}
