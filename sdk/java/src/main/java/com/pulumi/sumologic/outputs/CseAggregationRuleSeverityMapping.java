// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.CseAggregationRuleSeverityMappingMapping;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CseAggregationRuleSeverityMapping {
    /**
     * @return The severity to use in the &#34;constant&#34; case or to fall back to if the field used by &#34;fieldValue&#34;/&#34;fieldValueMapping&#34; is not populated.
     * 
     */
    private @Nullable Integer default_;
    /**
     * @return The field to use in the &#34;fieldValue&#34;/&#34;fieldValueMapping&#34; cases.
     * 
     */
    private @Nullable String field;
    /**
     * @return The map of record values to severities to use in the &#34;fieldValueMapping&#34; case
     * 
     */
    private @Nullable List<CseAggregationRuleSeverityMappingMapping> mappings;
    /**
     * @return Must be set to &#34;eq&#34; currently
     * 
     */
    private String type;

    private CseAggregationRuleSeverityMapping() {}
    /**
     * @return The severity to use in the &#34;constant&#34; case or to fall back to if the field used by &#34;fieldValue&#34;/&#34;fieldValueMapping&#34; is not populated.
     * 
     */
    public Optional<Integer> default_() {
        return Optional.ofNullable(this.default_);
    }
    /**
     * @return The field to use in the &#34;fieldValue&#34;/&#34;fieldValueMapping&#34; cases.
     * 
     */
    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }
    /**
     * @return The map of record values to severities to use in the &#34;fieldValueMapping&#34; case
     * 
     */
    public List<CseAggregationRuleSeverityMappingMapping> mappings() {
        return this.mappings == null ? List.of() : this.mappings;
    }
    /**
     * @return Must be set to &#34;eq&#34; currently
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CseAggregationRuleSeverityMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer default_;
        private @Nullable String field;
        private @Nullable List<CseAggregationRuleSeverityMappingMapping> mappings;
        private String type;
        public Builder() {}
        public Builder(CseAggregationRuleSeverityMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.field = defaults.field;
    	      this.mappings = defaults.mappings;
    	      this.type = defaults.type;
        }

        @CustomType.Setter("default")
        public Builder default_(@Nullable Integer default_) {
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder field(@Nullable String field) {
            this.field = field;
            return this;
        }
        @CustomType.Setter
        public Builder mappings(@Nullable List<CseAggregationRuleSeverityMappingMapping> mappings) {
            this.mappings = mappings;
            return this;
        }
        public Builder mappings(CseAggregationRuleSeverityMappingMapping... mappings) {
            return mappings(List.of(mappings));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public CseAggregationRuleSeverityMapping build() {
            final var o = new CseAggregationRuleSeverityMapping();
            o.default_ = default_;
            o.field = field;
            o.mappings = mappings;
            o.type = type;
            return o;
        }
    }
}
