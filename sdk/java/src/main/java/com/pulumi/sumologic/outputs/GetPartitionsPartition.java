// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPartitionsPartition {
    private String analyticsTier;
    private String dataForwardingId;
    private String id;
    private String indexType;
    private Boolean isActive;
    private Boolean isCompliant;
    private Boolean isIncludedInDefaultSearch;
    private String name;
    private Boolean reduceRetentionPeriodImmediately;
    private Integer retentionPeriod;
    private String routingExpression;
    private Integer totalBytes;

    private GetPartitionsPartition() {}
    public String analyticsTier() {
        return this.analyticsTier;
    }
    public String dataForwardingId() {
        return this.dataForwardingId;
    }
    public String id() {
        return this.id;
    }
    public String indexType() {
        return this.indexType;
    }
    public Boolean isActive() {
        return this.isActive;
    }
    public Boolean isCompliant() {
        return this.isCompliant;
    }
    public Boolean isIncludedInDefaultSearch() {
        return this.isIncludedInDefaultSearch;
    }
    public String name() {
        return this.name;
    }
    public Boolean reduceRetentionPeriodImmediately() {
        return this.reduceRetentionPeriodImmediately;
    }
    public Integer retentionPeriod() {
        return this.retentionPeriod;
    }
    public String routingExpression() {
        return this.routingExpression;
    }
    public Integer totalBytes() {
        return this.totalBytes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPartitionsPartition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String analyticsTier;
        private String dataForwardingId;
        private String id;
        private String indexType;
        private Boolean isActive;
        private Boolean isCompliant;
        private Boolean isIncludedInDefaultSearch;
        private String name;
        private Boolean reduceRetentionPeriodImmediately;
        private Integer retentionPeriod;
        private String routingExpression;
        private Integer totalBytes;
        public Builder() {}
        public Builder(GetPartitionsPartition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analyticsTier = defaults.analyticsTier;
    	      this.dataForwardingId = defaults.dataForwardingId;
    	      this.id = defaults.id;
    	      this.indexType = defaults.indexType;
    	      this.isActive = defaults.isActive;
    	      this.isCompliant = defaults.isCompliant;
    	      this.isIncludedInDefaultSearch = defaults.isIncludedInDefaultSearch;
    	      this.name = defaults.name;
    	      this.reduceRetentionPeriodImmediately = defaults.reduceRetentionPeriodImmediately;
    	      this.retentionPeriod = defaults.retentionPeriod;
    	      this.routingExpression = defaults.routingExpression;
    	      this.totalBytes = defaults.totalBytes;
        }

        @CustomType.Setter
        public Builder analyticsTier(String analyticsTier) {
            if (analyticsTier == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "analyticsTier");
            }
            this.analyticsTier = analyticsTier;
            return this;
        }
        @CustomType.Setter
        public Builder dataForwardingId(String dataForwardingId) {
            if (dataForwardingId == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "dataForwardingId");
            }
            this.dataForwardingId = dataForwardingId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder indexType(String indexType) {
            if (indexType == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "indexType");
            }
            this.indexType = indexType;
            return this;
        }
        @CustomType.Setter
        public Builder isActive(Boolean isActive) {
            if (isActive == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "isActive");
            }
            this.isActive = isActive;
            return this;
        }
        @CustomType.Setter
        public Builder isCompliant(Boolean isCompliant) {
            if (isCompliant == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "isCompliant");
            }
            this.isCompliant = isCompliant;
            return this;
        }
        @CustomType.Setter
        public Builder isIncludedInDefaultSearch(Boolean isIncludedInDefaultSearch) {
            if (isIncludedInDefaultSearch == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "isIncludedInDefaultSearch");
            }
            this.isIncludedInDefaultSearch = isIncludedInDefaultSearch;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder reduceRetentionPeriodImmediately(Boolean reduceRetentionPeriodImmediately) {
            if (reduceRetentionPeriodImmediately == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "reduceRetentionPeriodImmediately");
            }
            this.reduceRetentionPeriodImmediately = reduceRetentionPeriodImmediately;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriod(Integer retentionPeriod) {
            if (retentionPeriod == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "retentionPeriod");
            }
            this.retentionPeriod = retentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder routingExpression(String routingExpression) {
            if (routingExpression == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "routingExpression");
            }
            this.routingExpression = routingExpression;
            return this;
        }
        @CustomType.Setter
        public Builder totalBytes(Integer totalBytes) {
            if (totalBytes == null) {
              throw new MissingRequiredPropertyException("GetPartitionsPartition", "totalBytes");
            }
            this.totalBytes = totalBytes;
            return this;
        }
        public GetPartitionsPartition build() {
            final var _resultValue = new GetPartitionsPartition();
            _resultValue.analyticsTier = analyticsTier;
            _resultValue.dataForwardingId = dataForwardingId;
            _resultValue.id = id;
            _resultValue.indexType = indexType;
            _resultValue.isActive = isActive;
            _resultValue.isCompliant = isCompliant;
            _resultValue.isIncludedInDefaultSearch = isIncludedInDefaultSearch;
            _resultValue.name = name;
            _resultValue.reduceRetentionPeriodImmediately = reduceRetentionPeriodImmediately;
            _resultValue.retentionPeriod = retentionPeriod;
            _resultValue.routingExpression = routingExpression;
            _resultValue.totalBytes = totalBytes;
            return _resultValue;
        }
    }
}
