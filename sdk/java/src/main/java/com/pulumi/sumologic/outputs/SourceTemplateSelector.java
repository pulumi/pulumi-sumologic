// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.sumologic.outputs.SourceTemplateSelectorTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SourceTemplateSelector {
    /**
     * @return names to select custom agents
     * 
     */
    private @Nullable List<String> names;
    /**
     * @return tags filter for agents
     * 
     */
    private @Nullable List<List<SourceTemplateSelectorTag>> tags;

    private SourceTemplateSelector() {}
    /**
     * @return names to select custom agents
     * 
     */
    public List<String> names() {
        return this.names == null ? List.of() : this.names;
    }
    /**
     * @return tags filter for agents
     * 
     */
    public List<List<SourceTemplateSelectorTag>> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceTemplateSelector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> names;
        private @Nullable List<List<SourceTemplateSelectorTag>> tags;
        public Builder() {}
        public Builder(SourceTemplateSelector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.names = defaults.names;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder names(@Nullable List<String> names) {

            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<List<SourceTemplateSelectorTag>> tags) {

            this.tags = tags;
            return this;
        }
        public SourceTemplateSelector build() {
            final var _resultValue = new SourceTemplateSelector();
            _resultValue.names = names;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
