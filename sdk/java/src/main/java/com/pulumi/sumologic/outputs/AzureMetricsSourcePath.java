// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.sumologic.outputs.AzureMetricsSourcePathAzureTagFilter;
import com.pulumi.sumologic.outputs.AzureMetricsSourcePathCustomService;
import com.pulumi.sumologic.outputs.AzureMetricsSourcePathSnsTopicOrSubscriptionArn;
import com.pulumi.sumologic.outputs.AzureMetricsSourcePathTagFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AzureMetricsSourcePath {
    private @Nullable List<AzureMetricsSourcePathAzureTagFilter> azureTagFilters;
    private @Nullable String bucketName;
    private @Nullable String consumerGroup;
    private @Nullable List<AzureMetricsSourcePathCustomService> customServices;
    private @Nullable String environment;
    private @Nullable String eventHubName;
    private @Nullable List<String> limitToNamespaces;
    private @Nullable List<String> limitToRegions;
    private @Nullable List<String> limitToServices;
    private @Nullable String namespace;
    private @Nullable String pathExpression;
    private @Nullable String region;
    private @Nullable List<AzureMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns;
    private @Nullable List<AzureMetricsSourcePathTagFilter> tagFilters;
    private String type;
    private @Nullable Boolean useVersionedApi;

    private AzureMetricsSourcePath() {}
    public List<AzureMetricsSourcePathAzureTagFilter> azureTagFilters() {
        return this.azureTagFilters == null ? List.of() : this.azureTagFilters;
    }
    public Optional<String> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    public Optional<String> consumerGroup() {
        return Optional.ofNullable(this.consumerGroup);
    }
    public List<AzureMetricsSourcePathCustomService> customServices() {
        return this.customServices == null ? List.of() : this.customServices;
    }
    public Optional<String> environment() {
        return Optional.ofNullable(this.environment);
    }
    public Optional<String> eventHubName() {
        return Optional.ofNullable(this.eventHubName);
    }
    public List<String> limitToNamespaces() {
        return this.limitToNamespaces == null ? List.of() : this.limitToNamespaces;
    }
    public List<String> limitToRegions() {
        return this.limitToRegions == null ? List.of() : this.limitToRegions;
    }
    public List<String> limitToServices() {
        return this.limitToServices == null ? List.of() : this.limitToServices;
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Optional<String> pathExpression() {
        return Optional.ofNullable(this.pathExpression);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public List<AzureMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns() {
        return this.snsTopicOrSubscriptionArns == null ? List.of() : this.snsTopicOrSubscriptionArns;
    }
    public List<AzureMetricsSourcePathTagFilter> tagFilters() {
        return this.tagFilters == null ? List.of() : this.tagFilters;
    }
    public String type() {
        return this.type;
    }
    public Optional<Boolean> useVersionedApi() {
        return Optional.ofNullable(this.useVersionedApi);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureMetricsSourcePath defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AzureMetricsSourcePathAzureTagFilter> azureTagFilters;
        private @Nullable String bucketName;
        private @Nullable String consumerGroup;
        private @Nullable List<AzureMetricsSourcePathCustomService> customServices;
        private @Nullable String environment;
        private @Nullable String eventHubName;
        private @Nullable List<String> limitToNamespaces;
        private @Nullable List<String> limitToRegions;
        private @Nullable List<String> limitToServices;
        private @Nullable String namespace;
        private @Nullable String pathExpression;
        private @Nullable String region;
        private @Nullable List<AzureMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns;
        private @Nullable List<AzureMetricsSourcePathTagFilter> tagFilters;
        private String type;
        private @Nullable Boolean useVersionedApi;
        public Builder() {}
        public Builder(AzureMetricsSourcePath defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.azureTagFilters = defaults.azureTagFilters;
    	      this.bucketName = defaults.bucketName;
    	      this.consumerGroup = defaults.consumerGroup;
    	      this.customServices = defaults.customServices;
    	      this.environment = defaults.environment;
    	      this.eventHubName = defaults.eventHubName;
    	      this.limitToNamespaces = defaults.limitToNamespaces;
    	      this.limitToRegions = defaults.limitToRegions;
    	      this.limitToServices = defaults.limitToServices;
    	      this.namespace = defaults.namespace;
    	      this.pathExpression = defaults.pathExpression;
    	      this.region = defaults.region;
    	      this.snsTopicOrSubscriptionArns = defaults.snsTopicOrSubscriptionArns;
    	      this.tagFilters = defaults.tagFilters;
    	      this.type = defaults.type;
    	      this.useVersionedApi = defaults.useVersionedApi;
        }

        @CustomType.Setter
        public Builder azureTagFilters(@Nullable List<AzureMetricsSourcePathAzureTagFilter> azureTagFilters) {

            this.azureTagFilters = azureTagFilters;
            return this;
        }
        public Builder azureTagFilters(AzureMetricsSourcePathAzureTagFilter... azureTagFilters) {
            return azureTagFilters(List.of(azureTagFilters));
        }
        @CustomType.Setter
        public Builder bucketName(@Nullable String bucketName) {

            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder consumerGroup(@Nullable String consumerGroup) {

            this.consumerGroup = consumerGroup;
            return this;
        }
        @CustomType.Setter
        public Builder customServices(@Nullable List<AzureMetricsSourcePathCustomService> customServices) {

            this.customServices = customServices;
            return this;
        }
        public Builder customServices(AzureMetricsSourcePathCustomService... customServices) {
            return customServices(List.of(customServices));
        }
        @CustomType.Setter
        public Builder environment(@Nullable String environment) {

            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder eventHubName(@Nullable String eventHubName) {

            this.eventHubName = eventHubName;
            return this;
        }
        @CustomType.Setter
        public Builder limitToNamespaces(@Nullable List<String> limitToNamespaces) {

            this.limitToNamespaces = limitToNamespaces;
            return this;
        }
        public Builder limitToNamespaces(String... limitToNamespaces) {
            return limitToNamespaces(List.of(limitToNamespaces));
        }
        @CustomType.Setter
        public Builder limitToRegions(@Nullable List<String> limitToRegions) {

            this.limitToRegions = limitToRegions;
            return this;
        }
        public Builder limitToRegions(String... limitToRegions) {
            return limitToRegions(List.of(limitToRegions));
        }
        @CustomType.Setter
        public Builder limitToServices(@Nullable List<String> limitToServices) {

            this.limitToServices = limitToServices;
            return this;
        }
        public Builder limitToServices(String... limitToServices) {
            return limitToServices(List.of(limitToServices));
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder pathExpression(@Nullable String pathExpression) {

            this.pathExpression = pathExpression;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder snsTopicOrSubscriptionArns(@Nullable List<AzureMetricsSourcePathSnsTopicOrSubscriptionArn> snsTopicOrSubscriptionArns) {

            this.snsTopicOrSubscriptionArns = snsTopicOrSubscriptionArns;
            return this;
        }
        public Builder snsTopicOrSubscriptionArns(AzureMetricsSourcePathSnsTopicOrSubscriptionArn... snsTopicOrSubscriptionArns) {
            return snsTopicOrSubscriptionArns(List.of(snsTopicOrSubscriptionArns));
        }
        @CustomType.Setter
        public Builder tagFilters(@Nullable List<AzureMetricsSourcePathTagFilter> tagFilters) {

            this.tagFilters = tagFilters;
            return this;
        }
        public Builder tagFilters(AzureMetricsSourcePathTagFilter... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("AzureMetricsSourcePath", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder useVersionedApi(@Nullable Boolean useVersionedApi) {

            this.useVersionedApi = useVersionedApi;
            return this;
        }
        public AzureMetricsSourcePath build() {
            final var _resultValue = new AzureMetricsSourcePath();
            _resultValue.azureTagFilters = azureTagFilters;
            _resultValue.bucketName = bucketName;
            _resultValue.consumerGroup = consumerGroup;
            _resultValue.customServices = customServices;
            _resultValue.environment = environment;
            _resultValue.eventHubName = eventHubName;
            _resultValue.limitToNamespaces = limitToNamespaces;
            _resultValue.limitToRegions = limitToRegions;
            _resultValue.limitToServices = limitToServices;
            _resultValue.namespace = namespace;
            _resultValue.pathExpression = pathExpression;
            _resultValue.region = region;
            _resultValue.snsTopicOrSubscriptionArns = snsTopicOrSubscriptionArns;
            _resultValue.tagFilters = tagFilters;
            _resultValue.type = type;
            _resultValue.useVersionedApi = useVersionedApi;
            return _resultValue;
        }
    }
}
