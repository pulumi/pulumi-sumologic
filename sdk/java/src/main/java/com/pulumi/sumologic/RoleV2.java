// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.sumologic.RoleV2Args;
import com.pulumi.sumologic.Utilities;
import com.pulumi.sumologic.inputs.RoleV2State;
import com.pulumi.sumologic.outputs.RoleV2SelectedView;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provider to manage Sumologic Role v2
 * 
 */
@ResourceType(type="sumologic:index/roleV2:RoleV2")
public class RoleV2 extends com.pulumi.resources.CustomResource {
    /**
     * A search filter which would be applied on partitions which belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/).
     * 
     */
    @Export(name="auditDataFilter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> auditDataFilter;

    /**
     * @return A search filter which would be applied on partitions which belong to Audit Data product area. Help Doc : (https://help.sumologic.com/docs/manage/security/audit-index/).
     * 
     */
    public Output<Optional<String>> auditDataFilter() {
        return Codegen.optional(this.auditDataFilter);
    }
    /**
     * List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/) associated with this role.
     * 
     */
    @Export(name="capabilities", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> capabilities;

    /**
     * @return List of [capabilities](https://help.sumologic.com/docs/manage/users-roles/roles/role-capabilities/) associated with this role.
     * 
     */
    public Output<Optional<List<String>>> capabilities() {
        return Codegen.optional(this.capabilities);
    }
    /**
     * Description of the role.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the role.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A search filter which would be applied on partitions which belong to Log Analytics product area.
     * 
     */
    @Export(name="logAnalyticsFilter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> logAnalyticsFilter;

    /**
     * @return A search filter which would be applied on partitions which belong to Log Analytics product area.
     * 
     */
    public Output<Optional<String>> logAnalyticsFilter() {
        return Codegen.optional(this.logAnalyticsFilter);
    }
    /**
     * Name of the role.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the role.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A search filter which would be applied on partitions which belong to Security Data product area.
     * 
     */
    @Export(name="securityDataFilter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> securityDataFilter;

    /**
     * @return A search filter which would be applied on partitions which belong to Security Data product area.
     * 
     */
    public Output<Optional<String>> securityDataFilter() {
        return Codegen.optional(this.securityDataFilter);
    }
    /**
     * List of views with specific view level filters in accordance to the selectionType chosen.
     * 
     */
    @Export(name="selectedViews", refs={List.class,RoleV2SelectedView.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RoleV2SelectedView>> selectedViews;

    /**
     * @return List of views with specific view level filters in accordance to the selectionType chosen.
     * 
     */
    public Output<Optional<List<RoleV2SelectedView>>> selectedViews() {
        return Codegen.optional(this.selectedViews);
    }
    /**
     * Describes the Permission Construct for the list of views in &#34;selectedViews&#34; parameter.
     * 
     */
    @Export(name="selectionType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> selectionType;

    /**
     * @return Describes the Permission Construct for the list of views in &#34;selectedViews&#34; parameter.
     * 
     */
    public Output<Optional<String>> selectionType() {
        return Codegen.optional(this.selectionType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleV2(java.lang.String name) {
        this(name, RoleV2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleV2(java.lang.String name, @Nullable RoleV2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleV2(java.lang.String name, @Nullable RoleV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/roleV2:RoleV2", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RoleV2(java.lang.String name, Output<java.lang.String> id, @Nullable RoleV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("sumologic:index/roleV2:RoleV2", name, state, makeResourceOptions(options, id), false);
    }

    private static RoleV2Args makeArgs(@Nullable RoleV2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RoleV2Args.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleV2 get(java.lang.String name, Output<java.lang.String> id, @Nullable RoleV2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RoleV2(name, id, state, options);
    }
}
