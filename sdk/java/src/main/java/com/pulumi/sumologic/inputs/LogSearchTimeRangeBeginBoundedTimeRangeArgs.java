// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.sumologic.inputs.LogSearchTimeRangeBeginBoundedTimeRangeFromArgs;
import com.pulumi.sumologic.inputs.LogSearchTimeRangeBeginBoundedTimeRangeToArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogSearchTimeRangeBeginBoundedTimeRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogSearchTimeRangeBeginBoundedTimeRangeArgs Empty = new LogSearchTimeRangeBeginBoundedTimeRangeArgs();

    /**
     * (Block List, Max: 1, Required) Start boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    @Import(name="from", required=true)
    private Output<LogSearchTimeRangeBeginBoundedTimeRangeFromArgs> from;

    /**
     * @return (Block List, Max: 1, Required) Start boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    public Output<LogSearchTimeRangeBeginBoundedTimeRangeFromArgs> from() {
        return this.from;
    }

    /**
     * (Block List, Max: 1, Optional) End boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    @Import(name="to")
    private @Nullable Output<LogSearchTimeRangeBeginBoundedTimeRangeToArgs> to;

    /**
     * @return (Block List, Max: 1, Optional) End boundary of bounded time range. See
     * time_range_boundary schema for details.
     * 
     */
    public Optional<Output<LogSearchTimeRangeBeginBoundedTimeRangeToArgs>> to() {
        return Optional.ofNullable(this.to);
    }

    private LogSearchTimeRangeBeginBoundedTimeRangeArgs() {}

    private LogSearchTimeRangeBeginBoundedTimeRangeArgs(LogSearchTimeRangeBeginBoundedTimeRangeArgs $) {
        this.from = $.from;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogSearchTimeRangeBeginBoundedTimeRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogSearchTimeRangeBeginBoundedTimeRangeArgs $;

        public Builder() {
            $ = new LogSearchTimeRangeBeginBoundedTimeRangeArgs();
        }

        public Builder(LogSearchTimeRangeBeginBoundedTimeRangeArgs defaults) {
            $ = new LogSearchTimeRangeBeginBoundedTimeRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param from (Block List, Max: 1, Required) Start boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder from(Output<LogSearchTimeRangeBeginBoundedTimeRangeFromArgs> from) {
            $.from = from;
            return this;
        }

        /**
         * @param from (Block List, Max: 1, Required) Start boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder from(LogSearchTimeRangeBeginBoundedTimeRangeFromArgs from) {
            return from(Output.of(from));
        }

        /**
         * @param to (Block List, Max: 1, Optional) End boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder to(@Nullable Output<LogSearchTimeRangeBeginBoundedTimeRangeToArgs> to) {
            $.to = to;
            return this;
        }

        /**
         * @param to (Block List, Max: 1, Optional) End boundary of bounded time range. See
         * time_range_boundary schema for details.
         * 
         * @return builder
         * 
         */
        public Builder to(LogSearchTimeRangeBeginBoundedTimeRangeToArgs to) {
            return to(Output.of(to));
        }

        public LogSearchTimeRangeBeginBoundedTimeRangeArgs build() {
            $.from = Objects.requireNonNull($.from, "expected parameter 'from' to be non-null");
            return $;
        }
    }

}
