// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.sumologic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs Empty = new DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs();

    @Import(name="field", required=true)
    private Output<String> field;

    public Output<String> field() {
        return this.field;
    }

    @Import(name="query", required=true)
    private Output<String> query;

    public Output<String> query() {
        return this.query;
    }

    private DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs() {}

    private DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs $) {
        this.field = $.field;
        this.query = $.query;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs $;

        public Builder() {
            $ = new DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs();
        }

        public Builder(DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs defaults) {
            $ = new DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs(Objects.requireNonNull(defaults));
        }

        public Builder field(Output<String> field) {
            $.field = field;
            return this;
        }

        public Builder field(String field) {
            return field(Output.of(field));
        }

        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public DashboardVariableSourceDefinitionLogQueryVariableSourceDefinitionArgs build() {
            $.field = Objects.requireNonNull($.field, "expected parameter 'field' to be non-null");
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            return $;
        }
    }

}
